[{"url":"https://api.github.com/repos/rails/rails/issues/45998","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45998/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45998/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45998/events","html_url":"https://github.com/rails/rails/issues/45998","id":1368868095,"node_id":"I_kwDNIULOUZdE_w","number":45998,"title":"CSRF getting different token","user":{"login":"Saleh-Salem","id":22606707,"node_id":"MDQ6VXNlcjIyNjA2NzA3","avatar_url":"https://avatars.githubusercontent.com/u/22606707?v=4","gravatar_id":"","url":"https://api.github.com/users/Saleh-Salem","html_url":"https://github.com/Saleh-Salem","followers_url":"https://api.github.com/users/Saleh-Salem/followers","following_url":"https://api.github.com/users/Saleh-Salem/following{/other_user}","gists_url":"https://api.github.com/users/Saleh-Salem/gists{/gist_id}","starred_url":"https://api.github.com/users/Saleh-Salem/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Saleh-Salem/subscriptions","organizations_url":"https://api.github.com/users/Saleh-Salem/orgs","repos_url":"https://api.github.com/users/Saleh-Salem/repos","events_url":"https://api.github.com/users/Saleh-Salem/events{/privacy}","received_events_url":"https://api.github.com/users/Saleh-Salem/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-11T08:08:17Z","updated_at":"2022-09-11T08:27:32Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When validating the CSRF token getting an exception in API\r\n \r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\nthe `session[:_csrf_token]` and  `request.x_csrf_token` is different and getting issue.\r\nwhen I need to skip the csrf, I add `verify_authenticity_token`, In this case, I don't need to skip it.\r\nI debug and found the issue in the method:\r\n\r\n```\r\n  def compare_with_global_token(token, session = nil) # :doc:\r\n    ActiveSupport::SecurityUtils.fixed_length_secure_compare(token, global_csrf_token(session))\r\n  end\r\n```\r\n\r\nwhat is `session[:_csrf_token]` and how can I implement it in API?\r\nIs there any missing from my side?\r\n### Steps to reproduce\r\n\r\n1. Add `protect_from_forgery with: :exception` .\r\n2. When logging in return token in response is generated by `form_authenticity_token`.\r\n3. When Trying to request any POST, PUT or DELETE API get an exception.\r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nReturn Response without exception.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\ngetting exception \r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\n### System configuration\r\n**Rails version**:\r\n6.0.3.5\r\n**Ruby version**:\r\n2.7.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45998/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45998/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45994","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45994/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45994/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45994/events","html_url":"https://github.com/rails/rails/issues/45994","id":1368555704,"node_id":"I_kwDNIULOUZKAuA","number":45994,"title":"LoadInterlockAwareMonitor deadlock when clearing cache (multiple databases, test)","user":{"login":"kuahyeow","id":16723,"node_id":"MDQ6VXNlcjE2NzIz","avatar_url":"https://avatars.githubusercontent.com/u/16723?v=4","gravatar_id":"","url":"https://api.github.com/users/kuahyeow","html_url":"https://github.com/kuahyeow","followers_url":"https://api.github.com/users/kuahyeow/followers","following_url":"https://api.github.com/users/kuahyeow/following{/other_user}","gists_url":"https://api.github.com/users/kuahyeow/gists{/gist_id}","starred_url":"https://api.github.com/users/kuahyeow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kuahyeow/subscriptions","organizations_url":"https://api.github.com/users/kuahyeow/orgs","repos_url":"https://api.github.com/users/kuahyeow/repos","events_url":"https://api.github.com/users/kuahyeow/events{/privacy}","received_events_url":"https://api.github.com/users/kuahyeow/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-10T08:52:46Z","updated_at":"2022-09-10T08:56:12Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"With multiple databases, we observe hangs within system tests.\r\n\r\nSee also https://gitlab.com/gitlab-org/gitlab/-/issues/371468 (GitLab is at Rails 6.1, Ruby 2.7.5)\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nHere's a minimal reproduction with Rails 7.0.3.1\r\n\r\n1. Checkout https://gitlab.com/tkuah/multi_database_system_test\r\n2. `bundle install`\r\n3. `bundle exec rails db:migrate`\r\n4. `bundle rails test test/system/home_pages_test.rb`\r\n\r\nThe conditions are:\r\n\r\n1. Multiple databases\r\n2. System test where there's an async request which overlaps with the main thread\r\n\r\n### Expected behavior\r\n\r\nIt does not hang, and the test completes\r\n\r\n### Actual behavior\r\n\r\nIt hangs. It looks like it's hanging when clearing query cache (see https://gitlab.com/gitlab-org/gitlab/-/issues/371468#note_1087203883, and https://gitlab.com/gitlab-org/gitlab/-/issues/371468#note_1088779499)\r\n\r\nA backtrace dump taken while the test is hanging [sigdump-68442.log](https://github.com/rails/rails/files/9539878/sigdump-68442.log)\r\n\r\nMy suspicion is that:\r\n\r\n1. `lock_thread` is true for system tests\r\n3. Therefore both the main thread, and the Puma thread attempt to clear query cache for the same set of connections\r\n\r\nSo we have two connections:\r\n\r\n1. Puma thread takes a `LoadInterlockAwareMonitor` lock for primary connection via `Post.transaction`\r\n2. Main thread takes a `LoadInterlockAwareMonitor` lock for animal connection via implicit transaction that `create` does\r\n3. Due to 2, main thread attempts to clear query cache for primary connection. **Waits for 1's lock**\r\n4. Due to 1, and because of `lock_thread`, puma thread clears query cache for primary connection. It takes a `LoadInterlockAwareMonitor` lock for primary connection which succeds\r\n5. Due to 1, puma thread now attempts clears query cache for animal connection. **Waits for 2's lock**\r\n\r\nSee [`clear_query_caches_for_current_thread` method](https://github.com/rails/rails/blob/e24fbf71fa0a10f63346b9b42604451958740844/activerecord/lib/active_record/connection_handling.rb#L244-L248)\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: ruby 2.7.5p203 (2021-11-24 revision f69aeb8314) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45994/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45994/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45984","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45984/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45984/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45984/events","html_url":"https://github.com/rails/rails/issues/45984","id":1368144421,"node_id":"I_kwDNIULOUYw6JQ","number":45984,"title":"Cannot Eager Load has_many :through Relationships with custom scope","user":{"login":"dcorrigan","id":2445528,"node_id":"MDQ6VXNlcjI0NDU1Mjg=","avatar_url":"https://avatars.githubusercontent.com/u/2445528?v=4","gravatar_id":"","url":"https://api.github.com/users/dcorrigan","html_url":"https://github.com/dcorrigan","followers_url":"https://api.github.com/users/dcorrigan/followers","following_url":"https://api.github.com/users/dcorrigan/following{/other_user}","gists_url":"https://api.github.com/users/dcorrigan/gists{/gist_id}","starred_url":"https://api.github.com/users/dcorrigan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dcorrigan/subscriptions","organizations_url":"https://api.github.com/users/dcorrigan/orgs","repos_url":"https://api.github.com/users/dcorrigan/repos","events_url":"https://api.github.com/users/dcorrigan/events{/privacy}","received_events_url":"https://api.github.com/users/dcorrigan/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-09T17:47:35Z","updated_at":"2022-09-09T17:47:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nThis seems like it's the same as #28324, but I'm still seeing the issue in Rails 7. \r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n  end\r\n\r\n  create_table :images, force: true do |t|\r\n    t.string :title\r\n    t.integer :post_id\r\n  end\r\n\r\n  create_table :captions, force: true do |t|\r\n    t.integer :image_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :images\r\n  has_many :captions, lambda { order('images.title DESC') }, through: :images\r\nend\r\n\r\nclass Image < ActiveRecord::Base\r\n  belongs_to :post\r\n  has_one :caption\r\nend\r\n\r\nclass Caption < ActiveRecord::Base\r\n  belongs_to :image\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_preload_has_many_through_association_with_scope\r\n    post = Post.create!\r\n    image = Image.create!\r\n    image.caption = Caption.create!\r\n    post.images << image\r\n    post.save!\r\n\r\n    # Access through the model works\r\n    assert_includes post.captions, Caption.first\r\n\r\n    # Query with association preloaded does not.\r\n    # When evaluated, it will apply the scope without the relevant JOIN table:\r\n    # SELECT \"captions\".* FROM \"captions\" WHERE \"captions\".\"image_id\" = ? ORDER BY images.title DESC\r\n    preloaded = Post.where(id: post.id).includes(:captions)\r\n\r\n    assert_includes preloaded.first.captions, Caption.first\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe test passes and we're able to eager load has_many :through associations with custom scopes in this way.\r\n\r\nI realize this can be fixed by adding a `references(:images)` to the query, but it seems reasonable to expect AR to infer that that the join is necessary here.\r\n\r\n### Actual behavior\r\n\r\nTest fails with an error: `ActiveRecord::StatementInvalid: SQLite3::SQLException: no such column: images.title`\r\n\r\n### System configuration\r\n**Rails version**: 7.0 \r\n\r\n**Ruby version**: 3.1.2p20\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45984/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45967","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45967/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45967/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45967/events","html_url":"https://github.com/rails/rails/issues/45967","id":1366038829,"node_id":"I_kwDNIULOUWwZLQ","number":45967,"title":"Inconsistent update of timestamps while updating associations with *_ids=","user":{"login":"matthee","id":547653,"node_id":"MDQ6VXNlcjU0NzY1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/547653?v=4","gravatar_id":"","url":"https://api.github.com/users/matthee","html_url":"https://github.com/matthee","followers_url":"https://api.github.com/users/matthee/followers","following_url":"https://api.github.com/users/matthee/following{/other_user}","gists_url":"https://api.github.com/users/matthee/gists{/gist_id}","starred_url":"https://api.github.com/users/matthee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matthee/subscriptions","organizations_url":"https://api.github.com/users/matthee/orgs","repos_url":"https://api.github.com/users/matthee/repos","events_url":"https://api.github.com/users/matthee/events{/privacy}","received_events_url":"https://api.github.com/users/matthee/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-08T10:51:09Z","updated_at":"2022-09-09T03:10:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"ActiveRecord inconsistently updates the `updated_at` column when changing `has_many through:` associations.\r\n\r\n### Steps to reproduce\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"activesupport\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"active_support/testing/time_helpers\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.timestamps\r\n  end\r\n  \r\n  create_table :tags, force: true do |t|\r\n  end\r\n\r\n  create_table :taggings, force: true do |t|\r\n    t.integer :post_id\r\n    t.integer :tag_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :taggings, dependent: :destroy\r\n  \r\n  has_many :tags, through: :taggings\r\nend\r\n\r\nclass Tagging < ActiveRecord::Base\r\n  belongs_to :post, touch: true\r\n  belongs_to :tag\r\nend\r\n\r\nclass Tag < ActiveRecord::Base\r\n  has_many :taggings\r\n  has_many :posts, through: :taggings\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  include ActiveSupport::Testing::TimeHelpers\r\n  \r\n  def test_updated_at_is_updated_when_setting_has_many_through_association\r\n    freeze_time\r\n        \r\n    tag_1 = Tag.create!\r\n    tag_2 = Tag.create!\r\n      \r\n    post = Post.create!\r\n    \r\n    travel_to(now = 1.hour.from_now)\r\n    \r\n    # Adding tags updates post.updated_at\r\n    post.update(tag_ids: [tag_1.id, tag_2.id])\r\n    assert_in_delta now, post.updated_at, 1.second, \"post#updated_at was not updated when adding tags\"\r\n    \r\n    # Removing tags does not update post.updated_at :(\r\n    travel_to(now = 2.hours.from_now)\r\n    post.update(tag_ids: [tag_1.id])\r\n    assert_in_delta now, post.updated_at, 1.second, \"post#updated_at was not updated when removing tags\"\r\n  end\r\n  \r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nIn the example above, both `.update` calls should update the `updated_at` column of the post record. (when adding and removing records)\r\n\r\n### Actual behavior\r\n\r\nWhen deleting a record, the `updated_at` timestamp is not updated.\r\n\r\n### System configuration\r\n**Rails version**:\r\n7.0.3.1\r\n**Ruby version**:\r\n3.0.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45967/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45967/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45959","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45959/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45959/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45959/events","html_url":"https://github.com/rails/rails/issues/45959","id":1364232810,"node_id":"I_kwDNIULOUVCKag","number":45959,"title":"JSON field not saving data with symbol : and it's saving with arrow =>","user":{"login":"sajjadmurtaza","id":8552702,"node_id":"MDQ6VXNlcjg1NTI3MDI=","avatar_url":"https://avatars.githubusercontent.com/u/8552702?v=4","gravatar_id":"","url":"https://api.github.com/users/sajjadmurtaza","html_url":"https://github.com/sajjadmurtaza","followers_url":"https://api.github.com/users/sajjadmurtaza/followers","following_url":"https://api.github.com/users/sajjadmurtaza/following{/other_user}","gists_url":"https://api.github.com/users/sajjadmurtaza/gists{/gist_id}","starred_url":"https://api.github.com/users/sajjadmurtaza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sajjadmurtaza/subscriptions","organizations_url":"https://api.github.com/users/sajjadmurtaza/orgs","repos_url":"https://api.github.com/users/sajjadmurtaza/repos","events_url":"https://api.github.com/users/sajjadmurtaza/events{/privacy}","received_events_url":"https://api.github.com/users/sajjadmurtaza/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":1071962662,"node_id":"MDU6TGFiZWwxMDcxOTYyNjYy","url":"https://api.github.com/repos/rails/rails/labels/more-information-needed","name":"more-information-needed","color":"bfdadc","default":false,"description":"When reporter needs to provide more information"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-09-07T07:40:12Z","updated_at":"2022-09-08T07:23:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nI have JSON field in my database `t.json \"theme\"`. When I try to save the field hash with : , it's overridden before save\r\ne.g.\r\n`object.theme = { color: 'red' }` it always change to `{ color => 'red' }`\r\n\r\ni also tried with jsonb and default value with empty hash {} but still having the same issue.\r\n\r\n\r\nI want to save the JSON data hash with symbol keys `{ color: 'red' }`\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.0\r\n\r\n**Ruby version**: 2.7.1\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45959/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45959/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45949","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45949/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45949/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45949/events","html_url":"https://github.com/rails/rails/issues/45949","id":1362899537,"node_id":"I_kwDNIULOUTwyUQ","number":45949,"title":"ActionText::Attachable#as_json override is breaking ActiveStorage::Blob#as_json when blob is not persisted","user":{"login":"balbesina","id":7312369,"node_id":"MDQ6VXNlcjczMTIzNjk=","avatar_url":"https://avatars.githubusercontent.com/u/7312369?v=4","gravatar_id":"","url":"https://api.github.com/users/balbesina","html_url":"https://github.com/balbesina","followers_url":"https://api.github.com/users/balbesina/followers","following_url":"https://api.github.com/users/balbesina/following{/other_user}","gists_url":"https://api.github.com/users/balbesina/gists{/gist_id}","starred_url":"https://api.github.com/users/balbesina/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/balbesina/subscriptions","organizations_url":"https://api.github.com/users/balbesina/orgs","repos_url":"https://api.github.com/users/balbesina/repos","events_url":"https://api.github.com/users/balbesina/events{/privacy}","received_events_url":"https://api.github.com/users/balbesina/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-06T08:26:39Z","updated_at":"2022-09-06T08:26:39Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nfrom rails console:\r\n```ruby\r\nActiveStorage::Blob.build_after_unfurling(io: StringIO.new('asd'), filename: 'asd.txt').as_json\r\n```\r\n\r\n[Reproduction script](https://gist.github.com/balbesina/30fbdafbfee4b71b06209d9e950f4128)\r\n\r\n### Expected behavior\r\nActiveStorage::Blob#as_json returns a Hash\r\n\r\n### Actual behavior\r\nActiveStorage::Blob#as_json raises exception\r\n```\r\n/Users/dhh/.rvm/gems/ruby-3.1.2/gems/globalid-1.0.0/lib/global_id/uri/gid.rb:167:in `validate_model_id': \r\nUnable to create a Global ID for ActiveStorage::Blob without a model id. (URI::GID::MissingModelIdError)\r\n```\r\n\r\n### System configuration\r\n**Rails version**: Rails 7.0.3.1\r\n**Ruby version**: ruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45949/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45949/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45939","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45939/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45939/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45939/events","html_url":"https://github.com/rails/rails/issues/45939","id":1360876688,"node_id":"I_kwDNIULOUR1UkA","number":45939,"title":"Validations aren't inherited from base model if child is called before validation declaration","user":{"login":"Exterm1nate","id":48535087,"node_id":"MDQ6VXNlcjQ4NTM1MDg3","avatar_url":"https://avatars.githubusercontent.com/u/48535087?v=4","gravatar_id":"","url":"https://api.github.com/users/Exterm1nate","html_url":"https://github.com/Exterm1nate","followers_url":"https://api.github.com/users/Exterm1nate/followers","following_url":"https://api.github.com/users/Exterm1nate/following{/other_user}","gists_url":"https://api.github.com/users/Exterm1nate/gists{/gist_id}","starred_url":"https://api.github.com/users/Exterm1nate/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Exterm1nate/subscriptions","organizations_url":"https://api.github.com/users/Exterm1nate/orgs","repos_url":"https://api.github.com/users/Exterm1nate/repos","events_url":"https://api.github.com/users/Exterm1nate/events{/privacy}","received_events_url":"https://api.github.com/users/Exterm1nate/received_events","type":"User","site_admin":false},"labels":[{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-09-03T14:46:42Z","updated_at":"2022-09-08T07:26:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nLet's create some STI models. Base `Vehicle` and two childs `Car` and `Motorcycle`.\r\n\r\n```ruby\r\n# models/vehicle.rb\r\nclass Vehicle < ApplicationRecord\r\n  TYPES = [Car, Motorcycle].freeze\r\n\r\n  validates :color, uniqueness: { scope: :model }\r\nend\r\n\r\n# models/car.rb\r\nclass Car < Vehicle\r\nend\r\n\r\n# models/motorcycle.rb\r\nclass Motorcycle < Vehicle\r\nend\r\n```\r\n\r\nAfter that we want to use `#validators_on` method to make sure the validation is present.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\nCar.validators_on(:color)\r\nMotorcycle.validators_on(:color)\r\n```\r\n\r\n### Expected behavior\r\n\r\nAll models must contain the validation.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nMotorcycle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\n```\r\n\r\n### Actual behavior\r\n\r\nBut for childs this method returns nothing.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> []\r\nMotorcycle.validators_on(:color)\r\n#=> []\r\n```\r\n\r\n### Notes\r\n\r\nIf we remove the `TYPES` constant (or just child classes calls from it) `validators_on` works as expected. Let's change original code a little bit:\r\n\r\n```ruby\r\n# models/vehicle.rb\r\nclass Vehicle < ApplicationRecord\r\n  TYPES = [Car].freeze # Motorcycle was removed from here!\r\n\r\n  validates :color, uniqueness: { scope: :model }\r\nend\r\n```\r\n\r\nAnd after that test again.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> []\r\nMotorcycle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\n```\r\n\r\n`Motorcycle` validation was returned correctly this time.\r\n\r\nIt seems to be a load error. `Car` was called before the `Vehicle`'s validation declaration, so it doesn't take this validation into account. It may also depend on loading order.\r\n\r\nNotice that validation itself is working well in all models.\r\n\r\n```ruby\r\nCar.create!(color: \"black\", model: \"Boomer\")\r\nCar.create!(color: \"black\", model: \"Boomer\") # raises ActiveRecord::RecordInvalid\r\n\r\nMotorcycle.create!(color: \"red\", model: \"Yamaha\")\r\nMotorcycle.create!(color: \"red\", model: \"Yamaha\") # raises ActiveRecord::RecordInvalid\r\n```\r\n\r\nExample project: https://github.com/Exterm1nate/rails-validation-issue\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3\r\n\r\n**Ruby version**: 3.1.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45939/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45939/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45937","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45937/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45937/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45937/events","html_url":"https://github.com/rails/rails/issues/45937","id":1360779604,"node_id":"I_kwDNIULOURvZVA","number":45937,"title":"Add strict table mode (by default) to sqlite adapter","user":{"login":"jrz","id":149668,"node_id":"MDQ6VXNlcjE0OTY2OA==","avatar_url":"https://avatars.githubusercontent.com/u/149668?v=4","gravatar_id":"","url":"https://api.github.com/users/jrz","html_url":"https://github.com/jrz","followers_url":"https://api.github.com/users/jrz/followers","following_url":"https://api.github.com/users/jrz/following{/other_user}","gists_url":"https://api.github.com/users/jrz/gists{/gist_id}","starred_url":"https://api.github.com/users/jrz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jrz/subscriptions","organizations_url":"https://api.github.com/users/jrz/orgs","repos_url":"https://api.github.com/users/jrz/repos","events_url":"https://api.github.com/users/jrz/events{/privacy}","received_events_url":"https://api.github.com/users/jrz/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-03T07:01:02Z","updated_at":"2022-09-08T07:30:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"SQLite supports 'strict tables' since 3.37.1 https://sqlite.org/stricttables.html\r\n\r\nThis forces a datatype to be specified when creating a table. This is the preferred method in any application created by developers. \r\n\r\nUnspecified/ANY datatypes are useful for quick tryouts as an enduser, similar to excel. But it's counterproductive when creating an application.\r\n\r\nIf this will become a configurable setting, the default should be set to strict.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45937/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45937/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45920","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45920/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45920/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45920/events","html_url":"https://github.com/rails/rails/issues/45920","id":1358179995,"node_id":"I_kwDNIULOUPQumw","number":45920,"title":"Replace has_one through create_association might create duplicated rows","user":{"login":"lazaronixon","id":2651240,"node_id":"MDQ6VXNlcjI2NTEyNDA=","avatar_url":"https://avatars.githubusercontent.com/u/2651240?v=4","gravatar_id":"","url":"https://api.github.com/users/lazaronixon","html_url":"https://github.com/lazaronixon","followers_url":"https://api.github.com/users/lazaronixon/followers","following_url":"https://api.github.com/users/lazaronixon/following{/other_user}","gists_url":"https://api.github.com/users/lazaronixon/gists{/gist_id}","starred_url":"https://api.github.com/users/lazaronixon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lazaronixon/subscriptions","organizations_url":"https://api.github.com/users/lazaronixon/orgs","repos_url":"https://api.github.com/users/lazaronixon/repos","events_url":"https://api.github.com/users/lazaronixon/events{/privacy}","received_events_url":"https://api.github.com/users/lazaronixon/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-09-01T03:05:07Z","updated_at":"2022-09-01T23:03:40Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# Ensure backward compatibility with minitest 4.\r\nMinitest::Test = MiniTest::Unit::TestCase unless defined?(Minitest::Test)\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts do |t|\r\n  end\r\n\r\n  create_table :comments do |t|\r\n    t.references :post\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_one :comment, dependent: :destroy\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  validates_presence_of :post_id\r\n  belongs_to :post\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    post = Post.create!\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    sleep 5.seconds\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n```\r\n# transaction begin\r\nselect previous_comment for update\r\n\r\ninsert new_comment\r\n\r\ndelete previous_comment\r\n# transaction commit\r\n```\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n```\r\n# transaction begin\r\ninsert new_comment\r\n# transaction commit\r\n\r\n# transaction begin\r\ndelete previous_comment\r\n# transaction commit\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45920/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45920/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45906","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45906/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45906/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45906/events","html_url":"https://github.com/rails/rails/issues/45906","id":1355732552,"node_id":"I_kwDNIULOUM7WSA","number":45906,"title":"High object allocation count from `ActiveRecord::ConnectionAdapters::PoolManager#pool_configs `","user":{"login":"amarchenkoshopify","id":101111422,"node_id":"U_kgDOBgbWfg","avatar_url":"https://avatars.githubusercontent.com/u/101111422?v=4","gravatar_id":"","url":"https://api.github.com/users/amarchenkoshopify","html_url":"https://github.com/amarchenkoshopify","followers_url":"https://api.github.com/users/amarchenkoshopify/followers","following_url":"https://api.github.com/users/amarchenkoshopify/following{/other_user}","gists_url":"https://api.github.com/users/amarchenkoshopify/gists{/gist_id}","starred_url":"https://api.github.com/users/amarchenkoshopify/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amarchenkoshopify/subscriptions","organizations_url":"https://api.github.com/users/amarchenkoshopify/orgs","repos_url":"https://api.github.com/users/amarchenkoshopify/repos","events_url":"https://api.github.com/users/amarchenkoshopify/events{/privacy}","received_events_url":"https://api.github.com/users/amarchenkoshopify/received_events","type":"User","site_admin":false},"labels":[{"id":107186,"node_id":"MDU6TGFiZWwxMDcxODY=","url":"https://api.github.com/repos/rails/rails/labels/regression","name":"regression","color":"e10c02","default":false,"description":null},{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"eileencodes","id":1080678,"node_id":"MDQ6VXNlcjEwODA2Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/1080678?v=4","gravatar_id":"","url":"https://api.github.com/users/eileencodes","html_url":"https://github.com/eileencodes","followers_url":"https://api.github.com/users/eileencodes/followers","following_url":"https://api.github.com/users/eileencodes/following{/other_user}","gists_url":"https://api.github.com/users/eileencodes/gists{/gist_id}","starred_url":"https://api.github.com/users/eileencodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eileencodes/subscriptions","organizations_url":"https://api.github.com/users/eileencodes/orgs","repos_url":"https://api.github.com/users/eileencodes/repos","events_url":"https://api.github.com/users/eileencodes/events{/privacy}","received_events_url":"https://api.github.com/users/eileencodes/received_events","type":"User","site_admin":false},"assignees":[{"login":"eileencodes","id":1080678,"node_id":"MDQ6VXNlcjEwODA2Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/1080678?v=4","gravatar_id":"","url":"https://api.github.com/users/eileencodes","html_url":"https://github.com/eileencodes","followers_url":"https://api.github.com/users/eileencodes/followers","following_url":"https://api.github.com/users/eileencodes/following{/other_user}","gists_url":"https://api.github.com/users/eileencodes/gists{/gist_id}","starred_url":"https://api.github.com/users/eileencodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eileencodes/subscriptions","organizations_url":"https://api.github.com/users/eileencodes/orgs","repos_url":"https://api.github.com/users/eileencodes/repos","events_url":"https://api.github.com/users/eileencodes/events{/privacy}","received_events_url":"https://api.github.com/users/eileencodes/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/rails/rails/milestones/81","html_url":"https://github.com/rails/rails/milestone/81","labels_url":"https://api.github.com/repos/rails/rails/milestones/81/labels","id":7591006,"node_id":"MI_kwDNIULOAHPUXg","number":81,"title":"7.0.4","description":"","creator":{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":3,"state":"open","created_at":"2022-01-20T01:51:07Z","updated_at":"2022-08-30T13:21:37Z","due_on":null,"closed_at":null},"comments":2,"created_at":"2022-08-30T12:58:42Z","updated_at":"2022-08-31T12:37:42Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWhile working on memory efficiency investigation I noticed that a very big bunch of object allocations comes from a single method `ActiveRecord::ConnectionAdapters::PoolManager#pool_configs`:\r\n\r\n```ruby\r\n      def pool_configs(role = nil)\r\n        if role\r\n          @role_to_shard_mapping[role].values\r\n        else\r\n          @role_to_shard_mapping.flat_map { |_, shard_map| shard_map.values }\r\n        end\r\n      end \r\n```\r\n\r\nThis method is called on every activerecord operation and does not cache its result: could we think about a way of caching its result?\r\n\r\ncc @eileencodes \r\n\r\n### Expected behavior\r\n\r\n`#pool_configs` allocates configs once\r\n\r\n### Actual behavior\r\n\r\n`#pool_configs` allocates configs every time it is executed\r\n\r\n### System configuration\r\n**Rails version**: main branch\r\n\r\n**Ruby version**: 3.1\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45906/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45901","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45901/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45901/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45901/events","html_url":"https://github.com/rails/rails/issues/45901","id":1354555667,"node_id":"I_kwDNIULOULzhEw","number":45901,"title":"bin/rails dbconsole should include_password by default","user":{"login":"wpeterson","id":178135,"node_id":"MDQ6VXNlcjE3ODEzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/178135?v=4","gravatar_id":"","url":"https://api.github.com/users/wpeterson","html_url":"https://github.com/wpeterson","followers_url":"https://api.github.com/users/wpeterson/followers","following_url":"https://api.github.com/users/wpeterson/following{/other_user}","gists_url":"https://api.github.com/users/wpeterson/gists{/gist_id}","starred_url":"https://api.github.com/users/wpeterson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wpeterson/subscriptions","organizations_url":"https://api.github.com/users/wpeterson/orgs","repos_url":"https://api.github.com/users/wpeterson/repos","events_url":"https://api.github.com/users/wpeterson/events{/privacy}","received_events_url":"https://api.github.com/users/wpeterson/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-29T16:19:45Z","updated_at":"2022-08-30T00:17:43Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n1. Configure a Rails `config/database.yml` with a `password` required to connect\r\n2. Run `rails dbconsole`\r\n3. See prompt for database password, despite password being configured/available\r\n4. Run `rails dbconsole -p`\r\n5. See dbconsole properly load and use credentials to connect to database for DB console session\r\n\r\n### Expected behavior\r\nWhenever a Rails app has credentials like a password configured for a database, the database console session should use those credentials vs. prompting the user to re-enter a password interactively.  When credentials are not configured and a password is required, we should prompt then.\r\n\r\nThis behavior is implemented since early Rails versions but is disabled by default.  I propose we enable the proper password behavior by default.\r\n\r\n### Actual behavior\r\n`bin/rails dbconsole` always prompts for a password, even when one is configured for the app.\r\n\r\n### System configuration\r\n**Rails version**: All (6.x, 7.x, head)\r\n\r\n**Ruby version**: All \r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45901/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45901/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45899","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45899/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45899/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45899/events","html_url":"https://github.com/rails/rails/issues/45899","id":1353676820,"node_id":"I_kwDNIULOUK94FA","number":45899,"title":"Active Job unit tests fail using que 2.2.0","user":{"login":"yahonda","id":73684,"node_id":"MDQ6VXNlcjczNjg0","avatar_url":"https://avatars.githubusercontent.com/u/73684?v=4","gravatar_id":"","url":"https://api.github.com/users/yahonda","html_url":"https://github.com/yahonda","followers_url":"https://api.github.com/users/yahonda/followers","following_url":"https://api.github.com/users/yahonda/following{/other_user}","gists_url":"https://api.github.com/users/yahonda/gists{/gist_id}","starred_url":"https://api.github.com/users/yahonda/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yahonda/subscriptions","organizations_url":"https://api.github.com/users/yahonda/orgs","repos_url":"https://api.github.com/users/yahonda/repos","events_url":"https://api.github.com/users/yahonda/events{/privacy}","received_events_url":"https://api.github.com/users/yahonda/received_events","type":"User","site_admin":false},"labels":[{"id":123812746,"node_id":"MDU6TGFiZWwxMjM4MTI3NDY=","url":"https://api.github.com/repos/rails/rails/labels/activejob","name":"activejob","color":"5319e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-29T04:24:06Z","updated_at":"2022-09-09T15:33:02Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"### Steps to reproduce\r\nActive Job CI has been failing since que 2.2.0 is installed. https://buildkite.com/rails/rails/builds/89068#0182e6b9-7c84-4b85-a651-8d640f5eb076\r\n\r\n```ruby\r\ngit clone https://github.com/rails/rails\r\ncd rails/activejob\r\nbundle update que\r\nAJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\n```\r\n\r\nAlthough there are 3 failures and 75 errors. This script just runs a single test because it looks the root cause is the same.\r\n\r\n\r\n### Expected behavior\r\nIt should pass.\r\n\r\n### Actual behavior\r\nIt raises `ArgumentError: wrong number of arguments (given 2, expected 1)`.\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 62302\r\n\r\n# Running:\r\n\r\nE\r\n\r\nError:\r\nQueuingTest#test_run_queued_job:\r\nArgumentError: wrong number of arguments (given 2, expected 1)\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:78:in `run'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job_methods.rb:51:in `_run'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:248:in `block (2 levels) in _run_attrs'\r\n    (eval):9:in `run_job_middleware'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:247:in `block in _run_attrs'\r\n    <internal:kernel>:90:in `tap'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:246:in `_run_attrs'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:223:in `run'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/support/que/inline.rb:15:in `enqueue'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:66:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:27:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:67:in `block in enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:118:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:28:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:27:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:9:in `block (2 levels) in <module:Instrumentation>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:27:in `tag_logger'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:14:in `block (2 levels) in <module:Logging>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:138:in `run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:63:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:30:in `perform_later'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/cases/queuing_test.rb:14:in `block in <class:QueuingTest>'\r\n\r\n\r\nbin/test test/cases/queuing_test.rb:13\r\n\r\n\r\n\r\nFinished in 0.008930s, 111.9768 runs/s, 0.0000 assertions/s.\r\n1 runs, 0 assertions, 0 failures, 1 errors, 0 skips\r\n$\r\n```\r\n\r\n### Additional information\r\n* `require_job_options_kwarg?` always returns `false` because `JobWrapper.method(:enqueue).parameters` does not have any `[:key, :job_options]` \r\nwhere it looks expected to return `true`.\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 32774\r\n\r\n# Running:\r\n\r\n[46, 55] in ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n    46|       end\r\n    47|\r\n    48|       private\r\n    49|         def require_job_options_kwarg?\r\n    50|           require 'debug'\r\n=>  51|           binding.break\r\n    52|           @require_job_options_kwarg ||=\r\n    53|             JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }\r\n    54|         end\r\n    55|\r\n=>#0\tActiveJob::QueueAdapters::QueAdapter#require_job_options_kwarg? at ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:51\r\n  #1\tActiveJob::QueueAdapters::QueAdapter#enqueue(job=#<HelloJob:0x00007fc861807740 @arguments...) at ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:24\r\n  # and 40 frames (use `bt' command for all frames)\r\n(rdbg) JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }    # ruby\r\nfalse\r\n(rdbg) JobWrapper.method(:enqueue).parameters    # ruby\r\n[[:req, :args], [:keyreq, :priority], [:keyreq, :queue], [:key, :run_at]]\r\n(rdbg) quit    # command\r\nReally quit? [Y/n] Y\r\n```\r\n\r\n* By changing `require_job_options_kwarg?` always returns `true`, it raises `ArgumentError: missing keywords: :priority, :queue`\r\n\r\n```ruby\r\n$ git diff\r\ndiff --git a/activejob/lib/active_job/queue_adapters/que_adapter.rb b/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\nindex 41b3633a07..54e8cbc39b 100644\r\n--- a/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n+++ b/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n@@ -47,6 +47,7 @@ def enqueue_at(job, timestamp) # :nodoc:\r\n\r\n       private\r\n         def require_job_options_kwarg?\r\n+          return true\r\n           @require_job_options_kwarg ||=\r\n             JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }\r\n         end\r\n$\r\n```\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 21508\r\n\r\n# Running:\r\n\r\nE\r\n\r\nError:\r\nQueuingTest#test_run_queued_job:\r\nArgumentError: missing keywords: :priority, :queue\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:65:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:25:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:67:in `block in enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:118:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:28:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:27:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:9:in `block (2 levels) in <module:Instrumentation>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:27:in `tag_logger'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:14:in `block (2 levels) in <module:Logging>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:138:in `run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:63:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:30:in `perform_later'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/cases/queuing_test.rb:14:in `block in <class:QueuingTest>'\r\n\r\n\r\nbin/test test/cases/queuing_test.rb:13\r\n\r\n\r\n\r\nFinished in 0.008724s, 114.6312 runs/s, 0.0000 assertions/s.\r\n1 runs, 0 assertions, 0 failures, 1 errors, 0 skips\r\n$\r\n```\r\n\r\n\r\n### System configuration\r\n**Rails version**: main branch\r\n\r\n**Ruby version**: $ ruby -v\r\nruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [x86_64-linux]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45899/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45893","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45893/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45893/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45893/events","html_url":"https://github.com/rails/rails/issues/45893","id":1352793907,"node_id":"I_kwDNIULOUKH_Mw","number":45893,"title":"ActiveRecord: HMT with conditions does not update the in-memory collection when pushing new objects","user":{"login":"joanniclaborde","id":411925,"node_id":"MDQ6VXNlcjQxMTkyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/411925?v=4","gravatar_id":"","url":"https://api.github.com/users/joanniclaborde","html_url":"https://github.com/joanniclaborde","followers_url":"https://api.github.com/users/joanniclaborde/followers","following_url":"https://api.github.com/users/joanniclaborde/following{/other_user}","gists_url":"https://api.github.com/users/joanniclaborde/gists{/gist_id}","starred_url":"https://api.github.com/users/joanniclaborde/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joanniclaborde/subscriptions","organizations_url":"https://api.github.com/users/joanniclaborde/orgs","repos_url":"https://api.github.com/users/joanniclaborde/repos","events_url":"https://api.github.com/users/joanniclaborde/events{/privacy}","received_events_url":"https://api.github.com/users/joanniclaborde/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-26T22:40:12Z","updated_at":"2022-08-30T15:33:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi! When using a `has_many :a, through: :b` relation, and the `:b` relation has a condition, adding new objects doesn't update the in-memory collection properly (stops after the first object).\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :packages, force: true do |t|\r\n  end\r\n\r\n  create_table :package_items, force: true do |t|\r\n    t.integer :package_id\r\n    t.integer :item_id\r\n  end\r\n\r\n  create_table :items, force: true do |t|\r\n    t.boolean \"deleted\", default: false\r\n  end\r\nend\r\n\r\nclass Package < ActiveRecord::Base\r\n  has_many :package_items, ->{ where(item_id: Item.active.pluck(:id)) }\r\n  has_many :items, through: :package_items\r\nend\r\n\r\nclass PackageItem < ActiveRecord::Base\r\n  belongs_to :package\r\n  belongs_to :item\r\nend\r\n\r\nclass Item < ActiveRecord::Base\r\n  has_many :package_items\r\n  has_many :packages, through: :package_items\r\n\r\n  scope :active, -> { where(deleted: false) }\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    package = Package.create!\r\n    package.items << Item.create!\r\n    package.items << Item.create!\r\n    package.items << Item.create!\r\n\r\n    # This should be [3, 3, 3] but we get [3, 1, 3]\r\n    assert_equal [3, 3, 3], [Item.count, package.items.count, package.reload.items.count]\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n`package.items.count` is equal to 3.\r\n\r\n### Actual behavior\r\n`package.items.count` is equal to 1, even though all the items and relations are created properly (see assertion).\r\n\r\n### System configuration\r\n**Rails version**: tested on `7.1.0.alpha` and `6.1.6.1`.\r\n\r\n**Ruby version**: tested on `2.7.5`.\r\n\r\n### Workaround\r\nI was able to fix this issue by changing the weird condition to a proper scope:\r\n\r\n```ruby\r\nclass Package < ActiveRecord::Base\r\n  has_many :package_items, ->{ includes(:item).merge(Item.active) }\r\n  has_many :items, through: :package_items\r\nend\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45893/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45893/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45880","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45880/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45880/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45880/events","html_url":"https://github.com/rails/rails/issues/45880","id":1349546108,"node_id":"I_kwDNIULOUHBwfA","number":45880,"title":"Google search links to old API docs","user":{"login":"abraham","id":3341,"node_id":"MDQ6VXNlcjMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/3341?v=4","gravatar_id":"","url":"https://api.github.com/users/abraham","html_url":"https://github.com/abraham","followers_url":"https://api.github.com/users/abraham/followers","following_url":"https://api.github.com/users/abraham/following{/other_user}","gists_url":"https://api.github.com/users/abraham/gists{/gist_id}","starred_url":"https://api.github.com/users/abraham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abraham/subscriptions","organizations_url":"https://api.github.com/users/abraham/orgs","repos_url":"https://api.github.com/users/abraham/repos","events_url":"https://api.github.com/users/abraham/events{/privacy}","received_events_url":"https://api.github.com/users/abraham/received_events","type":"User","site_admin":true},"labels":[{"id":150377,"node_id":"MDU6TGFiZWwxNTAzNzc=","url":"https://api.github.com/repos/rails/rails/labels/docs","name":"docs","color":"02d7e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-24T14:33:55Z","updated_at":"2022-08-25T23:48:01Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n1. Search Google for a Rails API https://www.google.com/search?q=rails+update_all\r\n2. Follow link for \"ActiveRecord::Relation - Rails API\"\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n\r\nFind documentation for the latest version of Rails. Currently `7.0.3.1`.\r\n\r\n`https://api.rubyonrails.org/classes/ActiveRecord/Relation.html`\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n\r\nFind documentation for the the very old version of `3.2.3`.\r\n\r\n`https://api.rubyonrails.org/v3.2.3/classes/ActiveRecord/Relation.html`\r\n\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45880/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45880/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45832","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45832/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45832/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45832/events","html_url":"https://github.com/rails/rails/issues/45832","id":1339487378,"node_id":"I_kwDNIULOT9b0kg","number":45832,"title":"MySQL 8.0 VARBINARY default value is hexadecimal","user":{"login":"HParker","id":4482399,"node_id":"MDQ6VXNlcjQ0ODIzOTk=","avatar_url":"https://avatars.githubusercontent.com/u/4482399?v=4","gravatar_id":"","url":"https://api.github.com/users/HParker","html_url":"https://github.com/HParker","followers_url":"https://api.github.com/users/HParker/followers","following_url":"https://api.github.com/users/HParker/following{/other_user}","gists_url":"https://api.github.com/users/HParker/gists{/gist_id}","starred_url":"https://api.github.com/users/HParker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HParker/subscriptions","organizations_url":"https://api.github.com/users/HParker/orgs","repos_url":"https://api.github.com/users/HParker/repos","events_url":"https://api.github.com/users/HParker/events{/privacy}","received_events_url":"https://api.github.com/users/HParker/received_events","type":"User","site_admin":true},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":309390193,"node_id":"MDU6TGFiZWwzMDkzOTAxOTM=","url":"https://api.github.com/repos/rails/rails/labels/MySQL","name":"MySQL","color":"fef2c0","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-08-15T20:42:09Z","updated_at":"2022-08-16T10:23:16Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Default values on VARBINARY columns changed behavior between MySQL 5.7 and 8.0\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"mysql2\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"mysql2\", database: \"adam_test\", prepared_statements: false, host: '127.0.0.1', port: 3307, user: \"root\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.binary :some_binary, null: false, limit: 1024, default: \"hello-world\"\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_mysql_defaults\r\n    post = Post.create!\r\n\r\n    mysql_vars = ActiveRecord::Base.connection.select_rows(\"SHOW VARIABLES LIKE '%version%'\")\r\n    puts mysql_vars.inspect\r\n    puts Post.column_defaults\r\n\r\n    # assert_equal \"0x68656C6C6F2D776F726C64\", post.some_binary # This passes\r\n    assert_equal \"hello-world\", post.some_binary # This fails\r\n\r\n    reloaded_post = Post.first\r\n    assert_equal \"hello-world\", reloaded_post.some_binary # this passes\r\n  end\r\nend\r\n```\r\n\r\nOn MySQL 5.7:\r\n\r\n```ruby\r\nPost.column_defaults # => {\"id\"=>nil, \"some_binary\"=>\"hello-world\"}\r\n```\r\n\r\nOn MySQL 8.0:\r\n\r\n```ruby\r\nPost.column_defaults # => {\"id\"=>nil, \"some_binary\"=>\"0x68656C6C6F2D776F726C64\"}\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe default value on binary columns should be Ruby strings, not ruby strings of hexadecimal.\r\n\r\n### Actual behavior\r\n\r\nThe column default in MySQL 8.0 is a hexadecimal string representing the binary data.\r\n\r\n### System configuration\r\n**Rails version**: main\r\n\r\n**Ruby version**: 3.1.0\r\n\r\nSome interesting MySQL forum posts about this behavior change:\r\n\r\n- https://forums.mysql.com/read.php?24,685577,685577\r\n- https://forums.mysql.com/read.php?20,698061,698061#msg-698061\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45832/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45832/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45830","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45830/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45830/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45830/events","html_url":"https://github.com/rails/rails/issues/45830","id":1338922250,"node_id":"I_kwDNIULOT85VCg","number":45830,"title":"ActiveRecord Rollbacks on errors which happen on commit","user":{"login":"Baxxx","id":17880055,"node_id":"MDQ6VXNlcjE3ODgwMDU1","avatar_url":"https://avatars.githubusercontent.com/u/17880055?v=4","gravatar_id":"","url":"https://api.github.com/users/Baxxx","html_url":"https://github.com/Baxxx","followers_url":"https://api.github.com/users/Baxxx/followers","following_url":"https://api.github.com/users/Baxxx/following{/other_user}","gists_url":"https://api.github.com/users/Baxxx/gists{/gist_id}","starred_url":"https://api.github.com/users/Baxxx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baxxx/subscriptions","organizations_url":"https://api.github.com/users/Baxxx/orgs","repos_url":"https://api.github.com/users/Baxxx/repos","events_url":"https://api.github.com/users/Baxxx/events{/privacy}","received_events_url":"https://api.github.com/users/Baxxx/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":126910270,"node_id":"MDU6TGFiZWwxMjY5MTAyNzA=","url":"https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps","name":"With reproduction steps","color":"009800","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2022-08-15T12:09:14Z","updated_at":"2022-08-25T13:32:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nIn some of our projects we use Postgres as database, and for some cases we deferred trigger constraints. These triggers fire up when `COMMIT` is called. Trigger can raise an error, which kills the transaction. ActiveRecord catches the error, and bubbles it up to developer, but it also sends `ROLLBACK` to Postgres, to which Postgres gives a warning that there is no transaction in progress.\r\n\r\nI didn't test this with sqlite3 or mysql.\r\n\r\nYou can see the reproduction script, and screenshot with the current behavior.\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", \"~> 7\"\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"logger\"\r\n\r\nlogger = Logger.new(STDOUT)\r\n\r\n# This connection will do for database-independent bug reports.\r\npg_opts = {adapter: \"postgresql\", database: \"ar_rollback_after_failed_commit_issue\"}\r\n\r\nActiveRecord::Base.establish_connection(pg_opts.except(:database))\r\nActiveRecord::Base.connection.drop_database(pg_opts[:database])\r\nActiveRecord::Base.connection.create_database(pg_opts[:database])\r\nlogger.info \"Database #{pg_opts[:database]} was (re)created.\"\r\n\r\nActiveRecord::Base.establish_connection(pg_opts)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  execute <<~SQL\r\n    CREATE FUNCTION perform_custom_validation()\r\n      RETURNS TRIGGER\r\n      LANGUAGE plpgsql\r\n      AS $$\r\n        DECLARE\r\n          total_invalid INTEGER;\r\n        BEGIN\r\n          SELECT COUNT(*) INTO total_invalid\r\n          FROM things\r\n          WHERE name = 'bad';\r\n\r\n          IF (total_invalid > 0) THEN\r\n            RAISE EXCEPTION 'There are bad things';\r\n          END IF;\r\n          RETURN NULL;\r\n        END;\r\n      $$;\r\n\r\n    CREATE TABLE \"things\" (\r\n      \"id\" bigserial primary key,\r\n      \"name\" character varying NOT NULL\r\n    );\r\n\r\n    CREATE CONSTRAINT\r\n      TRIGGER bank_transaction_rl_payment_date_validation\r\n      AFTER INSERT OR UPDATE ON things\r\n      DEFERRABLE INITIALLY DEFERRED\r\n      FOR EACH ROW EXECUTE FUNCTION perform_custom_validation();\r\n  SQL\r\nend\r\n\r\nclass Thing < ActiveRecord::Base\r\n  validates :name, presence: true\r\nend\r\n\r\n# All good\r\nlogger.info \"First transaction\"\r\nThing.create!(name: \"good\")\r\n\r\n# AR tries to commit, DB raises an error, AR tries to ROLLBACK, and PG gives a warning\r\nbegin\r\n  logger.info \"Second transaction\"\r\n  Thing.create!(name: \"bad\")\r\nrescue StandardError\r\n  # Doesn't matter\r\nend\r\n```\r\n\r\n### Expected behavior\r\nActiveRecord should not `ROLLBACK`, as there is no transaction in progress.\r\n\r\n### Actual behavior\r\nActiveRecord tries to `ROLLBACK`.\r\n\r\n![Screenshot from 2022-08-15 14-07-11](https://user-images.githubusercontent.com/17880055/184632335-0277cd27-4c7b-4b98-94a8-373be34a87ee.png)\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 2.7.5p203\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45830/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45830/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45823","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45823/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45823/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45823/events","html_url":"https://github.com/rails/rails/issues/45823","id":1337409694,"node_id":"I_kwDNIULOT7dAng","number":45823,"title":"Change Column with Raw Character Set Failure","user":{"login":"ahoglund","id":3407303,"node_id":"MDQ6VXNlcjM0MDczMDM=","avatar_url":"https://avatars.githubusercontent.com/u/3407303?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoglund","html_url":"https://github.com/ahoglund","followers_url":"https://api.github.com/users/ahoglund/followers","following_url":"https://api.github.com/users/ahoglund/following{/other_user}","gists_url":"https://api.github.com/users/ahoglund/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoglund/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoglund/subscriptions","organizations_url":"https://api.github.com/users/ahoglund/orgs","repos_url":"https://api.github.com/users/ahoglund/repos","events_url":"https://api.github.com/users/ahoglund/events{/privacy}","received_events_url":"https://api.github.com/users/ahoglund/received_events","type":"User","site_admin":true},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":126910270,"node_id":"MDU6TGFiZWwxMjY5MTAyNzA=","url":"https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps","name":"With reproduction steps","color":"009800","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-12T16:21:50Z","updated_at":"2022-08-12T20:47:38Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"With [this recent change to how collation is handled for column changes](https://github.com/rails/rails/pull/45744/files), there is now a potential for older migrations written in a specific manner to break if the `collation:` argument is not specific.\r\n\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\n# you need to install mysql locally for this to work.\r\n# on Mac:\r\n# brew install mysql\r\n# brew services start mysql\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"mysql2\"\r\n\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nclient = Mysql2::Client.new(host: 'localhost', username: \"root\")\r\nclient.query(\"DROP DATABASE test\")\r\nclient.query(\"CREATE DATABASE test\")\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"mysql2\", database: \"test\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :payments, force: true do |t|\r\n    t.string :description, \"varchar(64)\", null: false\r\n  end\r\nend\r\n\r\nclass Payment < ActiveRecord::Base\r\nend\r\n\r\nclass ChangeAmountToAddScale < ActiveRecord::Migration[7.1]\r\n  # This sets the default character set for the payments\r\n  # table to utf32 with a default COLLATION of utf32_general_ci.\r\n  # This can be verified by running the following query:\r\n  #\r\n  # SHOW CHARACTER SET;\r\n  #\r\n  connection.execute(<<~SQL)\r\n    ALTER TABLE payments CONVERT TO CHARACTER SET utf32\r\n  SQL\r\n\r\n  def change\r\n    reversible do |dir|\r\n      dir.up do\r\n        change_table(:payments, bulk: true) do |t|\r\n          # The default collation of utf32_general_ci\r\n          # will not be compatible with this ascii character set. \r\n          #\r\n          # when we build the column change now we automatically\r\n          # try to assign the previous collation to the column if no `collation:` is specified.\r\n          # \r\n          # https://github.com/rails/rails/pull/45744\r\n          #\r\n          # The workaround is to add `collation: 'ascii_bin'` or `collation: 'ascii_general_ci'` to the change.\r\n          #\r\n          # This isn't a huge deal and it has a workaround but it _will_ break\r\n          # anyone who has migrations that are written like this and upgrade to this version\r\n          # of Rails.\r\n          t.change :description, \"varchar(64) CHARACTER SET ascii\", null: false\r\n        end\r\n      end\r\n\r\n      dir.down do\r\n        change_table(:payments, bulk: true) do |t|\r\n          t.change :description, \"varchar(64)\", null: false\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_migration_up\r\n    ChangeAmountToAddScale.migrate(:up)\r\n    Payment.reset_column_information\r\n\r\n    assert_equal \"varchar\", Payment.columns.last.sql_type\r\n  end\r\n\r\n  def test_migration_down\r\n    ChangeAmountToAddScale.migrate(:down)\r\n    Payment.reset_column_information\r\n\r\n    assert_equal \"varchar\", Payment.columns.last.sql_type\r\n  end\r\nend\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nI would expect this to detect that the character set is being changed, and either \r\n\r\n1. change the collation to be compatible.\r\n2. At least give a clearer error that requires the `collation:` arg to be passed when the character set is being modified.\r\n\r\n### Actual behavior\r\n\r\nThis error:\r\n\r\n```\r\nError:\r\nBugTest#test_migration_up:\r\nActiveRecord::StatementInvalid: Mysql2::Error: COLLATION 'utf32_general_ci' is not valid for CHARACTER SET 'ascii'\r\n    test.rb:51:in `block (2 levels) in change'\r\n    test.rb:50:in `block in change'\r\n    test.rb:49:in `change'\r\n    test.rb:67:in `test_migration_up'\r\n```\r\n\r\n### System configuration\r\n**Rails version**: main\r\n**Ruby version**: ruby 3.1.1p18\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45823/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45823/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45822","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45822/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45822/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45822/events","html_url":"https://github.com/rails/rails/issues/45822","id":1337253221,"node_id":"I_kwDNIULOT7TdZQ","number":45822,"title":"ActiveRecord: Wrong results returned by ActiveRecord::Associations::Preloader when intermediate association is already preloaded.","user":{"login":"yopzer","id":6330271,"node_id":"MDQ6VXNlcjYzMzAyNzE=","avatar_url":"https://avatars.githubusercontent.com/u/6330271?v=4","gravatar_id":"","url":"https://api.github.com/users/yopzer","html_url":"https://github.com/yopzer","followers_url":"https://api.github.com/users/yopzer/followers","following_url":"https://api.github.com/users/yopzer/following{/other_user}","gists_url":"https://api.github.com/users/yopzer/gists{/gist_id}","starred_url":"https://api.github.com/users/yopzer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yopzer/subscriptions","organizations_url":"https://api.github.com/users/yopzer/orgs","repos_url":"https://api.github.com/users/yopzer/repos","events_url":"https://api.github.com/users/yopzer/events{/privacy}","received_events_url":"https://api.github.com/users/yopzer/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"jhawthorn","id":131752,"node_id":"MDQ6VXNlcjEzMTc1Mg==","avatar_url":"https://avatars.githubusercontent.com/u/131752?v=4","gravatar_id":"","url":"https://api.github.com/users/jhawthorn","html_url":"https://github.com/jhawthorn","followers_url":"https://api.github.com/users/jhawthorn/followers","following_url":"https://api.github.com/users/jhawthorn/following{/other_user}","gists_url":"https://api.github.com/users/jhawthorn/gists{/gist_id}","starred_url":"https://api.github.com/users/jhawthorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhawthorn/subscriptions","organizations_url":"https://api.github.com/users/jhawthorn/orgs","repos_url":"https://api.github.com/users/jhawthorn/repos","events_url":"https://api.github.com/users/jhawthorn/events{/privacy}","received_events_url":"https://api.github.com/users/jhawthorn/received_events","type":"User","site_admin":true},"assignees":[{"login":"jhawthorn","id":131752,"node_id":"MDQ6VXNlcjEzMTc1Mg==","avatar_url":"https://avatars.githubusercontent.com/u/131752?v=4","gravatar_id":"","url":"https://api.github.com/users/jhawthorn","html_url":"https://github.com/jhawthorn","followers_url":"https://api.github.com/users/jhawthorn/followers","following_url":"https://api.github.com/users/jhawthorn/following{/other_user}","gists_url":"https://api.github.com/users/jhawthorn/gists{/gist_id}","starred_url":"https://api.github.com/users/jhawthorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhawthorn/subscriptions","organizations_url":"https://api.github.com/users/jhawthorn/orgs","repos_url":"https://api.github.com/users/jhawthorn/repos","events_url":"https://api.github.com/users/jhawthorn/events{/privacy}","received_events_url":"https://api.github.com/users/jhawthorn/received_events","type":"User","site_admin":true}],"milestone":null,"comments":1,"created_at":"2022-08-12T14:06:55Z","updated_at":"2022-08-18T23:36:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"activerecord\", \"7.0.3.1\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :a_records, force: true\r\n\r\n  create_table :b_records, force: true do |t|\r\n    t.references :a_record\r\n    t.references :c_record\r\n  end\r\n\r\n  create_table :c_records, force: true\r\n\r\n  create_table :d_records, force: true do |t|\r\n    t.references :c_record\r\n  end\r\nend\r\n\r\nclass ARecord < ActiveRecord::Base\r\n  has_one :b_record\r\n  has_one :c_record, through: :b_record\r\n  has_many :d_records, through: :c_record\r\nend\r\n\r\nclass BRecord < ActiveRecord::Base\r\n  belongs_to :a_record\r\n  belongs_to :c_record\r\nend\r\n\r\nclass CRecord < ActiveRecord::Base\r\n  has_one :b_record\r\n  has_many :d_records\r\nend\r\n\r\nclass DRecord < ActiveRecord::Base\r\n  belongs_to :c_record\r\nend\r\n\r\na = ARecord.create!\r\nc = CRecord.create!\r\nBRecord.create!(a_record: a, c_record: c)\r\nDRecord.create!(c_record: c)\r\nDRecord.create!(c_record: c)\r\n\r\na.reload\r\na.c_record # NB: if removed this works\r\n\r\n::ActiveRecord::Associations::Preloader.new(records: [a], associations: :d_records).call\r\nputs({ record_ids: a.d_records.map(&:id), size: a.d_records.size })\r\n```\r\n\r\n### Expected behavior\r\nTwo records should be loaded:\r\n`{:record_ids=>[1, 2], :size=>2}`\r\n\r\n### Actual behavior\r\nNo records are loaded:\r\n`{:record_ids=>[], :size=>0}`\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 2.7.5\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45822/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45822/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45817","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45817/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45817/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45817/events","html_url":"https://github.com/rails/rails/issues/45817","id":1336797388,"node_id":"I_kwDNIULOT63ozA","number":45817,"title":"Value of attribute default proc is shared between instances after dup + dirty tracking","user":{"login":"quadule","id":15299,"node_id":"MDQ6VXNlcjE1Mjk5","avatar_url":"https://avatars.githubusercontent.com/u/15299?v=4","gravatar_id":"","url":"https://api.github.com/users/quadule","html_url":"https://github.com/quadule","followers_url":"https://api.github.com/users/quadule/followers","following_url":"https://api.github.com/users/quadule/following{/other_user}","gists_url":"https://api.github.com/users/quadule/gists{/gist_id}","starred_url":"https://api.github.com/users/quadule/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/quadule/subscriptions","organizations_url":"https://api.github.com/users/quadule/orgs","repos_url":"https://api.github.com/users/quadule/repos","events_url":"https://api.github.com/users/quadule/events{/privacy}","received_events_url":"https://api.github.com/users/quadule/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-12T06:16:00Z","updated_at":"2022-08-15T15:56:11Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWhen an attribute without a database column defines a default proc, `dup`ing a model in which the default wasn't accessed passes the unevaluated `UserProvidedDefault` attribute to the new instance as the attribute's original value. Checking the new attribute for changes will then memoize the value in the original attribute definition, making it the default value in every new model instance afterward.\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n  gem \"rails\", github: \"rails/rails\", ref: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Schema.define do\r\n  create_table :cats do |t|\r\n    t.string :name\r\n  end\r\nend\r\n\r\nclass Cat < ActiveRecord::Base\r\n  attribute :sounds, default: -> { [] }\r\nend\r\n\r\nclass VirtualAttributeTest < Minitest::Test\r\n  def test_virtual_attribute_defaults_are_independent\r\n    Cat.new.dup.save!\r\n    Cat.new.sounds << \"meow\"\r\n    refute_same Cat.new.sounds, Cat.new.sounds\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nEach new instance should get a new default value from the proc.\r\n\r\n### Actual behavior\r\nAfter using dirty tracking on a duplicated instance with an uncalled proc default, all new instances of a model receive the same default value and share any changes made to it.\r\n\r\n### Affected versions\r\nThis seems to date back quite a while; the test fails on the main branch back to 5-1-stable.\r\n\r\n### Credits\r\nThanks to @GBH for originally discovering this bug.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45817/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45817/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45794","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45794/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45794/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45794/events","html_url":"https://github.com/rails/rails/issues/45794","id":1332999733,"node_id":"I_kwDNIULOT3P2NQ","number":45794,"title":"Action Cable client goes in a connection loop if you subscribe multiple times to the same channel","user":{"login":"ProGM","id":5167659,"node_id":"MDQ6VXNlcjUxNjc2NTk=","avatar_url":"https://avatars.githubusercontent.com/u/5167659?v=4","gravatar_id":"","url":"https://api.github.com/users/ProGM","html_url":"https://github.com/ProGM","followers_url":"https://api.github.com/users/ProGM/followers","following_url":"https://api.github.com/users/ProGM/following{/other_user}","gists_url":"https://api.github.com/users/ProGM/gists{/gist_id}","starred_url":"https://api.github.com/users/ProGM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ProGM/subscriptions","organizations_url":"https://api.github.com/users/ProGM/orgs","repos_url":"https://api.github.com/users/ProGM/repos","events_url":"https://api.github.com/users/ProGM/events{/privacy}","received_events_url":"https://api.github.com/users/ProGM/received_events","type":"User","site_admin":false},"labels":[{"id":300028327,"node_id":"MDU6TGFiZWwzMDAwMjgzMjc=","url":"https://api.github.com/repos/rails/rails/labels/actioncable","name":"actioncable","color":"bfdadc","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-09T09:48:36Z","updated_at":"2022-08-17T17:57:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\nYou can just start from a fresh `rails new [project-name]` installation.\r\nChannel code:\r\n```ruby\r\nclass ArticleChannel < ApplicationCable::Channel\r\n  def subscribed\r\n    stream_from \"ArticleChannel\"\r\n  end\r\n\r\n  def unsubscribed\r\n    # Any cleanup needed when channel is unsubscribed\r\n  end\r\nend\r\n```\r\n\r\nJavascript code:\r\n```javascript\r\nimport consumer from \"channels/consumer\"\r\n\r\nfunction subscribe() {\r\n\treturn consumer.subscriptions.create('ArticleChannel', {\r\n\t\tconnected() {\r\n\t\t\tconsole.log('connected');\r\n\t\t\t// Called when the subscription is ready for use on the server\r\n\t\t},\r\n\r\n\t\tdisconnected() {\r\n\t\t\tconsole.log('disconnected');\r\n\t\t\t// Called when the subscription has been terminated by the server\r\n\t\t},\r\n\r\n\t\treceived(data) {\r\n\t\t\tconsole.log('received', data);\r\n\t\t\t// Called when there's incoming data on the websocket for this channel\r\n\t\t}\r\n\t});\r\n}\r\n\r\nsetTimeout(() => {\r\n\tsubscribe();\r\n}, 3000);\r\n\r\nsetTimeout(() => {\r\n\tsubscribe();\r\n}, 4000);\r\n```\r\n\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nAny of these options could be considered an expected behavior:\r\n* Everything just works™, both subscriptions receive notification from that channel and no error is raised\r\n* The second `subscription.create(...)` raises some kind of error, notifying that the channel is already connected\r\n* The second `subscription.create(...)` returns the same instance of Subscription and writes a `console.warning` in console\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nThe second subscriptions triggers a connection loop.\r\n\r\nExample logs with `ActionCable.logger.enabled = true`.\r\n\r\n```\r\n[ActionCable] Opening WebSocket, current state is null, subprotocols: actioncable-v1-json,actioncable-unsupported 1660037219747\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] ConnectionMonitor started. stale threshold = 6 s 1660037219748\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] WebSocket onopen event, using 'actioncable-v1-json' subprotocol 1660037219758\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] ConnectionMonitor recorded connect 1660037219759\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor guaranteeing {\"channel\":\"ArticleChannel\"} 1660037219760\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] Subscription confirmed {\"channel\":\"ArticleChannel\"} 1660037219762\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor forgetting {\"channel\":\"ArticleChannel\"} 1660037219762\r\narticle_channel-b29f3f7bf31169dfadd26c7747a46706d4992a1fd842de8268f206c5f0a0fe45.js:6 connected\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor guaranteeing {\"channel\":\"ArticleChannel\"} 1660037220744\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221248\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221248\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n... and so on, forever...\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 3.1\r\n\r\n### Possible solutions\r\nThis issue happens because the identifier of both subscriptions is the same. Since Rails (ActionCable) doesn't answer to any subsequential command \"subscribe\" from the same client (in this case: `{\"command\":\"subscribe\",\"identifier\":\"{\\\"channel\\\":\\\"ArticleChannel\\\"}\"}`), the `SubscriptionGuarantor` considers the connection failed and [retries to connect after 500ms](https://github.com/rails/rails/blob/8994f09dd2f6ae363e74d8ee3b24700d9db94a16/actioncable/app/assets/javascripts/actioncable.esm.js#L351).\r\n\r\nI see various options to fix this:\r\n* Raise an exception when trying to create a subscription with the same identifier\r\n* Add a random/uuid to the identifier when connecting, so two connection would not share the same identifier? (I've already tested it, and it seems to fix)\r\n\r\nWould you accept a PR from me regarding this?","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45794/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45794/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45791","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45791/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45791/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45791/events","html_url":"https://github.com/rails/rails/issues/45791","id":1332570977,"node_id":"I_kwDNIULOT21rYQ","number":45791,"title":"Google::Apis::ClientError raised when using ActiveStorage to generate signed URLs to access a file in a GCS bucket with GKE Workload Identity","user":{"login":"danielyazbek","id":18390164,"node_id":"MDQ6VXNlcjE4MzkwMTY0","avatar_url":"https://avatars.githubusercontent.com/u/18390164?v=4","gravatar_id":"","url":"https://api.github.com/users/danielyazbek","html_url":"https://github.com/danielyazbek","followers_url":"https://api.github.com/users/danielyazbek/followers","following_url":"https://api.github.com/users/danielyazbek/following{/other_user}","gists_url":"https://api.github.com/users/danielyazbek/gists{/gist_id}","starred_url":"https://api.github.com/users/danielyazbek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielyazbek/subscriptions","organizations_url":"https://api.github.com/users/danielyazbek/orgs","repos_url":"https://api.github.com/users/danielyazbek/repos","events_url":"https://api.github.com/users/danielyazbek/events{/privacy}","received_events_url":"https://api.github.com/users/danielyazbek/received_events","type":"User","site_admin":false},"labels":[{"id":664533972,"node_id":"MDU6TGFiZWw2NjQ1MzM5NzI=","url":"https://api.github.com/repos/rails/rails/labels/activestorage","name":"activestorage","color":"bfd4f2","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-09T01:05:08Z","updated_at":"2022-08-09T15:53:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nConfigure ActiveStorage with GKE Workload identity (as documented [here](https://edgeguides.rubyonrails.org/active_storage_overview.html#google-cloud-storage-service)):\r\n\r\n```ruby\r\ngoogle:\r\n  service: GCS\r\n  iam: true\r\n  project: <%= ENV['ACTIVE_STORAGE_PROJECT'] %>\r\n  bucket: <%= ENV['ACTIVE_STORAGE_BUCKET'] %>\r\n```\r\n\r\nDefine a class:\r\n```ruby\r\nclass Transaction < ApplicationRecord\r\n  has_one_attached :csv_report\r\nend\r\n```\r\n\r\nWrite something to ActiveStorage:\r\n```ruby\r\nt = Transaction.create\r\nt.csv_report.attach(io: StringIO.new(\"A,B,C\"), filename: 'test.csv')\r\n```\r\n\r\nGenerate a Signed URL\r\n```ruby\r\nRails.application.routes.url_helpers.rails_blob_url(Transaction.last.csv_report, disposition: 'attachment')\r\n```\r\n\r\nPaste the generated URL into a browser\r\n\r\n### Expected behavior\r\nActiveRecord provides the attachment\r\n\r\n### Actual behavior\r\nError is raised:\r\n\r\n```\r\nGoogle::Apis::ClientError (Invalid request):\r\ngems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:236:in `check_status': Invalid request (Google::Apis::ClientError)\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/api_command.rb:134:in `check_status'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:199:in `process_response'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:318:in `execute_once'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:118:in `block (2 levels) in execute'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:61:in `block in retriable'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `times'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `retriable'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:115:in `block in execute'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:61:in `block in retriable'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `times'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `retriable'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:105:in `execute'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/base_service.rb:397:in `execute_or_queue_command'\r\n    from gems/google-apis-iamcredentials_v1-0.13.0/lib/google/apis/iamcredentials_v1/service.rb:158:in `sign_service_account_blob'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service/gcs_service.rb:232:in `block in signer'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file/signer_v2.rb:135:in `generate_signature'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file/signer_v2.rb:128:in `signed_url'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file.rb:1801:in `signed_url'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service/gcs_service.rb:160:in `private_url'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:123:in `block in url'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications/instrumenter.rb:24:in `instrument'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications.rb:206:in `instrument'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:163:in `instrument'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:118:in `url'\r\n    from gems/activestorage-7.0.3.1models/active_storage/blob.rb:217:in `url'\r\n    from gems/activestorage-7.0.3.1controllers/active_storage/blobs/redirect_controller.rb:14:in `show'\r\n```\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 3.1.2\r\n\r\n**google-cloud-storage gem version:** 1.38.0\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45791/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45791/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45778","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45778/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45778/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45778/events","html_url":"https://github.com/rails/rails/issues/45778","id":1330360134,"node_id":"I_kwDNIULOT0uvRg","number":45778,"title":"ActiveStorage attachments are lost when casting using Becomes","user":{"login":"markedmondson","id":1653699,"node_id":"MDQ6VXNlcjE2NTM2OTk=","avatar_url":"https://avatars.githubusercontent.com/u/1653699?v=4","gravatar_id":"","url":"https://api.github.com/users/markedmondson","html_url":"https://github.com/markedmondson","followers_url":"https://api.github.com/users/markedmondson/followers","following_url":"https://api.github.com/users/markedmondson/following{/other_user}","gists_url":"https://api.github.com/users/markedmondson/gists{/gist_id}","starred_url":"https://api.github.com/users/markedmondson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markedmondson/subscriptions","organizations_url":"https://api.github.com/users/markedmondson/orgs","repos_url":"https://api.github.com/users/markedmondson/repos","events_url":"https://api.github.com/users/markedmondson/events{/privacy}","received_events_url":"https://api.github.com/users/markedmondson/received_events","type":"User","site_admin":false},"labels":[{"id":664533972,"node_id":"MDU6TGFiZWw2NjQ1MzM5NzI=","url":"https://api.github.com/repos/rails/rails/labels/activestorage","name":"activestorage","color":"bfd4f2","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-05T20:19:16Z","updated_at":"2022-08-09T18:05:34Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\nCreate an ActiveRecord model with an ActiveStorage relation. Initialize and add the associated attachment. Cast the object to another subclassed model, the associated attachment is lost.\r\n\r\n```ruby\r\nunless File.exist?('Gemfile')\r\n    File.write('Gemfile', <<-GEMFILE)\r\n    source 'https://rubygems.org'\r\n    gem 'rails', '~> 6.1'\r\n    gem 'sqlite3'\r\n    GEMFILE\r\n\r\n    system 'bundle'\r\nend\r\n\r\nrequire 'bundler'\r\nBundler.setup(:default)\r\n\r\nrequire 'active_record'\r\nrequire 'active_storage/engine'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  config.hosts << 'example.org'\r\n  config.eager_load = false\r\n  config.session_store :cookie_store, key: 'cookie_store_key'\r\n  secrets.secret_key_base = 'secret_key_base'\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  config.active_storage.service = :local\r\n  config.active_storage.service_configurations = {\r\n    local: {\r\n      root: Dir.tmpdir,\r\n      service: 'Disk'\r\n    }\r\n  }\r\nend\r\n\r\nENV['DATABASE_URL'] = 'sqlite3::memory:'\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\nRails.application.initialize!\r\n\r\nrequire ActiveStorage::Engine.root.join('db/migrate/20170806125915_create_active_storage_tables.rb').to_s\r\n\r\nActiveRecord::Schema.define do\r\n  CreateActiveStorageTables.new.change\r\n\r\n  create_table :posts do |t|\r\n    t.string :title\r\n    t.string :text\r\n  end\r\n\r\n  create_table :comments do |t|\r\n    t.belongs_to :post\r\n    t.string :text\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post\r\n  has_one_attached :image\r\nend\r\n\r\nclass ModeratedComment < Comment; end\r\n\r\nclass BugTest < Minitest::Test\r\n  def setup\r\n    @post = Post.create(title: 'Post', text: 'Welcome')\r\n  end\r\n\r\n  def test_association\r\n    comment = @post.comments.new(text: 'I do not like this')\r\n\r\n    moderated_comment = comment.becomes(ModeratedComment)\r\n\r\n    assert_equal @post, moderated_comment.post # Pass\r\n  end\r\n\r\n  def test_attachment\r\n    file = ActiveStorage::Blob.create_and_upload!(\r\n      content_type: \"image/png\",\r\n      filename: \"image.png\",\r\n      io: ::StringIO.new(\"png\"),\r\n    )\r\n    comment = @post.comments.new(text: 'I do not like this', image: file)\r\n\r\n    moderated_comment = comment.becomes(ModeratedComment)\r\n\r\n    assert moderated_comment.image.attached? # Fail\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nWhen casting an ActiveRecord to another model, I expect the associations to be copied thus I expect attached ActiveStorage association assets to be copied.\r\n\r\n### Actual behavior\r\nPreviously attached ActiveStorage associated objects are lost on the original object.\r\n\r\n### System configuration\r\n**Rails version**: 6.1.6.1\r\n\r\n**Ruby version**: 3.0.4\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45778/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45778/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45775","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45775/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45775/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45775/events","html_url":"https://github.com/rails/rails/issues/45775","id":1330225377,"node_id":"I_kwDNIULOT0mg4Q","number":45775,"title":"Uniqueness validation on association does not use the correct primary key","user":{"login":"mikeletscher","id":6666411,"node_id":"MDQ6VXNlcjY2NjY0MTE=","avatar_url":"https://avatars.githubusercontent.com/u/6666411?v=4","gravatar_id":"","url":"https://api.github.com/users/mikeletscher","html_url":"https://github.com/mikeletscher","followers_url":"https://api.github.com/users/mikeletscher/followers","following_url":"https://api.github.com/users/mikeletscher/following{/other_user}","gists_url":"https://api.github.com/users/mikeletscher/gists{/gist_id}","starred_url":"https://api.github.com/users/mikeletscher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikeletscher/subscriptions","organizations_url":"https://api.github.com/users/mikeletscher/orgs","repos_url":"https://api.github.com/users/mikeletscher/repos","events_url":"https://api.github.com/users/mikeletscher/events{/privacy}","received_events_url":"https://api.github.com/users/mikeletscher/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-05T18:10:22Z","updated_at":"2022-08-09T14:52:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nI'm not _entirely_ sure if this is considered a bug, or intended behavior that's not well-documented for `uniqueness` validations on associations.\r\n\r\nI'm happy to help improve the documentation on this if that would be the most helpful way forward, or if this _is_ considered a bug, I can take a stab at a PR. \r\n\r\nIt looks like the issue is that `build_relation` on the uniqueness validator calls [`bind_attribute` on `ActiveRecord::Relation`](https://github.com/rails/rails/blob/408d061a80a49878ad26b305616ed9ba88ee1411/activerecord/lib/active_record/relation.rb#L45), which properly takes into account the reflection's foreign_key, but not primary key if it's been overridden. \r\n\r\nHere's a test that reproduces the issue:\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire 'bundler/inline'\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem 'activerecord', '~> 7.0.3.1'\r\n  gem 'sqlite3'\r\nend\r\n\r\nrequire 'active_record'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(\r\n  adapter: 'sqlite3',\r\n  database: ':memory:'\r\n)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :prescriptions, force: true do |t|\r\n    t.string :rx_number\r\n  end\r\n\r\n  create_table :fills, force: true do |t|\r\n    t.string :rx_number\r\n  end\r\nend\r\n\r\nclass Prescription < ActiveRecord::Base\r\n  has_many :fills, foreign_key: :rx_number, primary_key: :rx_number\r\nend\r\n\r\nclass Fill < ActiveRecord::Base\r\n  belongs_to :prescription, foreign_key: :rx_number, primary_key: :rx_number\r\n\r\n  validates :prescription, uniqueness: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_fill_unique_by_rx_number\r\n    Fill.create!(rx_number: '1234')\r\n    prescription = Prescription.create!(rx_number: '1234')\r\n    new_fill = prescription.fills.new\r\n    refute new_fill.save\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe uniqueness validation query would use the `rx_number` value of the `Prescription` to query for an existing `Fill` since that is what is set as the associations `primary_key`. \r\n\r\n### Actual behavior\r\nThe uniqueness validation query uses the `id` value of the `Prescription` to query for existing fills, disregarding the association's overridden `primary_key`.\r\n\r\nThis test passes if I patch bind_attribute to read the primary key from the reflection instead of directly from the reflection's klass:\r\n\r\n```ruby\r\nmodule ActiveRecord\r\n  # = Active Record \\Relation\r\n  class Relation\r\n    def bind_attribute(name, value) # :nodoc:\r\n      if reflection = klass._reflect_on_association(name)\r\n        name = reflection.foreign_key\r\n        primary_key = reflection.association_primary_key || reflection.klass.primary_key\r\n        value = value.read_attribute(primary_key) unless value.nil?\r\n      end\r\n\r\n      attr = table[name]\r\n      bind = predicate_builder.build_bind_attribute(attr.name, value)\r\n      yield attr, bind\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nWe were able to work around this by adding the uniqueness validation to the `rx_number` attribute instead of the association. If this is the desired way to handle this, I can open a PR to add a note about this to the docs, as it took us by surprise that validation on the association wouldn't use the defined key to get the value to query.\r\n\r\n### System configuration\r\n**Rails version**: `7.0.3.1`\r\n\r\n**Ruby version**: `3.1.2`\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45775/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45775/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45766","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45766/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45766/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45766/events","html_url":"https://github.com/rails/rails/issues/45766","id":1329650798,"node_id":"I_kwDNIULOT0Dcbg","number":45766,"title":"Active Model Dirty: attribute_changed? options (from/to) do not accept symbol","user":{"login":"thomasvanholder","id":36309895,"node_id":"MDQ6VXNlcjM2MzA5ODk1","avatar_url":"https://avatars.githubusercontent.com/u/36309895?v=4","gravatar_id":"","url":"https://api.github.com/users/thomasvanholder","html_url":"https://github.com/thomasvanholder","followers_url":"https://api.github.com/users/thomasvanholder/followers","following_url":"https://api.github.com/users/thomasvanholder/following{/other_user}","gists_url":"https://api.github.com/users/thomasvanholder/gists{/gist_id}","starred_url":"https://api.github.com/users/thomasvanholder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomasvanholder/subscriptions","organizations_url":"https://api.github.com/users/thomasvanholder/orgs","repos_url":"https://api.github.com/users/thomasvanholder/repos","events_url":"https://api.github.com/users/thomasvanholder/events{/privacy}","received_events_url":"https://api.github.com/users/thomasvanholder/received_events","type":"User","site_admin":false},"labels":[{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-08-05T08:54:51Z","updated_at":"2022-08-07T20:25:55Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nThe `attribute_changed?` receives optional options, such as `from` and `to`. Each option key is passed a value. Only string values are accepted, and symbols are not recognized. This is inconsistent behavior as updating a column using the `update` method does accept both a string and a symbol.\r\n \r\n Source code: [attribute_changed?](https://github.com/rails/rails/blob/04972d9b9ef60796dc8f0917817b5392d61fcf09/activemodel/lib/active_model/dirty.rb#L178) \r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"debug\"\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.column :status, :integer, default: 0\r\n    t.date :review_date\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  enum :status, {draft: 0, published: 1}\r\n\r\n  before_update :set_review_date\r\n\r\n  def set_review_date\r\n    # when \"published\" is set as a string, the test correcty passes.\r\n    if status_changed?(to: :published)\r\n      self.review_date = Date.today\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_set_status\r\n    post = Post.create!\r\n    post.update(status: :published)\r\n\r\n    assert_equal \"published\", post.status\r\n  end\r\n\r\n  def test_sets_review_date\r\n    post = Post.create!\r\n    post.published!\r\n\r\n    assert_equal \"published\", post.status\r\n    assert_equal Date.today, post.review_date\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe value of the optional arguments `from` and `to` accepts both a string or symbol.\r\n\r\n### Actual behavior\r\nWhen options, such as `from` and `to` are passed to the [attribute_changed?](https://github.com/rails/rails/blob/04972d9b9ef60796dc8f0917817b5392d61fcf09/activemodel/lib/active_model/dirty.rb#L178) method the arguments are not recognized when passed as a symbol.\r\n\r\n### System configuration\r\n**Rails version**: `Rails 7.0.3`\r\n\r\n**Ruby version**: `ruby 3.1.2`\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45766/reactions","total_count":2,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45766/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45758","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45758/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45758/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45758/events","html_url":"https://github.com/rails/rails/issues/45758","id":1327892229,"node_id":"I_kwDNIULOTyYHBQ","number":45758,"title":"ActiveRecord 6.1 and JSONB: Incorrect results value/type when using both arrow operator and double arrow operator in the same SELECT statement","user":{"login":"shhavel","id":1169424,"node_id":"MDQ6VXNlcjExNjk0MjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1169424?v=4","gravatar_id":"","url":"https://api.github.com/users/shhavel","html_url":"https://github.com/shhavel","followers_url":"https://api.github.com/users/shhavel/followers","following_url":"https://api.github.com/users/shhavel/following{/other_user}","gists_url":"https://api.github.com/users/shhavel/gists{/gist_id}","starred_url":"https://api.github.com/users/shhavel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shhavel/subscriptions","organizations_url":"https://api.github.com/users/shhavel/orgs","repos_url":"https://api.github.com/users/shhavel/repos","events_url":"https://api.github.com/users/shhavel/events{/privacy}","received_events_url":"https://api.github.com/users/shhavel/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-08-03T23:42:39Z","updated_at":"2022-08-05T22:26:04Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Issue Description\r\n\r\nGenerally when using JSONB operators `->` (arrow operator) and `->>` (double arrow operator) in SELECT statement, \r\nActiveRecord returns correct result types: objects for `->` operator and string for `->>` operator.\r\nBut when using both operators in the same select statement, the returned results may have an unexpected type or be `nil`.\r\n\r\n### Steps to reproduce with Expected behaviour in tests and Actual behaviour in comments\r\n\r\n```ruby\r\n# file: activerecord_6_1_jsonb_test.rb\r\n# run: ruby activerecord_6_1_jsonb_test.rb\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"activerecord\", \"6.1.6.1\" # the same behaviour for version \"7.0.3.1\"\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\npg_opts = {adapter: \"postgresql\", database: \"jsonb_activerecord_issue\"}\r\nbegin\r\n  ActiveRecord::Base.establish_connection(pg_opts.except(:database))\r\n  ActiveRecord::Base.connection.create_database(pg_opts[:database])\r\n  puts \"Database #{pg_opts[:database]} was created.\"\r\nrescue => ActiveRecord::DatabaseAlreadyExists\r\n  puts \"Database #{pg_opts[:database]} alredy exists.\"\r\nend\r\nActiveRecord::Base.establish_connection(pg_opts)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :entries, force: true do |t|\r\n    t.jsonb :value\r\n  end\r\nend\r\n\r\nclass Entry < ActiveRecord::Base\r\nend\r\nEntry.create(value: {a: \"a\", b: \"b\", c: {}})\r\n\r\nclass BugTest < Minitest::Test\r\n  # passed\r\n  def test_jsonb_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->'a', value->'b'\"))\r\n    assert_equal [[{}, \"b\"]], Entry.pluck(Arel.sql(\"value->'c', value->'b'\"))\r\n  end\r\n\r\n  # passed\r\n  def test_jsonb_double_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'a', value->>'b'\"))\r\n    assert_equal [[\"{}\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'c', value->>'b'\"))\r\n  end\r\n\r\n  # failed (this test results are differ in activerecord 6.0)\r\n  def test_jsonb_arrow_operator_and_double_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->'a', value->>'b'\")) # Actual [[\"a\", nil]]\r\n    assert_equal [[{}, \"b\"]], Entry.pluck(Arel.sql(\"value->'c', value->>'b'\")) # Actual [[{}, nil]]\r\n  end\r\n\r\n  # failed\r\n  def test_jsonb_double_arrow_operator_and_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'a', value->'b'\")) # Actual [[nil, \"b\"]]\r\n    assert_equal [[\"{}\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'c', value->'b'\")) # Actual [[{}, \"b\"]]\r\n  end\r\nend\r\n```\r\n\r\n### PostgreSQL results \r\n\r\n```sql\r\nSELECT\r\n  pg_typeof(value->'a'), value->'a',\r\n  pg_typeof(value->'b'), value->'b',\r\n  pg_typeof(value->'c'), value->'c',\r\n  pg_typeof(value->>'a'), value->>'a',\r\n  pg_typeof(value->>'b'), value->>'b',\r\n  pg_typeof(value->>'c'), value->>'c'\r\nFROM \"entries\";\r\n\r\n pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column?\r\n-----------+----------+-----------+----------+-----------+----------+-----------+----------+-----------+----------+-----------+----------\r\n jsonb     | \"a\"      | jsonb     | \"b\"      | jsonb     | {}       | text      | a        | text      | b        | text      | {}\r\n(1 row)\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 6.1.6.1\r\n\r\n**Ruby version**: 3.1.0\r\n\r\n### Similar issue in different versions of ActiveRecord\r\n\r\nThere is a similar issue but with slightly different behaviour in AR 6.0. Created another issue: #45757\r\n\r\nPlease confirm or comment on the expected behaviour.\r\nThank you.\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45758/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45758/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45750","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45750/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45750/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45750/events","html_url":"https://github.com/rails/rails/issues/45750","id":1327484205,"node_id":"I_kwDNIULOTx_NLQ","number":45750,"title":"Running `rails test` doesn't automatically load any custom tasks under `lib/tasks`","user":{"login":"onlynone","id":833690,"node_id":"MDQ6VXNlcjgzMzY5MA==","avatar_url":"https://avatars.githubusercontent.com/u/833690?v=4","gravatar_id":"","url":"https://api.github.com/users/onlynone","html_url":"https://github.com/onlynone","followers_url":"https://api.github.com/users/onlynone/followers","following_url":"https://api.github.com/users/onlynone/following{/other_user}","gists_url":"https://api.github.com/users/onlynone/gists{/gist_id}","starred_url":"https://api.github.com/users/onlynone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/onlynone/subscriptions","organizations_url":"https://api.github.com/users/onlynone/orgs","repos_url":"https://api.github.com/users/onlynone/repos","events_url":"https://api.github.com/users/onlynone/events{/privacy}","received_events_url":"https://api.github.com/users/onlynone/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-03T16:16:38Z","updated_at":"2022-08-03T18:09:40Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n1. Create the file `lib/tasks/test.rake` with the content:\r\n```ruby\r\nENV[\"test.rake\"] = \"yes\"\r\ntask :custom_task do\r\n  ENV[\"custom_task\"] = \"yes\"\r\nend\r\n\r\ntask :test => [:custom_task]\r\n```\r\n2. Create a test file at `test/unit/rails_test_test.rb` with the content:\r\n```ruby\r\nclass RailsTestTest < ActiveSupport::TestCase\r\n  test \"test.rake is in the environment\" do\r\n    assert_equal('yes', ENV['test.rake'])\r\n  end\r\n\r\n  test \"custom_task is in the environment\" do\r\n    assert_equal('yes', ENV['custom_task'])\r\n  end\r\nend\r\n```\r\n3. Run `bin/rails test test/unit/rails_test_test.rb`\r\n4. Run `bin/rake test test/unit/rails_test_test.rb`\r\n\r\n### Expected behavior\r\nBoth `rails test` and `rake test` should succeed.\r\n\r\n### Actual behavior\r\nRunning the tests with `bin/rake` succeeds with the output:\r\n```\r\nbin/rake test test/unit/rails_test_test.rb\r\nRunning via Spring preloader in process 59092\r\nRun options: --seed 6948\r\n\r\n# Running:\r\n\r\n..\r\n\r\nFinished in 0.000943s, 2120.8907 runs/s, 2120.8907 assertions/s.\r\n2 runs, 2 assertions, 0 failures, 0 errors, 0 skips\r\n```\r\n\r\nWhile running with `bin/rails` fails with the output:\r\n\r\n```\r\nRunning via Spring preloader in process 58735\r\nRun options: --seed 33633\r\n\r\n# Running:\r\n\r\nF\r\n\r\nFailure:\r\nRailsTestTest#test_custom_task_is_in_the_environment [/Users/steven/projects/rails_test_tasks/test/unit/rails_test_test.rb:7]:\r\nExpected: \"yes\"\r\n  Actual: nil\r\n\r\n\r\nrails test test/unit/rails_test_test.rb:6\r\n\r\nF\r\n\r\nFailure:\r\nRailsTestTest#test_test.rake_is_in_the_environment [/Users/steven/projects/rails_test_tasks/test/unit/rails_test_test.rb:3]:\r\nExpected: \"yes\"\r\n  Actual: nil\r\n\r\n\r\nrails test test/unit/rails_test_test.rb:2\r\n\r\n\r\n\r\nFinished in 0.001378s, 1451.3788 runs/s, 1451.3788 assertions/s.\r\n2 runs, 2 assertions, 2 failures, 0 errors, 0 skips\r\n```\r\n\r\nBecause the file `lib/tasks/test.rake` is never loaded.\r\n\r\nIt seems like rails will only end up loading custom tasks if it can't find the command being run on the command line in its own list of built-in commands. When it can't find the command, it will load the local `Rakefile` via `find_by_namespace(\"rake\").perform(full_namespace, args, config)` in `Rails::Command.invoke`. And the local `Rakefile` usually has `Rails.application.load_tasks` and that loads any custom tasks under `lib/tasks`.\r\n\r\nFor example, this happens when the `ActiveRecord` migration exec's out to call: `bin/rails db:test:prepare`. That task is apparently not a built-in rails task, so the `Rakefile` and all custom tasks *do* end up getting loaded for that one.\r\n\r\n(As an aside here, I don't fully understand the difference between the built-in rails tasks and the ones that have to be searched for via rake. I also don't understand why the migration code needs to fork a separate process to do `db:test:prepare`. That task just ends up doing `db_namespace[\"test:load\"].invoke`. Why couldn't the `db:test:prepare` tasks simply be invoked the same way in the same process?)\r\n\r\n### System configuration\r\n**Rails version**: 6.0.5\r\n\r\n**Ruby version**: 2.6.5\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45750/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45750/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45736","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45736/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45736/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45736/events","html_url":"https://github.com/rails/rails/issues/45736","id":1326221102,"node_id":"I_kwDNIULOTwyHLg","number":45736,"title":"Virtual stored columns are always nil for newly created records","user":{"login":"camiloforero","id":6606686,"node_id":"MDQ6VXNlcjY2MDY2ODY=","avatar_url":"https://avatars.githubusercontent.com/u/6606686?v=4","gravatar_id":"","url":"https://api.github.com/users/camiloforero","html_url":"https://github.com/camiloforero","followers_url":"https://api.github.com/users/camiloforero/followers","following_url":"https://api.github.com/users/camiloforero/following{/other_user}","gists_url":"https://api.github.com/users/camiloforero/gists{/gist_id}","starred_url":"https://api.github.com/users/camiloforero/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/camiloforero/subscriptions","organizations_url":"https://api.github.com/users/camiloforero/orgs","repos_url":"https://api.github.com/users/camiloforero/repos","events_url":"https://api.github.com/users/camiloforero/events{/privacy}","received_events_url":"https://api.github.com/users/camiloforero/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-02T18:09:28Z","updated_at":"2022-08-02T19:28:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nUsing postgresql:\r\n\r\nGenerate a new model with one or more columns with default values, and a virtual stored column based on those other columns\r\nCreate a new record of that model\r\nAccess the value of the virtual stored column from the newly created ActiveRecord object\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem 'pg', '~> 1.4'\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection \"postgresql:///test\"\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.integer :counter1, null: false, default: 0\r\n    t.integer :counter2, null: false, default: 0\r\n    t.virtual :counter_sum, type: :integer, as: \"counter1 + counter2\", stored: true\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_virtual_column_value_populated\r\n    post = Post.create!\r\n\r\n    assert_equal 0, post.counter_sum\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe value of the virtual column should be *something*, in this particular case, 0\r\n\r\n### Actual behavior\r\nThe value of the virtual column is `nil`. The test fails with the following output\r\n```ruby\r\n# Running:\r\n\r\nD, [2022-08-02T13:05:17.402730 #13548] DEBUG -- :   TRANSACTION (0.1ms)  BEGIN\r\nD, [2022-08-02T13:05:17.403136 #13548] DEBUG -- :   Post Create (0.6ms)  INSERT INTO \"posts\" DEFAULT VALUES RETURNING \"id\"\r\nD, [2022-08-02T13:05:17.406144 #13548] DEBUG -- :   TRANSACTION (2.6ms)  COMMIT\r\nF\r\n\r\nFailure:\r\nBugTest#test_virtual_column_value_populated [stored_bug.rb:37]:\r\nExpected: 0\r\n  Actual: nil\r\n\r\n\r\nrails test stored_bug.rb:34\r\n\r\n\r\n\r\nFinished in 0.011047s, 90.5240 runs/s, 90.5240 assertions/s.\r\n1 runs, 1 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\n### System configuration\r\n**Rails version**: edge\r\n**Ruby version**: 3.1.2\r\n**PostgreSQL version**: 14.4\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45736/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45736/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45709","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45709/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45709/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45709/events","html_url":"https://github.com/rails/rails/issues/45709","id":1323303409,"node_id":"I_kwDNIULOTuAB8Q","number":45709,"title":"Rails & can't pin JS files from Unpkg","user":{"login":"septerr","id":1094216,"node_id":"MDQ6VXNlcjEwOTQyMTY=","avatar_url":"https://avatars.githubusercontent.com/u/1094216?v=4","gravatar_id":"","url":"https://api.github.com/users/septerr","html_url":"https://github.com/septerr","followers_url":"https://api.github.com/users/septerr/followers","following_url":"https://api.github.com/users/septerr/following{/other_user}","gists_url":"https://api.github.com/users/septerr/gists{/gist_id}","starred_url":"https://api.github.com/users/septerr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/septerr/subscriptions","organizations_url":"https://api.github.com/users/septerr/orgs","repos_url":"https://api.github.com/users/septerr/repos","events_url":"https://api.github.com/users/septerr/events{/privacy}","received_events_url":"https://api.github.com/users/septerr/received_events","type":"User","site_admin":false},"labels":[{"id":131864,"node_id":"MDU6TGFiZWwxMzE4NjQ=","url":"https://api.github.com/repos/rails/rails/labels/third%20party%20issue","name":"third party issue","color":"02d7e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-07-30T21:44:43Z","updated_at":"2022-08-02T18:08:34Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nIn a new Rails & app, try to pin a package from Unpkg CDN:\r\n\r\n```\r\n./bin/importmap pin @walletconnect/web3-provider@1.7.8 --from unpkg\r\n```\r\n\r\nYou get following response:\r\n\r\n```\r\nCouldn't find any packages in [\"@walletconnect/web3-provider@1.7.8\"] on unpkg\r\n```\r\nBut the file does exist on unpkg: https://unpkg.com/@walletconnect/web3-provider@1.7.8/dist/umd/index.min.js\r\n\r\nAfter adding some breakpoints in `.rbenv/versions/3.1.0/lib/ruby/gems/3.1.0/gems/importmap-rails-1.1.5/lib/importmap/packager.rb`, saw that the CDN post request and response are as follows:\r\n\r\nPost URL: \r\n```\r\n<URI::HTTPS https://api.jspm.io/generate>\r\n```\r\nPost Body:\r\n```\r\n \"{\\\"install\\\":[\\\"@walletconnect/web3-provider@1.7.8\\\"],\\\"flattenScope\\\":true,\\\"env\\\":[\\\"browser\\\",\\\"module\\\",\\\"production\\\"],\\\"provider\\\":\\\"unpkg\\\"}\"\r\n```\r\n\r\nPost Response:\r\n```\r\n<Net::HTTPUnauthorized 401 Unauthorized readbody=true>\r\n```\r\n\r\n### Expected behavior\r\nExpected the files from unpkg to be pinned.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nMisleading error that files don't exist on unpkg.\r\n\r\n### System configuration\r\n**Rails version**:\r\nRails 7.0.3.1\r\n\r\n**Ruby version**:\r\nruby 3.1.0p0 (2021-12-25 revision fb4df44d16) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45709/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45709/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45691","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45691/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45691/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45691/events","html_url":"https://github.com/rails/rails/issues/45691","id":1322122058,"node_id":"I_kwDNIULOTs37Sg","number":45691,"title":"ActionMailer fails to create correct multipart message with rfc822 attachment","user":{"login":"der-flo","id":35431,"node_id":"MDQ6VXNlcjM1NDMx","avatar_url":"https://avatars.githubusercontent.com/u/35431?v=4","gravatar_id":"","url":"https://api.github.com/users/der-flo","html_url":"https://github.com/der-flo","followers_url":"https://api.github.com/users/der-flo/followers","following_url":"https://api.github.com/users/der-flo/following{/other_user}","gists_url":"https://api.github.com/users/der-flo/gists{/gist_id}","starred_url":"https://api.github.com/users/der-flo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/der-flo/subscriptions","organizations_url":"https://api.github.com/users/der-flo/orgs","repos_url":"https://api.github.com/users/der-flo/repos","events_url":"https://api.github.com/users/der-flo/events{/privacy}","received_events_url":"https://api.github.com/users/der-flo/received_events","type":"User","site_admin":false},"labels":[{"id":107188,"node_id":"MDU6TGFiZWwxMDcxODg=","url":"https://api.github.com/repos/rails/rails/labels/actionmailer","name":"actionmailer","color":"8B00FC","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-29T11:19:00Z","updated_at":"2022-08-02T19:46:17Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I cannot re-open #42849 so I create a new issue…\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire 'bundler/inline'\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n  gem 'rails', github: 'rails/rails', branch: 'main'\r\nend\r\n\r\nrequire 'minitest/autorun'\r\nrequire 'action_mailer/railtie'\r\n\r\nclass TestMailer < ActionMailer::Base\r\n  def main\r\n    message_to_attach =  <<~MAIL.gsub(/\\n/, \"\\r\\n\")\r\n      Message-ID: <12345@foo.example>\r\n      Subject: Test\r\n      From: test1@foo.example\r\n      To: test2@foo.example\r\n      \r\n      hello world\r\n    MAIL\r\n    attachments['test.eml'] = {\r\n      mime_type: params[:mime_type],\r\n      content: message_to_attach\r\n    }\r\n\r\n    mail(from: 'test3@foo.example', to: 'test4@foo.example', subject: 'Test outer') do |format|\r\n      format.text { \"outer text - #{params[:mime_type]} attachment\" }\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_with_plain_mime_type\r\n    message = TestMailer.with(mime_type: 'text/plain').main\r\n    assert_equal message.mime_type, 'multipart/mixed'\r\n  end\r\n\r\n  def test_with_rfc822_mime_type\r\n    message = TestMailer.with(mime_type: 'message/rfc822').main\r\n    assert_equal message.mime_type, 'multipart/mixed'\r\n  end\r\nend\r\n```\r\n\r\nThe second test fails, the message object is rendered as follows:\r\n```\r\nDate: Fri, 23 Jul 2021 13:59:19 +0200\r\nFrom: test3@foo.example\r\nTo: test4@foo.example\r\nMessage-ID: <60faaf1738a02_14fbd98-3fb@flo.adigi.ai.mail>\r\nSubject: Test outer\r\nMime-Version: 1.0\r\nContent-Type: text/plain;\r\n boundary=\"--==_mimepart_60faaf1738008_14fbd98-484\";\r\n charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\n\r\n\r\n----==_mimepart_60faaf1738008_14fbd98-484\r\nContent-Type: text/plain;\r\n charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\n\r\nouter text - message/rfc822 attachment\r\n----==_mimepart_60faaf1738008_14fbd98-484\r\nContent-Type: message/rfc822\r\nContent-Transfer-Encoding: \r\nContent-Disposition: attachment;\r\n filename=test.eml\r\nContent-ID: <60faaf1739102_14fbd98-2b@flo.adigi.ai.mail>\r\n\r\nMessage-ID: <12345@foo.example>\r\nSubject: Test\r\nFrom: test1@foo.example\r\nTo: test2@foo.example\r\n\r\nhello world\r\n\r\n----==_mimepart_60faaf1738008_14fbd98-484--\r\n\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe `message.mime_type` is `multipart/mixed` in both test cases. ActionMailer handles attachments in the way it is described in https://guides.rubyonrails.org/action_mailer_basics.html#adding-attachments describes.\r\n\r\n### Actual behavior\r\n\r\nWhen attaching a `message/rfc822` - an email message - the generated mail parts are not nested correctly, the outer `multipart/mixed` is missing.\r\n\r\nPerhaps this behaviour is caused by the [special handling](https://github.com/mikel/mail/blob/master/lib/mail/attachments_list.rb#L9) of such attachments in the `mail` gem.\r\n\r\n\r\n### System configuration\r\n**Rails version**: main\r\n\r\n**Ruby version**: 3.0.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45691/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":1,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45691/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45640","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45640/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45640/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45640/events","html_url":"https://github.com/rails/rails/issues/45640","id":1315219867,"node_id":"I_kwDNIULOTmSpmw","number":45640,"title":"ActiveModel::Dirty changes not reset properly when using store_accessor (tested with postgres)","user":{"login":"vccoffey","id":59817868,"node_id":"MDQ6VXNlcjU5ODE3ODY4","avatar_url":"https://avatars.githubusercontent.com/u/59817868?v=4","gravatar_id":"","url":"https://api.github.com/users/vccoffey","html_url":"https://github.com/vccoffey","followers_url":"https://api.github.com/users/vccoffey/followers","following_url":"https://api.github.com/users/vccoffey/following{/other_user}","gists_url":"https://api.github.com/users/vccoffey/gists{/gist_id}","starred_url":"https://api.github.com/users/vccoffey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vccoffey/subscriptions","organizations_url":"https://api.github.com/users/vccoffey/orgs","repos_url":"https://api.github.com/users/vccoffey/repos","events_url":"https://api.github.com/users/vccoffey/events{/privacy}","received_events_url":"https://api.github.com/users/vccoffey/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-07-22T16:44:57Z","updated_at":"2022-07-23T17:51:49Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nUsing PostgreSQL (pg) database\r\nGiven a model with a jsonb column\r\n```\r\nclass CreateTestModels < ActiveRecord::Migration[6.1]\r\n  def change\r\n    create_table :test_models do |t|\r\n      t.jsonb :jsonb_hash_attr\r\n      t.timestamps\r\n    end\r\n  end\r\nend\r\n```\r\nusing store_accessor\r\n```\r\nclass TestModel < ApplicationRecord\r\n  store_accessor :jsonb_hash_attr, :key, prefix: true\r\nend\r\n```\r\n\r\n### Expected behavior\r\nBoth tests pass:\r\n```\r\nrequire \"test_helper\"\r\nclass TestModelTest < ActiveSupport::TestCase\r\n  test \"does not show changes for a jsonb attribute if changed back to original value\" do\r\n    tm = TestModel.create jsonb_hash_attr: { \"key\" => \"foo\" }\r\n    tm.jsonb_hash_attr = { \"key\" => \"bar\" }\r\n    assert_equal tm.jsonb_hash_attr_change, [{ \"key\" => \"foo\" }, { \"key\" => \"bar\" }]\r\n    tm.jsonb_hash_attr = { \"key\" => \"foo\" }\r\n    assert_equal tm.jsonb_hash_attr_change, nil\r\n  end\r\n\r\n  test \"does not show changes for a jsonb attribute if changed back to original value using store_accessor\" do\r\n    tm = TestModel.create jsonb_hash_attr: { \"key\" => \"foo\" }\r\n    tm.jsonb_hash_attr_key = \"bar\"\r\n    assert_equal tm.jsonb_hash_attr_change, [{ \"key\" => \"foo\" }, { \"key\" => \"bar\" }]\r\n    tm.jsonb_hash_attr_key = \"foo\"\r\n    assert_equal tm.jsonb_hash_attr_change, nil\r\n  end\r\nend\r\n```\r\n### Actual behavior\r\nThe second test fails\r\n```\r\n--- expected\r\n+++ actual\r\n-[{\"key\"=>\"foo\"}, {\"key\"=>\"foo\"}]\r\n+nil\r\n```\r\n### System configuration\r\n**Rails version**:\r\ntested with 6.1.6.1 and 7.0.3.1\r\n\r\n**Ruby version**: 3.1.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45640/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45640/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45639","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45639/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45639/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45639/events","html_url":"https://github.com/rails/rails/issues/45639","id":1314984267,"node_id":"I_kwDNIULOTmERSw","number":45639,"title":"Explicitly touch on save","user":{"login":"schmijos","id":245443,"node_id":"MDQ6VXNlcjI0NTQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/245443?v=4","gravatar_id":"","url":"https://api.github.com/users/schmijos","html_url":"https://github.com/schmijos","followers_url":"https://api.github.com/users/schmijos/followers","following_url":"https://api.github.com/users/schmijos/following{/other_user}","gists_url":"https://api.github.com/users/schmijos/gists{/gist_id}","starred_url":"https://api.github.com/users/schmijos/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/schmijos/subscriptions","organizations_url":"https://api.github.com/users/schmijos/orgs","repos_url":"https://api.github.com/users/schmijos/repos","events_url":"https://api.github.com/users/schmijos/events{/privacy}","received_events_url":"https://api.github.com/users/schmijos/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-22T13:05:14Z","updated_at":"2022-07-22T20:31:00Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  ruby \"3.1.0\"\r\n  gem \"rails\", \"7.0.3.1\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.timestamps\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_save_touch\r\n    Post.create!(updated_at: 3.days.ago)\r\n    Post.last.save!(touch: true)\r\n\r\n    assert_in_delta 0.seconds.ago.to_i, Post.last.updated_at.to_i, 5\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nIf I tell _ActiveRecord_ to explicitly \"touch\", then I would expect it to update the timestamps.\r\n\r\n### Actual behavior\r\n`save` never hits the database if no attribute changed.\r\n\r\n### System configuration\r\n**Rails version**: >= 3.0.0, < 8","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45639/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45639/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45638","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45638/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45638/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45638/events","html_url":"https://github.com/rails/rails/issues/45638","id":1314662755,"node_id":"I_kwDNIULOTlwpYw","number":45638,"title":"CSRF Token Expiry issue.","user":{"login":"MBM1607","id":47133639,"node_id":"MDQ6VXNlcjQ3MTMzNjM5","avatar_url":"https://avatars.githubusercontent.com/u/47133639?v=4","gravatar_id":"","url":"https://api.github.com/users/MBM1607","html_url":"https://github.com/MBM1607","followers_url":"https://api.github.com/users/MBM1607/followers","following_url":"https://api.github.com/users/MBM1607/following{/other_user}","gists_url":"https://api.github.com/users/MBM1607/gists{/gist_id}","starred_url":"https://api.github.com/users/MBM1607/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MBM1607/subscriptions","organizations_url":"https://api.github.com/users/MBM1607/orgs","repos_url":"https://api.github.com/users/MBM1607/repos","events_url":"https://api.github.com/users/MBM1607/events{/privacy}","received_events_url":"https://api.github.com/users/MBM1607/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-22T08:38:19Z","updated_at":"2022-07-22T08:40:22Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"We are encountering an issue with form submission in production environment.\r\nThe criteria seems to be exceptionally rare, I have been unable to replicate the issue. \r\n\r\nCSRF token is created and validated just fine.\r\n\r\n### Timing\r\n\r\nIssue seems to occur only when users wait more than 2 hours on a form before submitting, but doing this we have been unable to reproduce as well.\r\n\r\n### Logs\r\n```\r\nW, [2022-07-14T15:19:37.535241 #2433]  WARN -- : Can't verify CSRF token authenticity.\r\nI, [2022-07-14T15:19:37.535556 #2433]  INFO -- : Completed 422 Unprocessable Entity in 1ms (ActiveRecord: 0.0ms | Allocations: 291)\r\nF, [2022-07-14T15:19:37.536425 #2433] FATAL -- :   \r\nActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n```\r\n\r\n### System configuration\r\n**Rails version 6.1.6** \r\n**Ruby version 2.7.4**\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45638/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45638/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45636","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45636/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45636/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45636/events","html_url":"https://github.com/rails/rails/issues/45636","id":1314546104,"node_id":"I_kwDNIULOTlphuA","number":45636,"title":"Invalid template types should raise an exception","user":{"login":"axos88","id":1281218,"node_id":"MDQ6VXNlcjEyODEyMTg=","avatar_url":"https://avatars.githubusercontent.com/u/1281218?v=4","gravatar_id":"","url":"https://api.github.com/users/axos88","html_url":"https://github.com/axos88","followers_url":"https://api.github.com/users/axos88/followers","following_url":"https://api.github.com/users/axos88/following{/other_user}","gists_url":"https://api.github.com/users/axos88/gists{/gist_id}","starred_url":"https://api.github.com/users/axos88/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/axos88/subscriptions","organizations_url":"https://api.github.com/users/axos88/orgs","repos_url":"https://api.github.com/users/axos88/repos","events_url":"https://api.github.com/users/axos88/events{/privacy}","received_events_url":"https://api.github.com/users/axos88/received_events","type":"User","site_admin":false},"labels":[{"id":3666649,"node_id":"MDU6TGFiZWwzNjY2NjQ5","url":"https://api.github.com/repos/rails/rails/labels/actionview","name":"actionview","color":"d7e102","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-07-22T07:40:54Z","updated_at":"2022-08-17T18:02:14Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n  - Create a template in views/foo/bar.txt.erb # Note .txt, and not .text\r\n\r\n```ruby\r\ndetails = { locale: [:en], formats: [:txt], handlers: [:erb], variants: []}\r\nActionController::Base.view_paths.find(\"bar\", 'foo', false, details, nil, [])\r\n```\r\n\r\n### Expected behavior\r\n\r\nShould throw an exception that :txt is not a registered type in Template::Types\r\n\r\n### Actual behavior\r\n\r\nSilently fails to find the otherwise existing template, specifying the correct directory it the file resides in. \r\nConfustion intensifies.\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3\r\n**Ruby version**: 2.7.6","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45636/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45636/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45635","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45635/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45635/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45635/events","html_url":"https://github.com/rails/rails/issues/45635","id":1314015345,"node_id":"I_kwDNIULOTlJIcQ","number":45635,"title":"Recent security releases are missing from the Releases page","user":{"login":"georgeclaghorn","id":94129,"node_id":"MDQ6VXNlcjk0MTI5","avatar_url":"https://avatars.githubusercontent.com/u/94129?v=4","gravatar_id":"","url":"https://api.github.com/users/georgeclaghorn","html_url":"https://github.com/georgeclaghorn","followers_url":"https://api.github.com/users/georgeclaghorn/followers","following_url":"https://api.github.com/users/georgeclaghorn/following{/other_user}","gists_url":"https://api.github.com/users/georgeclaghorn/gists{/gist_id}","starred_url":"https://api.github.com/users/georgeclaghorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/georgeclaghorn/subscriptions","organizations_url":"https://api.github.com/users/georgeclaghorn/orgs","repos_url":"https://api.github.com/users/georgeclaghorn/repos","events_url":"https://api.github.com/users/georgeclaghorn/events{/privacy}","received_events_url":"https://api.github.com/users/georgeclaghorn/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false},"assignees":[{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2022-07-22T01:21:34Z","updated_at":"2022-08-19T18:08:06Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Rails versions 7.0.3.1, 6.1.6.1, 6.0.5.1, and 5.2.8.1 are not listed at this GitHub repository’s [Releases](https://github.com/rails/rails/releases) page. Past releases are listed there, including the most recent round of bugfix releases from May.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45635/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45635/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45632","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45632/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45632/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45632/events","html_url":"https://github.com/rails/rails/issues/45632","id":1312439669,"node_id":"I_kwDNIULOTjo9dQ","number":45632,"title":"`_read_attribute` method should also check whether an attribute is aliased or not","user":{"login":"khiav223577","id":4011729,"node_id":"MDQ6VXNlcjQwMTE3Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4011729?v=4","gravatar_id":"","url":"https://api.github.com/users/khiav223577","html_url":"https://github.com/khiav223577","followers_url":"https://api.github.com/users/khiav223577/followers","following_url":"https://api.github.com/users/khiav223577/following{/other_user}","gists_url":"https://api.github.com/users/khiav223577/gists{/gist_id}","starred_url":"https://api.github.com/users/khiav223577/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/khiav223577/subscriptions","organizations_url":"https://api.github.com/users/khiav223577/orgs","repos_url":"https://api.github.com/users/khiav223577/repos","events_url":"https://api.github.com/users/khiav223577/events{/privacy}","received_events_url":"https://api.github.com/users/khiav223577/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-07-21T03:14:22Z","updated_at":"2022-07-21T21:37:09Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n```rb\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  gem \"activerecord\", '7.0.3'\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table \"users\", force: :cascade do |t|\r\n    t.string :name\r\n  end\r\n\r\n  create_table \"posts\", force: :cascade do |t|\r\n    t.string :title\r\n    t.integer :userId\r\n  end\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\n  has_many :posts\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  belongs_to :user\r\n\r\n  alias_attribute :user_id, :userId\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def setup\r\n    user = User.create!(name: 'Tester')\r\n    post = Post.create!(user_id: user.id, title: 'Post A')\r\n  end\r\n\r\n  def test_has_many\r\n    assert_equal ['Post A'], User.first.posts.map(&:title)\r\n  end\r\n\r\n  def test_belongs_to\r\n    assert_equal 'Tester', Post.first.user&.name\r\n  end\r\nend\r\n```\r\n\r\nResult:\r\n```\r\nFinished in 0.059414s, 33.6619 runs/s, 33.6619 assertions/s.\r\n\r\n  1) Failure:\r\nBugTest#test_belongs_to [test.rb:53]:\r\nExpected: \"Tester\"\r\n  Actual: nil\r\n\r\n2 runs, 2 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\n### Expected behavior\r\n\r\nI run into this issue when I tried to add an association on an aliased attribute.\r\n\r\nThen I found `belongs_to_association` will use `_read_attribute` method to check if this `foreign_key` exists on this model or not.\r\nIt doesn't pass the condition, therefore `find_target` will not be triggered.\r\nhttps://github.com/rails/rails/blob/3272335f8f4739629283cdeff7c3db723f34a3f5/activerecord/lib/active_record/associations/association.rb#L172-L173\r\nhttps://github.com/rails/rails/blob/3272335f8f4739629283cdeff7c3db723f34a3f5/activerecord/lib/active_record/associations/association.rb#L274-L276\r\nhttps://github.com/rails/rails/blob/2ea5ff9e13b9c5d0d5d25b2441efa81a2de2a262/activerecord/lib/active_record/associations/belongs_to_association.rb#L133-L135\r\nhttps://github.com/rails/rails/blob/4ae0390c1051a39ec16a4a95451cd06172a1b260/activerecord/lib/active_record/attribute_methods/read.rb#L37-L39\r\n\r\nThe `read_attribute` method takes `attribute_alias` into consideration since https://github.com/rails/rails/pull/26529, while `_read_attribute` doesn't. I think it should, too.\r\n\r\n### Actual behavior\r\n\r\nSee the test script below.\r\n\r\n### System configuration\r\n**Rails version**: \r\n7.0.3.1\r\n\r\n**Ruby version**:\r\nruby 3.0.0p0 (2020-12-25 revision 95aff21468) [x86_64-linux]","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45632/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45632/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45609","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45609/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45609/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45609/events","html_url":"https://github.com/rails/rails/issues/45609","id":1306840730,"node_id":"I_kwDNIULOTeTOmg","number":45609,"title":"Cannot add ActiveModel::Attribute::FromDatabase to permitted YAML safe load classes","user":{"login":"stanhu","id":963826,"node_id":"MDQ6VXNlcjk2MzgyNg==","avatar_url":"https://avatars.githubusercontent.com/u/963826?v=4","gravatar_id":"","url":"https://api.github.com/users/stanhu","html_url":"https://github.com/stanhu","followers_url":"https://api.github.com/users/stanhu/followers","following_url":"https://api.github.com/users/stanhu/following{/other_user}","gists_url":"https://api.github.com/users/stanhu/gists{/gist_id}","starred_url":"https://api.github.com/users/stanhu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stanhu/subscriptions","organizations_url":"https://api.github.com/users/stanhu/orgs","repos_url":"https://api.github.com/users/stanhu/repos","events_url":"https://api.github.com/users/stanhu/events{/privacy}","received_events_url":"https://api.github.com/users/stanhu/received_events","type":"User","site_admin":false},"labels":[{"id":107186,"node_id":"MDU6TGFiZWwxMDcxODY=","url":"https://api.github.com/repos/rails/rails/labels/regression","name":"regression","color":"e10c02","default":false,"description":null},{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-07-16T15:51:30Z","updated_at":"2022-08-18T11:39:07Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWe have some database entries serialized to YAML. For example:\r\n\r\n```\r\n---\r\n:custom_message: Repository Download Started\r\n:author_name: !ruby/object:DeployToken\r\n  concise_attributes:\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: deploy_token_type\r\n    value_before_type_cast: 1\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: id\r\n    value_before_type_cast: 2\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: revoked\r\n    value_before_type_cast: false\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: read_repository\r\n    value_before_type_cast: true\r\n```\r\n\r\nHowever, since the security release announced in https://rubyonrails.org/2022/7/12/Rails-Versions-7-0-3-1-6-1-6-1-6-0-5-1-and-5-2-8-1-have-been-released to address CVE-2022-32224, we cannot simply add `ActiveModel::Attribute::FromDatabase` to the permitted class list:\r\n\r\n```ruby\r\n(byebug) YAML.safe_load(payload, permitted_classes: [ActiveModel::Attribute::FromDatabase, Symbol, DeployToken], aliases: true)\r\n*** NameError Exception: private constant ActiveModel::Attribute::FromDatabase referenced\r\n```\r\n\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\n### Expected behavior\r\n\r\nYAML loading should work. Should this constant no longer be private since it's been serialized to YAML?\r\n\r\n### Actual behavior\r\n\r\nYAML loading fails with:\r\n\r\n```\r\n*** NameError Exception: private constant ActiveModel::Attribute::FromDatabase referenced\r\n```\r\n\r\n### System configuration\r\n\r\n**Rails version**:\r\nv6.1.6.1\r\n\r\n**Ruby version**:\r\nv2.7.5","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45609/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45609/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45596","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45596/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45596/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45596/events","html_url":"https://github.com/rails/rails/issues/45596","id":1304247666,"node_id":"I_kwDNIULOTb09cg","number":45596,"title":"Setting `schema_dump` in database.yml does not change dump format","user":{"login":"leboshi","id":16550140,"node_id":"MDQ6VXNlcjE2NTUwMTQw","avatar_url":"https://avatars.githubusercontent.com/u/16550140?v=4","gravatar_id":"","url":"https://api.github.com/users/leboshi","html_url":"https://github.com/leboshi","followers_url":"https://api.github.com/users/leboshi/followers","following_url":"https://api.github.com/users/leboshi/following{/other_user}","gists_url":"https://api.github.com/users/leboshi/gists{/gist_id}","starred_url":"https://api.github.com/users/leboshi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leboshi/subscriptions","organizations_url":"https://api.github.com/users/leboshi/orgs","repos_url":"https://api.github.com/users/leboshi/repos","events_url":"https://api.github.com/users/leboshi/events{/privacy}","received_events_url":"https://api.github.com/users/leboshi/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-14T04:44:37Z","updated_at":"2022-07-14T14:34:25Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Originally brought up in #43173.  I opened PR #43240 to address it, but that was closed when it was decided #43530 did the same thing.  Unfortunately, I don't think any of us were really reading what the other was doing, because the two PRs actually each only addressed half the opened issue.\r\n\r\nPR incoming to fully address this and the second half of #43173!\r\n\r\n### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_schema_format_corresponds_with_schema_dump\r\n    Dir.mktmpdir do |dir|\r\n      ActiveRecord::Tasks::DatabaseTasks.stub(:db_dir, dir) do\r\n        old_configurations = ActiveRecord::Base.configurations\r\n        ActiveRecord::Base.configurations = {\r\n          \"development\" => {\r\n            \"primary\" => {\r\n              \"database\" => \"dev-db\",\r\n              \"schema_dump\" => \"primary_structure.sql\"\r\n            }\r\n          }\r\n        }\r\n\r\n        db_config = ActiveRecord::Base.configurations.configs_for(env_name: \"development\", name: \"primary\")\r\n        ActiveRecord::Tasks::DatabaseTasks.dump_schema(db_config)\r\n\r\n        dump_contents = File.read(File.join(dir, \"primary_structure.sql\"))\r\n        refute_match /ActiveRecord::Schema/, dump_contents\r\n        assert_match /CREATE TABLE/, dump_contents\r\n      ensure\r\n        ActiveRecord::Base.configurations = old_configurations\r\n        ActiveRecord::Base.clear_cache!\r\n      end\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nIf `schema_dump` is set to something like `primary_structure.sql`, I'd expect it to do a SQL structure dump rather than a Ruby schema dump.\r\n\r\n### Actual behavior\r\nThe filename in `schema_dump` has no bearing on the format of the dump Rails writes or expects to read.\r\n\r\n### System configuration\r\n**Rails version**: (main)\r\n\r\n**Ruby version**: 3.1.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45596/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45596/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45998","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45998/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45998/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45998/events","html_url":"https://github.com/rails/rails/issues/45998","id":1368868095,"node_id":"I_kwDNIULOUZdE_w","number":45998,"title":"CSRF getting different token","user":{"login":"Saleh-Salem","id":22606707,"node_id":"MDQ6VXNlcjIyNjA2NzA3","avatar_url":"https://avatars.githubusercontent.com/u/22606707?v=4","gravatar_id":"","url":"https://api.github.com/users/Saleh-Salem","html_url":"https://github.com/Saleh-Salem","followers_url":"https://api.github.com/users/Saleh-Salem/followers","following_url":"https://api.github.com/users/Saleh-Salem/following{/other_user}","gists_url":"https://api.github.com/users/Saleh-Salem/gists{/gist_id}","starred_url":"https://api.github.com/users/Saleh-Salem/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Saleh-Salem/subscriptions","organizations_url":"https://api.github.com/users/Saleh-Salem/orgs","repos_url":"https://api.github.com/users/Saleh-Salem/repos","events_url":"https://api.github.com/users/Saleh-Salem/events{/privacy}","received_events_url":"https://api.github.com/users/Saleh-Salem/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-11T08:08:17Z","updated_at":"2022-09-11T08:27:32Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When validating the CSRF token getting an exception in API\r\n \r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\nthe `session[:_csrf_token]` and  `request.x_csrf_token` is different and getting issue.\r\nwhen I need to skip the csrf, I add `verify_authenticity_token`, In this case, I don't need to skip it.\r\nI debug and found the issue in the method:\r\n\r\n```\r\n  def compare_with_global_token(token, session = nil) # :doc:\r\n    ActiveSupport::SecurityUtils.fixed_length_secure_compare(token, global_csrf_token(session))\r\n  end\r\n```\r\n\r\nwhat is `session[:_csrf_token]` and how can I implement it in API?\r\nIs there any missing from my side?\r\n### Steps to reproduce\r\n\r\n1. Add `protect_from_forgery with: :exception` .\r\n2. When logging in return token in response is generated by `form_authenticity_token`.\r\n3. When Trying to request any POST, PUT or DELETE API get an exception.\r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nReturn Response without exception.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\ngetting exception \r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\n### System configuration\r\n**Rails version**:\r\n6.0.3.5\r\n**Ruby version**:\r\n2.7.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45998/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45998/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45994","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45994/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45994/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45994/events","html_url":"https://github.com/rails/rails/issues/45994","id":1368555704,"node_id":"I_kwDNIULOUZKAuA","number":45994,"title":"LoadInterlockAwareMonitor deadlock when clearing cache (multiple databases, test)","user":{"login":"kuahyeow","id":16723,"node_id":"MDQ6VXNlcjE2NzIz","avatar_url":"https://avatars.githubusercontent.com/u/16723?v=4","gravatar_id":"","url":"https://api.github.com/users/kuahyeow","html_url":"https://github.com/kuahyeow","followers_url":"https://api.github.com/users/kuahyeow/followers","following_url":"https://api.github.com/users/kuahyeow/following{/other_user}","gists_url":"https://api.github.com/users/kuahyeow/gists{/gist_id}","starred_url":"https://api.github.com/users/kuahyeow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kuahyeow/subscriptions","organizations_url":"https://api.github.com/users/kuahyeow/orgs","repos_url":"https://api.github.com/users/kuahyeow/repos","events_url":"https://api.github.com/users/kuahyeow/events{/privacy}","received_events_url":"https://api.github.com/users/kuahyeow/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-10T08:52:46Z","updated_at":"2022-09-10T08:56:12Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"With multiple databases, we observe hangs within system tests.\r\n\r\nSee also https://gitlab.com/gitlab-org/gitlab/-/issues/371468 (GitLab is at Rails 6.1, Ruby 2.7.5)\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nHere's a minimal reproduction with Rails 7.0.3.1\r\n\r\n1. Checkout https://gitlab.com/tkuah/multi_database_system_test\r\n2. `bundle install`\r\n3. `bundle exec rails db:migrate`\r\n4. `bundle rails test test/system/home_pages_test.rb`\r\n\r\nThe conditions are:\r\n\r\n1. Multiple databases\r\n2. System test where there's an async request which overlaps with the main thread\r\n\r\n### Expected behavior\r\n\r\nIt does not hang, and the test completes\r\n\r\n### Actual behavior\r\n\r\nIt hangs. It looks like it's hanging when clearing query cache (see https://gitlab.com/gitlab-org/gitlab/-/issues/371468#note_1087203883, and https://gitlab.com/gitlab-org/gitlab/-/issues/371468#note_1088779499)\r\n\r\nA backtrace dump taken while the test is hanging [sigdump-68442.log](https://github.com/rails/rails/files/9539878/sigdump-68442.log)\r\n\r\nMy suspicion is that:\r\n\r\n1. `lock_thread` is true for system tests\r\n3. Therefore both the main thread, and the Puma thread attempt to clear query cache for the same set of connections\r\n\r\nSo we have two connections:\r\n\r\n1. Puma thread takes a `LoadInterlockAwareMonitor` lock for primary connection via `Post.transaction`\r\n2. Main thread takes a `LoadInterlockAwareMonitor` lock for animal connection via implicit transaction that `create` does\r\n3. Due to 2, main thread attempts to clear query cache for primary connection. **Waits for 1's lock**\r\n4. Due to 1, and because of `lock_thread`, puma thread clears query cache for primary connection. It takes a `LoadInterlockAwareMonitor` lock for primary connection which succeds\r\n5. Due to 1, puma thread now attempts clears query cache for animal connection. **Waits for 2's lock**\r\n\r\nSee [`clear_query_caches_for_current_thread` method](https://github.com/rails/rails/blob/e24fbf71fa0a10f63346b9b42604451958740844/activerecord/lib/active_record/connection_handling.rb#L244-L248)\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: ruby 2.7.5p203 (2021-11-24 revision f69aeb8314) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45994/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45994/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45984","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45984/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45984/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45984/events","html_url":"https://github.com/rails/rails/issues/45984","id":1368144421,"node_id":"I_kwDNIULOUYw6JQ","number":45984,"title":"Cannot Eager Load has_many :through Relationships with custom scope","user":{"login":"dcorrigan","id":2445528,"node_id":"MDQ6VXNlcjI0NDU1Mjg=","avatar_url":"https://avatars.githubusercontent.com/u/2445528?v=4","gravatar_id":"","url":"https://api.github.com/users/dcorrigan","html_url":"https://github.com/dcorrigan","followers_url":"https://api.github.com/users/dcorrigan/followers","following_url":"https://api.github.com/users/dcorrigan/following{/other_user}","gists_url":"https://api.github.com/users/dcorrigan/gists{/gist_id}","starred_url":"https://api.github.com/users/dcorrigan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dcorrigan/subscriptions","organizations_url":"https://api.github.com/users/dcorrigan/orgs","repos_url":"https://api.github.com/users/dcorrigan/repos","events_url":"https://api.github.com/users/dcorrigan/events{/privacy}","received_events_url":"https://api.github.com/users/dcorrigan/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-09T17:47:35Z","updated_at":"2022-09-09T17:47:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nThis seems like it's the same as #28324, but I'm still seeing the issue in Rails 7. \r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n  end\r\n\r\n  create_table :images, force: true do |t|\r\n    t.string :title\r\n    t.integer :post_id\r\n  end\r\n\r\n  create_table :captions, force: true do |t|\r\n    t.integer :image_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :images\r\n  has_many :captions, lambda { order('images.title DESC') }, through: :images\r\nend\r\n\r\nclass Image < ActiveRecord::Base\r\n  belongs_to :post\r\n  has_one :caption\r\nend\r\n\r\nclass Caption < ActiveRecord::Base\r\n  belongs_to :image\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_preload_has_many_through_association_with_scope\r\n    post = Post.create!\r\n    image = Image.create!\r\n    image.caption = Caption.create!\r\n    post.images << image\r\n    post.save!\r\n\r\n    # Access through the model works\r\n    assert_includes post.captions, Caption.first\r\n\r\n    # Query with association preloaded does not.\r\n    # When evaluated, it will apply the scope without the relevant JOIN table:\r\n    # SELECT \"captions\".* FROM \"captions\" WHERE \"captions\".\"image_id\" = ? ORDER BY images.title DESC\r\n    preloaded = Post.where(id: post.id).includes(:captions)\r\n\r\n    assert_includes preloaded.first.captions, Caption.first\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe test passes and we're able to eager load has_many :through associations with custom scopes in this way.\r\n\r\nI realize this can be fixed by adding a `references(:images)` to the query, but it seems reasonable to expect AR to infer that that the join is necessary here.\r\n\r\n### Actual behavior\r\n\r\nTest fails with an error: `ActiveRecord::StatementInvalid: SQLite3::SQLException: no such column: images.title`\r\n\r\n### System configuration\r\n**Rails version**: 7.0 \r\n\r\n**Ruby version**: 3.1.2p20\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45984/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45967","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45967/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45967/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45967/events","html_url":"https://github.com/rails/rails/issues/45967","id":1366038829,"node_id":"I_kwDNIULOUWwZLQ","number":45967,"title":"Inconsistent update of timestamps while updating associations with *_ids=","user":{"login":"matthee","id":547653,"node_id":"MDQ6VXNlcjU0NzY1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/547653?v=4","gravatar_id":"","url":"https://api.github.com/users/matthee","html_url":"https://github.com/matthee","followers_url":"https://api.github.com/users/matthee/followers","following_url":"https://api.github.com/users/matthee/following{/other_user}","gists_url":"https://api.github.com/users/matthee/gists{/gist_id}","starred_url":"https://api.github.com/users/matthee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matthee/subscriptions","organizations_url":"https://api.github.com/users/matthee/orgs","repos_url":"https://api.github.com/users/matthee/repos","events_url":"https://api.github.com/users/matthee/events{/privacy}","received_events_url":"https://api.github.com/users/matthee/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-08T10:51:09Z","updated_at":"2022-09-09T03:10:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"ActiveRecord inconsistently updates the `updated_at` column when changing `has_many through:` associations.\r\n\r\n### Steps to reproduce\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"activesupport\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"active_support/testing/time_helpers\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.timestamps\r\n  end\r\n  \r\n  create_table :tags, force: true do |t|\r\n  end\r\n\r\n  create_table :taggings, force: true do |t|\r\n    t.integer :post_id\r\n    t.integer :tag_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :taggings, dependent: :destroy\r\n  \r\n  has_many :tags, through: :taggings\r\nend\r\n\r\nclass Tagging < ActiveRecord::Base\r\n  belongs_to :post, touch: true\r\n  belongs_to :tag\r\nend\r\n\r\nclass Tag < ActiveRecord::Base\r\n  has_many :taggings\r\n  has_many :posts, through: :taggings\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  include ActiveSupport::Testing::TimeHelpers\r\n  \r\n  def test_updated_at_is_updated_when_setting_has_many_through_association\r\n    freeze_time\r\n        \r\n    tag_1 = Tag.create!\r\n    tag_2 = Tag.create!\r\n      \r\n    post = Post.create!\r\n    \r\n    travel_to(now = 1.hour.from_now)\r\n    \r\n    # Adding tags updates post.updated_at\r\n    post.update(tag_ids: [tag_1.id, tag_2.id])\r\n    assert_in_delta now, post.updated_at, 1.second, \"post#updated_at was not updated when adding tags\"\r\n    \r\n    # Removing tags does not update post.updated_at :(\r\n    travel_to(now = 2.hours.from_now)\r\n    post.update(tag_ids: [tag_1.id])\r\n    assert_in_delta now, post.updated_at, 1.second, \"post#updated_at was not updated when removing tags\"\r\n  end\r\n  \r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nIn the example above, both `.update` calls should update the `updated_at` column of the post record. (when adding and removing records)\r\n\r\n### Actual behavior\r\n\r\nWhen deleting a record, the `updated_at` timestamp is not updated.\r\n\r\n### System configuration\r\n**Rails version**:\r\n7.0.3.1\r\n**Ruby version**:\r\n3.0.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45967/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45967/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45959","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45959/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45959/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45959/events","html_url":"https://github.com/rails/rails/issues/45959","id":1364232810,"node_id":"I_kwDNIULOUVCKag","number":45959,"title":"JSON field not saving data with symbol : and it's saving with arrow =>","user":{"login":"sajjadmurtaza","id":8552702,"node_id":"MDQ6VXNlcjg1NTI3MDI=","avatar_url":"https://avatars.githubusercontent.com/u/8552702?v=4","gravatar_id":"","url":"https://api.github.com/users/sajjadmurtaza","html_url":"https://github.com/sajjadmurtaza","followers_url":"https://api.github.com/users/sajjadmurtaza/followers","following_url":"https://api.github.com/users/sajjadmurtaza/following{/other_user}","gists_url":"https://api.github.com/users/sajjadmurtaza/gists{/gist_id}","starred_url":"https://api.github.com/users/sajjadmurtaza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sajjadmurtaza/subscriptions","organizations_url":"https://api.github.com/users/sajjadmurtaza/orgs","repos_url":"https://api.github.com/users/sajjadmurtaza/repos","events_url":"https://api.github.com/users/sajjadmurtaza/events{/privacy}","received_events_url":"https://api.github.com/users/sajjadmurtaza/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":1071962662,"node_id":"MDU6TGFiZWwxMDcxOTYyNjYy","url":"https://api.github.com/repos/rails/rails/labels/more-information-needed","name":"more-information-needed","color":"bfdadc","default":false,"description":"When reporter needs to provide more information"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-09-07T07:40:12Z","updated_at":"2022-09-08T07:23:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nI have JSON field in my database `t.json \"theme\"`. When I try to save the field hash with : , it's overridden before save\r\ne.g.\r\n`object.theme = { color: 'red' }` it always change to `{ color => 'red' }`\r\n\r\ni also tried with jsonb and default value with empty hash {} but still having the same issue.\r\n\r\n\r\nI want to save the JSON data hash with symbol keys `{ color: 'red' }`\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.0\r\n\r\n**Ruby version**: 2.7.1\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45959/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45959/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45949","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45949/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45949/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45949/events","html_url":"https://github.com/rails/rails/issues/45949","id":1362899537,"node_id":"I_kwDNIULOUTwyUQ","number":45949,"title":"ActionText::Attachable#as_json override is breaking ActiveStorage::Blob#as_json when blob is not persisted","user":{"login":"balbesina","id":7312369,"node_id":"MDQ6VXNlcjczMTIzNjk=","avatar_url":"https://avatars.githubusercontent.com/u/7312369?v=4","gravatar_id":"","url":"https://api.github.com/users/balbesina","html_url":"https://github.com/balbesina","followers_url":"https://api.github.com/users/balbesina/followers","following_url":"https://api.github.com/users/balbesina/following{/other_user}","gists_url":"https://api.github.com/users/balbesina/gists{/gist_id}","starred_url":"https://api.github.com/users/balbesina/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/balbesina/subscriptions","organizations_url":"https://api.github.com/users/balbesina/orgs","repos_url":"https://api.github.com/users/balbesina/repos","events_url":"https://api.github.com/users/balbesina/events{/privacy}","received_events_url":"https://api.github.com/users/balbesina/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-06T08:26:39Z","updated_at":"2022-09-06T08:26:39Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nfrom rails console:\r\n```ruby\r\nActiveStorage::Blob.build_after_unfurling(io: StringIO.new('asd'), filename: 'asd.txt').as_json\r\n```\r\n\r\n[Reproduction script](https://gist.github.com/balbesina/30fbdafbfee4b71b06209d9e950f4128)\r\n\r\n### Expected behavior\r\nActiveStorage::Blob#as_json returns a Hash\r\n\r\n### Actual behavior\r\nActiveStorage::Blob#as_json raises exception\r\n```\r\n/Users/dhh/.rvm/gems/ruby-3.1.2/gems/globalid-1.0.0/lib/global_id/uri/gid.rb:167:in `validate_model_id': \r\nUnable to create a Global ID for ActiveStorage::Blob without a model id. (URI::GID::MissingModelIdError)\r\n```\r\n\r\n### System configuration\r\n**Rails version**: Rails 7.0.3.1\r\n**Ruby version**: ruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45949/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45949/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45939","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45939/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45939/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45939/events","html_url":"https://github.com/rails/rails/issues/45939","id":1360876688,"node_id":"I_kwDNIULOUR1UkA","number":45939,"title":"Validations aren't inherited from base model if child is called before validation declaration","user":{"login":"Exterm1nate","id":48535087,"node_id":"MDQ6VXNlcjQ4NTM1MDg3","avatar_url":"https://avatars.githubusercontent.com/u/48535087?v=4","gravatar_id":"","url":"https://api.github.com/users/Exterm1nate","html_url":"https://github.com/Exterm1nate","followers_url":"https://api.github.com/users/Exterm1nate/followers","following_url":"https://api.github.com/users/Exterm1nate/following{/other_user}","gists_url":"https://api.github.com/users/Exterm1nate/gists{/gist_id}","starred_url":"https://api.github.com/users/Exterm1nate/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Exterm1nate/subscriptions","organizations_url":"https://api.github.com/users/Exterm1nate/orgs","repos_url":"https://api.github.com/users/Exterm1nate/repos","events_url":"https://api.github.com/users/Exterm1nate/events{/privacy}","received_events_url":"https://api.github.com/users/Exterm1nate/received_events","type":"User","site_admin":false},"labels":[{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-09-03T14:46:42Z","updated_at":"2022-09-08T07:26:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nLet's create some STI models. Base `Vehicle` and two childs `Car` and `Motorcycle`.\r\n\r\n```ruby\r\n# models/vehicle.rb\r\nclass Vehicle < ApplicationRecord\r\n  TYPES = [Car, Motorcycle].freeze\r\n\r\n  validates :color, uniqueness: { scope: :model }\r\nend\r\n\r\n# models/car.rb\r\nclass Car < Vehicle\r\nend\r\n\r\n# models/motorcycle.rb\r\nclass Motorcycle < Vehicle\r\nend\r\n```\r\n\r\nAfter that we want to use `#validators_on` method to make sure the validation is present.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\nCar.validators_on(:color)\r\nMotorcycle.validators_on(:color)\r\n```\r\n\r\n### Expected behavior\r\n\r\nAll models must contain the validation.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nMotorcycle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\n```\r\n\r\n### Actual behavior\r\n\r\nBut for childs this method returns nothing.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> []\r\nMotorcycle.validators_on(:color)\r\n#=> []\r\n```\r\n\r\n### Notes\r\n\r\nIf we remove the `TYPES` constant (or just child classes calls from it) `validators_on` works as expected. Let's change original code a little bit:\r\n\r\n```ruby\r\n# models/vehicle.rb\r\nclass Vehicle < ApplicationRecord\r\n  TYPES = [Car].freeze # Motorcycle was removed from here!\r\n\r\n  validates :color, uniqueness: { scope: :model }\r\nend\r\n```\r\n\r\nAnd after that test again.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> []\r\nMotorcycle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\n```\r\n\r\n`Motorcycle` validation was returned correctly this time.\r\n\r\nIt seems to be a load error. `Car` was called before the `Vehicle`'s validation declaration, so it doesn't take this validation into account. It may also depend on loading order.\r\n\r\nNotice that validation itself is working well in all models.\r\n\r\n```ruby\r\nCar.create!(color: \"black\", model: \"Boomer\")\r\nCar.create!(color: \"black\", model: \"Boomer\") # raises ActiveRecord::RecordInvalid\r\n\r\nMotorcycle.create!(color: \"red\", model: \"Yamaha\")\r\nMotorcycle.create!(color: \"red\", model: \"Yamaha\") # raises ActiveRecord::RecordInvalid\r\n```\r\n\r\nExample project: https://github.com/Exterm1nate/rails-validation-issue\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3\r\n\r\n**Ruby version**: 3.1.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45939/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45939/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45937","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45937/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45937/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45937/events","html_url":"https://github.com/rails/rails/issues/45937","id":1360779604,"node_id":"I_kwDNIULOURvZVA","number":45937,"title":"Add strict table mode (by default) to sqlite adapter","user":{"login":"jrz","id":149668,"node_id":"MDQ6VXNlcjE0OTY2OA==","avatar_url":"https://avatars.githubusercontent.com/u/149668?v=4","gravatar_id":"","url":"https://api.github.com/users/jrz","html_url":"https://github.com/jrz","followers_url":"https://api.github.com/users/jrz/followers","following_url":"https://api.github.com/users/jrz/following{/other_user}","gists_url":"https://api.github.com/users/jrz/gists{/gist_id}","starred_url":"https://api.github.com/users/jrz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jrz/subscriptions","organizations_url":"https://api.github.com/users/jrz/orgs","repos_url":"https://api.github.com/users/jrz/repos","events_url":"https://api.github.com/users/jrz/events{/privacy}","received_events_url":"https://api.github.com/users/jrz/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-03T07:01:02Z","updated_at":"2022-09-08T07:30:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"SQLite supports 'strict tables' since 3.37.1 https://sqlite.org/stricttables.html\r\n\r\nThis forces a datatype to be specified when creating a table. This is the preferred method in any application created by developers. \r\n\r\nUnspecified/ANY datatypes are useful for quick tryouts as an enduser, similar to excel. But it's counterproductive when creating an application.\r\n\r\nIf this will become a configurable setting, the default should be set to strict.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45937/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45937/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45920","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45920/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45920/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45920/events","html_url":"https://github.com/rails/rails/issues/45920","id":1358179995,"node_id":"I_kwDNIULOUPQumw","number":45920,"title":"Replace has_one through create_association might create duplicated rows","user":{"login":"lazaronixon","id":2651240,"node_id":"MDQ6VXNlcjI2NTEyNDA=","avatar_url":"https://avatars.githubusercontent.com/u/2651240?v=4","gravatar_id":"","url":"https://api.github.com/users/lazaronixon","html_url":"https://github.com/lazaronixon","followers_url":"https://api.github.com/users/lazaronixon/followers","following_url":"https://api.github.com/users/lazaronixon/following{/other_user}","gists_url":"https://api.github.com/users/lazaronixon/gists{/gist_id}","starred_url":"https://api.github.com/users/lazaronixon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lazaronixon/subscriptions","organizations_url":"https://api.github.com/users/lazaronixon/orgs","repos_url":"https://api.github.com/users/lazaronixon/repos","events_url":"https://api.github.com/users/lazaronixon/events{/privacy}","received_events_url":"https://api.github.com/users/lazaronixon/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-09-01T03:05:07Z","updated_at":"2022-09-01T23:03:40Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# Ensure backward compatibility with minitest 4.\r\nMinitest::Test = MiniTest::Unit::TestCase unless defined?(Minitest::Test)\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts do |t|\r\n  end\r\n\r\n  create_table :comments do |t|\r\n    t.references :post\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_one :comment, dependent: :destroy\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  validates_presence_of :post_id\r\n  belongs_to :post\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    post = Post.create!\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    sleep 5.seconds\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n```\r\n# transaction begin\r\nselect previous_comment for update\r\n\r\ninsert new_comment\r\n\r\ndelete previous_comment\r\n# transaction commit\r\n```\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n```\r\n# transaction begin\r\ninsert new_comment\r\n# transaction commit\r\n\r\n# transaction begin\r\ndelete previous_comment\r\n# transaction commit\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45920/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45920/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45906","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45906/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45906/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45906/events","html_url":"https://github.com/rails/rails/issues/45906","id":1355732552,"node_id":"I_kwDNIULOUM7WSA","number":45906,"title":"High object allocation count from `ActiveRecord::ConnectionAdapters::PoolManager#pool_configs `","user":{"login":"amarchenkoshopify","id":101111422,"node_id":"U_kgDOBgbWfg","avatar_url":"https://avatars.githubusercontent.com/u/101111422?v=4","gravatar_id":"","url":"https://api.github.com/users/amarchenkoshopify","html_url":"https://github.com/amarchenkoshopify","followers_url":"https://api.github.com/users/amarchenkoshopify/followers","following_url":"https://api.github.com/users/amarchenkoshopify/following{/other_user}","gists_url":"https://api.github.com/users/amarchenkoshopify/gists{/gist_id}","starred_url":"https://api.github.com/users/amarchenkoshopify/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amarchenkoshopify/subscriptions","organizations_url":"https://api.github.com/users/amarchenkoshopify/orgs","repos_url":"https://api.github.com/users/amarchenkoshopify/repos","events_url":"https://api.github.com/users/amarchenkoshopify/events{/privacy}","received_events_url":"https://api.github.com/users/amarchenkoshopify/received_events","type":"User","site_admin":false},"labels":[{"id":107186,"node_id":"MDU6TGFiZWwxMDcxODY=","url":"https://api.github.com/repos/rails/rails/labels/regression","name":"regression","color":"e10c02","default":false,"description":null},{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"eileencodes","id":1080678,"node_id":"MDQ6VXNlcjEwODA2Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/1080678?v=4","gravatar_id":"","url":"https://api.github.com/users/eileencodes","html_url":"https://github.com/eileencodes","followers_url":"https://api.github.com/users/eileencodes/followers","following_url":"https://api.github.com/users/eileencodes/following{/other_user}","gists_url":"https://api.github.com/users/eileencodes/gists{/gist_id}","starred_url":"https://api.github.com/users/eileencodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eileencodes/subscriptions","organizations_url":"https://api.github.com/users/eileencodes/orgs","repos_url":"https://api.github.com/users/eileencodes/repos","events_url":"https://api.github.com/users/eileencodes/events{/privacy}","received_events_url":"https://api.github.com/users/eileencodes/received_events","type":"User","site_admin":false},"assignees":[{"login":"eileencodes","id":1080678,"node_id":"MDQ6VXNlcjEwODA2Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/1080678?v=4","gravatar_id":"","url":"https://api.github.com/users/eileencodes","html_url":"https://github.com/eileencodes","followers_url":"https://api.github.com/users/eileencodes/followers","following_url":"https://api.github.com/users/eileencodes/following{/other_user}","gists_url":"https://api.github.com/users/eileencodes/gists{/gist_id}","starred_url":"https://api.github.com/users/eileencodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eileencodes/subscriptions","organizations_url":"https://api.github.com/users/eileencodes/orgs","repos_url":"https://api.github.com/users/eileencodes/repos","events_url":"https://api.github.com/users/eileencodes/events{/privacy}","received_events_url":"https://api.github.com/users/eileencodes/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/rails/rails/milestones/81","html_url":"https://github.com/rails/rails/milestone/81","labels_url":"https://api.github.com/repos/rails/rails/milestones/81/labels","id":7591006,"node_id":"MI_kwDNIULOAHPUXg","number":81,"title":"7.0.4","description":"","creator":{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":3,"state":"open","created_at":"2022-01-20T01:51:07Z","updated_at":"2022-08-30T13:21:37Z","due_on":null,"closed_at":null},"comments":2,"created_at":"2022-08-30T12:58:42Z","updated_at":"2022-08-31T12:37:42Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWhile working on memory efficiency investigation I noticed that a very big bunch of object allocations comes from a single method `ActiveRecord::ConnectionAdapters::PoolManager#pool_configs`:\r\n\r\n```ruby\r\n      def pool_configs(role = nil)\r\n        if role\r\n          @role_to_shard_mapping[role].values\r\n        else\r\n          @role_to_shard_mapping.flat_map { |_, shard_map| shard_map.values }\r\n        end\r\n      end \r\n```\r\n\r\nThis method is called on every activerecord operation and does not cache its result: could we think about a way of caching its result?\r\n\r\ncc @eileencodes \r\n\r\n### Expected behavior\r\n\r\n`#pool_configs` allocates configs once\r\n\r\n### Actual behavior\r\n\r\n`#pool_configs` allocates configs every time it is executed\r\n\r\n### System configuration\r\n**Rails version**: main branch\r\n\r\n**Ruby version**: 3.1\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45906/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45901","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45901/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45901/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45901/events","html_url":"https://github.com/rails/rails/issues/45901","id":1354555667,"node_id":"I_kwDNIULOULzhEw","number":45901,"title":"bin/rails dbconsole should include_password by default","user":{"login":"wpeterson","id":178135,"node_id":"MDQ6VXNlcjE3ODEzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/178135?v=4","gravatar_id":"","url":"https://api.github.com/users/wpeterson","html_url":"https://github.com/wpeterson","followers_url":"https://api.github.com/users/wpeterson/followers","following_url":"https://api.github.com/users/wpeterson/following{/other_user}","gists_url":"https://api.github.com/users/wpeterson/gists{/gist_id}","starred_url":"https://api.github.com/users/wpeterson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wpeterson/subscriptions","organizations_url":"https://api.github.com/users/wpeterson/orgs","repos_url":"https://api.github.com/users/wpeterson/repos","events_url":"https://api.github.com/users/wpeterson/events{/privacy}","received_events_url":"https://api.github.com/users/wpeterson/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-29T16:19:45Z","updated_at":"2022-08-30T00:17:43Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n1. Configure a Rails `config/database.yml` with a `password` required to connect\r\n2. Run `rails dbconsole`\r\n3. See prompt for database password, despite password being configured/available\r\n4. Run `rails dbconsole -p`\r\n5. See dbconsole properly load and use credentials to connect to database for DB console session\r\n\r\n### Expected behavior\r\nWhenever a Rails app has credentials like a password configured for a database, the database console session should use those credentials vs. prompting the user to re-enter a password interactively.  When credentials are not configured and a password is required, we should prompt then.\r\n\r\nThis behavior is implemented since early Rails versions but is disabled by default.  I propose we enable the proper password behavior by default.\r\n\r\n### Actual behavior\r\n`bin/rails dbconsole` always prompts for a password, even when one is configured for the app.\r\n\r\n### System configuration\r\n**Rails version**: All (6.x, 7.x, head)\r\n\r\n**Ruby version**: All \r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45901/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45901/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45899","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45899/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45899/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45899/events","html_url":"https://github.com/rails/rails/issues/45899","id":1353676820,"node_id":"I_kwDNIULOUK94FA","number":45899,"title":"Active Job unit tests fail using que 2.2.0","user":{"login":"yahonda","id":73684,"node_id":"MDQ6VXNlcjczNjg0","avatar_url":"https://avatars.githubusercontent.com/u/73684?v=4","gravatar_id":"","url":"https://api.github.com/users/yahonda","html_url":"https://github.com/yahonda","followers_url":"https://api.github.com/users/yahonda/followers","following_url":"https://api.github.com/users/yahonda/following{/other_user}","gists_url":"https://api.github.com/users/yahonda/gists{/gist_id}","starred_url":"https://api.github.com/users/yahonda/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yahonda/subscriptions","organizations_url":"https://api.github.com/users/yahonda/orgs","repos_url":"https://api.github.com/users/yahonda/repos","events_url":"https://api.github.com/users/yahonda/events{/privacy}","received_events_url":"https://api.github.com/users/yahonda/received_events","type":"User","site_admin":false},"labels":[{"id":123812746,"node_id":"MDU6TGFiZWwxMjM4MTI3NDY=","url":"https://api.github.com/repos/rails/rails/labels/activejob","name":"activejob","color":"5319e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-29T04:24:06Z","updated_at":"2022-09-09T15:33:02Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"### Steps to reproduce\r\nActive Job CI has been failing since que 2.2.0 is installed. https://buildkite.com/rails/rails/builds/89068#0182e6b9-7c84-4b85-a651-8d640f5eb076\r\n\r\n```ruby\r\ngit clone https://github.com/rails/rails\r\ncd rails/activejob\r\nbundle update que\r\nAJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\n```\r\n\r\nAlthough there are 3 failures and 75 errors. This script just runs a single test because it looks the root cause is the same.\r\n\r\n\r\n### Expected behavior\r\nIt should pass.\r\n\r\n### Actual behavior\r\nIt raises `ArgumentError: wrong number of arguments (given 2, expected 1)`.\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 62302\r\n\r\n# Running:\r\n\r\nE\r\n\r\nError:\r\nQueuingTest#test_run_queued_job:\r\nArgumentError: wrong number of arguments (given 2, expected 1)\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:78:in `run'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job_methods.rb:51:in `_run'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:248:in `block (2 levels) in _run_attrs'\r\n    (eval):9:in `run_job_middleware'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:247:in `block in _run_attrs'\r\n    <internal:kernel>:90:in `tap'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:246:in `_run_attrs'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:223:in `run'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/support/que/inline.rb:15:in `enqueue'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:66:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:27:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:67:in `block in enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:118:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:28:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:27:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:9:in `block (2 levels) in <module:Instrumentation>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:27:in `tag_logger'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:14:in `block (2 levels) in <module:Logging>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:138:in `run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:63:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:30:in `perform_later'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/cases/queuing_test.rb:14:in `block in <class:QueuingTest>'\r\n\r\n\r\nbin/test test/cases/queuing_test.rb:13\r\n\r\n\r\n\r\nFinished in 0.008930s, 111.9768 runs/s, 0.0000 assertions/s.\r\n1 runs, 0 assertions, 0 failures, 1 errors, 0 skips\r\n$\r\n```\r\n\r\n### Additional information\r\n* `require_job_options_kwarg?` always returns `false` because `JobWrapper.method(:enqueue).parameters` does not have any `[:key, :job_options]` \r\nwhere it looks expected to return `true`.\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 32774\r\n\r\n# Running:\r\n\r\n[46, 55] in ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n    46|       end\r\n    47|\r\n    48|       private\r\n    49|         def require_job_options_kwarg?\r\n    50|           require 'debug'\r\n=>  51|           binding.break\r\n    52|           @require_job_options_kwarg ||=\r\n    53|             JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }\r\n    54|         end\r\n    55|\r\n=>#0\tActiveJob::QueueAdapters::QueAdapter#require_job_options_kwarg? at ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:51\r\n  #1\tActiveJob::QueueAdapters::QueAdapter#enqueue(job=#<HelloJob:0x00007fc861807740 @arguments...) at ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:24\r\n  # and 40 frames (use `bt' command for all frames)\r\n(rdbg) JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }    # ruby\r\nfalse\r\n(rdbg) JobWrapper.method(:enqueue).parameters    # ruby\r\n[[:req, :args], [:keyreq, :priority], [:keyreq, :queue], [:key, :run_at]]\r\n(rdbg) quit    # command\r\nReally quit? [Y/n] Y\r\n```\r\n\r\n* By changing `require_job_options_kwarg?` always returns `true`, it raises `ArgumentError: missing keywords: :priority, :queue`\r\n\r\n```ruby\r\n$ git diff\r\ndiff --git a/activejob/lib/active_job/queue_adapters/que_adapter.rb b/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\nindex 41b3633a07..54e8cbc39b 100644\r\n--- a/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n+++ b/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n@@ -47,6 +47,7 @@ def enqueue_at(job, timestamp) # :nodoc:\r\n\r\n       private\r\n         def require_job_options_kwarg?\r\n+          return true\r\n           @require_job_options_kwarg ||=\r\n             JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }\r\n         end\r\n$\r\n```\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 21508\r\n\r\n# Running:\r\n\r\nE\r\n\r\nError:\r\nQueuingTest#test_run_queued_job:\r\nArgumentError: missing keywords: :priority, :queue\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:65:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:25:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:67:in `block in enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:118:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:28:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:27:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:9:in `block (2 levels) in <module:Instrumentation>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:27:in `tag_logger'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:14:in `block (2 levels) in <module:Logging>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:138:in `run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:63:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:30:in `perform_later'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/cases/queuing_test.rb:14:in `block in <class:QueuingTest>'\r\n\r\n\r\nbin/test test/cases/queuing_test.rb:13\r\n\r\n\r\n\r\nFinished in 0.008724s, 114.6312 runs/s, 0.0000 assertions/s.\r\n1 runs, 0 assertions, 0 failures, 1 errors, 0 skips\r\n$\r\n```\r\n\r\n\r\n### System configuration\r\n**Rails version**: main branch\r\n\r\n**Ruby version**: $ ruby -v\r\nruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [x86_64-linux]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45899/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45893","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45893/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45893/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45893/events","html_url":"https://github.com/rails/rails/issues/45893","id":1352793907,"node_id":"I_kwDNIULOUKH_Mw","number":45893,"title":"ActiveRecord: HMT with conditions does not update the in-memory collection when pushing new objects","user":{"login":"joanniclaborde","id":411925,"node_id":"MDQ6VXNlcjQxMTkyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/411925?v=4","gravatar_id":"","url":"https://api.github.com/users/joanniclaborde","html_url":"https://github.com/joanniclaborde","followers_url":"https://api.github.com/users/joanniclaborde/followers","following_url":"https://api.github.com/users/joanniclaborde/following{/other_user}","gists_url":"https://api.github.com/users/joanniclaborde/gists{/gist_id}","starred_url":"https://api.github.com/users/joanniclaborde/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joanniclaborde/subscriptions","organizations_url":"https://api.github.com/users/joanniclaborde/orgs","repos_url":"https://api.github.com/users/joanniclaborde/repos","events_url":"https://api.github.com/users/joanniclaborde/events{/privacy}","received_events_url":"https://api.github.com/users/joanniclaborde/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-26T22:40:12Z","updated_at":"2022-08-30T15:33:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi! When using a `has_many :a, through: :b` relation, and the `:b` relation has a condition, adding new objects doesn't update the in-memory collection properly (stops after the first object).\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :packages, force: true do |t|\r\n  end\r\n\r\n  create_table :package_items, force: true do |t|\r\n    t.integer :package_id\r\n    t.integer :item_id\r\n  end\r\n\r\n  create_table :items, force: true do |t|\r\n    t.boolean \"deleted\", default: false\r\n  end\r\nend\r\n\r\nclass Package < ActiveRecord::Base\r\n  has_many :package_items, ->{ where(item_id: Item.active.pluck(:id)) }\r\n  has_many :items, through: :package_items\r\nend\r\n\r\nclass PackageItem < ActiveRecord::Base\r\n  belongs_to :package\r\n  belongs_to :item\r\nend\r\n\r\nclass Item < ActiveRecord::Base\r\n  has_many :package_items\r\n  has_many :packages, through: :package_items\r\n\r\n  scope :active, -> { where(deleted: false) }\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    package = Package.create!\r\n    package.items << Item.create!\r\n    package.items << Item.create!\r\n    package.items << Item.create!\r\n\r\n    # This should be [3, 3, 3] but we get [3, 1, 3]\r\n    assert_equal [3, 3, 3], [Item.count, package.items.count, package.reload.items.count]\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n`package.items.count` is equal to 3.\r\n\r\n### Actual behavior\r\n`package.items.count` is equal to 1, even though all the items and relations are created properly (see assertion).\r\n\r\n### System configuration\r\n**Rails version**: tested on `7.1.0.alpha` and `6.1.6.1`.\r\n\r\n**Ruby version**: tested on `2.7.5`.\r\n\r\n### Workaround\r\nI was able to fix this issue by changing the weird condition to a proper scope:\r\n\r\n```ruby\r\nclass Package < ActiveRecord::Base\r\n  has_many :package_items, ->{ includes(:item).merge(Item.active) }\r\n  has_many :items, through: :package_items\r\nend\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45893/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45893/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45880","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45880/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45880/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45880/events","html_url":"https://github.com/rails/rails/issues/45880","id":1349546108,"node_id":"I_kwDNIULOUHBwfA","number":45880,"title":"Google search links to old API docs","user":{"login":"abraham","id":3341,"node_id":"MDQ6VXNlcjMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/3341?v=4","gravatar_id":"","url":"https://api.github.com/users/abraham","html_url":"https://github.com/abraham","followers_url":"https://api.github.com/users/abraham/followers","following_url":"https://api.github.com/users/abraham/following{/other_user}","gists_url":"https://api.github.com/users/abraham/gists{/gist_id}","starred_url":"https://api.github.com/users/abraham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abraham/subscriptions","organizations_url":"https://api.github.com/users/abraham/orgs","repos_url":"https://api.github.com/users/abraham/repos","events_url":"https://api.github.com/users/abraham/events{/privacy}","received_events_url":"https://api.github.com/users/abraham/received_events","type":"User","site_admin":true},"labels":[{"id":150377,"node_id":"MDU6TGFiZWwxNTAzNzc=","url":"https://api.github.com/repos/rails/rails/labels/docs","name":"docs","color":"02d7e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-24T14:33:55Z","updated_at":"2022-08-25T23:48:01Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n1. Search Google for a Rails API https://www.google.com/search?q=rails+update_all\r\n2. Follow link for \"ActiveRecord::Relation - Rails API\"\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n\r\nFind documentation for the latest version of Rails. Currently `7.0.3.1`.\r\n\r\n`https://api.rubyonrails.org/classes/ActiveRecord/Relation.html`\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n\r\nFind documentation for the the very old version of `3.2.3`.\r\n\r\n`https://api.rubyonrails.org/v3.2.3/classes/ActiveRecord/Relation.html`\r\n\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45880/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45880/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45832","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45832/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45832/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45832/events","html_url":"https://github.com/rails/rails/issues/45832","id":1339487378,"node_id":"I_kwDNIULOT9b0kg","number":45832,"title":"MySQL 8.0 VARBINARY default value is hexadecimal","user":{"login":"HParker","id":4482399,"node_id":"MDQ6VXNlcjQ0ODIzOTk=","avatar_url":"https://avatars.githubusercontent.com/u/4482399?v=4","gravatar_id":"","url":"https://api.github.com/users/HParker","html_url":"https://github.com/HParker","followers_url":"https://api.github.com/users/HParker/followers","following_url":"https://api.github.com/users/HParker/following{/other_user}","gists_url":"https://api.github.com/users/HParker/gists{/gist_id}","starred_url":"https://api.github.com/users/HParker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HParker/subscriptions","organizations_url":"https://api.github.com/users/HParker/orgs","repos_url":"https://api.github.com/users/HParker/repos","events_url":"https://api.github.com/users/HParker/events{/privacy}","received_events_url":"https://api.github.com/users/HParker/received_events","type":"User","site_admin":true},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":309390193,"node_id":"MDU6TGFiZWwzMDkzOTAxOTM=","url":"https://api.github.com/repos/rails/rails/labels/MySQL","name":"MySQL","color":"fef2c0","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-08-15T20:42:09Z","updated_at":"2022-08-16T10:23:16Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Default values on VARBINARY columns changed behavior between MySQL 5.7 and 8.0\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"mysql2\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"mysql2\", database: \"adam_test\", prepared_statements: false, host: '127.0.0.1', port: 3307, user: \"root\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.binary :some_binary, null: false, limit: 1024, default: \"hello-world\"\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_mysql_defaults\r\n    post = Post.create!\r\n\r\n    mysql_vars = ActiveRecord::Base.connection.select_rows(\"SHOW VARIABLES LIKE '%version%'\")\r\n    puts mysql_vars.inspect\r\n    puts Post.column_defaults\r\n\r\n    # assert_equal \"0x68656C6C6F2D776F726C64\", post.some_binary # This passes\r\n    assert_equal \"hello-world\", post.some_binary # This fails\r\n\r\n    reloaded_post = Post.first\r\n    assert_equal \"hello-world\", reloaded_post.some_binary # this passes\r\n  end\r\nend\r\n```\r\n\r\nOn MySQL 5.7:\r\n\r\n```ruby\r\nPost.column_defaults # => {\"id\"=>nil, \"some_binary\"=>\"hello-world\"}\r\n```\r\n\r\nOn MySQL 8.0:\r\n\r\n```ruby\r\nPost.column_defaults # => {\"id\"=>nil, \"some_binary\"=>\"0x68656C6C6F2D776F726C64\"}\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe default value on binary columns should be Ruby strings, not ruby strings of hexadecimal.\r\n\r\n### Actual behavior\r\n\r\nThe column default in MySQL 8.0 is a hexadecimal string representing the binary data.\r\n\r\n### System configuration\r\n**Rails version**: main\r\n\r\n**Ruby version**: 3.1.0\r\n\r\nSome interesting MySQL forum posts about this behavior change:\r\n\r\n- https://forums.mysql.com/read.php?24,685577,685577\r\n- https://forums.mysql.com/read.php?20,698061,698061#msg-698061\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45832/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45832/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45830","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45830/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45830/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45830/events","html_url":"https://github.com/rails/rails/issues/45830","id":1338922250,"node_id":"I_kwDNIULOT85VCg","number":45830,"title":"ActiveRecord Rollbacks on errors which happen on commit","user":{"login":"Baxxx","id":17880055,"node_id":"MDQ6VXNlcjE3ODgwMDU1","avatar_url":"https://avatars.githubusercontent.com/u/17880055?v=4","gravatar_id":"","url":"https://api.github.com/users/Baxxx","html_url":"https://github.com/Baxxx","followers_url":"https://api.github.com/users/Baxxx/followers","following_url":"https://api.github.com/users/Baxxx/following{/other_user}","gists_url":"https://api.github.com/users/Baxxx/gists{/gist_id}","starred_url":"https://api.github.com/users/Baxxx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baxxx/subscriptions","organizations_url":"https://api.github.com/users/Baxxx/orgs","repos_url":"https://api.github.com/users/Baxxx/repos","events_url":"https://api.github.com/users/Baxxx/events{/privacy}","received_events_url":"https://api.github.com/users/Baxxx/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":126910270,"node_id":"MDU6TGFiZWwxMjY5MTAyNzA=","url":"https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps","name":"With reproduction steps","color":"009800","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2022-08-15T12:09:14Z","updated_at":"2022-08-25T13:32:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nIn some of our projects we use Postgres as database, and for some cases we deferred trigger constraints. These triggers fire up when `COMMIT` is called. Trigger can raise an error, which kills the transaction. ActiveRecord catches the error, and bubbles it up to developer, but it also sends `ROLLBACK` to Postgres, to which Postgres gives a warning that there is no transaction in progress.\r\n\r\nI didn't test this with sqlite3 or mysql.\r\n\r\nYou can see the reproduction script, and screenshot with the current behavior.\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", \"~> 7\"\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"logger\"\r\n\r\nlogger = Logger.new(STDOUT)\r\n\r\n# This connection will do for database-independent bug reports.\r\npg_opts = {adapter: \"postgresql\", database: \"ar_rollback_after_failed_commit_issue\"}\r\n\r\nActiveRecord::Base.establish_connection(pg_opts.except(:database))\r\nActiveRecord::Base.connection.drop_database(pg_opts[:database])\r\nActiveRecord::Base.connection.create_database(pg_opts[:database])\r\nlogger.info \"Database #{pg_opts[:database]} was (re)created.\"\r\n\r\nActiveRecord::Base.establish_connection(pg_opts)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  execute <<~SQL\r\n    CREATE FUNCTION perform_custom_validation()\r\n      RETURNS TRIGGER\r\n      LANGUAGE plpgsql\r\n      AS $$\r\n        DECLARE\r\n          total_invalid INTEGER;\r\n        BEGIN\r\n          SELECT COUNT(*) INTO total_invalid\r\n          FROM things\r\n          WHERE name = 'bad';\r\n\r\n          IF (total_invalid > 0) THEN\r\n            RAISE EXCEPTION 'There are bad things';\r\n          END IF;\r\n          RETURN NULL;\r\n        END;\r\n      $$;\r\n\r\n    CREATE TABLE \"things\" (\r\n      \"id\" bigserial primary key,\r\n      \"name\" character varying NOT NULL\r\n    );\r\n\r\n    CREATE CONSTRAINT\r\n      TRIGGER bank_transaction_rl_payment_date_validation\r\n      AFTER INSERT OR UPDATE ON things\r\n      DEFERRABLE INITIALLY DEFERRED\r\n      FOR EACH ROW EXECUTE FUNCTION perform_custom_validation();\r\n  SQL\r\nend\r\n\r\nclass Thing < ActiveRecord::Base\r\n  validates :name, presence: true\r\nend\r\n\r\n# All good\r\nlogger.info \"First transaction\"\r\nThing.create!(name: \"good\")\r\n\r\n# AR tries to commit, DB raises an error, AR tries to ROLLBACK, and PG gives a warning\r\nbegin\r\n  logger.info \"Second transaction\"\r\n  Thing.create!(name: \"bad\")\r\nrescue StandardError\r\n  # Doesn't matter\r\nend\r\n```\r\n\r\n### Expected behavior\r\nActiveRecord should not `ROLLBACK`, as there is no transaction in progress.\r\n\r\n### Actual behavior\r\nActiveRecord tries to `ROLLBACK`.\r\n\r\n![Screenshot from 2022-08-15 14-07-11](https://user-images.githubusercontent.com/17880055/184632335-0277cd27-4c7b-4b98-94a8-373be34a87ee.png)\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 2.7.5p203\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45830/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45830/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45823","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45823/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45823/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45823/events","html_url":"https://github.com/rails/rails/issues/45823","id":1337409694,"node_id":"I_kwDNIULOT7dAng","number":45823,"title":"Change Column with Raw Character Set Failure","user":{"login":"ahoglund","id":3407303,"node_id":"MDQ6VXNlcjM0MDczMDM=","avatar_url":"https://avatars.githubusercontent.com/u/3407303?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoglund","html_url":"https://github.com/ahoglund","followers_url":"https://api.github.com/users/ahoglund/followers","following_url":"https://api.github.com/users/ahoglund/following{/other_user}","gists_url":"https://api.github.com/users/ahoglund/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoglund/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoglund/subscriptions","organizations_url":"https://api.github.com/users/ahoglund/orgs","repos_url":"https://api.github.com/users/ahoglund/repos","events_url":"https://api.github.com/users/ahoglund/events{/privacy}","received_events_url":"https://api.github.com/users/ahoglund/received_events","type":"User","site_admin":true},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":126910270,"node_id":"MDU6TGFiZWwxMjY5MTAyNzA=","url":"https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps","name":"With reproduction steps","color":"009800","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-12T16:21:50Z","updated_at":"2022-08-12T20:47:38Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"With [this recent change to how collation is handled for column changes](https://github.com/rails/rails/pull/45744/files), there is now a potential for older migrations written in a specific manner to break if the `collation:` argument is not specific.\r\n\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\n# you need to install mysql locally for this to work.\r\n# on Mac:\r\n# brew install mysql\r\n# brew services start mysql\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"mysql2\"\r\n\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nclient = Mysql2::Client.new(host: 'localhost', username: \"root\")\r\nclient.query(\"DROP DATABASE test\")\r\nclient.query(\"CREATE DATABASE test\")\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"mysql2\", database: \"test\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :payments, force: true do |t|\r\n    t.string :description, \"varchar(64)\", null: false\r\n  end\r\nend\r\n\r\nclass Payment < ActiveRecord::Base\r\nend\r\n\r\nclass ChangeAmountToAddScale < ActiveRecord::Migration[7.1]\r\n  # This sets the default character set for the payments\r\n  # table to utf32 with a default COLLATION of utf32_general_ci.\r\n  # This can be verified by running the following query:\r\n  #\r\n  # SHOW CHARACTER SET;\r\n  #\r\n  connection.execute(<<~SQL)\r\n    ALTER TABLE payments CONVERT TO CHARACTER SET utf32\r\n  SQL\r\n\r\n  def change\r\n    reversible do |dir|\r\n      dir.up do\r\n        change_table(:payments, bulk: true) do |t|\r\n          # The default collation of utf32_general_ci\r\n          # will not be compatible with this ascii character set. \r\n          #\r\n          # when we build the column change now we automatically\r\n          # try to assign the previous collation to the column if no `collation:` is specified.\r\n          # \r\n          # https://github.com/rails/rails/pull/45744\r\n          #\r\n          # The workaround is to add `collation: 'ascii_bin'` or `collation: 'ascii_general_ci'` to the change.\r\n          #\r\n          # This isn't a huge deal and it has a workaround but it _will_ break\r\n          # anyone who has migrations that are written like this and upgrade to this version\r\n          # of Rails.\r\n          t.change :description, \"varchar(64) CHARACTER SET ascii\", null: false\r\n        end\r\n      end\r\n\r\n      dir.down do\r\n        change_table(:payments, bulk: true) do |t|\r\n          t.change :description, \"varchar(64)\", null: false\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_migration_up\r\n    ChangeAmountToAddScale.migrate(:up)\r\n    Payment.reset_column_information\r\n\r\n    assert_equal \"varchar\", Payment.columns.last.sql_type\r\n  end\r\n\r\n  def test_migration_down\r\n    ChangeAmountToAddScale.migrate(:down)\r\n    Payment.reset_column_information\r\n\r\n    assert_equal \"varchar\", Payment.columns.last.sql_type\r\n  end\r\nend\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nI would expect this to detect that the character set is being changed, and either \r\n\r\n1. change the collation to be compatible.\r\n2. At least give a clearer error that requires the `collation:` arg to be passed when the character set is being modified.\r\n\r\n### Actual behavior\r\n\r\nThis error:\r\n\r\n```\r\nError:\r\nBugTest#test_migration_up:\r\nActiveRecord::StatementInvalid: Mysql2::Error: COLLATION 'utf32_general_ci' is not valid for CHARACTER SET 'ascii'\r\n    test.rb:51:in `block (2 levels) in change'\r\n    test.rb:50:in `block in change'\r\n    test.rb:49:in `change'\r\n    test.rb:67:in `test_migration_up'\r\n```\r\n\r\n### System configuration\r\n**Rails version**: main\r\n**Ruby version**: ruby 3.1.1p18\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45823/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45823/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45822","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45822/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45822/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45822/events","html_url":"https://github.com/rails/rails/issues/45822","id":1337253221,"node_id":"I_kwDNIULOT7TdZQ","number":45822,"title":"ActiveRecord: Wrong results returned by ActiveRecord::Associations::Preloader when intermediate association is already preloaded.","user":{"login":"yopzer","id":6330271,"node_id":"MDQ6VXNlcjYzMzAyNzE=","avatar_url":"https://avatars.githubusercontent.com/u/6330271?v=4","gravatar_id":"","url":"https://api.github.com/users/yopzer","html_url":"https://github.com/yopzer","followers_url":"https://api.github.com/users/yopzer/followers","following_url":"https://api.github.com/users/yopzer/following{/other_user}","gists_url":"https://api.github.com/users/yopzer/gists{/gist_id}","starred_url":"https://api.github.com/users/yopzer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yopzer/subscriptions","organizations_url":"https://api.github.com/users/yopzer/orgs","repos_url":"https://api.github.com/users/yopzer/repos","events_url":"https://api.github.com/users/yopzer/events{/privacy}","received_events_url":"https://api.github.com/users/yopzer/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"jhawthorn","id":131752,"node_id":"MDQ6VXNlcjEzMTc1Mg==","avatar_url":"https://avatars.githubusercontent.com/u/131752?v=4","gravatar_id":"","url":"https://api.github.com/users/jhawthorn","html_url":"https://github.com/jhawthorn","followers_url":"https://api.github.com/users/jhawthorn/followers","following_url":"https://api.github.com/users/jhawthorn/following{/other_user}","gists_url":"https://api.github.com/users/jhawthorn/gists{/gist_id}","starred_url":"https://api.github.com/users/jhawthorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhawthorn/subscriptions","organizations_url":"https://api.github.com/users/jhawthorn/orgs","repos_url":"https://api.github.com/users/jhawthorn/repos","events_url":"https://api.github.com/users/jhawthorn/events{/privacy}","received_events_url":"https://api.github.com/users/jhawthorn/received_events","type":"User","site_admin":true},"assignees":[{"login":"jhawthorn","id":131752,"node_id":"MDQ6VXNlcjEzMTc1Mg==","avatar_url":"https://avatars.githubusercontent.com/u/131752?v=4","gravatar_id":"","url":"https://api.github.com/users/jhawthorn","html_url":"https://github.com/jhawthorn","followers_url":"https://api.github.com/users/jhawthorn/followers","following_url":"https://api.github.com/users/jhawthorn/following{/other_user}","gists_url":"https://api.github.com/users/jhawthorn/gists{/gist_id}","starred_url":"https://api.github.com/users/jhawthorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhawthorn/subscriptions","organizations_url":"https://api.github.com/users/jhawthorn/orgs","repos_url":"https://api.github.com/users/jhawthorn/repos","events_url":"https://api.github.com/users/jhawthorn/events{/privacy}","received_events_url":"https://api.github.com/users/jhawthorn/received_events","type":"User","site_admin":true}],"milestone":null,"comments":1,"created_at":"2022-08-12T14:06:55Z","updated_at":"2022-08-18T23:36:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"activerecord\", \"7.0.3.1\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :a_records, force: true\r\n\r\n  create_table :b_records, force: true do |t|\r\n    t.references :a_record\r\n    t.references :c_record\r\n  end\r\n\r\n  create_table :c_records, force: true\r\n\r\n  create_table :d_records, force: true do |t|\r\n    t.references :c_record\r\n  end\r\nend\r\n\r\nclass ARecord < ActiveRecord::Base\r\n  has_one :b_record\r\n  has_one :c_record, through: :b_record\r\n  has_many :d_records, through: :c_record\r\nend\r\n\r\nclass BRecord < ActiveRecord::Base\r\n  belongs_to :a_record\r\n  belongs_to :c_record\r\nend\r\n\r\nclass CRecord < ActiveRecord::Base\r\n  has_one :b_record\r\n  has_many :d_records\r\nend\r\n\r\nclass DRecord < ActiveRecord::Base\r\n  belongs_to :c_record\r\nend\r\n\r\na = ARecord.create!\r\nc = CRecord.create!\r\nBRecord.create!(a_record: a, c_record: c)\r\nDRecord.create!(c_record: c)\r\nDRecord.create!(c_record: c)\r\n\r\na.reload\r\na.c_record # NB: if removed this works\r\n\r\n::ActiveRecord::Associations::Preloader.new(records: [a], associations: :d_records).call\r\nputs({ record_ids: a.d_records.map(&:id), size: a.d_records.size })\r\n```\r\n\r\n### Expected behavior\r\nTwo records should be loaded:\r\n`{:record_ids=>[1, 2], :size=>2}`\r\n\r\n### Actual behavior\r\nNo records are loaded:\r\n`{:record_ids=>[], :size=>0}`\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 2.7.5\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45822/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45822/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45817","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45817/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45817/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45817/events","html_url":"https://github.com/rails/rails/issues/45817","id":1336797388,"node_id":"I_kwDNIULOT63ozA","number":45817,"title":"Value of attribute default proc is shared between instances after dup + dirty tracking","user":{"login":"quadule","id":15299,"node_id":"MDQ6VXNlcjE1Mjk5","avatar_url":"https://avatars.githubusercontent.com/u/15299?v=4","gravatar_id":"","url":"https://api.github.com/users/quadule","html_url":"https://github.com/quadule","followers_url":"https://api.github.com/users/quadule/followers","following_url":"https://api.github.com/users/quadule/following{/other_user}","gists_url":"https://api.github.com/users/quadule/gists{/gist_id}","starred_url":"https://api.github.com/users/quadule/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/quadule/subscriptions","organizations_url":"https://api.github.com/users/quadule/orgs","repos_url":"https://api.github.com/users/quadule/repos","events_url":"https://api.github.com/users/quadule/events{/privacy}","received_events_url":"https://api.github.com/users/quadule/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-12T06:16:00Z","updated_at":"2022-08-15T15:56:11Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWhen an attribute without a database column defines a default proc, `dup`ing a model in which the default wasn't accessed passes the unevaluated `UserProvidedDefault` attribute to the new instance as the attribute's original value. Checking the new attribute for changes will then memoize the value in the original attribute definition, making it the default value in every new model instance afterward.\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n  gem \"rails\", github: \"rails/rails\", ref: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Schema.define do\r\n  create_table :cats do |t|\r\n    t.string :name\r\n  end\r\nend\r\n\r\nclass Cat < ActiveRecord::Base\r\n  attribute :sounds, default: -> { [] }\r\nend\r\n\r\nclass VirtualAttributeTest < Minitest::Test\r\n  def test_virtual_attribute_defaults_are_independent\r\n    Cat.new.dup.save!\r\n    Cat.new.sounds << \"meow\"\r\n    refute_same Cat.new.sounds, Cat.new.sounds\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nEach new instance should get a new default value from the proc.\r\n\r\n### Actual behavior\r\nAfter using dirty tracking on a duplicated instance with an uncalled proc default, all new instances of a model receive the same default value and share any changes made to it.\r\n\r\n### Affected versions\r\nThis seems to date back quite a while; the test fails on the main branch back to 5-1-stable.\r\n\r\n### Credits\r\nThanks to @GBH for originally discovering this bug.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45817/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45817/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45794","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45794/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45794/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45794/events","html_url":"https://github.com/rails/rails/issues/45794","id":1332999733,"node_id":"I_kwDNIULOT3P2NQ","number":45794,"title":"Action Cable client goes in a connection loop if you subscribe multiple times to the same channel","user":{"login":"ProGM","id":5167659,"node_id":"MDQ6VXNlcjUxNjc2NTk=","avatar_url":"https://avatars.githubusercontent.com/u/5167659?v=4","gravatar_id":"","url":"https://api.github.com/users/ProGM","html_url":"https://github.com/ProGM","followers_url":"https://api.github.com/users/ProGM/followers","following_url":"https://api.github.com/users/ProGM/following{/other_user}","gists_url":"https://api.github.com/users/ProGM/gists{/gist_id}","starred_url":"https://api.github.com/users/ProGM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ProGM/subscriptions","organizations_url":"https://api.github.com/users/ProGM/orgs","repos_url":"https://api.github.com/users/ProGM/repos","events_url":"https://api.github.com/users/ProGM/events{/privacy}","received_events_url":"https://api.github.com/users/ProGM/received_events","type":"User","site_admin":false},"labels":[{"id":300028327,"node_id":"MDU6TGFiZWwzMDAwMjgzMjc=","url":"https://api.github.com/repos/rails/rails/labels/actioncable","name":"actioncable","color":"bfdadc","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-09T09:48:36Z","updated_at":"2022-08-17T17:57:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\nYou can just start from a fresh `rails new [project-name]` installation.\r\nChannel code:\r\n```ruby\r\nclass ArticleChannel < ApplicationCable::Channel\r\n  def subscribed\r\n    stream_from \"ArticleChannel\"\r\n  end\r\n\r\n  def unsubscribed\r\n    # Any cleanup needed when channel is unsubscribed\r\n  end\r\nend\r\n```\r\n\r\nJavascript code:\r\n```javascript\r\nimport consumer from \"channels/consumer\"\r\n\r\nfunction subscribe() {\r\n\treturn consumer.subscriptions.create('ArticleChannel', {\r\n\t\tconnected() {\r\n\t\t\tconsole.log('connected');\r\n\t\t\t// Called when the subscription is ready for use on the server\r\n\t\t},\r\n\r\n\t\tdisconnected() {\r\n\t\t\tconsole.log('disconnected');\r\n\t\t\t// Called when the subscription has been terminated by the server\r\n\t\t},\r\n\r\n\t\treceived(data) {\r\n\t\t\tconsole.log('received', data);\r\n\t\t\t// Called when there's incoming data on the websocket for this channel\r\n\t\t}\r\n\t});\r\n}\r\n\r\nsetTimeout(() => {\r\n\tsubscribe();\r\n}, 3000);\r\n\r\nsetTimeout(() => {\r\n\tsubscribe();\r\n}, 4000);\r\n```\r\n\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nAny of these options could be considered an expected behavior:\r\n* Everything just works™, both subscriptions receive notification from that channel and no error is raised\r\n* The second `subscription.create(...)` raises some kind of error, notifying that the channel is already connected\r\n* The second `subscription.create(...)` returns the same instance of Subscription and writes a `console.warning` in console\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nThe second subscriptions triggers a connection loop.\r\n\r\nExample logs with `ActionCable.logger.enabled = true`.\r\n\r\n```\r\n[ActionCable] Opening WebSocket, current state is null, subprotocols: actioncable-v1-json,actioncable-unsupported 1660037219747\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] ConnectionMonitor started. stale threshold = 6 s 1660037219748\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] WebSocket onopen event, using 'actioncable-v1-json' subprotocol 1660037219758\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] ConnectionMonitor recorded connect 1660037219759\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor guaranteeing {\"channel\":\"ArticleChannel\"} 1660037219760\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] Subscription confirmed {\"channel\":\"ArticleChannel\"} 1660037219762\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor forgetting {\"channel\":\"ArticleChannel\"} 1660037219762\r\narticle_channel-b29f3f7bf31169dfadd26c7747a46706d4992a1fd842de8268f206c5f0a0fe45.js:6 connected\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor guaranteeing {\"channel\":\"ArticleChannel\"} 1660037220744\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221248\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221248\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n... and so on, forever...\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 3.1\r\n\r\n### Possible solutions\r\nThis issue happens because the identifier of both subscriptions is the same. Since Rails (ActionCable) doesn't answer to any subsequential command \"subscribe\" from the same client (in this case: `{\"command\":\"subscribe\",\"identifier\":\"{\\\"channel\\\":\\\"ArticleChannel\\\"}\"}`), the `SubscriptionGuarantor` considers the connection failed and [retries to connect after 500ms](https://github.com/rails/rails/blob/8994f09dd2f6ae363e74d8ee3b24700d9db94a16/actioncable/app/assets/javascripts/actioncable.esm.js#L351).\r\n\r\nI see various options to fix this:\r\n* Raise an exception when trying to create a subscription with the same identifier\r\n* Add a random/uuid to the identifier when connecting, so two connection would not share the same identifier? (I've already tested it, and it seems to fix)\r\n\r\nWould you accept a PR from me regarding this?","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45794/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45794/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45791","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45791/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45791/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45791/events","html_url":"https://github.com/rails/rails/issues/45791","id":1332570977,"node_id":"I_kwDNIULOT21rYQ","number":45791,"title":"Google::Apis::ClientError raised when using ActiveStorage to generate signed URLs to access a file in a GCS bucket with GKE Workload Identity","user":{"login":"danielyazbek","id":18390164,"node_id":"MDQ6VXNlcjE4MzkwMTY0","avatar_url":"https://avatars.githubusercontent.com/u/18390164?v=4","gravatar_id":"","url":"https://api.github.com/users/danielyazbek","html_url":"https://github.com/danielyazbek","followers_url":"https://api.github.com/users/danielyazbek/followers","following_url":"https://api.github.com/users/danielyazbek/following{/other_user}","gists_url":"https://api.github.com/users/danielyazbek/gists{/gist_id}","starred_url":"https://api.github.com/users/danielyazbek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielyazbek/subscriptions","organizations_url":"https://api.github.com/users/danielyazbek/orgs","repos_url":"https://api.github.com/users/danielyazbek/repos","events_url":"https://api.github.com/users/danielyazbek/events{/privacy}","received_events_url":"https://api.github.com/users/danielyazbek/received_events","type":"User","site_admin":false},"labels":[{"id":664533972,"node_id":"MDU6TGFiZWw2NjQ1MzM5NzI=","url":"https://api.github.com/repos/rails/rails/labels/activestorage","name":"activestorage","color":"bfd4f2","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-09T01:05:08Z","updated_at":"2022-08-09T15:53:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nConfigure ActiveStorage with GKE Workload identity (as documented [here](https://edgeguides.rubyonrails.org/active_storage_overview.html#google-cloud-storage-service)):\r\n\r\n```ruby\r\ngoogle:\r\n  service: GCS\r\n  iam: true\r\n  project: <%= ENV['ACTIVE_STORAGE_PROJECT'] %>\r\n  bucket: <%= ENV['ACTIVE_STORAGE_BUCKET'] %>\r\n```\r\n\r\nDefine a class:\r\n```ruby\r\nclass Transaction < ApplicationRecord\r\n  has_one_attached :csv_report\r\nend\r\n```\r\n\r\nWrite something to ActiveStorage:\r\n```ruby\r\nt = Transaction.create\r\nt.csv_report.attach(io: StringIO.new(\"A,B,C\"), filename: 'test.csv')\r\n```\r\n\r\nGenerate a Signed URL\r\n```ruby\r\nRails.application.routes.url_helpers.rails_blob_url(Transaction.last.csv_report, disposition: 'attachment')\r\n```\r\n\r\nPaste the generated URL into a browser\r\n\r\n### Expected behavior\r\nActiveRecord provides the attachment\r\n\r\n### Actual behavior\r\nError is raised:\r\n\r\n```\r\nGoogle::Apis::ClientError (Invalid request):\r\ngems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:236:in `check_status': Invalid request (Google::Apis::ClientError)\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/api_command.rb:134:in `check_status'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:199:in `process_response'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:318:in `execute_once'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:118:in `block (2 levels) in execute'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:61:in `block in retriable'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `times'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `retriable'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:115:in `block in execute'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:61:in `block in retriable'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `times'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `retriable'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:105:in `execute'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/base_service.rb:397:in `execute_or_queue_command'\r\n    from gems/google-apis-iamcredentials_v1-0.13.0/lib/google/apis/iamcredentials_v1/service.rb:158:in `sign_service_account_blob'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service/gcs_service.rb:232:in `block in signer'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file/signer_v2.rb:135:in `generate_signature'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file/signer_v2.rb:128:in `signed_url'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file.rb:1801:in `signed_url'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service/gcs_service.rb:160:in `private_url'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:123:in `block in url'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications/instrumenter.rb:24:in `instrument'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications.rb:206:in `instrument'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:163:in `instrument'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:118:in `url'\r\n    from gems/activestorage-7.0.3.1models/active_storage/blob.rb:217:in `url'\r\n    from gems/activestorage-7.0.3.1controllers/active_storage/blobs/redirect_controller.rb:14:in `show'\r\n```\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 3.1.2\r\n\r\n**google-cloud-storage gem version:** 1.38.0\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45791/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45791/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45778","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45778/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45778/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45778/events","html_url":"https://github.com/rails/rails/issues/45778","id":1330360134,"node_id":"I_kwDNIULOT0uvRg","number":45778,"title":"ActiveStorage attachments are lost when casting using Becomes","user":{"login":"markedmondson","id":1653699,"node_id":"MDQ6VXNlcjE2NTM2OTk=","avatar_url":"https://avatars.githubusercontent.com/u/1653699?v=4","gravatar_id":"","url":"https://api.github.com/users/markedmondson","html_url":"https://github.com/markedmondson","followers_url":"https://api.github.com/users/markedmondson/followers","following_url":"https://api.github.com/users/markedmondson/following{/other_user}","gists_url":"https://api.github.com/users/markedmondson/gists{/gist_id}","starred_url":"https://api.github.com/users/markedmondson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markedmondson/subscriptions","organizations_url":"https://api.github.com/users/markedmondson/orgs","repos_url":"https://api.github.com/users/markedmondson/repos","events_url":"https://api.github.com/users/markedmondson/events{/privacy}","received_events_url":"https://api.github.com/users/markedmondson/received_events","type":"User","site_admin":false},"labels":[{"id":664533972,"node_id":"MDU6TGFiZWw2NjQ1MzM5NzI=","url":"https://api.github.com/repos/rails/rails/labels/activestorage","name":"activestorage","color":"bfd4f2","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-05T20:19:16Z","updated_at":"2022-08-09T18:05:34Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\nCreate an ActiveRecord model with an ActiveStorage relation. Initialize and add the associated attachment. Cast the object to another subclassed model, the associated attachment is lost.\r\n\r\n```ruby\r\nunless File.exist?('Gemfile')\r\n    File.write('Gemfile', <<-GEMFILE)\r\n    source 'https://rubygems.org'\r\n    gem 'rails', '~> 6.1'\r\n    gem 'sqlite3'\r\n    GEMFILE\r\n\r\n    system 'bundle'\r\nend\r\n\r\nrequire 'bundler'\r\nBundler.setup(:default)\r\n\r\nrequire 'active_record'\r\nrequire 'active_storage/engine'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  config.hosts << 'example.org'\r\n  config.eager_load = false\r\n  config.session_store :cookie_store, key: 'cookie_store_key'\r\n  secrets.secret_key_base = 'secret_key_base'\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  config.active_storage.service = :local\r\n  config.active_storage.service_configurations = {\r\n    local: {\r\n      root: Dir.tmpdir,\r\n      service: 'Disk'\r\n    }\r\n  }\r\nend\r\n\r\nENV['DATABASE_URL'] = 'sqlite3::memory:'\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\nRails.application.initialize!\r\n\r\nrequire ActiveStorage::Engine.root.join('db/migrate/20170806125915_create_active_storage_tables.rb').to_s\r\n\r\nActiveRecord::Schema.define do\r\n  CreateActiveStorageTables.new.change\r\n\r\n  create_table :posts do |t|\r\n    t.string :title\r\n    t.string :text\r\n  end\r\n\r\n  create_table :comments do |t|\r\n    t.belongs_to :post\r\n    t.string :text\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post\r\n  has_one_attached :image\r\nend\r\n\r\nclass ModeratedComment < Comment; end\r\n\r\nclass BugTest < Minitest::Test\r\n  def setup\r\n    @post = Post.create(title: 'Post', text: 'Welcome')\r\n  end\r\n\r\n  def test_association\r\n    comment = @post.comments.new(text: 'I do not like this')\r\n\r\n    moderated_comment = comment.becomes(ModeratedComment)\r\n\r\n    assert_equal @post, moderated_comment.post # Pass\r\n  end\r\n\r\n  def test_attachment\r\n    file = ActiveStorage::Blob.create_and_upload!(\r\n      content_type: \"image/png\",\r\n      filename: \"image.png\",\r\n      io: ::StringIO.new(\"png\"),\r\n    )\r\n    comment = @post.comments.new(text: 'I do not like this', image: file)\r\n\r\n    moderated_comment = comment.becomes(ModeratedComment)\r\n\r\n    assert moderated_comment.image.attached? # Fail\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nWhen casting an ActiveRecord to another model, I expect the associations to be copied thus I expect attached ActiveStorage association assets to be copied.\r\n\r\n### Actual behavior\r\nPreviously attached ActiveStorage associated objects are lost on the original object.\r\n\r\n### System configuration\r\n**Rails version**: 6.1.6.1\r\n\r\n**Ruby version**: 3.0.4\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45778/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45778/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45775","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45775/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45775/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45775/events","html_url":"https://github.com/rails/rails/issues/45775","id":1330225377,"node_id":"I_kwDNIULOT0mg4Q","number":45775,"title":"Uniqueness validation on association does not use the correct primary key","user":{"login":"mikeletscher","id":6666411,"node_id":"MDQ6VXNlcjY2NjY0MTE=","avatar_url":"https://avatars.githubusercontent.com/u/6666411?v=4","gravatar_id":"","url":"https://api.github.com/users/mikeletscher","html_url":"https://github.com/mikeletscher","followers_url":"https://api.github.com/users/mikeletscher/followers","following_url":"https://api.github.com/users/mikeletscher/following{/other_user}","gists_url":"https://api.github.com/users/mikeletscher/gists{/gist_id}","starred_url":"https://api.github.com/users/mikeletscher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikeletscher/subscriptions","organizations_url":"https://api.github.com/users/mikeletscher/orgs","repos_url":"https://api.github.com/users/mikeletscher/repos","events_url":"https://api.github.com/users/mikeletscher/events{/privacy}","received_events_url":"https://api.github.com/users/mikeletscher/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-05T18:10:22Z","updated_at":"2022-08-09T14:52:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nI'm not _entirely_ sure if this is considered a bug, or intended behavior that's not well-documented for `uniqueness` validations on associations.\r\n\r\nI'm happy to help improve the documentation on this if that would be the most helpful way forward, or if this _is_ considered a bug, I can take a stab at a PR. \r\n\r\nIt looks like the issue is that `build_relation` on the uniqueness validator calls [`bind_attribute` on `ActiveRecord::Relation`](https://github.com/rails/rails/blob/408d061a80a49878ad26b305616ed9ba88ee1411/activerecord/lib/active_record/relation.rb#L45), which properly takes into account the reflection's foreign_key, but not primary key if it's been overridden. \r\n\r\nHere's a test that reproduces the issue:\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire 'bundler/inline'\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem 'activerecord', '~> 7.0.3.1'\r\n  gem 'sqlite3'\r\nend\r\n\r\nrequire 'active_record'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(\r\n  adapter: 'sqlite3',\r\n  database: ':memory:'\r\n)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :prescriptions, force: true do |t|\r\n    t.string :rx_number\r\n  end\r\n\r\n  create_table :fills, force: true do |t|\r\n    t.string :rx_number\r\n  end\r\nend\r\n\r\nclass Prescription < ActiveRecord::Base\r\n  has_many :fills, foreign_key: :rx_number, primary_key: :rx_number\r\nend\r\n\r\nclass Fill < ActiveRecord::Base\r\n  belongs_to :prescription, foreign_key: :rx_number, primary_key: :rx_number\r\n\r\n  validates :prescription, uniqueness: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_fill_unique_by_rx_number\r\n    Fill.create!(rx_number: '1234')\r\n    prescription = Prescription.create!(rx_number: '1234')\r\n    new_fill = prescription.fills.new\r\n    refute new_fill.save\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe uniqueness validation query would use the `rx_number` value of the `Prescription` to query for an existing `Fill` since that is what is set as the associations `primary_key`. \r\n\r\n### Actual behavior\r\nThe uniqueness validation query uses the `id` value of the `Prescription` to query for existing fills, disregarding the association's overridden `primary_key`.\r\n\r\nThis test passes if I patch bind_attribute to read the primary key from the reflection instead of directly from the reflection's klass:\r\n\r\n```ruby\r\nmodule ActiveRecord\r\n  # = Active Record \\Relation\r\n  class Relation\r\n    def bind_attribute(name, value) # :nodoc:\r\n      if reflection = klass._reflect_on_association(name)\r\n        name = reflection.foreign_key\r\n        primary_key = reflection.association_primary_key || reflection.klass.primary_key\r\n        value = value.read_attribute(primary_key) unless value.nil?\r\n      end\r\n\r\n      attr = table[name]\r\n      bind = predicate_builder.build_bind_attribute(attr.name, value)\r\n      yield attr, bind\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nWe were able to work around this by adding the uniqueness validation to the `rx_number` attribute instead of the association. If this is the desired way to handle this, I can open a PR to add a note about this to the docs, as it took us by surprise that validation on the association wouldn't use the defined key to get the value to query.\r\n\r\n### System configuration\r\n**Rails version**: `7.0.3.1`\r\n\r\n**Ruby version**: `3.1.2`\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45775/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45775/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45766","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45766/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45766/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45766/events","html_url":"https://github.com/rails/rails/issues/45766","id":1329650798,"node_id":"I_kwDNIULOT0Dcbg","number":45766,"title":"Active Model Dirty: attribute_changed? options (from/to) do not accept symbol","user":{"login":"thomasvanholder","id":36309895,"node_id":"MDQ6VXNlcjM2MzA5ODk1","avatar_url":"https://avatars.githubusercontent.com/u/36309895?v=4","gravatar_id":"","url":"https://api.github.com/users/thomasvanholder","html_url":"https://github.com/thomasvanholder","followers_url":"https://api.github.com/users/thomasvanholder/followers","following_url":"https://api.github.com/users/thomasvanholder/following{/other_user}","gists_url":"https://api.github.com/users/thomasvanholder/gists{/gist_id}","starred_url":"https://api.github.com/users/thomasvanholder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomasvanholder/subscriptions","organizations_url":"https://api.github.com/users/thomasvanholder/orgs","repos_url":"https://api.github.com/users/thomasvanholder/repos","events_url":"https://api.github.com/users/thomasvanholder/events{/privacy}","received_events_url":"https://api.github.com/users/thomasvanholder/received_events","type":"User","site_admin":false},"labels":[{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-08-05T08:54:51Z","updated_at":"2022-08-07T20:25:55Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nThe `attribute_changed?` receives optional options, such as `from` and `to`. Each option key is passed a value. Only string values are accepted, and symbols are not recognized. This is inconsistent behavior as updating a column using the `update` method does accept both a string and a symbol.\r\n \r\n Source code: [attribute_changed?](https://github.com/rails/rails/blob/04972d9b9ef60796dc8f0917817b5392d61fcf09/activemodel/lib/active_model/dirty.rb#L178) \r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"debug\"\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.column :status, :integer, default: 0\r\n    t.date :review_date\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  enum :status, {draft: 0, published: 1}\r\n\r\n  before_update :set_review_date\r\n\r\n  def set_review_date\r\n    # when \"published\" is set as a string, the test correcty passes.\r\n    if status_changed?(to: :published)\r\n      self.review_date = Date.today\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_set_status\r\n    post = Post.create!\r\n    post.update(status: :published)\r\n\r\n    assert_equal \"published\", post.status\r\n  end\r\n\r\n  def test_sets_review_date\r\n    post = Post.create!\r\n    post.published!\r\n\r\n    assert_equal \"published\", post.status\r\n    assert_equal Date.today, post.review_date\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe value of the optional arguments `from` and `to` accepts both a string or symbol.\r\n\r\n### Actual behavior\r\nWhen options, such as `from` and `to` are passed to the [attribute_changed?](https://github.com/rails/rails/blob/04972d9b9ef60796dc8f0917817b5392d61fcf09/activemodel/lib/active_model/dirty.rb#L178) method the arguments are not recognized when passed as a symbol.\r\n\r\n### System configuration\r\n**Rails version**: `Rails 7.0.3`\r\n\r\n**Ruby version**: `ruby 3.1.2`\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45766/reactions","total_count":2,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45766/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45758","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45758/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45758/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45758/events","html_url":"https://github.com/rails/rails/issues/45758","id":1327892229,"node_id":"I_kwDNIULOTyYHBQ","number":45758,"title":"ActiveRecord 6.1 and JSONB: Incorrect results value/type when using both arrow operator and double arrow operator in the same SELECT statement","user":{"login":"shhavel","id":1169424,"node_id":"MDQ6VXNlcjExNjk0MjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1169424?v=4","gravatar_id":"","url":"https://api.github.com/users/shhavel","html_url":"https://github.com/shhavel","followers_url":"https://api.github.com/users/shhavel/followers","following_url":"https://api.github.com/users/shhavel/following{/other_user}","gists_url":"https://api.github.com/users/shhavel/gists{/gist_id}","starred_url":"https://api.github.com/users/shhavel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shhavel/subscriptions","organizations_url":"https://api.github.com/users/shhavel/orgs","repos_url":"https://api.github.com/users/shhavel/repos","events_url":"https://api.github.com/users/shhavel/events{/privacy}","received_events_url":"https://api.github.com/users/shhavel/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-08-03T23:42:39Z","updated_at":"2022-08-05T22:26:04Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Issue Description\r\n\r\nGenerally when using JSONB operators `->` (arrow operator) and `->>` (double arrow operator) in SELECT statement, \r\nActiveRecord returns correct result types: objects for `->` operator and string for `->>` operator.\r\nBut when using both operators in the same select statement, the returned results may have an unexpected type or be `nil`.\r\n\r\n### Steps to reproduce with Expected behaviour in tests and Actual behaviour in comments\r\n\r\n```ruby\r\n# file: activerecord_6_1_jsonb_test.rb\r\n# run: ruby activerecord_6_1_jsonb_test.rb\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"activerecord\", \"6.1.6.1\" # the same behaviour for version \"7.0.3.1\"\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\npg_opts = {adapter: \"postgresql\", database: \"jsonb_activerecord_issue\"}\r\nbegin\r\n  ActiveRecord::Base.establish_connection(pg_opts.except(:database))\r\n  ActiveRecord::Base.connection.create_database(pg_opts[:database])\r\n  puts \"Database #{pg_opts[:database]} was created.\"\r\nrescue => ActiveRecord::DatabaseAlreadyExists\r\n  puts \"Database #{pg_opts[:database]} alredy exists.\"\r\nend\r\nActiveRecord::Base.establish_connection(pg_opts)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :entries, force: true do |t|\r\n    t.jsonb :value\r\n  end\r\nend\r\n\r\nclass Entry < ActiveRecord::Base\r\nend\r\nEntry.create(value: {a: \"a\", b: \"b\", c: {}})\r\n\r\nclass BugTest < Minitest::Test\r\n  # passed\r\n  def test_jsonb_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->'a', value->'b'\"))\r\n    assert_equal [[{}, \"b\"]], Entry.pluck(Arel.sql(\"value->'c', value->'b'\"))\r\n  end\r\n\r\n  # passed\r\n  def test_jsonb_double_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'a', value->>'b'\"))\r\n    assert_equal [[\"{}\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'c', value->>'b'\"))\r\n  end\r\n\r\n  # failed (this test results are differ in activerecord 6.0)\r\n  def test_jsonb_arrow_operator_and_double_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->'a', value->>'b'\")) # Actual [[\"a\", nil]]\r\n    assert_equal [[{}, \"b\"]], Entry.pluck(Arel.sql(\"value->'c', value->>'b'\")) # Actual [[{}, nil]]\r\n  end\r\n\r\n  # failed\r\n  def test_jsonb_double_arrow_operator_and_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'a', value->'b'\")) # Actual [[nil, \"b\"]]\r\n    assert_equal [[\"{}\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'c', value->'b'\")) # Actual [[{}, \"b\"]]\r\n  end\r\nend\r\n```\r\n\r\n### PostgreSQL results \r\n\r\n```sql\r\nSELECT\r\n  pg_typeof(value->'a'), value->'a',\r\n  pg_typeof(value->'b'), value->'b',\r\n  pg_typeof(value->'c'), value->'c',\r\n  pg_typeof(value->>'a'), value->>'a',\r\n  pg_typeof(value->>'b'), value->>'b',\r\n  pg_typeof(value->>'c'), value->>'c'\r\nFROM \"entries\";\r\n\r\n pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column?\r\n-----------+----------+-----------+----------+-----------+----------+-----------+----------+-----------+----------+-----------+----------\r\n jsonb     | \"a\"      | jsonb     | \"b\"      | jsonb     | {}       | text      | a        | text      | b        | text      | {}\r\n(1 row)\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 6.1.6.1\r\n\r\n**Ruby version**: 3.1.0\r\n\r\n### Similar issue in different versions of ActiveRecord\r\n\r\nThere is a similar issue but with slightly different behaviour in AR 6.0. Created another issue: #45757\r\n\r\nPlease confirm or comment on the expected behaviour.\r\nThank you.\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45758/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45758/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45750","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45750/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45750/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45750/events","html_url":"https://github.com/rails/rails/issues/45750","id":1327484205,"node_id":"I_kwDNIULOTx_NLQ","number":45750,"title":"Running `rails test` doesn't automatically load any custom tasks under `lib/tasks`","user":{"login":"onlynone","id":833690,"node_id":"MDQ6VXNlcjgzMzY5MA==","avatar_url":"https://avatars.githubusercontent.com/u/833690?v=4","gravatar_id":"","url":"https://api.github.com/users/onlynone","html_url":"https://github.com/onlynone","followers_url":"https://api.github.com/users/onlynone/followers","following_url":"https://api.github.com/users/onlynone/following{/other_user}","gists_url":"https://api.github.com/users/onlynone/gists{/gist_id}","starred_url":"https://api.github.com/users/onlynone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/onlynone/subscriptions","organizations_url":"https://api.github.com/users/onlynone/orgs","repos_url":"https://api.github.com/users/onlynone/repos","events_url":"https://api.github.com/users/onlynone/events{/privacy}","received_events_url":"https://api.github.com/users/onlynone/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-03T16:16:38Z","updated_at":"2022-08-03T18:09:40Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n1. Create the file `lib/tasks/test.rake` with the content:\r\n```ruby\r\nENV[\"test.rake\"] = \"yes\"\r\ntask :custom_task do\r\n  ENV[\"custom_task\"] = \"yes\"\r\nend\r\n\r\ntask :test => [:custom_task]\r\n```\r\n2. Create a test file at `test/unit/rails_test_test.rb` with the content:\r\n```ruby\r\nclass RailsTestTest < ActiveSupport::TestCase\r\n  test \"test.rake is in the environment\" do\r\n    assert_equal('yes', ENV['test.rake'])\r\n  end\r\n\r\n  test \"custom_task is in the environment\" do\r\n    assert_equal('yes', ENV['custom_task'])\r\n  end\r\nend\r\n```\r\n3. Run `bin/rails test test/unit/rails_test_test.rb`\r\n4. Run `bin/rake test test/unit/rails_test_test.rb`\r\n\r\n### Expected behavior\r\nBoth `rails test` and `rake test` should succeed.\r\n\r\n### Actual behavior\r\nRunning the tests with `bin/rake` succeeds with the output:\r\n```\r\nbin/rake test test/unit/rails_test_test.rb\r\nRunning via Spring preloader in process 59092\r\nRun options: --seed 6948\r\n\r\n# Running:\r\n\r\n..\r\n\r\nFinished in 0.000943s, 2120.8907 runs/s, 2120.8907 assertions/s.\r\n2 runs, 2 assertions, 0 failures, 0 errors, 0 skips\r\n```\r\n\r\nWhile running with `bin/rails` fails with the output:\r\n\r\n```\r\nRunning via Spring preloader in process 58735\r\nRun options: --seed 33633\r\n\r\n# Running:\r\n\r\nF\r\n\r\nFailure:\r\nRailsTestTest#test_custom_task_is_in_the_environment [/Users/steven/projects/rails_test_tasks/test/unit/rails_test_test.rb:7]:\r\nExpected: \"yes\"\r\n  Actual: nil\r\n\r\n\r\nrails test test/unit/rails_test_test.rb:6\r\n\r\nF\r\n\r\nFailure:\r\nRailsTestTest#test_test.rake_is_in_the_environment [/Users/steven/projects/rails_test_tasks/test/unit/rails_test_test.rb:3]:\r\nExpected: \"yes\"\r\n  Actual: nil\r\n\r\n\r\nrails test test/unit/rails_test_test.rb:2\r\n\r\n\r\n\r\nFinished in 0.001378s, 1451.3788 runs/s, 1451.3788 assertions/s.\r\n2 runs, 2 assertions, 2 failures, 0 errors, 0 skips\r\n```\r\n\r\nBecause the file `lib/tasks/test.rake` is never loaded.\r\n\r\nIt seems like rails will only end up loading custom tasks if it can't find the command being run on the command line in its own list of built-in commands. When it can't find the command, it will load the local `Rakefile` via `find_by_namespace(\"rake\").perform(full_namespace, args, config)` in `Rails::Command.invoke`. And the local `Rakefile` usually has `Rails.application.load_tasks` and that loads any custom tasks under `lib/tasks`.\r\n\r\nFor example, this happens when the `ActiveRecord` migration exec's out to call: `bin/rails db:test:prepare`. That task is apparently not a built-in rails task, so the `Rakefile` and all custom tasks *do* end up getting loaded for that one.\r\n\r\n(As an aside here, I don't fully understand the difference between the built-in rails tasks and the ones that have to be searched for via rake. I also don't understand why the migration code needs to fork a separate process to do `db:test:prepare`. That task just ends up doing `db_namespace[\"test:load\"].invoke`. Why couldn't the `db:test:prepare` tasks simply be invoked the same way in the same process?)\r\n\r\n### System configuration\r\n**Rails version**: 6.0.5\r\n\r\n**Ruby version**: 2.6.5\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45750/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45750/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45736","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45736/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45736/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45736/events","html_url":"https://github.com/rails/rails/issues/45736","id":1326221102,"node_id":"I_kwDNIULOTwyHLg","number":45736,"title":"Virtual stored columns are always nil for newly created records","user":{"login":"camiloforero","id":6606686,"node_id":"MDQ6VXNlcjY2MDY2ODY=","avatar_url":"https://avatars.githubusercontent.com/u/6606686?v=4","gravatar_id":"","url":"https://api.github.com/users/camiloforero","html_url":"https://github.com/camiloforero","followers_url":"https://api.github.com/users/camiloforero/followers","following_url":"https://api.github.com/users/camiloforero/following{/other_user}","gists_url":"https://api.github.com/users/camiloforero/gists{/gist_id}","starred_url":"https://api.github.com/users/camiloforero/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/camiloforero/subscriptions","organizations_url":"https://api.github.com/users/camiloforero/orgs","repos_url":"https://api.github.com/users/camiloforero/repos","events_url":"https://api.github.com/users/camiloforero/events{/privacy}","received_events_url":"https://api.github.com/users/camiloforero/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-02T18:09:28Z","updated_at":"2022-08-02T19:28:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nUsing postgresql:\r\n\r\nGenerate a new model with one or more columns with default values, and a virtual stored column based on those other columns\r\nCreate a new record of that model\r\nAccess the value of the virtual stored column from the newly created ActiveRecord object\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem 'pg', '~> 1.4'\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection \"postgresql:///test\"\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.integer :counter1, null: false, default: 0\r\n    t.integer :counter2, null: false, default: 0\r\n    t.virtual :counter_sum, type: :integer, as: \"counter1 + counter2\", stored: true\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_virtual_column_value_populated\r\n    post = Post.create!\r\n\r\n    assert_equal 0, post.counter_sum\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe value of the virtual column should be *something*, in this particular case, 0\r\n\r\n### Actual behavior\r\nThe value of the virtual column is `nil`. The test fails with the following output\r\n```ruby\r\n# Running:\r\n\r\nD, [2022-08-02T13:05:17.402730 #13548] DEBUG -- :   TRANSACTION (0.1ms)  BEGIN\r\nD, [2022-08-02T13:05:17.403136 #13548] DEBUG -- :   Post Create (0.6ms)  INSERT INTO \"posts\" DEFAULT VALUES RETURNING \"id\"\r\nD, [2022-08-02T13:05:17.406144 #13548] DEBUG -- :   TRANSACTION (2.6ms)  COMMIT\r\nF\r\n\r\nFailure:\r\nBugTest#test_virtual_column_value_populated [stored_bug.rb:37]:\r\nExpected: 0\r\n  Actual: nil\r\n\r\n\r\nrails test stored_bug.rb:34\r\n\r\n\r\n\r\nFinished in 0.011047s, 90.5240 runs/s, 90.5240 assertions/s.\r\n1 runs, 1 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\n### System configuration\r\n**Rails version**: edge\r\n**Ruby version**: 3.1.2\r\n**PostgreSQL version**: 14.4\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45736/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45736/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45709","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45709/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45709/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45709/events","html_url":"https://github.com/rails/rails/issues/45709","id":1323303409,"node_id":"I_kwDNIULOTuAB8Q","number":45709,"title":"Rails & can't pin JS files from Unpkg","user":{"login":"septerr","id":1094216,"node_id":"MDQ6VXNlcjEwOTQyMTY=","avatar_url":"https://avatars.githubusercontent.com/u/1094216?v=4","gravatar_id":"","url":"https://api.github.com/users/septerr","html_url":"https://github.com/septerr","followers_url":"https://api.github.com/users/septerr/followers","following_url":"https://api.github.com/users/septerr/following{/other_user}","gists_url":"https://api.github.com/users/septerr/gists{/gist_id}","starred_url":"https://api.github.com/users/septerr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/septerr/subscriptions","organizations_url":"https://api.github.com/users/septerr/orgs","repos_url":"https://api.github.com/users/septerr/repos","events_url":"https://api.github.com/users/septerr/events{/privacy}","received_events_url":"https://api.github.com/users/septerr/received_events","type":"User","site_admin":false},"labels":[{"id":131864,"node_id":"MDU6TGFiZWwxMzE4NjQ=","url":"https://api.github.com/repos/rails/rails/labels/third%20party%20issue","name":"third party issue","color":"02d7e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-07-30T21:44:43Z","updated_at":"2022-08-02T18:08:34Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nIn a new Rails & app, try to pin a package from Unpkg CDN:\r\n\r\n```\r\n./bin/importmap pin @walletconnect/web3-provider@1.7.8 --from unpkg\r\n```\r\n\r\nYou get following response:\r\n\r\n```\r\nCouldn't find any packages in [\"@walletconnect/web3-provider@1.7.8\"] on unpkg\r\n```\r\nBut the file does exist on unpkg: https://unpkg.com/@walletconnect/web3-provider@1.7.8/dist/umd/index.min.js\r\n\r\nAfter adding some breakpoints in `.rbenv/versions/3.1.0/lib/ruby/gems/3.1.0/gems/importmap-rails-1.1.5/lib/importmap/packager.rb`, saw that the CDN post request and response are as follows:\r\n\r\nPost URL: \r\n```\r\n<URI::HTTPS https://api.jspm.io/generate>\r\n```\r\nPost Body:\r\n```\r\n \"{\\\"install\\\":[\\\"@walletconnect/web3-provider@1.7.8\\\"],\\\"flattenScope\\\":true,\\\"env\\\":[\\\"browser\\\",\\\"module\\\",\\\"production\\\"],\\\"provider\\\":\\\"unpkg\\\"}\"\r\n```\r\n\r\nPost Response:\r\n```\r\n<Net::HTTPUnauthorized 401 Unauthorized readbody=true>\r\n```\r\n\r\n### Expected behavior\r\nExpected the files from unpkg to be pinned.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nMisleading error that files don't exist on unpkg.\r\n\r\n### System configuration\r\n**Rails version**:\r\nRails 7.0.3.1\r\n\r\n**Ruby version**:\r\nruby 3.1.0p0 (2021-12-25 revision fb4df44d16) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45709/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45709/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45691","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45691/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45691/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45691/events","html_url":"https://github.com/rails/rails/issues/45691","id":1322122058,"node_id":"I_kwDNIULOTs37Sg","number":45691,"title":"ActionMailer fails to create correct multipart message with rfc822 attachment","user":{"login":"der-flo","id":35431,"node_id":"MDQ6VXNlcjM1NDMx","avatar_url":"https://avatars.githubusercontent.com/u/35431?v=4","gravatar_id":"","url":"https://api.github.com/users/der-flo","html_url":"https://github.com/der-flo","followers_url":"https://api.github.com/users/der-flo/followers","following_url":"https://api.github.com/users/der-flo/following{/other_user}","gists_url":"https://api.github.com/users/der-flo/gists{/gist_id}","starred_url":"https://api.github.com/users/der-flo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/der-flo/subscriptions","organizations_url":"https://api.github.com/users/der-flo/orgs","repos_url":"https://api.github.com/users/der-flo/repos","events_url":"https://api.github.com/users/der-flo/events{/privacy}","received_events_url":"https://api.github.com/users/der-flo/received_events","type":"User","site_admin":false},"labels":[{"id":107188,"node_id":"MDU6TGFiZWwxMDcxODg=","url":"https://api.github.com/repos/rails/rails/labels/actionmailer","name":"actionmailer","color":"8B00FC","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-29T11:19:00Z","updated_at":"2022-08-02T19:46:17Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I cannot re-open #42849 so I create a new issue…\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire 'bundler/inline'\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n  gem 'rails', github: 'rails/rails', branch: 'main'\r\nend\r\n\r\nrequire 'minitest/autorun'\r\nrequire 'action_mailer/railtie'\r\n\r\nclass TestMailer < ActionMailer::Base\r\n  def main\r\n    message_to_attach =  <<~MAIL.gsub(/\\n/, \"\\r\\n\")\r\n      Message-ID: <12345@foo.example>\r\n      Subject: Test\r\n      From: test1@foo.example\r\n      To: test2@foo.example\r\n      \r\n      hello world\r\n    MAIL\r\n    attachments['test.eml'] = {\r\n      mime_type: params[:mime_type],\r\n      content: message_to_attach\r\n    }\r\n\r\n    mail(from: 'test3@foo.example', to: 'test4@foo.example', subject: 'Test outer') do |format|\r\n      format.text { \"outer text - #{params[:mime_type]} attachment\" }\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_with_plain_mime_type\r\n    message = TestMailer.with(mime_type: 'text/plain').main\r\n    assert_equal message.mime_type, 'multipart/mixed'\r\n  end\r\n\r\n  def test_with_rfc822_mime_type\r\n    message = TestMailer.with(mime_type: 'message/rfc822').main\r\n    assert_equal message.mime_type, 'multipart/mixed'\r\n  end\r\nend\r\n```\r\n\r\nThe second test fails, the message object is rendered as follows:\r\n```\r\nDate: Fri, 23 Jul 2021 13:59:19 +0200\r\nFrom: test3@foo.example\r\nTo: test4@foo.example\r\nMessage-ID: <60faaf1738a02_14fbd98-3fb@flo.adigi.ai.mail>\r\nSubject: Test outer\r\nMime-Version: 1.0\r\nContent-Type: text/plain;\r\n boundary=\"--==_mimepart_60faaf1738008_14fbd98-484\";\r\n charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\n\r\n\r\n----==_mimepart_60faaf1738008_14fbd98-484\r\nContent-Type: text/plain;\r\n charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\n\r\nouter text - message/rfc822 attachment\r\n----==_mimepart_60faaf1738008_14fbd98-484\r\nContent-Type: message/rfc822\r\nContent-Transfer-Encoding: \r\nContent-Disposition: attachment;\r\n filename=test.eml\r\nContent-ID: <60faaf1739102_14fbd98-2b@flo.adigi.ai.mail>\r\n\r\nMessage-ID: <12345@foo.example>\r\nSubject: Test\r\nFrom: test1@foo.example\r\nTo: test2@foo.example\r\n\r\nhello world\r\n\r\n----==_mimepart_60faaf1738008_14fbd98-484--\r\n\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe `message.mime_type` is `multipart/mixed` in both test cases. ActionMailer handles attachments in the way it is described in https://guides.rubyonrails.org/action_mailer_basics.html#adding-attachments describes.\r\n\r\n### Actual behavior\r\n\r\nWhen attaching a `message/rfc822` - an email message - the generated mail parts are not nested correctly, the outer `multipart/mixed` is missing.\r\n\r\nPerhaps this behaviour is caused by the [special handling](https://github.com/mikel/mail/blob/master/lib/mail/attachments_list.rb#L9) of such attachments in the `mail` gem.\r\n\r\n\r\n### System configuration\r\n**Rails version**: main\r\n\r\n**Ruby version**: 3.0.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45691/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":1,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45691/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45640","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45640/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45640/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45640/events","html_url":"https://github.com/rails/rails/issues/45640","id":1315219867,"node_id":"I_kwDNIULOTmSpmw","number":45640,"title":"ActiveModel::Dirty changes not reset properly when using store_accessor (tested with postgres)","user":{"login":"vccoffey","id":59817868,"node_id":"MDQ6VXNlcjU5ODE3ODY4","avatar_url":"https://avatars.githubusercontent.com/u/59817868?v=4","gravatar_id":"","url":"https://api.github.com/users/vccoffey","html_url":"https://github.com/vccoffey","followers_url":"https://api.github.com/users/vccoffey/followers","following_url":"https://api.github.com/users/vccoffey/following{/other_user}","gists_url":"https://api.github.com/users/vccoffey/gists{/gist_id}","starred_url":"https://api.github.com/users/vccoffey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vccoffey/subscriptions","organizations_url":"https://api.github.com/users/vccoffey/orgs","repos_url":"https://api.github.com/users/vccoffey/repos","events_url":"https://api.github.com/users/vccoffey/events{/privacy}","received_events_url":"https://api.github.com/users/vccoffey/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-07-22T16:44:57Z","updated_at":"2022-07-23T17:51:49Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nUsing PostgreSQL (pg) database\r\nGiven a model with a jsonb column\r\n```\r\nclass CreateTestModels < ActiveRecord::Migration[6.1]\r\n  def change\r\n    create_table :test_models do |t|\r\n      t.jsonb :jsonb_hash_attr\r\n      t.timestamps\r\n    end\r\n  end\r\nend\r\n```\r\nusing store_accessor\r\n```\r\nclass TestModel < ApplicationRecord\r\n  store_accessor :jsonb_hash_attr, :key, prefix: true\r\nend\r\n```\r\n\r\n### Expected behavior\r\nBoth tests pass:\r\n```\r\nrequire \"test_helper\"\r\nclass TestModelTest < ActiveSupport::TestCase\r\n  test \"does not show changes for a jsonb attribute if changed back to original value\" do\r\n    tm = TestModel.create jsonb_hash_attr: { \"key\" => \"foo\" }\r\n    tm.jsonb_hash_attr = { \"key\" => \"bar\" }\r\n    assert_equal tm.jsonb_hash_attr_change, [{ \"key\" => \"foo\" }, { \"key\" => \"bar\" }]\r\n    tm.jsonb_hash_attr = { \"key\" => \"foo\" }\r\n    assert_equal tm.jsonb_hash_attr_change, nil\r\n  end\r\n\r\n  test \"does not show changes for a jsonb attribute if changed back to original value using store_accessor\" do\r\n    tm = TestModel.create jsonb_hash_attr: { \"key\" => \"foo\" }\r\n    tm.jsonb_hash_attr_key = \"bar\"\r\n    assert_equal tm.jsonb_hash_attr_change, [{ \"key\" => \"foo\" }, { \"key\" => \"bar\" }]\r\n    tm.jsonb_hash_attr_key = \"foo\"\r\n    assert_equal tm.jsonb_hash_attr_change, nil\r\n  end\r\nend\r\n```\r\n### Actual behavior\r\nThe second test fails\r\n```\r\n--- expected\r\n+++ actual\r\n-[{\"key\"=>\"foo\"}, {\"key\"=>\"foo\"}]\r\n+nil\r\n```\r\n### System configuration\r\n**Rails version**:\r\ntested with 6.1.6.1 and 7.0.3.1\r\n\r\n**Ruby version**: 3.1.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45640/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45640/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45639","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45639/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45639/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45639/events","html_url":"https://github.com/rails/rails/issues/45639","id":1314984267,"node_id":"I_kwDNIULOTmERSw","number":45639,"title":"Explicitly touch on save","user":{"login":"schmijos","id":245443,"node_id":"MDQ6VXNlcjI0NTQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/245443?v=4","gravatar_id":"","url":"https://api.github.com/users/schmijos","html_url":"https://github.com/schmijos","followers_url":"https://api.github.com/users/schmijos/followers","following_url":"https://api.github.com/users/schmijos/following{/other_user}","gists_url":"https://api.github.com/users/schmijos/gists{/gist_id}","starred_url":"https://api.github.com/users/schmijos/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/schmijos/subscriptions","organizations_url":"https://api.github.com/users/schmijos/orgs","repos_url":"https://api.github.com/users/schmijos/repos","events_url":"https://api.github.com/users/schmijos/events{/privacy}","received_events_url":"https://api.github.com/users/schmijos/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-22T13:05:14Z","updated_at":"2022-07-22T20:31:00Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  ruby \"3.1.0\"\r\n  gem \"rails\", \"7.0.3.1\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.timestamps\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_save_touch\r\n    Post.create!(updated_at: 3.days.ago)\r\n    Post.last.save!(touch: true)\r\n\r\n    assert_in_delta 0.seconds.ago.to_i, Post.last.updated_at.to_i, 5\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nIf I tell _ActiveRecord_ to explicitly \"touch\", then I would expect it to update the timestamps.\r\n\r\n### Actual behavior\r\n`save` never hits the database if no attribute changed.\r\n\r\n### System configuration\r\n**Rails version**: >= 3.0.0, < 8","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45639/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45639/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45638","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45638/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45638/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45638/events","html_url":"https://github.com/rails/rails/issues/45638","id":1314662755,"node_id":"I_kwDNIULOTlwpYw","number":45638,"title":"CSRF Token Expiry issue.","user":{"login":"MBM1607","id":47133639,"node_id":"MDQ6VXNlcjQ3MTMzNjM5","avatar_url":"https://avatars.githubusercontent.com/u/47133639?v=4","gravatar_id":"","url":"https://api.github.com/users/MBM1607","html_url":"https://github.com/MBM1607","followers_url":"https://api.github.com/users/MBM1607/followers","following_url":"https://api.github.com/users/MBM1607/following{/other_user}","gists_url":"https://api.github.com/users/MBM1607/gists{/gist_id}","starred_url":"https://api.github.com/users/MBM1607/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MBM1607/subscriptions","organizations_url":"https://api.github.com/users/MBM1607/orgs","repos_url":"https://api.github.com/users/MBM1607/repos","events_url":"https://api.github.com/users/MBM1607/events{/privacy}","received_events_url":"https://api.github.com/users/MBM1607/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-22T08:38:19Z","updated_at":"2022-07-22T08:40:22Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"We are encountering an issue with form submission in production environment.\r\nThe criteria seems to be exceptionally rare, I have been unable to replicate the issue. \r\n\r\nCSRF token is created and validated just fine.\r\n\r\n### Timing\r\n\r\nIssue seems to occur only when users wait more than 2 hours on a form before submitting, but doing this we have been unable to reproduce as well.\r\n\r\n### Logs\r\n```\r\nW, [2022-07-14T15:19:37.535241 #2433]  WARN -- : Can't verify CSRF token authenticity.\r\nI, [2022-07-14T15:19:37.535556 #2433]  INFO -- : Completed 422 Unprocessable Entity in 1ms (ActiveRecord: 0.0ms | Allocations: 291)\r\nF, [2022-07-14T15:19:37.536425 #2433] FATAL -- :   \r\nActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n```\r\n\r\n### System configuration\r\n**Rails version 6.1.6** \r\n**Ruby version 2.7.4**\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45638/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45638/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45636","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45636/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45636/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45636/events","html_url":"https://github.com/rails/rails/issues/45636","id":1314546104,"node_id":"I_kwDNIULOTlphuA","number":45636,"title":"Invalid template types should raise an exception","user":{"login":"axos88","id":1281218,"node_id":"MDQ6VXNlcjEyODEyMTg=","avatar_url":"https://avatars.githubusercontent.com/u/1281218?v=4","gravatar_id":"","url":"https://api.github.com/users/axos88","html_url":"https://github.com/axos88","followers_url":"https://api.github.com/users/axos88/followers","following_url":"https://api.github.com/users/axos88/following{/other_user}","gists_url":"https://api.github.com/users/axos88/gists{/gist_id}","starred_url":"https://api.github.com/users/axos88/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/axos88/subscriptions","organizations_url":"https://api.github.com/users/axos88/orgs","repos_url":"https://api.github.com/users/axos88/repos","events_url":"https://api.github.com/users/axos88/events{/privacy}","received_events_url":"https://api.github.com/users/axos88/received_events","type":"User","site_admin":false},"labels":[{"id":3666649,"node_id":"MDU6TGFiZWwzNjY2NjQ5","url":"https://api.github.com/repos/rails/rails/labels/actionview","name":"actionview","color":"d7e102","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-07-22T07:40:54Z","updated_at":"2022-08-17T18:02:14Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n  - Create a template in views/foo/bar.txt.erb # Note .txt, and not .text\r\n\r\n```ruby\r\ndetails = { locale: [:en], formats: [:txt], handlers: [:erb], variants: []}\r\nActionController::Base.view_paths.find(\"bar\", 'foo', false, details, nil, [])\r\n```\r\n\r\n### Expected behavior\r\n\r\nShould throw an exception that :txt is not a registered type in Template::Types\r\n\r\n### Actual behavior\r\n\r\nSilently fails to find the otherwise existing template, specifying the correct directory it the file resides in. \r\nConfustion intensifies.\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3\r\n**Ruby version**: 2.7.6","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45636/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45636/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45635","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45635/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45635/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45635/events","html_url":"https://github.com/rails/rails/issues/45635","id":1314015345,"node_id":"I_kwDNIULOTlJIcQ","number":45635,"title":"Recent security releases are missing from the Releases page","user":{"login":"georgeclaghorn","id":94129,"node_id":"MDQ6VXNlcjk0MTI5","avatar_url":"https://avatars.githubusercontent.com/u/94129?v=4","gravatar_id":"","url":"https://api.github.com/users/georgeclaghorn","html_url":"https://github.com/georgeclaghorn","followers_url":"https://api.github.com/users/georgeclaghorn/followers","following_url":"https://api.github.com/users/georgeclaghorn/following{/other_user}","gists_url":"https://api.github.com/users/georgeclaghorn/gists{/gist_id}","starred_url":"https://api.github.com/users/georgeclaghorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/georgeclaghorn/subscriptions","organizations_url":"https://api.github.com/users/georgeclaghorn/orgs","repos_url":"https://api.github.com/users/georgeclaghorn/repos","events_url":"https://api.github.com/users/georgeclaghorn/events{/privacy}","received_events_url":"https://api.github.com/users/georgeclaghorn/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false},"assignees":[{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2022-07-22T01:21:34Z","updated_at":"2022-08-19T18:08:06Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Rails versions 7.0.3.1, 6.1.6.1, 6.0.5.1, and 5.2.8.1 are not listed at this GitHub repository’s [Releases](https://github.com/rails/rails/releases) page. Past releases are listed there, including the most recent round of bugfix releases from May.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45635/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45635/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45632","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45632/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45632/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45632/events","html_url":"https://github.com/rails/rails/issues/45632","id":1312439669,"node_id":"I_kwDNIULOTjo9dQ","number":45632,"title":"`_read_attribute` method should also check whether an attribute is aliased or not","user":{"login":"khiav223577","id":4011729,"node_id":"MDQ6VXNlcjQwMTE3Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4011729?v=4","gravatar_id":"","url":"https://api.github.com/users/khiav223577","html_url":"https://github.com/khiav223577","followers_url":"https://api.github.com/users/khiav223577/followers","following_url":"https://api.github.com/users/khiav223577/following{/other_user}","gists_url":"https://api.github.com/users/khiav223577/gists{/gist_id}","starred_url":"https://api.github.com/users/khiav223577/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/khiav223577/subscriptions","organizations_url":"https://api.github.com/users/khiav223577/orgs","repos_url":"https://api.github.com/users/khiav223577/repos","events_url":"https://api.github.com/users/khiav223577/events{/privacy}","received_events_url":"https://api.github.com/users/khiav223577/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-07-21T03:14:22Z","updated_at":"2022-07-21T21:37:09Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n```rb\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  gem \"activerecord\", '7.0.3'\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table \"users\", force: :cascade do |t|\r\n    t.string :name\r\n  end\r\n\r\n  create_table \"posts\", force: :cascade do |t|\r\n    t.string :title\r\n    t.integer :userId\r\n  end\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\n  has_many :posts\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  belongs_to :user\r\n\r\n  alias_attribute :user_id, :userId\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def setup\r\n    user = User.create!(name: 'Tester')\r\n    post = Post.create!(user_id: user.id, title: 'Post A')\r\n  end\r\n\r\n  def test_has_many\r\n    assert_equal ['Post A'], User.first.posts.map(&:title)\r\n  end\r\n\r\n  def test_belongs_to\r\n    assert_equal 'Tester', Post.first.user&.name\r\n  end\r\nend\r\n```\r\n\r\nResult:\r\n```\r\nFinished in 0.059414s, 33.6619 runs/s, 33.6619 assertions/s.\r\n\r\n  1) Failure:\r\nBugTest#test_belongs_to [test.rb:53]:\r\nExpected: \"Tester\"\r\n  Actual: nil\r\n\r\n2 runs, 2 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\n### Expected behavior\r\n\r\nI run into this issue when I tried to add an association on an aliased attribute.\r\n\r\nThen I found `belongs_to_association` will use `_read_attribute` method to check if this `foreign_key` exists on this model or not.\r\nIt doesn't pass the condition, therefore `find_target` will not be triggered.\r\nhttps://github.com/rails/rails/blob/3272335f8f4739629283cdeff7c3db723f34a3f5/activerecord/lib/active_record/associations/association.rb#L172-L173\r\nhttps://github.com/rails/rails/blob/3272335f8f4739629283cdeff7c3db723f34a3f5/activerecord/lib/active_record/associations/association.rb#L274-L276\r\nhttps://github.com/rails/rails/blob/2ea5ff9e13b9c5d0d5d25b2441efa81a2de2a262/activerecord/lib/active_record/associations/belongs_to_association.rb#L133-L135\r\nhttps://github.com/rails/rails/blob/4ae0390c1051a39ec16a4a95451cd06172a1b260/activerecord/lib/active_record/attribute_methods/read.rb#L37-L39\r\n\r\nThe `read_attribute` method takes `attribute_alias` into consideration since https://github.com/rails/rails/pull/26529, while `_read_attribute` doesn't. I think it should, too.\r\n\r\n### Actual behavior\r\n\r\nSee the test script below.\r\n\r\n### System configuration\r\n**Rails version**: \r\n7.0.3.1\r\n\r\n**Ruby version**:\r\nruby 3.0.0p0 (2020-12-25 revision 95aff21468) [x86_64-linux]","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45632/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45632/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45609","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45609/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45609/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45609/events","html_url":"https://github.com/rails/rails/issues/45609","id":1306840730,"node_id":"I_kwDNIULOTeTOmg","number":45609,"title":"Cannot add ActiveModel::Attribute::FromDatabase to permitted YAML safe load classes","user":{"login":"stanhu","id":963826,"node_id":"MDQ6VXNlcjk2MzgyNg==","avatar_url":"https://avatars.githubusercontent.com/u/963826?v=4","gravatar_id":"","url":"https://api.github.com/users/stanhu","html_url":"https://github.com/stanhu","followers_url":"https://api.github.com/users/stanhu/followers","following_url":"https://api.github.com/users/stanhu/following{/other_user}","gists_url":"https://api.github.com/users/stanhu/gists{/gist_id}","starred_url":"https://api.github.com/users/stanhu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stanhu/subscriptions","organizations_url":"https://api.github.com/users/stanhu/orgs","repos_url":"https://api.github.com/users/stanhu/repos","events_url":"https://api.github.com/users/stanhu/events{/privacy}","received_events_url":"https://api.github.com/users/stanhu/received_events","type":"User","site_admin":false},"labels":[{"id":107186,"node_id":"MDU6TGFiZWwxMDcxODY=","url":"https://api.github.com/repos/rails/rails/labels/regression","name":"regression","color":"e10c02","default":false,"description":null},{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-07-16T15:51:30Z","updated_at":"2022-08-18T11:39:07Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWe have some database entries serialized to YAML. For example:\r\n\r\n```\r\n---\r\n:custom_message: Repository Download Started\r\n:author_name: !ruby/object:DeployToken\r\n  concise_attributes:\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: deploy_token_type\r\n    value_before_type_cast: 1\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: id\r\n    value_before_type_cast: 2\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: revoked\r\n    value_before_type_cast: false\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: read_repository\r\n    value_before_type_cast: true\r\n```\r\n\r\nHowever, since the security release announced in https://rubyonrails.org/2022/7/12/Rails-Versions-7-0-3-1-6-1-6-1-6-0-5-1-and-5-2-8-1-have-been-released to address CVE-2022-32224, we cannot simply add `ActiveModel::Attribute::FromDatabase` to the permitted class list:\r\n\r\n```ruby\r\n(byebug) YAML.safe_load(payload, permitted_classes: [ActiveModel::Attribute::FromDatabase, Symbol, DeployToken], aliases: true)\r\n*** NameError Exception: private constant ActiveModel::Attribute::FromDatabase referenced\r\n```\r\n\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\n### Expected behavior\r\n\r\nYAML loading should work. Should this constant no longer be private since it's been serialized to YAML?\r\n\r\n### Actual behavior\r\n\r\nYAML loading fails with:\r\n\r\n```\r\n*** NameError Exception: private constant ActiveModel::Attribute::FromDatabase referenced\r\n```\r\n\r\n### System configuration\r\n\r\n**Rails version**:\r\nv6.1.6.1\r\n\r\n**Ruby version**:\r\nv2.7.5","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45609/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45609/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45596","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45596/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45596/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45596/events","html_url":"https://github.com/rails/rails/issues/45596","id":1304247666,"node_id":"I_kwDNIULOTb09cg","number":45596,"title":"Setting `schema_dump` in database.yml does not change dump format","user":{"login":"leboshi","id":16550140,"node_id":"MDQ6VXNlcjE2NTUwMTQw","avatar_url":"https://avatars.githubusercontent.com/u/16550140?v=4","gravatar_id":"","url":"https://api.github.com/users/leboshi","html_url":"https://github.com/leboshi","followers_url":"https://api.github.com/users/leboshi/followers","following_url":"https://api.github.com/users/leboshi/following{/other_user}","gists_url":"https://api.github.com/users/leboshi/gists{/gist_id}","starred_url":"https://api.github.com/users/leboshi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leboshi/subscriptions","organizations_url":"https://api.github.com/users/leboshi/orgs","repos_url":"https://api.github.com/users/leboshi/repos","events_url":"https://api.github.com/users/leboshi/events{/privacy}","received_events_url":"https://api.github.com/users/leboshi/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-14T04:44:37Z","updated_at":"2022-07-14T14:34:25Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Originally brought up in #43173.  I opened PR #43240 to address it, but that was closed when it was decided #43530 did the same thing.  Unfortunately, I don't think any of us were really reading what the other was doing, because the two PRs actually each only addressed half the opened issue.\r\n\r\nPR incoming to fully address this and the second half of #43173!\r\n\r\n### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_schema_format_corresponds_with_schema_dump\r\n    Dir.mktmpdir do |dir|\r\n      ActiveRecord::Tasks::DatabaseTasks.stub(:db_dir, dir) do\r\n        old_configurations = ActiveRecord::Base.configurations\r\n        ActiveRecord::Base.configurations = {\r\n          \"development\" => {\r\n            \"primary\" => {\r\n              \"database\" => \"dev-db\",\r\n              \"schema_dump\" => \"primary_structure.sql\"\r\n            }\r\n          }\r\n        }\r\n\r\n        db_config = ActiveRecord::Base.configurations.configs_for(env_name: \"development\", name: \"primary\")\r\n        ActiveRecord::Tasks::DatabaseTasks.dump_schema(db_config)\r\n\r\n        dump_contents = File.read(File.join(dir, \"primary_structure.sql\"))\r\n        refute_match /ActiveRecord::Schema/, dump_contents\r\n        assert_match /CREATE TABLE/, dump_contents\r\n      ensure\r\n        ActiveRecord::Base.configurations = old_configurations\r\n        ActiveRecord::Base.clear_cache!\r\n      end\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nIf `schema_dump` is set to something like `primary_structure.sql`, I'd expect it to do a SQL structure dump rather than a Ruby schema dump.\r\n\r\n### Actual behavior\r\nThe filename in `schema_dump` has no bearing on the format of the dump Rails writes or expects to read.\r\n\r\n### System configuration\r\n**Rails version**: (main)\r\n\r\n**Ruby version**: 3.1.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45596/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45596/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45998","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45998/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45998/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45998/events","html_url":"https://github.com/rails/rails/issues/45998","id":1368868095,"node_id":"I_kwDNIULOUZdE_w","number":45998,"title":"CSRF getting different token","user":{"login":"Saleh-Salem","id":22606707,"node_id":"MDQ6VXNlcjIyNjA2NzA3","avatar_url":"https://avatars.githubusercontent.com/u/22606707?v=4","gravatar_id":"","url":"https://api.github.com/users/Saleh-Salem","html_url":"https://github.com/Saleh-Salem","followers_url":"https://api.github.com/users/Saleh-Salem/followers","following_url":"https://api.github.com/users/Saleh-Salem/following{/other_user}","gists_url":"https://api.github.com/users/Saleh-Salem/gists{/gist_id}","starred_url":"https://api.github.com/users/Saleh-Salem/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Saleh-Salem/subscriptions","organizations_url":"https://api.github.com/users/Saleh-Salem/orgs","repos_url":"https://api.github.com/users/Saleh-Salem/repos","events_url":"https://api.github.com/users/Saleh-Salem/events{/privacy}","received_events_url":"https://api.github.com/users/Saleh-Salem/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-11T08:08:17Z","updated_at":"2022-09-11T08:27:32Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When validating the CSRF token getting an exception in API\r\n \r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\nthe `session[:_csrf_token]` and  `request.x_csrf_token` is different and getting issue.\r\nwhen I need to skip the csrf, I add `verify_authenticity_token`, In this case, I don't need to skip it.\r\nI debug and found the issue in the method:\r\n\r\n```\r\n  def compare_with_global_token(token, session = nil) # :doc:\r\n    ActiveSupport::SecurityUtils.fixed_length_secure_compare(token, global_csrf_token(session))\r\n  end\r\n```\r\n\r\nwhat is `session[:_csrf_token]` and how can I implement it in API?\r\nIs there any missing from my side?\r\n### Steps to reproduce\r\n\r\n1. Add `protect_from_forgery with: :exception` .\r\n2. When logging in return token in response is generated by `form_authenticity_token`.\r\n3. When Trying to request any POST, PUT or DELETE API get an exception.\r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nReturn Response without exception.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\ngetting exception \r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\n### System configuration\r\n**Rails version**:\r\n6.0.3.5\r\n**Ruby version**:\r\n2.7.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45998/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45998/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45994","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45994/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45994/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45994/events","html_url":"https://github.com/rails/rails/issues/45994","id":1368555704,"node_id":"I_kwDNIULOUZKAuA","number":45994,"title":"LoadInterlockAwareMonitor deadlock when clearing cache (multiple databases, test)","user":{"login":"kuahyeow","id":16723,"node_id":"MDQ6VXNlcjE2NzIz","avatar_url":"https://avatars.githubusercontent.com/u/16723?v=4","gravatar_id":"","url":"https://api.github.com/users/kuahyeow","html_url":"https://github.com/kuahyeow","followers_url":"https://api.github.com/users/kuahyeow/followers","following_url":"https://api.github.com/users/kuahyeow/following{/other_user}","gists_url":"https://api.github.com/users/kuahyeow/gists{/gist_id}","starred_url":"https://api.github.com/users/kuahyeow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kuahyeow/subscriptions","organizations_url":"https://api.github.com/users/kuahyeow/orgs","repos_url":"https://api.github.com/users/kuahyeow/repos","events_url":"https://api.github.com/users/kuahyeow/events{/privacy}","received_events_url":"https://api.github.com/users/kuahyeow/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-10T08:52:46Z","updated_at":"2022-09-10T08:56:12Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"With multiple databases, we observe hangs within system tests.\r\n\r\nSee also https://gitlab.com/gitlab-org/gitlab/-/issues/371468 (GitLab is at Rails 6.1, Ruby 2.7.5)\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nHere's a minimal reproduction with Rails 7.0.3.1\r\n\r\n1. Checkout https://gitlab.com/tkuah/multi_database_system_test\r\n2. `bundle install`\r\n3. `bundle exec rails db:migrate`\r\n4. `bundle rails test test/system/home_pages_test.rb`\r\n\r\nThe conditions are:\r\n\r\n1. Multiple databases\r\n2. System test where there's an async request which overlaps with the main thread\r\n\r\n### Expected behavior\r\n\r\nIt does not hang, and the test completes\r\n\r\n### Actual behavior\r\n\r\nIt hangs. It looks like it's hanging when clearing query cache (see https://gitlab.com/gitlab-org/gitlab/-/issues/371468#note_1087203883, and https://gitlab.com/gitlab-org/gitlab/-/issues/371468#note_1088779499)\r\n\r\nA backtrace dump taken while the test is hanging [sigdump-68442.log](https://github.com/rails/rails/files/9539878/sigdump-68442.log)\r\n\r\nMy suspicion is that:\r\n\r\n1. `lock_thread` is true for system tests\r\n3. Therefore both the main thread, and the Puma thread attempt to clear query cache for the same set of connections\r\n\r\nSo we have two connections:\r\n\r\n1. Puma thread takes a `LoadInterlockAwareMonitor` lock for primary connection via `Post.transaction`\r\n2. Main thread takes a `LoadInterlockAwareMonitor` lock for animal connection via implicit transaction that `create` does\r\n3. Due to 2, main thread attempts to clear query cache for primary connection. **Waits for 1's lock**\r\n4. Due to 1, and because of `lock_thread`, puma thread clears query cache for primary connection. It takes a `LoadInterlockAwareMonitor` lock for primary connection which succeds\r\n5. Due to 1, puma thread now attempts clears query cache for animal connection. **Waits for 2's lock**\r\n\r\nSee [`clear_query_caches_for_current_thread` method](https://github.com/rails/rails/blob/e24fbf71fa0a10f63346b9b42604451958740844/activerecord/lib/active_record/connection_handling.rb#L244-L248)\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: ruby 2.7.5p203 (2021-11-24 revision f69aeb8314) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45994/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45994/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45984","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45984/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45984/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45984/events","html_url":"https://github.com/rails/rails/issues/45984","id":1368144421,"node_id":"I_kwDNIULOUYw6JQ","number":45984,"title":"Cannot Eager Load has_many :through Relationships with custom scope","user":{"login":"dcorrigan","id":2445528,"node_id":"MDQ6VXNlcjI0NDU1Mjg=","avatar_url":"https://avatars.githubusercontent.com/u/2445528?v=4","gravatar_id":"","url":"https://api.github.com/users/dcorrigan","html_url":"https://github.com/dcorrigan","followers_url":"https://api.github.com/users/dcorrigan/followers","following_url":"https://api.github.com/users/dcorrigan/following{/other_user}","gists_url":"https://api.github.com/users/dcorrigan/gists{/gist_id}","starred_url":"https://api.github.com/users/dcorrigan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dcorrigan/subscriptions","organizations_url":"https://api.github.com/users/dcorrigan/orgs","repos_url":"https://api.github.com/users/dcorrigan/repos","events_url":"https://api.github.com/users/dcorrigan/events{/privacy}","received_events_url":"https://api.github.com/users/dcorrigan/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-09T17:47:35Z","updated_at":"2022-09-09T17:47:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nThis seems like it's the same as #28324, but I'm still seeing the issue in Rails 7. \r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n  end\r\n\r\n  create_table :images, force: true do |t|\r\n    t.string :title\r\n    t.integer :post_id\r\n  end\r\n\r\n  create_table :captions, force: true do |t|\r\n    t.integer :image_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :images\r\n  has_many :captions, lambda { order('images.title DESC') }, through: :images\r\nend\r\n\r\nclass Image < ActiveRecord::Base\r\n  belongs_to :post\r\n  has_one :caption\r\nend\r\n\r\nclass Caption < ActiveRecord::Base\r\n  belongs_to :image\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_preload_has_many_through_association_with_scope\r\n    post = Post.create!\r\n    image = Image.create!\r\n    image.caption = Caption.create!\r\n    post.images << image\r\n    post.save!\r\n\r\n    # Access through the model works\r\n    assert_includes post.captions, Caption.first\r\n\r\n    # Query with association preloaded does not.\r\n    # When evaluated, it will apply the scope without the relevant JOIN table:\r\n    # SELECT \"captions\".* FROM \"captions\" WHERE \"captions\".\"image_id\" = ? ORDER BY images.title DESC\r\n    preloaded = Post.where(id: post.id).includes(:captions)\r\n\r\n    assert_includes preloaded.first.captions, Caption.first\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe test passes and we're able to eager load has_many :through associations with custom scopes in this way.\r\n\r\nI realize this can be fixed by adding a `references(:images)` to the query, but it seems reasonable to expect AR to infer that that the join is necessary here.\r\n\r\n### Actual behavior\r\n\r\nTest fails with an error: `ActiveRecord::StatementInvalid: SQLite3::SQLException: no such column: images.title`\r\n\r\n### System configuration\r\n**Rails version**: 7.0 \r\n\r\n**Ruby version**: 3.1.2p20\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45984/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45967","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45967/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45967/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45967/events","html_url":"https://github.com/rails/rails/issues/45967","id":1366038829,"node_id":"I_kwDNIULOUWwZLQ","number":45967,"title":"Inconsistent update of timestamps while updating associations with *_ids=","user":{"login":"matthee","id":547653,"node_id":"MDQ6VXNlcjU0NzY1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/547653?v=4","gravatar_id":"","url":"https://api.github.com/users/matthee","html_url":"https://github.com/matthee","followers_url":"https://api.github.com/users/matthee/followers","following_url":"https://api.github.com/users/matthee/following{/other_user}","gists_url":"https://api.github.com/users/matthee/gists{/gist_id}","starred_url":"https://api.github.com/users/matthee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matthee/subscriptions","organizations_url":"https://api.github.com/users/matthee/orgs","repos_url":"https://api.github.com/users/matthee/repos","events_url":"https://api.github.com/users/matthee/events{/privacy}","received_events_url":"https://api.github.com/users/matthee/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-08T10:51:09Z","updated_at":"2022-09-09T03:10:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"ActiveRecord inconsistently updates the `updated_at` column when changing `has_many through:` associations.\r\n\r\n### Steps to reproduce\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"activesupport\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"active_support/testing/time_helpers\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.timestamps\r\n  end\r\n  \r\n  create_table :tags, force: true do |t|\r\n  end\r\n\r\n  create_table :taggings, force: true do |t|\r\n    t.integer :post_id\r\n    t.integer :tag_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :taggings, dependent: :destroy\r\n  \r\n  has_many :tags, through: :taggings\r\nend\r\n\r\nclass Tagging < ActiveRecord::Base\r\n  belongs_to :post, touch: true\r\n  belongs_to :tag\r\nend\r\n\r\nclass Tag < ActiveRecord::Base\r\n  has_many :taggings\r\n  has_many :posts, through: :taggings\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  include ActiveSupport::Testing::TimeHelpers\r\n  \r\n  def test_updated_at_is_updated_when_setting_has_many_through_association\r\n    freeze_time\r\n        \r\n    tag_1 = Tag.create!\r\n    tag_2 = Tag.create!\r\n      \r\n    post = Post.create!\r\n    \r\n    travel_to(now = 1.hour.from_now)\r\n    \r\n    # Adding tags updates post.updated_at\r\n    post.update(tag_ids: [tag_1.id, tag_2.id])\r\n    assert_in_delta now, post.updated_at, 1.second, \"post#updated_at was not updated when adding tags\"\r\n    \r\n    # Removing tags does not update post.updated_at :(\r\n    travel_to(now = 2.hours.from_now)\r\n    post.update(tag_ids: [tag_1.id])\r\n    assert_in_delta now, post.updated_at, 1.second, \"post#updated_at was not updated when removing tags\"\r\n  end\r\n  \r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nIn the example above, both `.update` calls should update the `updated_at` column of the post record. (when adding and removing records)\r\n\r\n### Actual behavior\r\n\r\nWhen deleting a record, the `updated_at` timestamp is not updated.\r\n\r\n### System configuration\r\n**Rails version**:\r\n7.0.3.1\r\n**Ruby version**:\r\n3.0.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45967/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45967/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45959","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45959/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45959/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45959/events","html_url":"https://github.com/rails/rails/issues/45959","id":1364232810,"node_id":"I_kwDNIULOUVCKag","number":45959,"title":"JSON field not saving data with symbol : and it's saving with arrow =>","user":{"login":"sajjadmurtaza","id":8552702,"node_id":"MDQ6VXNlcjg1NTI3MDI=","avatar_url":"https://avatars.githubusercontent.com/u/8552702?v=4","gravatar_id":"","url":"https://api.github.com/users/sajjadmurtaza","html_url":"https://github.com/sajjadmurtaza","followers_url":"https://api.github.com/users/sajjadmurtaza/followers","following_url":"https://api.github.com/users/sajjadmurtaza/following{/other_user}","gists_url":"https://api.github.com/users/sajjadmurtaza/gists{/gist_id}","starred_url":"https://api.github.com/users/sajjadmurtaza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sajjadmurtaza/subscriptions","organizations_url":"https://api.github.com/users/sajjadmurtaza/orgs","repos_url":"https://api.github.com/users/sajjadmurtaza/repos","events_url":"https://api.github.com/users/sajjadmurtaza/events{/privacy}","received_events_url":"https://api.github.com/users/sajjadmurtaza/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":1071962662,"node_id":"MDU6TGFiZWwxMDcxOTYyNjYy","url":"https://api.github.com/repos/rails/rails/labels/more-information-needed","name":"more-information-needed","color":"bfdadc","default":false,"description":"When reporter needs to provide more information"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-09-07T07:40:12Z","updated_at":"2022-09-08T07:23:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nI have JSON field in my database `t.json \"theme\"`. When I try to save the field hash with : , it's overridden before save\r\ne.g.\r\n`object.theme = { color: 'red' }` it always change to `{ color => 'red' }`\r\n\r\ni also tried with jsonb and default value with empty hash {} but still having the same issue.\r\n\r\n\r\nI want to save the JSON data hash with symbol keys `{ color: 'red' }`\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.0\r\n\r\n**Ruby version**: 2.7.1\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45959/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45959/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45949","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45949/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45949/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45949/events","html_url":"https://github.com/rails/rails/issues/45949","id":1362899537,"node_id":"I_kwDNIULOUTwyUQ","number":45949,"title":"ActionText::Attachable#as_json override is breaking ActiveStorage::Blob#as_json when blob is not persisted","user":{"login":"balbesina","id":7312369,"node_id":"MDQ6VXNlcjczMTIzNjk=","avatar_url":"https://avatars.githubusercontent.com/u/7312369?v=4","gravatar_id":"","url":"https://api.github.com/users/balbesina","html_url":"https://github.com/balbesina","followers_url":"https://api.github.com/users/balbesina/followers","following_url":"https://api.github.com/users/balbesina/following{/other_user}","gists_url":"https://api.github.com/users/balbesina/gists{/gist_id}","starred_url":"https://api.github.com/users/balbesina/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/balbesina/subscriptions","organizations_url":"https://api.github.com/users/balbesina/orgs","repos_url":"https://api.github.com/users/balbesina/repos","events_url":"https://api.github.com/users/balbesina/events{/privacy}","received_events_url":"https://api.github.com/users/balbesina/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-06T08:26:39Z","updated_at":"2022-09-06T08:26:39Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nfrom rails console:\r\n```ruby\r\nActiveStorage::Blob.build_after_unfurling(io: StringIO.new('asd'), filename: 'asd.txt').as_json\r\n```\r\n\r\n[Reproduction script](https://gist.github.com/balbesina/30fbdafbfee4b71b06209d9e950f4128)\r\n\r\n### Expected behavior\r\nActiveStorage::Blob#as_json returns a Hash\r\n\r\n### Actual behavior\r\nActiveStorage::Blob#as_json raises exception\r\n```\r\n/Users/dhh/.rvm/gems/ruby-3.1.2/gems/globalid-1.0.0/lib/global_id/uri/gid.rb:167:in `validate_model_id': \r\nUnable to create a Global ID for ActiveStorage::Blob without a model id. (URI::GID::MissingModelIdError)\r\n```\r\n\r\n### System configuration\r\n**Rails version**: Rails 7.0.3.1\r\n**Ruby version**: ruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45949/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45949/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45939","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45939/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45939/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45939/events","html_url":"https://github.com/rails/rails/issues/45939","id":1360876688,"node_id":"I_kwDNIULOUR1UkA","number":45939,"title":"Validations aren't inherited from base model if child is called before validation declaration","user":{"login":"Exterm1nate","id":48535087,"node_id":"MDQ6VXNlcjQ4NTM1MDg3","avatar_url":"https://avatars.githubusercontent.com/u/48535087?v=4","gravatar_id":"","url":"https://api.github.com/users/Exterm1nate","html_url":"https://github.com/Exterm1nate","followers_url":"https://api.github.com/users/Exterm1nate/followers","following_url":"https://api.github.com/users/Exterm1nate/following{/other_user}","gists_url":"https://api.github.com/users/Exterm1nate/gists{/gist_id}","starred_url":"https://api.github.com/users/Exterm1nate/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Exterm1nate/subscriptions","organizations_url":"https://api.github.com/users/Exterm1nate/orgs","repos_url":"https://api.github.com/users/Exterm1nate/repos","events_url":"https://api.github.com/users/Exterm1nate/events{/privacy}","received_events_url":"https://api.github.com/users/Exterm1nate/received_events","type":"User","site_admin":false},"labels":[{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-09-03T14:46:42Z","updated_at":"2022-09-08T07:26:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nLet's create some STI models. Base `Vehicle` and two childs `Car` and `Motorcycle`.\r\n\r\n```ruby\r\n# models/vehicle.rb\r\nclass Vehicle < ApplicationRecord\r\n  TYPES = [Car, Motorcycle].freeze\r\n\r\n  validates :color, uniqueness: { scope: :model }\r\nend\r\n\r\n# models/car.rb\r\nclass Car < Vehicle\r\nend\r\n\r\n# models/motorcycle.rb\r\nclass Motorcycle < Vehicle\r\nend\r\n```\r\n\r\nAfter that we want to use `#validators_on` method to make sure the validation is present.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\nCar.validators_on(:color)\r\nMotorcycle.validators_on(:color)\r\n```\r\n\r\n### Expected behavior\r\n\r\nAll models must contain the validation.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nMotorcycle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\n```\r\n\r\n### Actual behavior\r\n\r\nBut for childs this method returns nothing.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> []\r\nMotorcycle.validators_on(:color)\r\n#=> []\r\n```\r\n\r\n### Notes\r\n\r\nIf we remove the `TYPES` constant (or just child classes calls from it) `validators_on` works as expected. Let's change original code a little bit:\r\n\r\n```ruby\r\n# models/vehicle.rb\r\nclass Vehicle < ApplicationRecord\r\n  TYPES = [Car].freeze # Motorcycle was removed from here!\r\n\r\n  validates :color, uniqueness: { scope: :model }\r\nend\r\n```\r\n\r\nAnd after that test again.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> []\r\nMotorcycle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\n```\r\n\r\n`Motorcycle` validation was returned correctly this time.\r\n\r\nIt seems to be a load error. `Car` was called before the `Vehicle`'s validation declaration, so it doesn't take this validation into account. It may also depend on loading order.\r\n\r\nNotice that validation itself is working well in all models.\r\n\r\n```ruby\r\nCar.create!(color: \"black\", model: \"Boomer\")\r\nCar.create!(color: \"black\", model: \"Boomer\") # raises ActiveRecord::RecordInvalid\r\n\r\nMotorcycle.create!(color: \"red\", model: \"Yamaha\")\r\nMotorcycle.create!(color: \"red\", model: \"Yamaha\") # raises ActiveRecord::RecordInvalid\r\n```\r\n\r\nExample project: https://github.com/Exterm1nate/rails-validation-issue\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3\r\n\r\n**Ruby version**: 3.1.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45939/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45939/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45937","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45937/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45937/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45937/events","html_url":"https://github.com/rails/rails/issues/45937","id":1360779604,"node_id":"I_kwDNIULOURvZVA","number":45937,"title":"Add strict table mode (by default) to sqlite adapter","user":{"login":"jrz","id":149668,"node_id":"MDQ6VXNlcjE0OTY2OA==","avatar_url":"https://avatars.githubusercontent.com/u/149668?v=4","gravatar_id":"","url":"https://api.github.com/users/jrz","html_url":"https://github.com/jrz","followers_url":"https://api.github.com/users/jrz/followers","following_url":"https://api.github.com/users/jrz/following{/other_user}","gists_url":"https://api.github.com/users/jrz/gists{/gist_id}","starred_url":"https://api.github.com/users/jrz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jrz/subscriptions","organizations_url":"https://api.github.com/users/jrz/orgs","repos_url":"https://api.github.com/users/jrz/repos","events_url":"https://api.github.com/users/jrz/events{/privacy}","received_events_url":"https://api.github.com/users/jrz/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-03T07:01:02Z","updated_at":"2022-09-08T07:30:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"SQLite supports 'strict tables' since 3.37.1 https://sqlite.org/stricttables.html\r\n\r\nThis forces a datatype to be specified when creating a table. This is the preferred method in any application created by developers. \r\n\r\nUnspecified/ANY datatypes are useful for quick tryouts as an enduser, similar to excel. But it's counterproductive when creating an application.\r\n\r\nIf this will become a configurable setting, the default should be set to strict.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45937/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45937/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45920","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45920/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45920/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45920/events","html_url":"https://github.com/rails/rails/issues/45920","id":1358179995,"node_id":"I_kwDNIULOUPQumw","number":45920,"title":"Replace has_one through create_association might create duplicated rows","user":{"login":"lazaronixon","id":2651240,"node_id":"MDQ6VXNlcjI2NTEyNDA=","avatar_url":"https://avatars.githubusercontent.com/u/2651240?v=4","gravatar_id":"","url":"https://api.github.com/users/lazaronixon","html_url":"https://github.com/lazaronixon","followers_url":"https://api.github.com/users/lazaronixon/followers","following_url":"https://api.github.com/users/lazaronixon/following{/other_user}","gists_url":"https://api.github.com/users/lazaronixon/gists{/gist_id}","starred_url":"https://api.github.com/users/lazaronixon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lazaronixon/subscriptions","organizations_url":"https://api.github.com/users/lazaronixon/orgs","repos_url":"https://api.github.com/users/lazaronixon/repos","events_url":"https://api.github.com/users/lazaronixon/events{/privacy}","received_events_url":"https://api.github.com/users/lazaronixon/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-09-01T03:05:07Z","updated_at":"2022-09-01T23:03:40Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# Ensure backward compatibility with minitest 4.\r\nMinitest::Test = MiniTest::Unit::TestCase unless defined?(Minitest::Test)\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts do |t|\r\n  end\r\n\r\n  create_table :comments do |t|\r\n    t.references :post\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_one :comment, dependent: :destroy\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  validates_presence_of :post_id\r\n  belongs_to :post\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    post = Post.create!\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    sleep 5.seconds\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n```\r\n# transaction begin\r\nselect previous_comment for update\r\n\r\ninsert new_comment\r\n\r\ndelete previous_comment\r\n# transaction commit\r\n```\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n```\r\n# transaction begin\r\ninsert new_comment\r\n# transaction commit\r\n\r\n# transaction begin\r\ndelete previous_comment\r\n# transaction commit\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45920/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45920/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45906","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45906/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45906/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45906/events","html_url":"https://github.com/rails/rails/issues/45906","id":1355732552,"node_id":"I_kwDNIULOUM7WSA","number":45906,"title":"High object allocation count from `ActiveRecord::ConnectionAdapters::PoolManager#pool_configs `","user":{"login":"amarchenkoshopify","id":101111422,"node_id":"U_kgDOBgbWfg","avatar_url":"https://avatars.githubusercontent.com/u/101111422?v=4","gravatar_id":"","url":"https://api.github.com/users/amarchenkoshopify","html_url":"https://github.com/amarchenkoshopify","followers_url":"https://api.github.com/users/amarchenkoshopify/followers","following_url":"https://api.github.com/users/amarchenkoshopify/following{/other_user}","gists_url":"https://api.github.com/users/amarchenkoshopify/gists{/gist_id}","starred_url":"https://api.github.com/users/amarchenkoshopify/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amarchenkoshopify/subscriptions","organizations_url":"https://api.github.com/users/amarchenkoshopify/orgs","repos_url":"https://api.github.com/users/amarchenkoshopify/repos","events_url":"https://api.github.com/users/amarchenkoshopify/events{/privacy}","received_events_url":"https://api.github.com/users/amarchenkoshopify/received_events","type":"User","site_admin":false},"labels":[{"id":107186,"node_id":"MDU6TGFiZWwxMDcxODY=","url":"https://api.github.com/repos/rails/rails/labels/regression","name":"regression","color":"e10c02","default":false,"description":null},{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"eileencodes","id":1080678,"node_id":"MDQ6VXNlcjEwODA2Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/1080678?v=4","gravatar_id":"","url":"https://api.github.com/users/eileencodes","html_url":"https://github.com/eileencodes","followers_url":"https://api.github.com/users/eileencodes/followers","following_url":"https://api.github.com/users/eileencodes/following{/other_user}","gists_url":"https://api.github.com/users/eileencodes/gists{/gist_id}","starred_url":"https://api.github.com/users/eileencodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eileencodes/subscriptions","organizations_url":"https://api.github.com/users/eileencodes/orgs","repos_url":"https://api.github.com/users/eileencodes/repos","events_url":"https://api.github.com/users/eileencodes/events{/privacy}","received_events_url":"https://api.github.com/users/eileencodes/received_events","type":"User","site_admin":false},"assignees":[{"login":"eileencodes","id":1080678,"node_id":"MDQ6VXNlcjEwODA2Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/1080678?v=4","gravatar_id":"","url":"https://api.github.com/users/eileencodes","html_url":"https://github.com/eileencodes","followers_url":"https://api.github.com/users/eileencodes/followers","following_url":"https://api.github.com/users/eileencodes/following{/other_user}","gists_url":"https://api.github.com/users/eileencodes/gists{/gist_id}","starred_url":"https://api.github.com/users/eileencodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eileencodes/subscriptions","organizations_url":"https://api.github.com/users/eileencodes/orgs","repos_url":"https://api.github.com/users/eileencodes/repos","events_url":"https://api.github.com/users/eileencodes/events{/privacy}","received_events_url":"https://api.github.com/users/eileencodes/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/rails/rails/milestones/81","html_url":"https://github.com/rails/rails/milestone/81","labels_url":"https://api.github.com/repos/rails/rails/milestones/81/labels","id":7591006,"node_id":"MI_kwDNIULOAHPUXg","number":81,"title":"7.0.4","description":"","creator":{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":3,"state":"open","created_at":"2022-01-20T01:51:07Z","updated_at":"2022-08-30T13:21:37Z","due_on":null,"closed_at":null},"comments":2,"created_at":"2022-08-30T12:58:42Z","updated_at":"2022-08-31T12:37:42Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWhile working on memory efficiency investigation I noticed that a very big bunch of object allocations comes from a single method `ActiveRecord::ConnectionAdapters::PoolManager#pool_configs`:\r\n\r\n```ruby\r\n      def pool_configs(role = nil)\r\n        if role\r\n          @role_to_shard_mapping[role].values\r\n        else\r\n          @role_to_shard_mapping.flat_map { |_, shard_map| shard_map.values }\r\n        end\r\n      end \r\n```\r\n\r\nThis method is called on every activerecord operation and does not cache its result: could we think about a way of caching its result?\r\n\r\ncc @eileencodes \r\n\r\n### Expected behavior\r\n\r\n`#pool_configs` allocates configs once\r\n\r\n### Actual behavior\r\n\r\n`#pool_configs` allocates configs every time it is executed\r\n\r\n### System configuration\r\n**Rails version**: main branch\r\n\r\n**Ruby version**: 3.1\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45906/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45901","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45901/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45901/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45901/events","html_url":"https://github.com/rails/rails/issues/45901","id":1354555667,"node_id":"I_kwDNIULOULzhEw","number":45901,"title":"bin/rails dbconsole should include_password by default","user":{"login":"wpeterson","id":178135,"node_id":"MDQ6VXNlcjE3ODEzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/178135?v=4","gravatar_id":"","url":"https://api.github.com/users/wpeterson","html_url":"https://github.com/wpeterson","followers_url":"https://api.github.com/users/wpeterson/followers","following_url":"https://api.github.com/users/wpeterson/following{/other_user}","gists_url":"https://api.github.com/users/wpeterson/gists{/gist_id}","starred_url":"https://api.github.com/users/wpeterson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wpeterson/subscriptions","organizations_url":"https://api.github.com/users/wpeterson/orgs","repos_url":"https://api.github.com/users/wpeterson/repos","events_url":"https://api.github.com/users/wpeterson/events{/privacy}","received_events_url":"https://api.github.com/users/wpeterson/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-29T16:19:45Z","updated_at":"2022-08-30T00:17:43Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n1. Configure a Rails `config/database.yml` with a `password` required to connect\r\n2. Run `rails dbconsole`\r\n3. See prompt for database password, despite password being configured/available\r\n4. Run `rails dbconsole -p`\r\n5. See dbconsole properly load and use credentials to connect to database for DB console session\r\n\r\n### Expected behavior\r\nWhenever a Rails app has credentials like a password configured for a database, the database console session should use those credentials vs. prompting the user to re-enter a password interactively.  When credentials are not configured and a password is required, we should prompt then.\r\n\r\nThis behavior is implemented since early Rails versions but is disabled by default.  I propose we enable the proper password behavior by default.\r\n\r\n### Actual behavior\r\n`bin/rails dbconsole` always prompts for a password, even when one is configured for the app.\r\n\r\n### System configuration\r\n**Rails version**: All (6.x, 7.x, head)\r\n\r\n**Ruby version**: All \r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45901/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45901/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45899","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45899/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45899/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45899/events","html_url":"https://github.com/rails/rails/issues/45899","id":1353676820,"node_id":"I_kwDNIULOUK94FA","number":45899,"title":"Active Job unit tests fail using que 2.2.0","user":{"login":"yahonda","id":73684,"node_id":"MDQ6VXNlcjczNjg0","avatar_url":"https://avatars.githubusercontent.com/u/73684?v=4","gravatar_id":"","url":"https://api.github.com/users/yahonda","html_url":"https://github.com/yahonda","followers_url":"https://api.github.com/users/yahonda/followers","following_url":"https://api.github.com/users/yahonda/following{/other_user}","gists_url":"https://api.github.com/users/yahonda/gists{/gist_id}","starred_url":"https://api.github.com/users/yahonda/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yahonda/subscriptions","organizations_url":"https://api.github.com/users/yahonda/orgs","repos_url":"https://api.github.com/users/yahonda/repos","events_url":"https://api.github.com/users/yahonda/events{/privacy}","received_events_url":"https://api.github.com/users/yahonda/received_events","type":"User","site_admin":false},"labels":[{"id":123812746,"node_id":"MDU6TGFiZWwxMjM4MTI3NDY=","url":"https://api.github.com/repos/rails/rails/labels/activejob","name":"activejob","color":"5319e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-29T04:24:06Z","updated_at":"2022-09-09T15:33:02Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"### Steps to reproduce\r\nActive Job CI has been failing since que 2.2.0 is installed. https://buildkite.com/rails/rails/builds/89068#0182e6b9-7c84-4b85-a651-8d640f5eb076\r\n\r\n```ruby\r\ngit clone https://github.com/rails/rails\r\ncd rails/activejob\r\nbundle update que\r\nAJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\n```\r\n\r\nAlthough there are 3 failures and 75 errors. This script just runs a single test because it looks the root cause is the same.\r\n\r\n\r\n### Expected behavior\r\nIt should pass.\r\n\r\n### Actual behavior\r\nIt raises `ArgumentError: wrong number of arguments (given 2, expected 1)`.\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 62302\r\n\r\n# Running:\r\n\r\nE\r\n\r\nError:\r\nQueuingTest#test_run_queued_job:\r\nArgumentError: wrong number of arguments (given 2, expected 1)\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:78:in `run'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job_methods.rb:51:in `_run'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:248:in `block (2 levels) in _run_attrs'\r\n    (eval):9:in `run_job_middleware'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:247:in `block in _run_attrs'\r\n    <internal:kernel>:90:in `tap'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:246:in `_run_attrs'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:223:in `run'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/support/que/inline.rb:15:in `enqueue'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:66:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:27:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:67:in `block in enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:118:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:28:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:27:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:9:in `block (2 levels) in <module:Instrumentation>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:27:in `tag_logger'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:14:in `block (2 levels) in <module:Logging>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:138:in `run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:63:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:30:in `perform_later'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/cases/queuing_test.rb:14:in `block in <class:QueuingTest>'\r\n\r\n\r\nbin/test test/cases/queuing_test.rb:13\r\n\r\n\r\n\r\nFinished in 0.008930s, 111.9768 runs/s, 0.0000 assertions/s.\r\n1 runs, 0 assertions, 0 failures, 1 errors, 0 skips\r\n$\r\n```\r\n\r\n### Additional information\r\n* `require_job_options_kwarg?` always returns `false` because `JobWrapper.method(:enqueue).parameters` does not have any `[:key, :job_options]` \r\nwhere it looks expected to return `true`.\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 32774\r\n\r\n# Running:\r\n\r\n[46, 55] in ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n    46|       end\r\n    47|\r\n    48|       private\r\n    49|         def require_job_options_kwarg?\r\n    50|           require 'debug'\r\n=>  51|           binding.break\r\n    52|           @require_job_options_kwarg ||=\r\n    53|             JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }\r\n    54|         end\r\n    55|\r\n=>#0\tActiveJob::QueueAdapters::QueAdapter#require_job_options_kwarg? at ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:51\r\n  #1\tActiveJob::QueueAdapters::QueAdapter#enqueue(job=#<HelloJob:0x00007fc861807740 @arguments...) at ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:24\r\n  # and 40 frames (use `bt' command for all frames)\r\n(rdbg) JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }    # ruby\r\nfalse\r\n(rdbg) JobWrapper.method(:enqueue).parameters    # ruby\r\n[[:req, :args], [:keyreq, :priority], [:keyreq, :queue], [:key, :run_at]]\r\n(rdbg) quit    # command\r\nReally quit? [Y/n] Y\r\n```\r\n\r\n* By changing `require_job_options_kwarg?` always returns `true`, it raises `ArgumentError: missing keywords: :priority, :queue`\r\n\r\n```ruby\r\n$ git diff\r\ndiff --git a/activejob/lib/active_job/queue_adapters/que_adapter.rb b/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\nindex 41b3633a07..54e8cbc39b 100644\r\n--- a/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n+++ b/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n@@ -47,6 +47,7 @@ def enqueue_at(job, timestamp) # :nodoc:\r\n\r\n       private\r\n         def require_job_options_kwarg?\r\n+          return true\r\n           @require_job_options_kwarg ||=\r\n             JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }\r\n         end\r\n$\r\n```\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 21508\r\n\r\n# Running:\r\n\r\nE\r\n\r\nError:\r\nQueuingTest#test_run_queued_job:\r\nArgumentError: missing keywords: :priority, :queue\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:65:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:25:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:67:in `block in enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:118:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:28:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:27:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:9:in `block (2 levels) in <module:Instrumentation>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:27:in `tag_logger'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:14:in `block (2 levels) in <module:Logging>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:138:in `run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:63:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:30:in `perform_later'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/cases/queuing_test.rb:14:in `block in <class:QueuingTest>'\r\n\r\n\r\nbin/test test/cases/queuing_test.rb:13\r\n\r\n\r\n\r\nFinished in 0.008724s, 114.6312 runs/s, 0.0000 assertions/s.\r\n1 runs, 0 assertions, 0 failures, 1 errors, 0 skips\r\n$\r\n```\r\n\r\n\r\n### System configuration\r\n**Rails version**: main branch\r\n\r\n**Ruby version**: $ ruby -v\r\nruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [x86_64-linux]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45899/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45893","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45893/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45893/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45893/events","html_url":"https://github.com/rails/rails/issues/45893","id":1352793907,"node_id":"I_kwDNIULOUKH_Mw","number":45893,"title":"ActiveRecord: HMT with conditions does not update the in-memory collection when pushing new objects","user":{"login":"joanniclaborde","id":411925,"node_id":"MDQ6VXNlcjQxMTkyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/411925?v=4","gravatar_id":"","url":"https://api.github.com/users/joanniclaborde","html_url":"https://github.com/joanniclaborde","followers_url":"https://api.github.com/users/joanniclaborde/followers","following_url":"https://api.github.com/users/joanniclaborde/following{/other_user}","gists_url":"https://api.github.com/users/joanniclaborde/gists{/gist_id}","starred_url":"https://api.github.com/users/joanniclaborde/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joanniclaborde/subscriptions","organizations_url":"https://api.github.com/users/joanniclaborde/orgs","repos_url":"https://api.github.com/users/joanniclaborde/repos","events_url":"https://api.github.com/users/joanniclaborde/events{/privacy}","received_events_url":"https://api.github.com/users/joanniclaborde/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-26T22:40:12Z","updated_at":"2022-08-30T15:33:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi! When using a `has_many :a, through: :b` relation, and the `:b` relation has a condition, adding new objects doesn't update the in-memory collection properly (stops after the first object).\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :packages, force: true do |t|\r\n  end\r\n\r\n  create_table :package_items, force: true do |t|\r\n    t.integer :package_id\r\n    t.integer :item_id\r\n  end\r\n\r\n  create_table :items, force: true do |t|\r\n    t.boolean \"deleted\", default: false\r\n  end\r\nend\r\n\r\nclass Package < ActiveRecord::Base\r\n  has_many :package_items, ->{ where(item_id: Item.active.pluck(:id)) }\r\n  has_many :items, through: :package_items\r\nend\r\n\r\nclass PackageItem < ActiveRecord::Base\r\n  belongs_to :package\r\n  belongs_to :item\r\nend\r\n\r\nclass Item < ActiveRecord::Base\r\n  has_many :package_items\r\n  has_many :packages, through: :package_items\r\n\r\n  scope :active, -> { where(deleted: false) }\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    package = Package.create!\r\n    package.items << Item.create!\r\n    package.items << Item.create!\r\n    package.items << Item.create!\r\n\r\n    # This should be [3, 3, 3] but we get [3, 1, 3]\r\n    assert_equal [3, 3, 3], [Item.count, package.items.count, package.reload.items.count]\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n`package.items.count` is equal to 3.\r\n\r\n### Actual behavior\r\n`package.items.count` is equal to 1, even though all the items and relations are created properly (see assertion).\r\n\r\n### System configuration\r\n**Rails version**: tested on `7.1.0.alpha` and `6.1.6.1`.\r\n\r\n**Ruby version**: tested on `2.7.5`.\r\n\r\n### Workaround\r\nI was able to fix this issue by changing the weird condition to a proper scope:\r\n\r\n```ruby\r\nclass Package < ActiveRecord::Base\r\n  has_many :package_items, ->{ includes(:item).merge(Item.active) }\r\n  has_many :items, through: :package_items\r\nend\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45893/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45893/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45880","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45880/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45880/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45880/events","html_url":"https://github.com/rails/rails/issues/45880","id":1349546108,"node_id":"I_kwDNIULOUHBwfA","number":45880,"title":"Google search links to old API docs","user":{"login":"abraham","id":3341,"node_id":"MDQ6VXNlcjMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/3341?v=4","gravatar_id":"","url":"https://api.github.com/users/abraham","html_url":"https://github.com/abraham","followers_url":"https://api.github.com/users/abraham/followers","following_url":"https://api.github.com/users/abraham/following{/other_user}","gists_url":"https://api.github.com/users/abraham/gists{/gist_id}","starred_url":"https://api.github.com/users/abraham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abraham/subscriptions","organizations_url":"https://api.github.com/users/abraham/orgs","repos_url":"https://api.github.com/users/abraham/repos","events_url":"https://api.github.com/users/abraham/events{/privacy}","received_events_url":"https://api.github.com/users/abraham/received_events","type":"User","site_admin":true},"labels":[{"id":150377,"node_id":"MDU6TGFiZWwxNTAzNzc=","url":"https://api.github.com/repos/rails/rails/labels/docs","name":"docs","color":"02d7e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-24T14:33:55Z","updated_at":"2022-08-25T23:48:01Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n1. Search Google for a Rails API https://www.google.com/search?q=rails+update_all\r\n2. Follow link for \"ActiveRecord::Relation - Rails API\"\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n\r\nFind documentation for the latest version of Rails. Currently `7.0.3.1`.\r\n\r\n`https://api.rubyonrails.org/classes/ActiveRecord/Relation.html`\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n\r\nFind documentation for the the very old version of `3.2.3`.\r\n\r\n`https://api.rubyonrails.org/v3.2.3/classes/ActiveRecord/Relation.html`\r\n\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45880/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45880/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45832","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45832/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45832/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45832/events","html_url":"https://github.com/rails/rails/issues/45832","id":1339487378,"node_id":"I_kwDNIULOT9b0kg","number":45832,"title":"MySQL 8.0 VARBINARY default value is hexadecimal","user":{"login":"HParker","id":4482399,"node_id":"MDQ6VXNlcjQ0ODIzOTk=","avatar_url":"https://avatars.githubusercontent.com/u/4482399?v=4","gravatar_id":"","url":"https://api.github.com/users/HParker","html_url":"https://github.com/HParker","followers_url":"https://api.github.com/users/HParker/followers","following_url":"https://api.github.com/users/HParker/following{/other_user}","gists_url":"https://api.github.com/users/HParker/gists{/gist_id}","starred_url":"https://api.github.com/users/HParker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HParker/subscriptions","organizations_url":"https://api.github.com/users/HParker/orgs","repos_url":"https://api.github.com/users/HParker/repos","events_url":"https://api.github.com/users/HParker/events{/privacy}","received_events_url":"https://api.github.com/users/HParker/received_events","type":"User","site_admin":true},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":309390193,"node_id":"MDU6TGFiZWwzMDkzOTAxOTM=","url":"https://api.github.com/repos/rails/rails/labels/MySQL","name":"MySQL","color":"fef2c0","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-08-15T20:42:09Z","updated_at":"2022-08-16T10:23:16Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Default values on VARBINARY columns changed behavior between MySQL 5.7 and 8.0\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"mysql2\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"mysql2\", database: \"adam_test\", prepared_statements: false, host: '127.0.0.1', port: 3307, user: \"root\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.binary :some_binary, null: false, limit: 1024, default: \"hello-world\"\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_mysql_defaults\r\n    post = Post.create!\r\n\r\n    mysql_vars = ActiveRecord::Base.connection.select_rows(\"SHOW VARIABLES LIKE '%version%'\")\r\n    puts mysql_vars.inspect\r\n    puts Post.column_defaults\r\n\r\n    # assert_equal \"0x68656C6C6F2D776F726C64\", post.some_binary # This passes\r\n    assert_equal \"hello-world\", post.some_binary # This fails\r\n\r\n    reloaded_post = Post.first\r\n    assert_equal \"hello-world\", reloaded_post.some_binary # this passes\r\n  end\r\nend\r\n```\r\n\r\nOn MySQL 5.7:\r\n\r\n```ruby\r\nPost.column_defaults # => {\"id\"=>nil, \"some_binary\"=>\"hello-world\"}\r\n```\r\n\r\nOn MySQL 8.0:\r\n\r\n```ruby\r\nPost.column_defaults # => {\"id\"=>nil, \"some_binary\"=>\"0x68656C6C6F2D776F726C64\"}\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe default value on binary columns should be Ruby strings, not ruby strings of hexadecimal.\r\n\r\n### Actual behavior\r\n\r\nThe column default in MySQL 8.0 is a hexadecimal string representing the binary data.\r\n\r\n### System configuration\r\n**Rails version**: main\r\n\r\n**Ruby version**: 3.1.0\r\n\r\nSome interesting MySQL forum posts about this behavior change:\r\n\r\n- https://forums.mysql.com/read.php?24,685577,685577\r\n- https://forums.mysql.com/read.php?20,698061,698061#msg-698061\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45832/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45832/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45830","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45830/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45830/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45830/events","html_url":"https://github.com/rails/rails/issues/45830","id":1338922250,"node_id":"I_kwDNIULOT85VCg","number":45830,"title":"ActiveRecord Rollbacks on errors which happen on commit","user":{"login":"Baxxx","id":17880055,"node_id":"MDQ6VXNlcjE3ODgwMDU1","avatar_url":"https://avatars.githubusercontent.com/u/17880055?v=4","gravatar_id":"","url":"https://api.github.com/users/Baxxx","html_url":"https://github.com/Baxxx","followers_url":"https://api.github.com/users/Baxxx/followers","following_url":"https://api.github.com/users/Baxxx/following{/other_user}","gists_url":"https://api.github.com/users/Baxxx/gists{/gist_id}","starred_url":"https://api.github.com/users/Baxxx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baxxx/subscriptions","organizations_url":"https://api.github.com/users/Baxxx/orgs","repos_url":"https://api.github.com/users/Baxxx/repos","events_url":"https://api.github.com/users/Baxxx/events{/privacy}","received_events_url":"https://api.github.com/users/Baxxx/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":126910270,"node_id":"MDU6TGFiZWwxMjY5MTAyNzA=","url":"https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps","name":"With reproduction steps","color":"009800","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2022-08-15T12:09:14Z","updated_at":"2022-08-25T13:32:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nIn some of our projects we use Postgres as database, and for some cases we deferred trigger constraints. These triggers fire up when `COMMIT` is called. Trigger can raise an error, which kills the transaction. ActiveRecord catches the error, and bubbles it up to developer, but it also sends `ROLLBACK` to Postgres, to which Postgres gives a warning that there is no transaction in progress.\r\n\r\nI didn't test this with sqlite3 or mysql.\r\n\r\nYou can see the reproduction script, and screenshot with the current behavior.\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", \"~> 7\"\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"logger\"\r\n\r\nlogger = Logger.new(STDOUT)\r\n\r\n# This connection will do for database-independent bug reports.\r\npg_opts = {adapter: \"postgresql\", database: \"ar_rollback_after_failed_commit_issue\"}\r\n\r\nActiveRecord::Base.establish_connection(pg_opts.except(:database))\r\nActiveRecord::Base.connection.drop_database(pg_opts[:database])\r\nActiveRecord::Base.connection.create_database(pg_opts[:database])\r\nlogger.info \"Database #{pg_opts[:database]} was (re)created.\"\r\n\r\nActiveRecord::Base.establish_connection(pg_opts)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  execute <<~SQL\r\n    CREATE FUNCTION perform_custom_validation()\r\n      RETURNS TRIGGER\r\n      LANGUAGE plpgsql\r\n      AS $$\r\n        DECLARE\r\n          total_invalid INTEGER;\r\n        BEGIN\r\n          SELECT COUNT(*) INTO total_invalid\r\n          FROM things\r\n          WHERE name = 'bad';\r\n\r\n          IF (total_invalid > 0) THEN\r\n            RAISE EXCEPTION 'There are bad things';\r\n          END IF;\r\n          RETURN NULL;\r\n        END;\r\n      $$;\r\n\r\n    CREATE TABLE \"things\" (\r\n      \"id\" bigserial primary key,\r\n      \"name\" character varying NOT NULL\r\n    );\r\n\r\n    CREATE CONSTRAINT\r\n      TRIGGER bank_transaction_rl_payment_date_validation\r\n      AFTER INSERT OR UPDATE ON things\r\n      DEFERRABLE INITIALLY DEFERRED\r\n      FOR EACH ROW EXECUTE FUNCTION perform_custom_validation();\r\n  SQL\r\nend\r\n\r\nclass Thing < ActiveRecord::Base\r\n  validates :name, presence: true\r\nend\r\n\r\n# All good\r\nlogger.info \"First transaction\"\r\nThing.create!(name: \"good\")\r\n\r\n# AR tries to commit, DB raises an error, AR tries to ROLLBACK, and PG gives a warning\r\nbegin\r\n  logger.info \"Second transaction\"\r\n  Thing.create!(name: \"bad\")\r\nrescue StandardError\r\n  # Doesn't matter\r\nend\r\n```\r\n\r\n### Expected behavior\r\nActiveRecord should not `ROLLBACK`, as there is no transaction in progress.\r\n\r\n### Actual behavior\r\nActiveRecord tries to `ROLLBACK`.\r\n\r\n![Screenshot from 2022-08-15 14-07-11](https://user-images.githubusercontent.com/17880055/184632335-0277cd27-4c7b-4b98-94a8-373be34a87ee.png)\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 2.7.5p203\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45830/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45830/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45823","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45823/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45823/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45823/events","html_url":"https://github.com/rails/rails/issues/45823","id":1337409694,"node_id":"I_kwDNIULOT7dAng","number":45823,"title":"Change Column with Raw Character Set Failure","user":{"login":"ahoglund","id":3407303,"node_id":"MDQ6VXNlcjM0MDczMDM=","avatar_url":"https://avatars.githubusercontent.com/u/3407303?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoglund","html_url":"https://github.com/ahoglund","followers_url":"https://api.github.com/users/ahoglund/followers","following_url":"https://api.github.com/users/ahoglund/following{/other_user}","gists_url":"https://api.github.com/users/ahoglund/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoglund/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoglund/subscriptions","organizations_url":"https://api.github.com/users/ahoglund/orgs","repos_url":"https://api.github.com/users/ahoglund/repos","events_url":"https://api.github.com/users/ahoglund/events{/privacy}","received_events_url":"https://api.github.com/users/ahoglund/received_events","type":"User","site_admin":true},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":126910270,"node_id":"MDU6TGFiZWwxMjY5MTAyNzA=","url":"https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps","name":"With reproduction steps","color":"009800","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-12T16:21:50Z","updated_at":"2022-08-12T20:47:38Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"With [this recent change to how collation is handled for column changes](https://github.com/rails/rails/pull/45744/files), there is now a potential for older migrations written in a specific manner to break if the `collation:` argument is not specific.\r\n\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\n# you need to install mysql locally for this to work.\r\n# on Mac:\r\n# brew install mysql\r\n# brew services start mysql\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"mysql2\"\r\n\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nclient = Mysql2::Client.new(host: 'localhost', username: \"root\")\r\nclient.query(\"DROP DATABASE test\")\r\nclient.query(\"CREATE DATABASE test\")\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"mysql2\", database: \"test\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :payments, force: true do |t|\r\n    t.string :description, \"varchar(64)\", null: false\r\n  end\r\nend\r\n\r\nclass Payment < ActiveRecord::Base\r\nend\r\n\r\nclass ChangeAmountToAddScale < ActiveRecord::Migration[7.1]\r\n  # This sets the default character set for the payments\r\n  # table to utf32 with a default COLLATION of utf32_general_ci.\r\n  # This can be verified by running the following query:\r\n  #\r\n  # SHOW CHARACTER SET;\r\n  #\r\n  connection.execute(<<~SQL)\r\n    ALTER TABLE payments CONVERT TO CHARACTER SET utf32\r\n  SQL\r\n\r\n  def change\r\n    reversible do |dir|\r\n      dir.up do\r\n        change_table(:payments, bulk: true) do |t|\r\n          # The default collation of utf32_general_ci\r\n          # will not be compatible with this ascii character set. \r\n          #\r\n          # when we build the column change now we automatically\r\n          # try to assign the previous collation to the column if no `collation:` is specified.\r\n          # \r\n          # https://github.com/rails/rails/pull/45744\r\n          #\r\n          # The workaround is to add `collation: 'ascii_bin'` or `collation: 'ascii_general_ci'` to the change.\r\n          #\r\n          # This isn't a huge deal and it has a workaround but it _will_ break\r\n          # anyone who has migrations that are written like this and upgrade to this version\r\n          # of Rails.\r\n          t.change :description, \"varchar(64) CHARACTER SET ascii\", null: false\r\n        end\r\n      end\r\n\r\n      dir.down do\r\n        change_table(:payments, bulk: true) do |t|\r\n          t.change :description, \"varchar(64)\", null: false\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_migration_up\r\n    ChangeAmountToAddScale.migrate(:up)\r\n    Payment.reset_column_information\r\n\r\n    assert_equal \"varchar\", Payment.columns.last.sql_type\r\n  end\r\n\r\n  def test_migration_down\r\n    ChangeAmountToAddScale.migrate(:down)\r\n    Payment.reset_column_information\r\n\r\n    assert_equal \"varchar\", Payment.columns.last.sql_type\r\n  end\r\nend\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nI would expect this to detect that the character set is being changed, and either \r\n\r\n1. change the collation to be compatible.\r\n2. At least give a clearer error that requires the `collation:` arg to be passed when the character set is being modified.\r\n\r\n### Actual behavior\r\n\r\nThis error:\r\n\r\n```\r\nError:\r\nBugTest#test_migration_up:\r\nActiveRecord::StatementInvalid: Mysql2::Error: COLLATION 'utf32_general_ci' is not valid for CHARACTER SET 'ascii'\r\n    test.rb:51:in `block (2 levels) in change'\r\n    test.rb:50:in `block in change'\r\n    test.rb:49:in `change'\r\n    test.rb:67:in `test_migration_up'\r\n```\r\n\r\n### System configuration\r\n**Rails version**: main\r\n**Ruby version**: ruby 3.1.1p18\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45823/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45823/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45822","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45822/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45822/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45822/events","html_url":"https://github.com/rails/rails/issues/45822","id":1337253221,"node_id":"I_kwDNIULOT7TdZQ","number":45822,"title":"ActiveRecord: Wrong results returned by ActiveRecord::Associations::Preloader when intermediate association is already preloaded.","user":{"login":"yopzer","id":6330271,"node_id":"MDQ6VXNlcjYzMzAyNzE=","avatar_url":"https://avatars.githubusercontent.com/u/6330271?v=4","gravatar_id":"","url":"https://api.github.com/users/yopzer","html_url":"https://github.com/yopzer","followers_url":"https://api.github.com/users/yopzer/followers","following_url":"https://api.github.com/users/yopzer/following{/other_user}","gists_url":"https://api.github.com/users/yopzer/gists{/gist_id}","starred_url":"https://api.github.com/users/yopzer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yopzer/subscriptions","organizations_url":"https://api.github.com/users/yopzer/orgs","repos_url":"https://api.github.com/users/yopzer/repos","events_url":"https://api.github.com/users/yopzer/events{/privacy}","received_events_url":"https://api.github.com/users/yopzer/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"jhawthorn","id":131752,"node_id":"MDQ6VXNlcjEzMTc1Mg==","avatar_url":"https://avatars.githubusercontent.com/u/131752?v=4","gravatar_id":"","url":"https://api.github.com/users/jhawthorn","html_url":"https://github.com/jhawthorn","followers_url":"https://api.github.com/users/jhawthorn/followers","following_url":"https://api.github.com/users/jhawthorn/following{/other_user}","gists_url":"https://api.github.com/users/jhawthorn/gists{/gist_id}","starred_url":"https://api.github.com/users/jhawthorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhawthorn/subscriptions","organizations_url":"https://api.github.com/users/jhawthorn/orgs","repos_url":"https://api.github.com/users/jhawthorn/repos","events_url":"https://api.github.com/users/jhawthorn/events{/privacy}","received_events_url":"https://api.github.com/users/jhawthorn/received_events","type":"User","site_admin":true},"assignees":[{"login":"jhawthorn","id":131752,"node_id":"MDQ6VXNlcjEzMTc1Mg==","avatar_url":"https://avatars.githubusercontent.com/u/131752?v=4","gravatar_id":"","url":"https://api.github.com/users/jhawthorn","html_url":"https://github.com/jhawthorn","followers_url":"https://api.github.com/users/jhawthorn/followers","following_url":"https://api.github.com/users/jhawthorn/following{/other_user}","gists_url":"https://api.github.com/users/jhawthorn/gists{/gist_id}","starred_url":"https://api.github.com/users/jhawthorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhawthorn/subscriptions","organizations_url":"https://api.github.com/users/jhawthorn/orgs","repos_url":"https://api.github.com/users/jhawthorn/repos","events_url":"https://api.github.com/users/jhawthorn/events{/privacy}","received_events_url":"https://api.github.com/users/jhawthorn/received_events","type":"User","site_admin":true}],"milestone":null,"comments":1,"created_at":"2022-08-12T14:06:55Z","updated_at":"2022-08-18T23:36:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"activerecord\", \"7.0.3.1\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :a_records, force: true\r\n\r\n  create_table :b_records, force: true do |t|\r\n    t.references :a_record\r\n    t.references :c_record\r\n  end\r\n\r\n  create_table :c_records, force: true\r\n\r\n  create_table :d_records, force: true do |t|\r\n    t.references :c_record\r\n  end\r\nend\r\n\r\nclass ARecord < ActiveRecord::Base\r\n  has_one :b_record\r\n  has_one :c_record, through: :b_record\r\n  has_many :d_records, through: :c_record\r\nend\r\n\r\nclass BRecord < ActiveRecord::Base\r\n  belongs_to :a_record\r\n  belongs_to :c_record\r\nend\r\n\r\nclass CRecord < ActiveRecord::Base\r\n  has_one :b_record\r\n  has_many :d_records\r\nend\r\n\r\nclass DRecord < ActiveRecord::Base\r\n  belongs_to :c_record\r\nend\r\n\r\na = ARecord.create!\r\nc = CRecord.create!\r\nBRecord.create!(a_record: a, c_record: c)\r\nDRecord.create!(c_record: c)\r\nDRecord.create!(c_record: c)\r\n\r\na.reload\r\na.c_record # NB: if removed this works\r\n\r\n::ActiveRecord::Associations::Preloader.new(records: [a], associations: :d_records).call\r\nputs({ record_ids: a.d_records.map(&:id), size: a.d_records.size })\r\n```\r\n\r\n### Expected behavior\r\nTwo records should be loaded:\r\n`{:record_ids=>[1, 2], :size=>2}`\r\n\r\n### Actual behavior\r\nNo records are loaded:\r\n`{:record_ids=>[], :size=>0}`\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 2.7.5\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45822/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45822/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45817","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45817/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45817/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45817/events","html_url":"https://github.com/rails/rails/issues/45817","id":1336797388,"node_id":"I_kwDNIULOT63ozA","number":45817,"title":"Value of attribute default proc is shared between instances after dup + dirty tracking","user":{"login":"quadule","id":15299,"node_id":"MDQ6VXNlcjE1Mjk5","avatar_url":"https://avatars.githubusercontent.com/u/15299?v=4","gravatar_id":"","url":"https://api.github.com/users/quadule","html_url":"https://github.com/quadule","followers_url":"https://api.github.com/users/quadule/followers","following_url":"https://api.github.com/users/quadule/following{/other_user}","gists_url":"https://api.github.com/users/quadule/gists{/gist_id}","starred_url":"https://api.github.com/users/quadule/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/quadule/subscriptions","organizations_url":"https://api.github.com/users/quadule/orgs","repos_url":"https://api.github.com/users/quadule/repos","events_url":"https://api.github.com/users/quadule/events{/privacy}","received_events_url":"https://api.github.com/users/quadule/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-12T06:16:00Z","updated_at":"2022-08-15T15:56:11Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWhen an attribute without a database column defines a default proc, `dup`ing a model in which the default wasn't accessed passes the unevaluated `UserProvidedDefault` attribute to the new instance as the attribute's original value. Checking the new attribute for changes will then memoize the value in the original attribute definition, making it the default value in every new model instance afterward.\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n  gem \"rails\", github: \"rails/rails\", ref: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Schema.define do\r\n  create_table :cats do |t|\r\n    t.string :name\r\n  end\r\nend\r\n\r\nclass Cat < ActiveRecord::Base\r\n  attribute :sounds, default: -> { [] }\r\nend\r\n\r\nclass VirtualAttributeTest < Minitest::Test\r\n  def test_virtual_attribute_defaults_are_independent\r\n    Cat.new.dup.save!\r\n    Cat.new.sounds << \"meow\"\r\n    refute_same Cat.new.sounds, Cat.new.sounds\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nEach new instance should get a new default value from the proc.\r\n\r\n### Actual behavior\r\nAfter using dirty tracking on a duplicated instance with an uncalled proc default, all new instances of a model receive the same default value and share any changes made to it.\r\n\r\n### Affected versions\r\nThis seems to date back quite a while; the test fails on the main branch back to 5-1-stable.\r\n\r\n### Credits\r\nThanks to @GBH for originally discovering this bug.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45817/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45817/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45794","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45794/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45794/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45794/events","html_url":"https://github.com/rails/rails/issues/45794","id":1332999733,"node_id":"I_kwDNIULOT3P2NQ","number":45794,"title":"Action Cable client goes in a connection loop if you subscribe multiple times to the same channel","user":{"login":"ProGM","id":5167659,"node_id":"MDQ6VXNlcjUxNjc2NTk=","avatar_url":"https://avatars.githubusercontent.com/u/5167659?v=4","gravatar_id":"","url":"https://api.github.com/users/ProGM","html_url":"https://github.com/ProGM","followers_url":"https://api.github.com/users/ProGM/followers","following_url":"https://api.github.com/users/ProGM/following{/other_user}","gists_url":"https://api.github.com/users/ProGM/gists{/gist_id}","starred_url":"https://api.github.com/users/ProGM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ProGM/subscriptions","organizations_url":"https://api.github.com/users/ProGM/orgs","repos_url":"https://api.github.com/users/ProGM/repos","events_url":"https://api.github.com/users/ProGM/events{/privacy}","received_events_url":"https://api.github.com/users/ProGM/received_events","type":"User","site_admin":false},"labels":[{"id":300028327,"node_id":"MDU6TGFiZWwzMDAwMjgzMjc=","url":"https://api.github.com/repos/rails/rails/labels/actioncable","name":"actioncable","color":"bfdadc","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-09T09:48:36Z","updated_at":"2022-08-17T17:57:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\nYou can just start from a fresh `rails new [project-name]` installation.\r\nChannel code:\r\n```ruby\r\nclass ArticleChannel < ApplicationCable::Channel\r\n  def subscribed\r\n    stream_from \"ArticleChannel\"\r\n  end\r\n\r\n  def unsubscribed\r\n    # Any cleanup needed when channel is unsubscribed\r\n  end\r\nend\r\n```\r\n\r\nJavascript code:\r\n```javascript\r\nimport consumer from \"channels/consumer\"\r\n\r\nfunction subscribe() {\r\n\treturn consumer.subscriptions.create('ArticleChannel', {\r\n\t\tconnected() {\r\n\t\t\tconsole.log('connected');\r\n\t\t\t// Called when the subscription is ready for use on the server\r\n\t\t},\r\n\r\n\t\tdisconnected() {\r\n\t\t\tconsole.log('disconnected');\r\n\t\t\t// Called when the subscription has been terminated by the server\r\n\t\t},\r\n\r\n\t\treceived(data) {\r\n\t\t\tconsole.log('received', data);\r\n\t\t\t// Called when there's incoming data on the websocket for this channel\r\n\t\t}\r\n\t});\r\n}\r\n\r\nsetTimeout(() => {\r\n\tsubscribe();\r\n}, 3000);\r\n\r\nsetTimeout(() => {\r\n\tsubscribe();\r\n}, 4000);\r\n```\r\n\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nAny of these options could be considered an expected behavior:\r\n* Everything just works™, both subscriptions receive notification from that channel and no error is raised\r\n* The second `subscription.create(...)` raises some kind of error, notifying that the channel is already connected\r\n* The second `subscription.create(...)` returns the same instance of Subscription and writes a `console.warning` in console\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nThe second subscriptions triggers a connection loop.\r\n\r\nExample logs with `ActionCable.logger.enabled = true`.\r\n\r\n```\r\n[ActionCable] Opening WebSocket, current state is null, subprotocols: actioncable-v1-json,actioncable-unsupported 1660037219747\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] ConnectionMonitor started. stale threshold = 6 s 1660037219748\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] WebSocket onopen event, using 'actioncable-v1-json' subprotocol 1660037219758\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] ConnectionMonitor recorded connect 1660037219759\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor guaranteeing {\"channel\":\"ArticleChannel\"} 1660037219760\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] Subscription confirmed {\"channel\":\"ArticleChannel\"} 1660037219762\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor forgetting {\"channel\":\"ArticleChannel\"} 1660037219762\r\narticle_channel-b29f3f7bf31169dfadd26c7747a46706d4992a1fd842de8268f206c5f0a0fe45.js:6 connected\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor guaranteeing {\"channel\":\"ArticleChannel\"} 1660037220744\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221248\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221248\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n... and so on, forever...\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 3.1\r\n\r\n### Possible solutions\r\nThis issue happens because the identifier of both subscriptions is the same. Since Rails (ActionCable) doesn't answer to any subsequential command \"subscribe\" from the same client (in this case: `{\"command\":\"subscribe\",\"identifier\":\"{\\\"channel\\\":\\\"ArticleChannel\\\"}\"}`), the `SubscriptionGuarantor` considers the connection failed and [retries to connect after 500ms](https://github.com/rails/rails/blob/8994f09dd2f6ae363e74d8ee3b24700d9db94a16/actioncable/app/assets/javascripts/actioncable.esm.js#L351).\r\n\r\nI see various options to fix this:\r\n* Raise an exception when trying to create a subscription with the same identifier\r\n* Add a random/uuid to the identifier when connecting, so two connection would not share the same identifier? (I've already tested it, and it seems to fix)\r\n\r\nWould you accept a PR from me regarding this?","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45794/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45794/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45791","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45791/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45791/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45791/events","html_url":"https://github.com/rails/rails/issues/45791","id":1332570977,"node_id":"I_kwDNIULOT21rYQ","number":45791,"title":"Google::Apis::ClientError raised when using ActiveStorage to generate signed URLs to access a file in a GCS bucket with GKE Workload Identity","user":{"login":"danielyazbek","id":18390164,"node_id":"MDQ6VXNlcjE4MzkwMTY0","avatar_url":"https://avatars.githubusercontent.com/u/18390164?v=4","gravatar_id":"","url":"https://api.github.com/users/danielyazbek","html_url":"https://github.com/danielyazbek","followers_url":"https://api.github.com/users/danielyazbek/followers","following_url":"https://api.github.com/users/danielyazbek/following{/other_user}","gists_url":"https://api.github.com/users/danielyazbek/gists{/gist_id}","starred_url":"https://api.github.com/users/danielyazbek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielyazbek/subscriptions","organizations_url":"https://api.github.com/users/danielyazbek/orgs","repos_url":"https://api.github.com/users/danielyazbek/repos","events_url":"https://api.github.com/users/danielyazbek/events{/privacy}","received_events_url":"https://api.github.com/users/danielyazbek/received_events","type":"User","site_admin":false},"labels":[{"id":664533972,"node_id":"MDU6TGFiZWw2NjQ1MzM5NzI=","url":"https://api.github.com/repos/rails/rails/labels/activestorage","name":"activestorage","color":"bfd4f2","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-09T01:05:08Z","updated_at":"2022-08-09T15:53:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nConfigure ActiveStorage with GKE Workload identity (as documented [here](https://edgeguides.rubyonrails.org/active_storage_overview.html#google-cloud-storage-service)):\r\n\r\n```ruby\r\ngoogle:\r\n  service: GCS\r\n  iam: true\r\n  project: <%= ENV['ACTIVE_STORAGE_PROJECT'] %>\r\n  bucket: <%= ENV['ACTIVE_STORAGE_BUCKET'] %>\r\n```\r\n\r\nDefine a class:\r\n```ruby\r\nclass Transaction < ApplicationRecord\r\n  has_one_attached :csv_report\r\nend\r\n```\r\n\r\nWrite something to ActiveStorage:\r\n```ruby\r\nt = Transaction.create\r\nt.csv_report.attach(io: StringIO.new(\"A,B,C\"), filename: 'test.csv')\r\n```\r\n\r\nGenerate a Signed URL\r\n```ruby\r\nRails.application.routes.url_helpers.rails_blob_url(Transaction.last.csv_report, disposition: 'attachment')\r\n```\r\n\r\nPaste the generated URL into a browser\r\n\r\n### Expected behavior\r\nActiveRecord provides the attachment\r\n\r\n### Actual behavior\r\nError is raised:\r\n\r\n```\r\nGoogle::Apis::ClientError (Invalid request):\r\ngems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:236:in `check_status': Invalid request (Google::Apis::ClientError)\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/api_command.rb:134:in `check_status'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:199:in `process_response'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:318:in `execute_once'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:118:in `block (2 levels) in execute'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:61:in `block in retriable'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `times'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `retriable'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:115:in `block in execute'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:61:in `block in retriable'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `times'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `retriable'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:105:in `execute'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/base_service.rb:397:in `execute_or_queue_command'\r\n    from gems/google-apis-iamcredentials_v1-0.13.0/lib/google/apis/iamcredentials_v1/service.rb:158:in `sign_service_account_blob'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service/gcs_service.rb:232:in `block in signer'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file/signer_v2.rb:135:in `generate_signature'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file/signer_v2.rb:128:in `signed_url'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file.rb:1801:in `signed_url'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service/gcs_service.rb:160:in `private_url'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:123:in `block in url'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications/instrumenter.rb:24:in `instrument'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications.rb:206:in `instrument'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:163:in `instrument'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:118:in `url'\r\n    from gems/activestorage-7.0.3.1models/active_storage/blob.rb:217:in `url'\r\n    from gems/activestorage-7.0.3.1controllers/active_storage/blobs/redirect_controller.rb:14:in `show'\r\n```\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 3.1.2\r\n\r\n**google-cloud-storage gem version:** 1.38.0\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45791/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45791/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45778","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45778/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45778/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45778/events","html_url":"https://github.com/rails/rails/issues/45778","id":1330360134,"node_id":"I_kwDNIULOT0uvRg","number":45778,"title":"ActiveStorage attachments are lost when casting using Becomes","user":{"login":"markedmondson","id":1653699,"node_id":"MDQ6VXNlcjE2NTM2OTk=","avatar_url":"https://avatars.githubusercontent.com/u/1653699?v=4","gravatar_id":"","url":"https://api.github.com/users/markedmondson","html_url":"https://github.com/markedmondson","followers_url":"https://api.github.com/users/markedmondson/followers","following_url":"https://api.github.com/users/markedmondson/following{/other_user}","gists_url":"https://api.github.com/users/markedmondson/gists{/gist_id}","starred_url":"https://api.github.com/users/markedmondson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markedmondson/subscriptions","organizations_url":"https://api.github.com/users/markedmondson/orgs","repos_url":"https://api.github.com/users/markedmondson/repos","events_url":"https://api.github.com/users/markedmondson/events{/privacy}","received_events_url":"https://api.github.com/users/markedmondson/received_events","type":"User","site_admin":false},"labels":[{"id":664533972,"node_id":"MDU6TGFiZWw2NjQ1MzM5NzI=","url":"https://api.github.com/repos/rails/rails/labels/activestorage","name":"activestorage","color":"bfd4f2","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-05T20:19:16Z","updated_at":"2022-08-09T18:05:34Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\nCreate an ActiveRecord model with an ActiveStorage relation. Initialize and add the associated attachment. Cast the object to another subclassed model, the associated attachment is lost.\r\n\r\n```ruby\r\nunless File.exist?('Gemfile')\r\n    File.write('Gemfile', <<-GEMFILE)\r\n    source 'https://rubygems.org'\r\n    gem 'rails', '~> 6.1'\r\n    gem 'sqlite3'\r\n    GEMFILE\r\n\r\n    system 'bundle'\r\nend\r\n\r\nrequire 'bundler'\r\nBundler.setup(:default)\r\n\r\nrequire 'active_record'\r\nrequire 'active_storage/engine'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  config.hosts << 'example.org'\r\n  config.eager_load = false\r\n  config.session_store :cookie_store, key: 'cookie_store_key'\r\n  secrets.secret_key_base = 'secret_key_base'\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  config.active_storage.service = :local\r\n  config.active_storage.service_configurations = {\r\n    local: {\r\n      root: Dir.tmpdir,\r\n      service: 'Disk'\r\n    }\r\n  }\r\nend\r\n\r\nENV['DATABASE_URL'] = 'sqlite3::memory:'\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\nRails.application.initialize!\r\n\r\nrequire ActiveStorage::Engine.root.join('db/migrate/20170806125915_create_active_storage_tables.rb').to_s\r\n\r\nActiveRecord::Schema.define do\r\n  CreateActiveStorageTables.new.change\r\n\r\n  create_table :posts do |t|\r\n    t.string :title\r\n    t.string :text\r\n  end\r\n\r\n  create_table :comments do |t|\r\n    t.belongs_to :post\r\n    t.string :text\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post\r\n  has_one_attached :image\r\nend\r\n\r\nclass ModeratedComment < Comment; end\r\n\r\nclass BugTest < Minitest::Test\r\n  def setup\r\n    @post = Post.create(title: 'Post', text: 'Welcome')\r\n  end\r\n\r\n  def test_association\r\n    comment = @post.comments.new(text: 'I do not like this')\r\n\r\n    moderated_comment = comment.becomes(ModeratedComment)\r\n\r\n    assert_equal @post, moderated_comment.post # Pass\r\n  end\r\n\r\n  def test_attachment\r\n    file = ActiveStorage::Blob.create_and_upload!(\r\n      content_type: \"image/png\",\r\n      filename: \"image.png\",\r\n      io: ::StringIO.new(\"png\"),\r\n    )\r\n    comment = @post.comments.new(text: 'I do not like this', image: file)\r\n\r\n    moderated_comment = comment.becomes(ModeratedComment)\r\n\r\n    assert moderated_comment.image.attached? # Fail\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nWhen casting an ActiveRecord to another model, I expect the associations to be copied thus I expect attached ActiveStorage association assets to be copied.\r\n\r\n### Actual behavior\r\nPreviously attached ActiveStorage associated objects are lost on the original object.\r\n\r\n### System configuration\r\n**Rails version**: 6.1.6.1\r\n\r\n**Ruby version**: 3.0.4\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45778/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45778/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45775","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45775/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45775/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45775/events","html_url":"https://github.com/rails/rails/issues/45775","id":1330225377,"node_id":"I_kwDNIULOT0mg4Q","number":45775,"title":"Uniqueness validation on association does not use the correct primary key","user":{"login":"mikeletscher","id":6666411,"node_id":"MDQ6VXNlcjY2NjY0MTE=","avatar_url":"https://avatars.githubusercontent.com/u/6666411?v=4","gravatar_id":"","url":"https://api.github.com/users/mikeletscher","html_url":"https://github.com/mikeletscher","followers_url":"https://api.github.com/users/mikeletscher/followers","following_url":"https://api.github.com/users/mikeletscher/following{/other_user}","gists_url":"https://api.github.com/users/mikeletscher/gists{/gist_id}","starred_url":"https://api.github.com/users/mikeletscher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikeletscher/subscriptions","organizations_url":"https://api.github.com/users/mikeletscher/orgs","repos_url":"https://api.github.com/users/mikeletscher/repos","events_url":"https://api.github.com/users/mikeletscher/events{/privacy}","received_events_url":"https://api.github.com/users/mikeletscher/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-05T18:10:22Z","updated_at":"2022-08-09T14:52:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nI'm not _entirely_ sure if this is considered a bug, or intended behavior that's not well-documented for `uniqueness` validations on associations.\r\n\r\nI'm happy to help improve the documentation on this if that would be the most helpful way forward, or if this _is_ considered a bug, I can take a stab at a PR. \r\n\r\nIt looks like the issue is that `build_relation` on the uniqueness validator calls [`bind_attribute` on `ActiveRecord::Relation`](https://github.com/rails/rails/blob/408d061a80a49878ad26b305616ed9ba88ee1411/activerecord/lib/active_record/relation.rb#L45), which properly takes into account the reflection's foreign_key, but not primary key if it's been overridden. \r\n\r\nHere's a test that reproduces the issue:\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire 'bundler/inline'\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem 'activerecord', '~> 7.0.3.1'\r\n  gem 'sqlite3'\r\nend\r\n\r\nrequire 'active_record'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(\r\n  adapter: 'sqlite3',\r\n  database: ':memory:'\r\n)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :prescriptions, force: true do |t|\r\n    t.string :rx_number\r\n  end\r\n\r\n  create_table :fills, force: true do |t|\r\n    t.string :rx_number\r\n  end\r\nend\r\n\r\nclass Prescription < ActiveRecord::Base\r\n  has_many :fills, foreign_key: :rx_number, primary_key: :rx_number\r\nend\r\n\r\nclass Fill < ActiveRecord::Base\r\n  belongs_to :prescription, foreign_key: :rx_number, primary_key: :rx_number\r\n\r\n  validates :prescription, uniqueness: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_fill_unique_by_rx_number\r\n    Fill.create!(rx_number: '1234')\r\n    prescription = Prescription.create!(rx_number: '1234')\r\n    new_fill = prescription.fills.new\r\n    refute new_fill.save\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe uniqueness validation query would use the `rx_number` value of the `Prescription` to query for an existing `Fill` since that is what is set as the associations `primary_key`. \r\n\r\n### Actual behavior\r\nThe uniqueness validation query uses the `id` value of the `Prescription` to query for existing fills, disregarding the association's overridden `primary_key`.\r\n\r\nThis test passes if I patch bind_attribute to read the primary key from the reflection instead of directly from the reflection's klass:\r\n\r\n```ruby\r\nmodule ActiveRecord\r\n  # = Active Record \\Relation\r\n  class Relation\r\n    def bind_attribute(name, value) # :nodoc:\r\n      if reflection = klass._reflect_on_association(name)\r\n        name = reflection.foreign_key\r\n        primary_key = reflection.association_primary_key || reflection.klass.primary_key\r\n        value = value.read_attribute(primary_key) unless value.nil?\r\n      end\r\n\r\n      attr = table[name]\r\n      bind = predicate_builder.build_bind_attribute(attr.name, value)\r\n      yield attr, bind\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nWe were able to work around this by adding the uniqueness validation to the `rx_number` attribute instead of the association. If this is the desired way to handle this, I can open a PR to add a note about this to the docs, as it took us by surprise that validation on the association wouldn't use the defined key to get the value to query.\r\n\r\n### System configuration\r\n**Rails version**: `7.0.3.1`\r\n\r\n**Ruby version**: `3.1.2`\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45775/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45775/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45766","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45766/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45766/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45766/events","html_url":"https://github.com/rails/rails/issues/45766","id":1329650798,"node_id":"I_kwDNIULOT0Dcbg","number":45766,"title":"Active Model Dirty: attribute_changed? options (from/to) do not accept symbol","user":{"login":"thomasvanholder","id":36309895,"node_id":"MDQ6VXNlcjM2MzA5ODk1","avatar_url":"https://avatars.githubusercontent.com/u/36309895?v=4","gravatar_id":"","url":"https://api.github.com/users/thomasvanholder","html_url":"https://github.com/thomasvanholder","followers_url":"https://api.github.com/users/thomasvanholder/followers","following_url":"https://api.github.com/users/thomasvanholder/following{/other_user}","gists_url":"https://api.github.com/users/thomasvanholder/gists{/gist_id}","starred_url":"https://api.github.com/users/thomasvanholder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomasvanholder/subscriptions","organizations_url":"https://api.github.com/users/thomasvanholder/orgs","repos_url":"https://api.github.com/users/thomasvanholder/repos","events_url":"https://api.github.com/users/thomasvanholder/events{/privacy}","received_events_url":"https://api.github.com/users/thomasvanholder/received_events","type":"User","site_admin":false},"labels":[{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-08-05T08:54:51Z","updated_at":"2022-08-07T20:25:55Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nThe `attribute_changed?` receives optional options, such as `from` and `to`. Each option key is passed a value. Only string values are accepted, and symbols are not recognized. This is inconsistent behavior as updating a column using the `update` method does accept both a string and a symbol.\r\n \r\n Source code: [attribute_changed?](https://github.com/rails/rails/blob/04972d9b9ef60796dc8f0917817b5392d61fcf09/activemodel/lib/active_model/dirty.rb#L178) \r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"debug\"\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.column :status, :integer, default: 0\r\n    t.date :review_date\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  enum :status, {draft: 0, published: 1}\r\n\r\n  before_update :set_review_date\r\n\r\n  def set_review_date\r\n    # when \"published\" is set as a string, the test correcty passes.\r\n    if status_changed?(to: :published)\r\n      self.review_date = Date.today\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_set_status\r\n    post = Post.create!\r\n    post.update(status: :published)\r\n\r\n    assert_equal \"published\", post.status\r\n  end\r\n\r\n  def test_sets_review_date\r\n    post = Post.create!\r\n    post.published!\r\n\r\n    assert_equal \"published\", post.status\r\n    assert_equal Date.today, post.review_date\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe value of the optional arguments `from` and `to` accepts both a string or symbol.\r\n\r\n### Actual behavior\r\nWhen options, such as `from` and `to` are passed to the [attribute_changed?](https://github.com/rails/rails/blob/04972d9b9ef60796dc8f0917817b5392d61fcf09/activemodel/lib/active_model/dirty.rb#L178) method the arguments are not recognized when passed as a symbol.\r\n\r\n### System configuration\r\n**Rails version**: `Rails 7.0.3`\r\n\r\n**Ruby version**: `ruby 3.1.2`\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45766/reactions","total_count":2,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45766/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45758","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45758/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45758/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45758/events","html_url":"https://github.com/rails/rails/issues/45758","id":1327892229,"node_id":"I_kwDNIULOTyYHBQ","number":45758,"title":"ActiveRecord 6.1 and JSONB: Incorrect results value/type when using both arrow operator and double arrow operator in the same SELECT statement","user":{"login":"shhavel","id":1169424,"node_id":"MDQ6VXNlcjExNjk0MjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1169424?v=4","gravatar_id":"","url":"https://api.github.com/users/shhavel","html_url":"https://github.com/shhavel","followers_url":"https://api.github.com/users/shhavel/followers","following_url":"https://api.github.com/users/shhavel/following{/other_user}","gists_url":"https://api.github.com/users/shhavel/gists{/gist_id}","starred_url":"https://api.github.com/users/shhavel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shhavel/subscriptions","organizations_url":"https://api.github.com/users/shhavel/orgs","repos_url":"https://api.github.com/users/shhavel/repos","events_url":"https://api.github.com/users/shhavel/events{/privacy}","received_events_url":"https://api.github.com/users/shhavel/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-08-03T23:42:39Z","updated_at":"2022-08-05T22:26:04Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Issue Description\r\n\r\nGenerally when using JSONB operators `->` (arrow operator) and `->>` (double arrow operator) in SELECT statement, \r\nActiveRecord returns correct result types: objects for `->` operator and string for `->>` operator.\r\nBut when using both operators in the same select statement, the returned results may have an unexpected type or be `nil`.\r\n\r\n### Steps to reproduce with Expected behaviour in tests and Actual behaviour in comments\r\n\r\n```ruby\r\n# file: activerecord_6_1_jsonb_test.rb\r\n# run: ruby activerecord_6_1_jsonb_test.rb\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"activerecord\", \"6.1.6.1\" # the same behaviour for version \"7.0.3.1\"\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\npg_opts = {adapter: \"postgresql\", database: \"jsonb_activerecord_issue\"}\r\nbegin\r\n  ActiveRecord::Base.establish_connection(pg_opts.except(:database))\r\n  ActiveRecord::Base.connection.create_database(pg_opts[:database])\r\n  puts \"Database #{pg_opts[:database]} was created.\"\r\nrescue => ActiveRecord::DatabaseAlreadyExists\r\n  puts \"Database #{pg_opts[:database]} alredy exists.\"\r\nend\r\nActiveRecord::Base.establish_connection(pg_opts)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :entries, force: true do |t|\r\n    t.jsonb :value\r\n  end\r\nend\r\n\r\nclass Entry < ActiveRecord::Base\r\nend\r\nEntry.create(value: {a: \"a\", b: \"b\", c: {}})\r\n\r\nclass BugTest < Minitest::Test\r\n  # passed\r\n  def test_jsonb_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->'a', value->'b'\"))\r\n    assert_equal [[{}, \"b\"]], Entry.pluck(Arel.sql(\"value->'c', value->'b'\"))\r\n  end\r\n\r\n  # passed\r\n  def test_jsonb_double_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'a', value->>'b'\"))\r\n    assert_equal [[\"{}\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'c', value->>'b'\"))\r\n  end\r\n\r\n  # failed (this test results are differ in activerecord 6.0)\r\n  def test_jsonb_arrow_operator_and_double_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->'a', value->>'b'\")) # Actual [[\"a\", nil]]\r\n    assert_equal [[{}, \"b\"]], Entry.pluck(Arel.sql(\"value->'c', value->>'b'\")) # Actual [[{}, nil]]\r\n  end\r\n\r\n  # failed\r\n  def test_jsonb_double_arrow_operator_and_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'a', value->'b'\")) # Actual [[nil, \"b\"]]\r\n    assert_equal [[\"{}\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'c', value->'b'\")) # Actual [[{}, \"b\"]]\r\n  end\r\nend\r\n```\r\n\r\n### PostgreSQL results \r\n\r\n```sql\r\nSELECT\r\n  pg_typeof(value->'a'), value->'a',\r\n  pg_typeof(value->'b'), value->'b',\r\n  pg_typeof(value->'c'), value->'c',\r\n  pg_typeof(value->>'a'), value->>'a',\r\n  pg_typeof(value->>'b'), value->>'b',\r\n  pg_typeof(value->>'c'), value->>'c'\r\nFROM \"entries\";\r\n\r\n pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column?\r\n-----------+----------+-----------+----------+-----------+----------+-----------+----------+-----------+----------+-----------+----------\r\n jsonb     | \"a\"      | jsonb     | \"b\"      | jsonb     | {}       | text      | a        | text      | b        | text      | {}\r\n(1 row)\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 6.1.6.1\r\n\r\n**Ruby version**: 3.1.0\r\n\r\n### Similar issue in different versions of ActiveRecord\r\n\r\nThere is a similar issue but with slightly different behaviour in AR 6.0. Created another issue: #45757\r\n\r\nPlease confirm or comment on the expected behaviour.\r\nThank you.\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45758/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45758/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45750","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45750/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45750/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45750/events","html_url":"https://github.com/rails/rails/issues/45750","id":1327484205,"node_id":"I_kwDNIULOTx_NLQ","number":45750,"title":"Running `rails test` doesn't automatically load any custom tasks under `lib/tasks`","user":{"login":"onlynone","id":833690,"node_id":"MDQ6VXNlcjgzMzY5MA==","avatar_url":"https://avatars.githubusercontent.com/u/833690?v=4","gravatar_id":"","url":"https://api.github.com/users/onlynone","html_url":"https://github.com/onlynone","followers_url":"https://api.github.com/users/onlynone/followers","following_url":"https://api.github.com/users/onlynone/following{/other_user}","gists_url":"https://api.github.com/users/onlynone/gists{/gist_id}","starred_url":"https://api.github.com/users/onlynone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/onlynone/subscriptions","organizations_url":"https://api.github.com/users/onlynone/orgs","repos_url":"https://api.github.com/users/onlynone/repos","events_url":"https://api.github.com/users/onlynone/events{/privacy}","received_events_url":"https://api.github.com/users/onlynone/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-03T16:16:38Z","updated_at":"2022-08-03T18:09:40Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n1. Create the file `lib/tasks/test.rake` with the content:\r\n```ruby\r\nENV[\"test.rake\"] = \"yes\"\r\ntask :custom_task do\r\n  ENV[\"custom_task\"] = \"yes\"\r\nend\r\n\r\ntask :test => [:custom_task]\r\n```\r\n2. Create a test file at `test/unit/rails_test_test.rb` with the content:\r\n```ruby\r\nclass RailsTestTest < ActiveSupport::TestCase\r\n  test \"test.rake is in the environment\" do\r\n    assert_equal('yes', ENV['test.rake'])\r\n  end\r\n\r\n  test \"custom_task is in the environment\" do\r\n    assert_equal('yes', ENV['custom_task'])\r\n  end\r\nend\r\n```\r\n3. Run `bin/rails test test/unit/rails_test_test.rb`\r\n4. Run `bin/rake test test/unit/rails_test_test.rb`\r\n\r\n### Expected behavior\r\nBoth `rails test` and `rake test` should succeed.\r\n\r\n### Actual behavior\r\nRunning the tests with `bin/rake` succeeds with the output:\r\n```\r\nbin/rake test test/unit/rails_test_test.rb\r\nRunning via Spring preloader in process 59092\r\nRun options: --seed 6948\r\n\r\n# Running:\r\n\r\n..\r\n\r\nFinished in 0.000943s, 2120.8907 runs/s, 2120.8907 assertions/s.\r\n2 runs, 2 assertions, 0 failures, 0 errors, 0 skips\r\n```\r\n\r\nWhile running with `bin/rails` fails with the output:\r\n\r\n```\r\nRunning via Spring preloader in process 58735\r\nRun options: --seed 33633\r\n\r\n# Running:\r\n\r\nF\r\n\r\nFailure:\r\nRailsTestTest#test_custom_task_is_in_the_environment [/Users/steven/projects/rails_test_tasks/test/unit/rails_test_test.rb:7]:\r\nExpected: \"yes\"\r\n  Actual: nil\r\n\r\n\r\nrails test test/unit/rails_test_test.rb:6\r\n\r\nF\r\n\r\nFailure:\r\nRailsTestTest#test_test.rake_is_in_the_environment [/Users/steven/projects/rails_test_tasks/test/unit/rails_test_test.rb:3]:\r\nExpected: \"yes\"\r\n  Actual: nil\r\n\r\n\r\nrails test test/unit/rails_test_test.rb:2\r\n\r\n\r\n\r\nFinished in 0.001378s, 1451.3788 runs/s, 1451.3788 assertions/s.\r\n2 runs, 2 assertions, 2 failures, 0 errors, 0 skips\r\n```\r\n\r\nBecause the file `lib/tasks/test.rake` is never loaded.\r\n\r\nIt seems like rails will only end up loading custom tasks if it can't find the command being run on the command line in its own list of built-in commands. When it can't find the command, it will load the local `Rakefile` via `find_by_namespace(\"rake\").perform(full_namespace, args, config)` in `Rails::Command.invoke`. And the local `Rakefile` usually has `Rails.application.load_tasks` and that loads any custom tasks under `lib/tasks`.\r\n\r\nFor example, this happens when the `ActiveRecord` migration exec's out to call: `bin/rails db:test:prepare`. That task is apparently not a built-in rails task, so the `Rakefile` and all custom tasks *do* end up getting loaded for that one.\r\n\r\n(As an aside here, I don't fully understand the difference between the built-in rails tasks and the ones that have to be searched for via rake. I also don't understand why the migration code needs to fork a separate process to do `db:test:prepare`. That task just ends up doing `db_namespace[\"test:load\"].invoke`. Why couldn't the `db:test:prepare` tasks simply be invoked the same way in the same process?)\r\n\r\n### System configuration\r\n**Rails version**: 6.0.5\r\n\r\n**Ruby version**: 2.6.5\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45750/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45750/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45736","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45736/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45736/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45736/events","html_url":"https://github.com/rails/rails/issues/45736","id":1326221102,"node_id":"I_kwDNIULOTwyHLg","number":45736,"title":"Virtual stored columns are always nil for newly created records","user":{"login":"camiloforero","id":6606686,"node_id":"MDQ6VXNlcjY2MDY2ODY=","avatar_url":"https://avatars.githubusercontent.com/u/6606686?v=4","gravatar_id":"","url":"https://api.github.com/users/camiloforero","html_url":"https://github.com/camiloforero","followers_url":"https://api.github.com/users/camiloforero/followers","following_url":"https://api.github.com/users/camiloforero/following{/other_user}","gists_url":"https://api.github.com/users/camiloforero/gists{/gist_id}","starred_url":"https://api.github.com/users/camiloforero/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/camiloforero/subscriptions","organizations_url":"https://api.github.com/users/camiloforero/orgs","repos_url":"https://api.github.com/users/camiloforero/repos","events_url":"https://api.github.com/users/camiloforero/events{/privacy}","received_events_url":"https://api.github.com/users/camiloforero/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-02T18:09:28Z","updated_at":"2022-08-02T19:28:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nUsing postgresql:\r\n\r\nGenerate a new model with one or more columns with default values, and a virtual stored column based on those other columns\r\nCreate a new record of that model\r\nAccess the value of the virtual stored column from the newly created ActiveRecord object\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem 'pg', '~> 1.4'\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection \"postgresql:///test\"\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.integer :counter1, null: false, default: 0\r\n    t.integer :counter2, null: false, default: 0\r\n    t.virtual :counter_sum, type: :integer, as: \"counter1 + counter2\", stored: true\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_virtual_column_value_populated\r\n    post = Post.create!\r\n\r\n    assert_equal 0, post.counter_sum\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe value of the virtual column should be *something*, in this particular case, 0\r\n\r\n### Actual behavior\r\nThe value of the virtual column is `nil`. The test fails with the following output\r\n```ruby\r\n# Running:\r\n\r\nD, [2022-08-02T13:05:17.402730 #13548] DEBUG -- :   TRANSACTION (0.1ms)  BEGIN\r\nD, [2022-08-02T13:05:17.403136 #13548] DEBUG -- :   Post Create (0.6ms)  INSERT INTO \"posts\" DEFAULT VALUES RETURNING \"id\"\r\nD, [2022-08-02T13:05:17.406144 #13548] DEBUG -- :   TRANSACTION (2.6ms)  COMMIT\r\nF\r\n\r\nFailure:\r\nBugTest#test_virtual_column_value_populated [stored_bug.rb:37]:\r\nExpected: 0\r\n  Actual: nil\r\n\r\n\r\nrails test stored_bug.rb:34\r\n\r\n\r\n\r\nFinished in 0.011047s, 90.5240 runs/s, 90.5240 assertions/s.\r\n1 runs, 1 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\n### System configuration\r\n**Rails version**: edge\r\n**Ruby version**: 3.1.2\r\n**PostgreSQL version**: 14.4\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45736/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45736/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45709","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45709/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45709/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45709/events","html_url":"https://github.com/rails/rails/issues/45709","id":1323303409,"node_id":"I_kwDNIULOTuAB8Q","number":45709,"title":"Rails & can't pin JS files from Unpkg","user":{"login":"septerr","id":1094216,"node_id":"MDQ6VXNlcjEwOTQyMTY=","avatar_url":"https://avatars.githubusercontent.com/u/1094216?v=4","gravatar_id":"","url":"https://api.github.com/users/septerr","html_url":"https://github.com/septerr","followers_url":"https://api.github.com/users/septerr/followers","following_url":"https://api.github.com/users/septerr/following{/other_user}","gists_url":"https://api.github.com/users/septerr/gists{/gist_id}","starred_url":"https://api.github.com/users/septerr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/septerr/subscriptions","organizations_url":"https://api.github.com/users/septerr/orgs","repos_url":"https://api.github.com/users/septerr/repos","events_url":"https://api.github.com/users/septerr/events{/privacy}","received_events_url":"https://api.github.com/users/septerr/received_events","type":"User","site_admin":false},"labels":[{"id":131864,"node_id":"MDU6TGFiZWwxMzE4NjQ=","url":"https://api.github.com/repos/rails/rails/labels/third%20party%20issue","name":"third party issue","color":"02d7e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-07-30T21:44:43Z","updated_at":"2022-08-02T18:08:34Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nIn a new Rails & app, try to pin a package from Unpkg CDN:\r\n\r\n```\r\n./bin/importmap pin @walletconnect/web3-provider@1.7.8 --from unpkg\r\n```\r\n\r\nYou get following response:\r\n\r\n```\r\nCouldn't find any packages in [\"@walletconnect/web3-provider@1.7.8\"] on unpkg\r\n```\r\nBut the file does exist on unpkg: https://unpkg.com/@walletconnect/web3-provider@1.7.8/dist/umd/index.min.js\r\n\r\nAfter adding some breakpoints in `.rbenv/versions/3.1.0/lib/ruby/gems/3.1.0/gems/importmap-rails-1.1.5/lib/importmap/packager.rb`, saw that the CDN post request and response are as follows:\r\n\r\nPost URL: \r\n```\r\n<URI::HTTPS https://api.jspm.io/generate>\r\n```\r\nPost Body:\r\n```\r\n \"{\\\"install\\\":[\\\"@walletconnect/web3-provider@1.7.8\\\"],\\\"flattenScope\\\":true,\\\"env\\\":[\\\"browser\\\",\\\"module\\\",\\\"production\\\"],\\\"provider\\\":\\\"unpkg\\\"}\"\r\n```\r\n\r\nPost Response:\r\n```\r\n<Net::HTTPUnauthorized 401 Unauthorized readbody=true>\r\n```\r\n\r\n### Expected behavior\r\nExpected the files from unpkg to be pinned.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nMisleading error that files don't exist on unpkg.\r\n\r\n### System configuration\r\n**Rails version**:\r\nRails 7.0.3.1\r\n\r\n**Ruby version**:\r\nruby 3.1.0p0 (2021-12-25 revision fb4df44d16) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45709/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45709/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45691","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45691/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45691/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45691/events","html_url":"https://github.com/rails/rails/issues/45691","id":1322122058,"node_id":"I_kwDNIULOTs37Sg","number":45691,"title":"ActionMailer fails to create correct multipart message with rfc822 attachment","user":{"login":"der-flo","id":35431,"node_id":"MDQ6VXNlcjM1NDMx","avatar_url":"https://avatars.githubusercontent.com/u/35431?v=4","gravatar_id":"","url":"https://api.github.com/users/der-flo","html_url":"https://github.com/der-flo","followers_url":"https://api.github.com/users/der-flo/followers","following_url":"https://api.github.com/users/der-flo/following{/other_user}","gists_url":"https://api.github.com/users/der-flo/gists{/gist_id}","starred_url":"https://api.github.com/users/der-flo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/der-flo/subscriptions","organizations_url":"https://api.github.com/users/der-flo/orgs","repos_url":"https://api.github.com/users/der-flo/repos","events_url":"https://api.github.com/users/der-flo/events{/privacy}","received_events_url":"https://api.github.com/users/der-flo/received_events","type":"User","site_admin":false},"labels":[{"id":107188,"node_id":"MDU6TGFiZWwxMDcxODg=","url":"https://api.github.com/repos/rails/rails/labels/actionmailer","name":"actionmailer","color":"8B00FC","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-29T11:19:00Z","updated_at":"2022-08-02T19:46:17Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I cannot re-open #42849 so I create a new issue…\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire 'bundler/inline'\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n  gem 'rails', github: 'rails/rails', branch: 'main'\r\nend\r\n\r\nrequire 'minitest/autorun'\r\nrequire 'action_mailer/railtie'\r\n\r\nclass TestMailer < ActionMailer::Base\r\n  def main\r\n    message_to_attach =  <<~MAIL.gsub(/\\n/, \"\\r\\n\")\r\n      Message-ID: <12345@foo.example>\r\n      Subject: Test\r\n      From: test1@foo.example\r\n      To: test2@foo.example\r\n      \r\n      hello world\r\n    MAIL\r\n    attachments['test.eml'] = {\r\n      mime_type: params[:mime_type],\r\n      content: message_to_attach\r\n    }\r\n\r\n    mail(from: 'test3@foo.example', to: 'test4@foo.example', subject: 'Test outer') do |format|\r\n      format.text { \"outer text - #{params[:mime_type]} attachment\" }\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_with_plain_mime_type\r\n    message = TestMailer.with(mime_type: 'text/plain').main\r\n    assert_equal message.mime_type, 'multipart/mixed'\r\n  end\r\n\r\n  def test_with_rfc822_mime_type\r\n    message = TestMailer.with(mime_type: 'message/rfc822').main\r\n    assert_equal message.mime_type, 'multipart/mixed'\r\n  end\r\nend\r\n```\r\n\r\nThe second test fails, the message object is rendered as follows:\r\n```\r\nDate: Fri, 23 Jul 2021 13:59:19 +0200\r\nFrom: test3@foo.example\r\nTo: test4@foo.example\r\nMessage-ID: <60faaf1738a02_14fbd98-3fb@flo.adigi.ai.mail>\r\nSubject: Test outer\r\nMime-Version: 1.0\r\nContent-Type: text/plain;\r\n boundary=\"--==_mimepart_60faaf1738008_14fbd98-484\";\r\n charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\n\r\n\r\n----==_mimepart_60faaf1738008_14fbd98-484\r\nContent-Type: text/plain;\r\n charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\n\r\nouter text - message/rfc822 attachment\r\n----==_mimepart_60faaf1738008_14fbd98-484\r\nContent-Type: message/rfc822\r\nContent-Transfer-Encoding: \r\nContent-Disposition: attachment;\r\n filename=test.eml\r\nContent-ID: <60faaf1739102_14fbd98-2b@flo.adigi.ai.mail>\r\n\r\nMessage-ID: <12345@foo.example>\r\nSubject: Test\r\nFrom: test1@foo.example\r\nTo: test2@foo.example\r\n\r\nhello world\r\n\r\n----==_mimepart_60faaf1738008_14fbd98-484--\r\n\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe `message.mime_type` is `multipart/mixed` in both test cases. ActionMailer handles attachments in the way it is described in https://guides.rubyonrails.org/action_mailer_basics.html#adding-attachments describes.\r\n\r\n### Actual behavior\r\n\r\nWhen attaching a `message/rfc822` - an email message - the generated mail parts are not nested correctly, the outer `multipart/mixed` is missing.\r\n\r\nPerhaps this behaviour is caused by the [special handling](https://github.com/mikel/mail/blob/master/lib/mail/attachments_list.rb#L9) of such attachments in the `mail` gem.\r\n\r\n\r\n### System configuration\r\n**Rails version**: main\r\n\r\n**Ruby version**: 3.0.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45691/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":1,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45691/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45640","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45640/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45640/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45640/events","html_url":"https://github.com/rails/rails/issues/45640","id":1315219867,"node_id":"I_kwDNIULOTmSpmw","number":45640,"title":"ActiveModel::Dirty changes not reset properly when using store_accessor (tested with postgres)","user":{"login":"vccoffey","id":59817868,"node_id":"MDQ6VXNlcjU5ODE3ODY4","avatar_url":"https://avatars.githubusercontent.com/u/59817868?v=4","gravatar_id":"","url":"https://api.github.com/users/vccoffey","html_url":"https://github.com/vccoffey","followers_url":"https://api.github.com/users/vccoffey/followers","following_url":"https://api.github.com/users/vccoffey/following{/other_user}","gists_url":"https://api.github.com/users/vccoffey/gists{/gist_id}","starred_url":"https://api.github.com/users/vccoffey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vccoffey/subscriptions","organizations_url":"https://api.github.com/users/vccoffey/orgs","repos_url":"https://api.github.com/users/vccoffey/repos","events_url":"https://api.github.com/users/vccoffey/events{/privacy}","received_events_url":"https://api.github.com/users/vccoffey/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-07-22T16:44:57Z","updated_at":"2022-07-23T17:51:49Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nUsing PostgreSQL (pg) database\r\nGiven a model with a jsonb column\r\n```\r\nclass CreateTestModels < ActiveRecord::Migration[6.1]\r\n  def change\r\n    create_table :test_models do |t|\r\n      t.jsonb :jsonb_hash_attr\r\n      t.timestamps\r\n    end\r\n  end\r\nend\r\n```\r\nusing store_accessor\r\n```\r\nclass TestModel < ApplicationRecord\r\n  store_accessor :jsonb_hash_attr, :key, prefix: true\r\nend\r\n```\r\n\r\n### Expected behavior\r\nBoth tests pass:\r\n```\r\nrequire \"test_helper\"\r\nclass TestModelTest < ActiveSupport::TestCase\r\n  test \"does not show changes for a jsonb attribute if changed back to original value\" do\r\n    tm = TestModel.create jsonb_hash_attr: { \"key\" => \"foo\" }\r\n    tm.jsonb_hash_attr = { \"key\" => \"bar\" }\r\n    assert_equal tm.jsonb_hash_attr_change, [{ \"key\" => \"foo\" }, { \"key\" => \"bar\" }]\r\n    tm.jsonb_hash_attr = { \"key\" => \"foo\" }\r\n    assert_equal tm.jsonb_hash_attr_change, nil\r\n  end\r\n\r\n  test \"does not show changes for a jsonb attribute if changed back to original value using store_accessor\" do\r\n    tm = TestModel.create jsonb_hash_attr: { \"key\" => \"foo\" }\r\n    tm.jsonb_hash_attr_key = \"bar\"\r\n    assert_equal tm.jsonb_hash_attr_change, [{ \"key\" => \"foo\" }, { \"key\" => \"bar\" }]\r\n    tm.jsonb_hash_attr_key = \"foo\"\r\n    assert_equal tm.jsonb_hash_attr_change, nil\r\n  end\r\nend\r\n```\r\n### Actual behavior\r\nThe second test fails\r\n```\r\n--- expected\r\n+++ actual\r\n-[{\"key\"=>\"foo\"}, {\"key\"=>\"foo\"}]\r\n+nil\r\n```\r\n### System configuration\r\n**Rails version**:\r\ntested with 6.1.6.1 and 7.0.3.1\r\n\r\n**Ruby version**: 3.1.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45640/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45640/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45639","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45639/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45639/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45639/events","html_url":"https://github.com/rails/rails/issues/45639","id":1314984267,"node_id":"I_kwDNIULOTmERSw","number":45639,"title":"Explicitly touch on save","user":{"login":"schmijos","id":245443,"node_id":"MDQ6VXNlcjI0NTQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/245443?v=4","gravatar_id":"","url":"https://api.github.com/users/schmijos","html_url":"https://github.com/schmijos","followers_url":"https://api.github.com/users/schmijos/followers","following_url":"https://api.github.com/users/schmijos/following{/other_user}","gists_url":"https://api.github.com/users/schmijos/gists{/gist_id}","starred_url":"https://api.github.com/users/schmijos/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/schmijos/subscriptions","organizations_url":"https://api.github.com/users/schmijos/orgs","repos_url":"https://api.github.com/users/schmijos/repos","events_url":"https://api.github.com/users/schmijos/events{/privacy}","received_events_url":"https://api.github.com/users/schmijos/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-22T13:05:14Z","updated_at":"2022-07-22T20:31:00Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  ruby \"3.1.0\"\r\n  gem \"rails\", \"7.0.3.1\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.timestamps\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_save_touch\r\n    Post.create!(updated_at: 3.days.ago)\r\n    Post.last.save!(touch: true)\r\n\r\n    assert_in_delta 0.seconds.ago.to_i, Post.last.updated_at.to_i, 5\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nIf I tell _ActiveRecord_ to explicitly \"touch\", then I would expect it to update the timestamps.\r\n\r\n### Actual behavior\r\n`save` never hits the database if no attribute changed.\r\n\r\n### System configuration\r\n**Rails version**: >= 3.0.0, < 8","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45639/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45639/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45638","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45638/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45638/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45638/events","html_url":"https://github.com/rails/rails/issues/45638","id":1314662755,"node_id":"I_kwDNIULOTlwpYw","number":45638,"title":"CSRF Token Expiry issue.","user":{"login":"MBM1607","id":47133639,"node_id":"MDQ6VXNlcjQ3MTMzNjM5","avatar_url":"https://avatars.githubusercontent.com/u/47133639?v=4","gravatar_id":"","url":"https://api.github.com/users/MBM1607","html_url":"https://github.com/MBM1607","followers_url":"https://api.github.com/users/MBM1607/followers","following_url":"https://api.github.com/users/MBM1607/following{/other_user}","gists_url":"https://api.github.com/users/MBM1607/gists{/gist_id}","starred_url":"https://api.github.com/users/MBM1607/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MBM1607/subscriptions","organizations_url":"https://api.github.com/users/MBM1607/orgs","repos_url":"https://api.github.com/users/MBM1607/repos","events_url":"https://api.github.com/users/MBM1607/events{/privacy}","received_events_url":"https://api.github.com/users/MBM1607/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-22T08:38:19Z","updated_at":"2022-07-22T08:40:22Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"We are encountering an issue with form submission in production environment.\r\nThe criteria seems to be exceptionally rare, I have been unable to replicate the issue. \r\n\r\nCSRF token is created and validated just fine.\r\n\r\n### Timing\r\n\r\nIssue seems to occur only when users wait more than 2 hours on a form before submitting, but doing this we have been unable to reproduce as well.\r\n\r\n### Logs\r\n```\r\nW, [2022-07-14T15:19:37.535241 #2433]  WARN -- : Can't verify CSRF token authenticity.\r\nI, [2022-07-14T15:19:37.535556 #2433]  INFO -- : Completed 422 Unprocessable Entity in 1ms (ActiveRecord: 0.0ms | Allocations: 291)\r\nF, [2022-07-14T15:19:37.536425 #2433] FATAL -- :   \r\nActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n```\r\n\r\n### System configuration\r\n**Rails version 6.1.6** \r\n**Ruby version 2.7.4**\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45638/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45638/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45636","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45636/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45636/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45636/events","html_url":"https://github.com/rails/rails/issues/45636","id":1314546104,"node_id":"I_kwDNIULOTlphuA","number":45636,"title":"Invalid template types should raise an exception","user":{"login":"axos88","id":1281218,"node_id":"MDQ6VXNlcjEyODEyMTg=","avatar_url":"https://avatars.githubusercontent.com/u/1281218?v=4","gravatar_id":"","url":"https://api.github.com/users/axos88","html_url":"https://github.com/axos88","followers_url":"https://api.github.com/users/axos88/followers","following_url":"https://api.github.com/users/axos88/following{/other_user}","gists_url":"https://api.github.com/users/axos88/gists{/gist_id}","starred_url":"https://api.github.com/users/axos88/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/axos88/subscriptions","organizations_url":"https://api.github.com/users/axos88/orgs","repos_url":"https://api.github.com/users/axos88/repos","events_url":"https://api.github.com/users/axos88/events{/privacy}","received_events_url":"https://api.github.com/users/axos88/received_events","type":"User","site_admin":false},"labels":[{"id":3666649,"node_id":"MDU6TGFiZWwzNjY2NjQ5","url":"https://api.github.com/repos/rails/rails/labels/actionview","name":"actionview","color":"d7e102","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-07-22T07:40:54Z","updated_at":"2022-08-17T18:02:14Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n  - Create a template in views/foo/bar.txt.erb # Note .txt, and not .text\r\n\r\n```ruby\r\ndetails = { locale: [:en], formats: [:txt], handlers: [:erb], variants: []}\r\nActionController::Base.view_paths.find(\"bar\", 'foo', false, details, nil, [])\r\n```\r\n\r\n### Expected behavior\r\n\r\nShould throw an exception that :txt is not a registered type in Template::Types\r\n\r\n### Actual behavior\r\n\r\nSilently fails to find the otherwise existing template, specifying the correct directory it the file resides in. \r\nConfustion intensifies.\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3\r\n**Ruby version**: 2.7.6","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45636/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45636/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45635","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45635/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45635/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45635/events","html_url":"https://github.com/rails/rails/issues/45635","id":1314015345,"node_id":"I_kwDNIULOTlJIcQ","number":45635,"title":"Recent security releases are missing from the Releases page","user":{"login":"georgeclaghorn","id":94129,"node_id":"MDQ6VXNlcjk0MTI5","avatar_url":"https://avatars.githubusercontent.com/u/94129?v=4","gravatar_id":"","url":"https://api.github.com/users/georgeclaghorn","html_url":"https://github.com/georgeclaghorn","followers_url":"https://api.github.com/users/georgeclaghorn/followers","following_url":"https://api.github.com/users/georgeclaghorn/following{/other_user}","gists_url":"https://api.github.com/users/georgeclaghorn/gists{/gist_id}","starred_url":"https://api.github.com/users/georgeclaghorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/georgeclaghorn/subscriptions","organizations_url":"https://api.github.com/users/georgeclaghorn/orgs","repos_url":"https://api.github.com/users/georgeclaghorn/repos","events_url":"https://api.github.com/users/georgeclaghorn/events{/privacy}","received_events_url":"https://api.github.com/users/georgeclaghorn/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false},"assignees":[{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2022-07-22T01:21:34Z","updated_at":"2022-08-19T18:08:06Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Rails versions 7.0.3.1, 6.1.6.1, 6.0.5.1, and 5.2.8.1 are not listed at this GitHub repository’s [Releases](https://github.com/rails/rails/releases) page. Past releases are listed there, including the most recent round of bugfix releases from May.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45635/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45635/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45632","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45632/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45632/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45632/events","html_url":"https://github.com/rails/rails/issues/45632","id":1312439669,"node_id":"I_kwDNIULOTjo9dQ","number":45632,"title":"`_read_attribute` method should also check whether an attribute is aliased or not","user":{"login":"khiav223577","id":4011729,"node_id":"MDQ6VXNlcjQwMTE3Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4011729?v=4","gravatar_id":"","url":"https://api.github.com/users/khiav223577","html_url":"https://github.com/khiav223577","followers_url":"https://api.github.com/users/khiav223577/followers","following_url":"https://api.github.com/users/khiav223577/following{/other_user}","gists_url":"https://api.github.com/users/khiav223577/gists{/gist_id}","starred_url":"https://api.github.com/users/khiav223577/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/khiav223577/subscriptions","organizations_url":"https://api.github.com/users/khiav223577/orgs","repos_url":"https://api.github.com/users/khiav223577/repos","events_url":"https://api.github.com/users/khiav223577/events{/privacy}","received_events_url":"https://api.github.com/users/khiav223577/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-07-21T03:14:22Z","updated_at":"2022-07-21T21:37:09Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n```rb\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  gem \"activerecord\", '7.0.3'\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table \"users\", force: :cascade do |t|\r\n    t.string :name\r\n  end\r\n\r\n  create_table \"posts\", force: :cascade do |t|\r\n    t.string :title\r\n    t.integer :userId\r\n  end\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\n  has_many :posts\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  belongs_to :user\r\n\r\n  alias_attribute :user_id, :userId\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def setup\r\n    user = User.create!(name: 'Tester')\r\n    post = Post.create!(user_id: user.id, title: 'Post A')\r\n  end\r\n\r\n  def test_has_many\r\n    assert_equal ['Post A'], User.first.posts.map(&:title)\r\n  end\r\n\r\n  def test_belongs_to\r\n    assert_equal 'Tester', Post.first.user&.name\r\n  end\r\nend\r\n```\r\n\r\nResult:\r\n```\r\nFinished in 0.059414s, 33.6619 runs/s, 33.6619 assertions/s.\r\n\r\n  1) Failure:\r\nBugTest#test_belongs_to [test.rb:53]:\r\nExpected: \"Tester\"\r\n  Actual: nil\r\n\r\n2 runs, 2 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\n### Expected behavior\r\n\r\nI run into this issue when I tried to add an association on an aliased attribute.\r\n\r\nThen I found `belongs_to_association` will use `_read_attribute` method to check if this `foreign_key` exists on this model or not.\r\nIt doesn't pass the condition, therefore `find_target` will not be triggered.\r\nhttps://github.com/rails/rails/blob/3272335f8f4739629283cdeff7c3db723f34a3f5/activerecord/lib/active_record/associations/association.rb#L172-L173\r\nhttps://github.com/rails/rails/blob/3272335f8f4739629283cdeff7c3db723f34a3f5/activerecord/lib/active_record/associations/association.rb#L274-L276\r\nhttps://github.com/rails/rails/blob/2ea5ff9e13b9c5d0d5d25b2441efa81a2de2a262/activerecord/lib/active_record/associations/belongs_to_association.rb#L133-L135\r\nhttps://github.com/rails/rails/blob/4ae0390c1051a39ec16a4a95451cd06172a1b260/activerecord/lib/active_record/attribute_methods/read.rb#L37-L39\r\n\r\nThe `read_attribute` method takes `attribute_alias` into consideration since https://github.com/rails/rails/pull/26529, while `_read_attribute` doesn't. I think it should, too.\r\n\r\n### Actual behavior\r\n\r\nSee the test script below.\r\n\r\n### System configuration\r\n**Rails version**: \r\n7.0.3.1\r\n\r\n**Ruby version**:\r\nruby 3.0.0p0 (2020-12-25 revision 95aff21468) [x86_64-linux]","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45632/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45632/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45609","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45609/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45609/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45609/events","html_url":"https://github.com/rails/rails/issues/45609","id":1306840730,"node_id":"I_kwDNIULOTeTOmg","number":45609,"title":"Cannot add ActiveModel::Attribute::FromDatabase to permitted YAML safe load classes","user":{"login":"stanhu","id":963826,"node_id":"MDQ6VXNlcjk2MzgyNg==","avatar_url":"https://avatars.githubusercontent.com/u/963826?v=4","gravatar_id":"","url":"https://api.github.com/users/stanhu","html_url":"https://github.com/stanhu","followers_url":"https://api.github.com/users/stanhu/followers","following_url":"https://api.github.com/users/stanhu/following{/other_user}","gists_url":"https://api.github.com/users/stanhu/gists{/gist_id}","starred_url":"https://api.github.com/users/stanhu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stanhu/subscriptions","organizations_url":"https://api.github.com/users/stanhu/orgs","repos_url":"https://api.github.com/users/stanhu/repos","events_url":"https://api.github.com/users/stanhu/events{/privacy}","received_events_url":"https://api.github.com/users/stanhu/received_events","type":"User","site_admin":false},"labels":[{"id":107186,"node_id":"MDU6TGFiZWwxMDcxODY=","url":"https://api.github.com/repos/rails/rails/labels/regression","name":"regression","color":"e10c02","default":false,"description":null},{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-07-16T15:51:30Z","updated_at":"2022-08-18T11:39:07Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWe have some database entries serialized to YAML. For example:\r\n\r\n```\r\n---\r\n:custom_message: Repository Download Started\r\n:author_name: !ruby/object:DeployToken\r\n  concise_attributes:\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: deploy_token_type\r\n    value_before_type_cast: 1\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: id\r\n    value_before_type_cast: 2\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: revoked\r\n    value_before_type_cast: false\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: read_repository\r\n    value_before_type_cast: true\r\n```\r\n\r\nHowever, since the security release announced in https://rubyonrails.org/2022/7/12/Rails-Versions-7-0-3-1-6-1-6-1-6-0-5-1-and-5-2-8-1-have-been-released to address CVE-2022-32224, we cannot simply add `ActiveModel::Attribute::FromDatabase` to the permitted class list:\r\n\r\n```ruby\r\n(byebug) YAML.safe_load(payload, permitted_classes: [ActiveModel::Attribute::FromDatabase, Symbol, DeployToken], aliases: true)\r\n*** NameError Exception: private constant ActiveModel::Attribute::FromDatabase referenced\r\n```\r\n\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\n### Expected behavior\r\n\r\nYAML loading should work. Should this constant no longer be private since it's been serialized to YAML?\r\n\r\n### Actual behavior\r\n\r\nYAML loading fails with:\r\n\r\n```\r\n*** NameError Exception: private constant ActiveModel::Attribute::FromDatabase referenced\r\n```\r\n\r\n### System configuration\r\n\r\n**Rails version**:\r\nv6.1.6.1\r\n\r\n**Ruby version**:\r\nv2.7.5","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45609/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45609/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45596","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45596/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45596/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45596/events","html_url":"https://github.com/rails/rails/issues/45596","id":1304247666,"node_id":"I_kwDNIULOTb09cg","number":45596,"title":"Setting `schema_dump` in database.yml does not change dump format","user":{"login":"leboshi","id":16550140,"node_id":"MDQ6VXNlcjE2NTUwMTQw","avatar_url":"https://avatars.githubusercontent.com/u/16550140?v=4","gravatar_id":"","url":"https://api.github.com/users/leboshi","html_url":"https://github.com/leboshi","followers_url":"https://api.github.com/users/leboshi/followers","following_url":"https://api.github.com/users/leboshi/following{/other_user}","gists_url":"https://api.github.com/users/leboshi/gists{/gist_id}","starred_url":"https://api.github.com/users/leboshi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leboshi/subscriptions","organizations_url":"https://api.github.com/users/leboshi/orgs","repos_url":"https://api.github.com/users/leboshi/repos","events_url":"https://api.github.com/users/leboshi/events{/privacy}","received_events_url":"https://api.github.com/users/leboshi/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-14T04:44:37Z","updated_at":"2022-07-14T14:34:25Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Originally brought up in #43173.  I opened PR #43240 to address it, but that was closed when it was decided #43530 did the same thing.  Unfortunately, I don't think any of us were really reading what the other was doing, because the two PRs actually each only addressed half the opened issue.\r\n\r\nPR incoming to fully address this and the second half of #43173!\r\n\r\n### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_schema_format_corresponds_with_schema_dump\r\n    Dir.mktmpdir do |dir|\r\n      ActiveRecord::Tasks::DatabaseTasks.stub(:db_dir, dir) do\r\n        old_configurations = ActiveRecord::Base.configurations\r\n        ActiveRecord::Base.configurations = {\r\n          \"development\" => {\r\n            \"primary\" => {\r\n              \"database\" => \"dev-db\",\r\n              \"schema_dump\" => \"primary_structure.sql\"\r\n            }\r\n          }\r\n        }\r\n\r\n        db_config = ActiveRecord::Base.configurations.configs_for(env_name: \"development\", name: \"primary\")\r\n        ActiveRecord::Tasks::DatabaseTasks.dump_schema(db_config)\r\n\r\n        dump_contents = File.read(File.join(dir, \"primary_structure.sql\"))\r\n        refute_match /ActiveRecord::Schema/, dump_contents\r\n        assert_match /CREATE TABLE/, dump_contents\r\n      ensure\r\n        ActiveRecord::Base.configurations = old_configurations\r\n        ActiveRecord::Base.clear_cache!\r\n      end\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nIf `schema_dump` is set to something like `primary_structure.sql`, I'd expect it to do a SQL structure dump rather than a Ruby schema dump.\r\n\r\n### Actual behavior\r\nThe filename in `schema_dump` has no bearing on the format of the dump Rails writes or expects to read.\r\n\r\n### System configuration\r\n**Rails version**: (main)\r\n\r\n**Ruby version**: 3.1.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45596/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45596/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45998","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45998/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45998/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45998/events","html_url":"https://github.com/rails/rails/issues/45998","id":1368868095,"node_id":"I_kwDNIULOUZdE_w","number":45998,"title":"CSRF getting different token","user":{"login":"Saleh-Salem","id":22606707,"node_id":"MDQ6VXNlcjIyNjA2NzA3","avatar_url":"https://avatars.githubusercontent.com/u/22606707?v=4","gravatar_id":"","url":"https://api.github.com/users/Saleh-Salem","html_url":"https://github.com/Saleh-Salem","followers_url":"https://api.github.com/users/Saleh-Salem/followers","following_url":"https://api.github.com/users/Saleh-Salem/following{/other_user}","gists_url":"https://api.github.com/users/Saleh-Salem/gists{/gist_id}","starred_url":"https://api.github.com/users/Saleh-Salem/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Saleh-Salem/subscriptions","organizations_url":"https://api.github.com/users/Saleh-Salem/orgs","repos_url":"https://api.github.com/users/Saleh-Salem/repos","events_url":"https://api.github.com/users/Saleh-Salem/events{/privacy}","received_events_url":"https://api.github.com/users/Saleh-Salem/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-11T08:08:17Z","updated_at":"2022-09-11T08:27:32Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When validating the CSRF token getting an exception in API\r\n \r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\nthe `session[:_csrf_token]` and  `request.x_csrf_token` is different and getting issue.\r\nwhen I need to skip the csrf, I add `verify_authenticity_token`, In this case, I don't need to skip it.\r\nI debug and found the issue in the method:\r\n\r\n```\r\n  def compare_with_global_token(token, session = nil) # :doc:\r\n    ActiveSupport::SecurityUtils.fixed_length_secure_compare(token, global_csrf_token(session))\r\n  end\r\n```\r\n\r\nwhat is `session[:_csrf_token]` and how can I implement it in API?\r\nIs there any missing from my side?\r\n### Steps to reproduce\r\n\r\n1. Add `protect_from_forgery with: :exception` .\r\n2. When logging in return token in response is generated by `form_authenticity_token`.\r\n3. When Trying to request any POST, PUT or DELETE API get an exception.\r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nReturn Response without exception.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\ngetting exception \r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\n### System configuration\r\n**Rails version**:\r\n6.0.3.5\r\n**Ruby version**:\r\n2.7.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45998/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45998/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45994","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45994/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45994/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45994/events","html_url":"https://github.com/rails/rails/issues/45994","id":1368555704,"node_id":"I_kwDNIULOUZKAuA","number":45994,"title":"LoadInterlockAwareMonitor deadlock when clearing cache (multiple databases, test)","user":{"login":"kuahyeow","id":16723,"node_id":"MDQ6VXNlcjE2NzIz","avatar_url":"https://avatars.githubusercontent.com/u/16723?v=4","gravatar_id":"","url":"https://api.github.com/users/kuahyeow","html_url":"https://github.com/kuahyeow","followers_url":"https://api.github.com/users/kuahyeow/followers","following_url":"https://api.github.com/users/kuahyeow/following{/other_user}","gists_url":"https://api.github.com/users/kuahyeow/gists{/gist_id}","starred_url":"https://api.github.com/users/kuahyeow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kuahyeow/subscriptions","organizations_url":"https://api.github.com/users/kuahyeow/orgs","repos_url":"https://api.github.com/users/kuahyeow/repos","events_url":"https://api.github.com/users/kuahyeow/events{/privacy}","received_events_url":"https://api.github.com/users/kuahyeow/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-10T08:52:46Z","updated_at":"2022-09-10T08:56:12Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"With multiple databases, we observe hangs within system tests.\r\n\r\nSee also https://gitlab.com/gitlab-org/gitlab/-/issues/371468 (GitLab is at Rails 6.1, Ruby 2.7.5)\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nHere's a minimal reproduction with Rails 7.0.3.1\r\n\r\n1. Checkout https://gitlab.com/tkuah/multi_database_system_test\r\n2. `bundle install`\r\n3. `bundle exec rails db:migrate`\r\n4. `bundle rails test test/system/home_pages_test.rb`\r\n\r\nThe conditions are:\r\n\r\n1. Multiple databases\r\n2. System test where there's an async request which overlaps with the main thread\r\n\r\n### Expected behavior\r\n\r\nIt does not hang, and the test completes\r\n\r\n### Actual behavior\r\n\r\nIt hangs. It looks like it's hanging when clearing query cache (see https://gitlab.com/gitlab-org/gitlab/-/issues/371468#note_1087203883, and https://gitlab.com/gitlab-org/gitlab/-/issues/371468#note_1088779499)\r\n\r\nA backtrace dump taken while the test is hanging [sigdump-68442.log](https://github.com/rails/rails/files/9539878/sigdump-68442.log)\r\n\r\nMy suspicion is that:\r\n\r\n1. `lock_thread` is true for system tests\r\n3. Therefore both the main thread, and the Puma thread attempt to clear query cache for the same set of connections\r\n\r\nSo we have two connections:\r\n\r\n1. Puma thread takes a `LoadInterlockAwareMonitor` lock for primary connection via `Post.transaction`\r\n2. Main thread takes a `LoadInterlockAwareMonitor` lock for animal connection via implicit transaction that `create` does\r\n3. Due to 2, main thread attempts to clear query cache for primary connection. **Waits for 1's lock**\r\n4. Due to 1, and because of `lock_thread`, puma thread clears query cache for primary connection. It takes a `LoadInterlockAwareMonitor` lock for primary connection which succeds\r\n5. Due to 1, puma thread now attempts clears query cache for animal connection. **Waits for 2's lock**\r\n\r\nSee [`clear_query_caches_for_current_thread` method](https://github.com/rails/rails/blob/e24fbf71fa0a10f63346b9b42604451958740844/activerecord/lib/active_record/connection_handling.rb#L244-L248)\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: ruby 2.7.5p203 (2021-11-24 revision f69aeb8314) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45994/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45994/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45984","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45984/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45984/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45984/events","html_url":"https://github.com/rails/rails/issues/45984","id":1368144421,"node_id":"I_kwDNIULOUYw6JQ","number":45984,"title":"Cannot Eager Load has_many :through Relationships with custom scope","user":{"login":"dcorrigan","id":2445528,"node_id":"MDQ6VXNlcjI0NDU1Mjg=","avatar_url":"https://avatars.githubusercontent.com/u/2445528?v=4","gravatar_id":"","url":"https://api.github.com/users/dcorrigan","html_url":"https://github.com/dcorrigan","followers_url":"https://api.github.com/users/dcorrigan/followers","following_url":"https://api.github.com/users/dcorrigan/following{/other_user}","gists_url":"https://api.github.com/users/dcorrigan/gists{/gist_id}","starred_url":"https://api.github.com/users/dcorrigan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dcorrigan/subscriptions","organizations_url":"https://api.github.com/users/dcorrigan/orgs","repos_url":"https://api.github.com/users/dcorrigan/repos","events_url":"https://api.github.com/users/dcorrigan/events{/privacy}","received_events_url":"https://api.github.com/users/dcorrigan/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-09T17:47:35Z","updated_at":"2022-09-09T17:47:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nThis seems like it's the same as #28324, but I'm still seeing the issue in Rails 7. \r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n  end\r\n\r\n  create_table :images, force: true do |t|\r\n    t.string :title\r\n    t.integer :post_id\r\n  end\r\n\r\n  create_table :captions, force: true do |t|\r\n    t.integer :image_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :images\r\n  has_many :captions, lambda { order('images.title DESC') }, through: :images\r\nend\r\n\r\nclass Image < ActiveRecord::Base\r\n  belongs_to :post\r\n  has_one :caption\r\nend\r\n\r\nclass Caption < ActiveRecord::Base\r\n  belongs_to :image\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_preload_has_many_through_association_with_scope\r\n    post = Post.create!\r\n    image = Image.create!\r\n    image.caption = Caption.create!\r\n    post.images << image\r\n    post.save!\r\n\r\n    # Access through the model works\r\n    assert_includes post.captions, Caption.first\r\n\r\n    # Query with association preloaded does not.\r\n    # When evaluated, it will apply the scope without the relevant JOIN table:\r\n    # SELECT \"captions\".* FROM \"captions\" WHERE \"captions\".\"image_id\" = ? ORDER BY images.title DESC\r\n    preloaded = Post.where(id: post.id).includes(:captions)\r\n\r\n    assert_includes preloaded.first.captions, Caption.first\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe test passes and we're able to eager load has_many :through associations with custom scopes in this way.\r\n\r\nI realize this can be fixed by adding a `references(:images)` to the query, but it seems reasonable to expect AR to infer that that the join is necessary here.\r\n\r\n### Actual behavior\r\n\r\nTest fails with an error: `ActiveRecord::StatementInvalid: SQLite3::SQLException: no such column: images.title`\r\n\r\n### System configuration\r\n**Rails version**: 7.0 \r\n\r\n**Ruby version**: 3.1.2p20\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45984/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45967","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45967/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45967/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45967/events","html_url":"https://github.com/rails/rails/issues/45967","id":1366038829,"node_id":"I_kwDNIULOUWwZLQ","number":45967,"title":"Inconsistent update of timestamps while updating associations with *_ids=","user":{"login":"matthee","id":547653,"node_id":"MDQ6VXNlcjU0NzY1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/547653?v=4","gravatar_id":"","url":"https://api.github.com/users/matthee","html_url":"https://github.com/matthee","followers_url":"https://api.github.com/users/matthee/followers","following_url":"https://api.github.com/users/matthee/following{/other_user}","gists_url":"https://api.github.com/users/matthee/gists{/gist_id}","starred_url":"https://api.github.com/users/matthee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matthee/subscriptions","organizations_url":"https://api.github.com/users/matthee/orgs","repos_url":"https://api.github.com/users/matthee/repos","events_url":"https://api.github.com/users/matthee/events{/privacy}","received_events_url":"https://api.github.com/users/matthee/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-08T10:51:09Z","updated_at":"2022-09-09T03:10:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"ActiveRecord inconsistently updates the `updated_at` column when changing `has_many through:` associations.\r\n\r\n### Steps to reproduce\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"activesupport\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"active_support/testing/time_helpers\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.timestamps\r\n  end\r\n  \r\n  create_table :tags, force: true do |t|\r\n  end\r\n\r\n  create_table :taggings, force: true do |t|\r\n    t.integer :post_id\r\n    t.integer :tag_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :taggings, dependent: :destroy\r\n  \r\n  has_many :tags, through: :taggings\r\nend\r\n\r\nclass Tagging < ActiveRecord::Base\r\n  belongs_to :post, touch: true\r\n  belongs_to :tag\r\nend\r\n\r\nclass Tag < ActiveRecord::Base\r\n  has_many :taggings\r\n  has_many :posts, through: :taggings\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  include ActiveSupport::Testing::TimeHelpers\r\n  \r\n  def test_updated_at_is_updated_when_setting_has_many_through_association\r\n    freeze_time\r\n        \r\n    tag_1 = Tag.create!\r\n    tag_2 = Tag.create!\r\n      \r\n    post = Post.create!\r\n    \r\n    travel_to(now = 1.hour.from_now)\r\n    \r\n    # Adding tags updates post.updated_at\r\n    post.update(tag_ids: [tag_1.id, tag_2.id])\r\n    assert_in_delta now, post.updated_at, 1.second, \"post#updated_at was not updated when adding tags\"\r\n    \r\n    # Removing tags does not update post.updated_at :(\r\n    travel_to(now = 2.hours.from_now)\r\n    post.update(tag_ids: [tag_1.id])\r\n    assert_in_delta now, post.updated_at, 1.second, \"post#updated_at was not updated when removing tags\"\r\n  end\r\n  \r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nIn the example above, both `.update` calls should update the `updated_at` column of the post record. (when adding and removing records)\r\n\r\n### Actual behavior\r\n\r\nWhen deleting a record, the `updated_at` timestamp is not updated.\r\n\r\n### System configuration\r\n**Rails version**:\r\n7.0.3.1\r\n**Ruby version**:\r\n3.0.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45967/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45967/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45959","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45959/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45959/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45959/events","html_url":"https://github.com/rails/rails/issues/45959","id":1364232810,"node_id":"I_kwDNIULOUVCKag","number":45959,"title":"JSON field not saving data with symbol : and it's saving with arrow =>","user":{"login":"sajjadmurtaza","id":8552702,"node_id":"MDQ6VXNlcjg1NTI3MDI=","avatar_url":"https://avatars.githubusercontent.com/u/8552702?v=4","gravatar_id":"","url":"https://api.github.com/users/sajjadmurtaza","html_url":"https://github.com/sajjadmurtaza","followers_url":"https://api.github.com/users/sajjadmurtaza/followers","following_url":"https://api.github.com/users/sajjadmurtaza/following{/other_user}","gists_url":"https://api.github.com/users/sajjadmurtaza/gists{/gist_id}","starred_url":"https://api.github.com/users/sajjadmurtaza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sajjadmurtaza/subscriptions","organizations_url":"https://api.github.com/users/sajjadmurtaza/orgs","repos_url":"https://api.github.com/users/sajjadmurtaza/repos","events_url":"https://api.github.com/users/sajjadmurtaza/events{/privacy}","received_events_url":"https://api.github.com/users/sajjadmurtaza/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":1071962662,"node_id":"MDU6TGFiZWwxMDcxOTYyNjYy","url":"https://api.github.com/repos/rails/rails/labels/more-information-needed","name":"more-information-needed","color":"bfdadc","default":false,"description":"When reporter needs to provide more information"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-09-07T07:40:12Z","updated_at":"2022-09-08T07:23:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nI have JSON field in my database `t.json \"theme\"`. When I try to save the field hash with : , it's overridden before save\r\ne.g.\r\n`object.theme = { color: 'red' }` it always change to `{ color => 'red' }`\r\n\r\ni also tried with jsonb and default value with empty hash {} but still having the same issue.\r\n\r\n\r\nI want to save the JSON data hash with symbol keys `{ color: 'red' }`\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.0\r\n\r\n**Ruby version**: 2.7.1\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45959/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45959/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45949","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45949/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45949/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45949/events","html_url":"https://github.com/rails/rails/issues/45949","id":1362899537,"node_id":"I_kwDNIULOUTwyUQ","number":45949,"title":"ActionText::Attachable#as_json override is breaking ActiveStorage::Blob#as_json when blob is not persisted","user":{"login":"balbesina","id":7312369,"node_id":"MDQ6VXNlcjczMTIzNjk=","avatar_url":"https://avatars.githubusercontent.com/u/7312369?v=4","gravatar_id":"","url":"https://api.github.com/users/balbesina","html_url":"https://github.com/balbesina","followers_url":"https://api.github.com/users/balbesina/followers","following_url":"https://api.github.com/users/balbesina/following{/other_user}","gists_url":"https://api.github.com/users/balbesina/gists{/gist_id}","starred_url":"https://api.github.com/users/balbesina/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/balbesina/subscriptions","organizations_url":"https://api.github.com/users/balbesina/orgs","repos_url":"https://api.github.com/users/balbesina/repos","events_url":"https://api.github.com/users/balbesina/events{/privacy}","received_events_url":"https://api.github.com/users/balbesina/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-06T08:26:39Z","updated_at":"2022-09-06T08:26:39Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nfrom rails console:\r\n```ruby\r\nActiveStorage::Blob.build_after_unfurling(io: StringIO.new('asd'), filename: 'asd.txt').as_json\r\n```\r\n\r\n[Reproduction script](https://gist.github.com/balbesina/30fbdafbfee4b71b06209d9e950f4128)\r\n\r\n### Expected behavior\r\nActiveStorage::Blob#as_json returns a Hash\r\n\r\n### Actual behavior\r\nActiveStorage::Blob#as_json raises exception\r\n```\r\n/Users/dhh/.rvm/gems/ruby-3.1.2/gems/globalid-1.0.0/lib/global_id/uri/gid.rb:167:in `validate_model_id': \r\nUnable to create a Global ID for ActiveStorage::Blob without a model id. (URI::GID::MissingModelIdError)\r\n```\r\n\r\n### System configuration\r\n**Rails version**: Rails 7.0.3.1\r\n**Ruby version**: ruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45949/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45949/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45939","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45939/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45939/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45939/events","html_url":"https://github.com/rails/rails/issues/45939","id":1360876688,"node_id":"I_kwDNIULOUR1UkA","number":45939,"title":"Validations aren't inherited from base model if child is called before validation declaration","user":{"login":"Exterm1nate","id":48535087,"node_id":"MDQ6VXNlcjQ4NTM1MDg3","avatar_url":"https://avatars.githubusercontent.com/u/48535087?v=4","gravatar_id":"","url":"https://api.github.com/users/Exterm1nate","html_url":"https://github.com/Exterm1nate","followers_url":"https://api.github.com/users/Exterm1nate/followers","following_url":"https://api.github.com/users/Exterm1nate/following{/other_user}","gists_url":"https://api.github.com/users/Exterm1nate/gists{/gist_id}","starred_url":"https://api.github.com/users/Exterm1nate/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Exterm1nate/subscriptions","organizations_url":"https://api.github.com/users/Exterm1nate/orgs","repos_url":"https://api.github.com/users/Exterm1nate/repos","events_url":"https://api.github.com/users/Exterm1nate/events{/privacy}","received_events_url":"https://api.github.com/users/Exterm1nate/received_events","type":"User","site_admin":false},"labels":[{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-09-03T14:46:42Z","updated_at":"2022-09-08T07:26:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nLet's create some STI models. Base `Vehicle` and two childs `Car` and `Motorcycle`.\r\n\r\n```ruby\r\n# models/vehicle.rb\r\nclass Vehicle < ApplicationRecord\r\n  TYPES = [Car, Motorcycle].freeze\r\n\r\n  validates :color, uniqueness: { scope: :model }\r\nend\r\n\r\n# models/car.rb\r\nclass Car < Vehicle\r\nend\r\n\r\n# models/motorcycle.rb\r\nclass Motorcycle < Vehicle\r\nend\r\n```\r\n\r\nAfter that we want to use `#validators_on` method to make sure the validation is present.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\nCar.validators_on(:color)\r\nMotorcycle.validators_on(:color)\r\n```\r\n\r\n### Expected behavior\r\n\r\nAll models must contain the validation.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nMotorcycle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\n```\r\n\r\n### Actual behavior\r\n\r\nBut for childs this method returns nothing.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> []\r\nMotorcycle.validators_on(:color)\r\n#=> []\r\n```\r\n\r\n### Notes\r\n\r\nIf we remove the `TYPES` constant (or just child classes calls from it) `validators_on` works as expected. Let's change original code a little bit:\r\n\r\n```ruby\r\n# models/vehicle.rb\r\nclass Vehicle < ApplicationRecord\r\n  TYPES = [Car].freeze # Motorcycle was removed from here!\r\n\r\n  validates :color, uniqueness: { scope: :model }\r\nend\r\n```\r\n\r\nAnd after that test again.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> []\r\nMotorcycle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\n```\r\n\r\n`Motorcycle` validation was returned correctly this time.\r\n\r\nIt seems to be a load error. `Car` was called before the `Vehicle`'s validation declaration, so it doesn't take this validation into account. It may also depend on loading order.\r\n\r\nNotice that validation itself is working well in all models.\r\n\r\n```ruby\r\nCar.create!(color: \"black\", model: \"Boomer\")\r\nCar.create!(color: \"black\", model: \"Boomer\") # raises ActiveRecord::RecordInvalid\r\n\r\nMotorcycle.create!(color: \"red\", model: \"Yamaha\")\r\nMotorcycle.create!(color: \"red\", model: \"Yamaha\") # raises ActiveRecord::RecordInvalid\r\n```\r\n\r\nExample project: https://github.com/Exterm1nate/rails-validation-issue\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3\r\n\r\n**Ruby version**: 3.1.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45939/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45939/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45937","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45937/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45937/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45937/events","html_url":"https://github.com/rails/rails/issues/45937","id":1360779604,"node_id":"I_kwDNIULOURvZVA","number":45937,"title":"Add strict table mode (by default) to sqlite adapter","user":{"login":"jrz","id":149668,"node_id":"MDQ6VXNlcjE0OTY2OA==","avatar_url":"https://avatars.githubusercontent.com/u/149668?v=4","gravatar_id":"","url":"https://api.github.com/users/jrz","html_url":"https://github.com/jrz","followers_url":"https://api.github.com/users/jrz/followers","following_url":"https://api.github.com/users/jrz/following{/other_user}","gists_url":"https://api.github.com/users/jrz/gists{/gist_id}","starred_url":"https://api.github.com/users/jrz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jrz/subscriptions","organizations_url":"https://api.github.com/users/jrz/orgs","repos_url":"https://api.github.com/users/jrz/repos","events_url":"https://api.github.com/users/jrz/events{/privacy}","received_events_url":"https://api.github.com/users/jrz/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-03T07:01:02Z","updated_at":"2022-09-08T07:30:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"SQLite supports 'strict tables' since 3.37.1 https://sqlite.org/stricttables.html\r\n\r\nThis forces a datatype to be specified when creating a table. This is the preferred method in any application created by developers. \r\n\r\nUnspecified/ANY datatypes are useful for quick tryouts as an enduser, similar to excel. But it's counterproductive when creating an application.\r\n\r\nIf this will become a configurable setting, the default should be set to strict.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45937/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45937/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45920","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45920/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45920/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45920/events","html_url":"https://github.com/rails/rails/issues/45920","id":1358179995,"node_id":"I_kwDNIULOUPQumw","number":45920,"title":"Replace has_one through create_association might create duplicated rows","user":{"login":"lazaronixon","id":2651240,"node_id":"MDQ6VXNlcjI2NTEyNDA=","avatar_url":"https://avatars.githubusercontent.com/u/2651240?v=4","gravatar_id":"","url":"https://api.github.com/users/lazaronixon","html_url":"https://github.com/lazaronixon","followers_url":"https://api.github.com/users/lazaronixon/followers","following_url":"https://api.github.com/users/lazaronixon/following{/other_user}","gists_url":"https://api.github.com/users/lazaronixon/gists{/gist_id}","starred_url":"https://api.github.com/users/lazaronixon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lazaronixon/subscriptions","organizations_url":"https://api.github.com/users/lazaronixon/orgs","repos_url":"https://api.github.com/users/lazaronixon/repos","events_url":"https://api.github.com/users/lazaronixon/events{/privacy}","received_events_url":"https://api.github.com/users/lazaronixon/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-09-01T03:05:07Z","updated_at":"2022-09-01T23:03:40Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# Ensure backward compatibility with minitest 4.\r\nMinitest::Test = MiniTest::Unit::TestCase unless defined?(Minitest::Test)\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts do |t|\r\n  end\r\n\r\n  create_table :comments do |t|\r\n    t.references :post\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_one :comment, dependent: :destroy\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  validates_presence_of :post_id\r\n  belongs_to :post\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    post = Post.create!\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    sleep 5.seconds\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n```\r\n# transaction begin\r\nselect previous_comment for update\r\n\r\ninsert new_comment\r\n\r\ndelete previous_comment\r\n# transaction commit\r\n```\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n```\r\n# transaction begin\r\ninsert new_comment\r\n# transaction commit\r\n\r\n# transaction begin\r\ndelete previous_comment\r\n# transaction commit\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45920/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45920/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45906","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45906/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45906/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45906/events","html_url":"https://github.com/rails/rails/issues/45906","id":1355732552,"node_id":"I_kwDNIULOUM7WSA","number":45906,"title":"High object allocation count from `ActiveRecord::ConnectionAdapters::PoolManager#pool_configs `","user":{"login":"amarchenkoshopify","id":101111422,"node_id":"U_kgDOBgbWfg","avatar_url":"https://avatars.githubusercontent.com/u/101111422?v=4","gravatar_id":"","url":"https://api.github.com/users/amarchenkoshopify","html_url":"https://github.com/amarchenkoshopify","followers_url":"https://api.github.com/users/amarchenkoshopify/followers","following_url":"https://api.github.com/users/amarchenkoshopify/following{/other_user}","gists_url":"https://api.github.com/users/amarchenkoshopify/gists{/gist_id}","starred_url":"https://api.github.com/users/amarchenkoshopify/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amarchenkoshopify/subscriptions","organizations_url":"https://api.github.com/users/amarchenkoshopify/orgs","repos_url":"https://api.github.com/users/amarchenkoshopify/repos","events_url":"https://api.github.com/users/amarchenkoshopify/events{/privacy}","received_events_url":"https://api.github.com/users/amarchenkoshopify/received_events","type":"User","site_admin":false},"labels":[{"id":107186,"node_id":"MDU6TGFiZWwxMDcxODY=","url":"https://api.github.com/repos/rails/rails/labels/regression","name":"regression","color":"e10c02","default":false,"description":null},{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"eileencodes","id":1080678,"node_id":"MDQ6VXNlcjEwODA2Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/1080678?v=4","gravatar_id":"","url":"https://api.github.com/users/eileencodes","html_url":"https://github.com/eileencodes","followers_url":"https://api.github.com/users/eileencodes/followers","following_url":"https://api.github.com/users/eileencodes/following{/other_user}","gists_url":"https://api.github.com/users/eileencodes/gists{/gist_id}","starred_url":"https://api.github.com/users/eileencodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eileencodes/subscriptions","organizations_url":"https://api.github.com/users/eileencodes/orgs","repos_url":"https://api.github.com/users/eileencodes/repos","events_url":"https://api.github.com/users/eileencodes/events{/privacy}","received_events_url":"https://api.github.com/users/eileencodes/received_events","type":"User","site_admin":false},"assignees":[{"login":"eileencodes","id":1080678,"node_id":"MDQ6VXNlcjEwODA2Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/1080678?v=4","gravatar_id":"","url":"https://api.github.com/users/eileencodes","html_url":"https://github.com/eileencodes","followers_url":"https://api.github.com/users/eileencodes/followers","following_url":"https://api.github.com/users/eileencodes/following{/other_user}","gists_url":"https://api.github.com/users/eileencodes/gists{/gist_id}","starred_url":"https://api.github.com/users/eileencodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eileencodes/subscriptions","organizations_url":"https://api.github.com/users/eileencodes/orgs","repos_url":"https://api.github.com/users/eileencodes/repos","events_url":"https://api.github.com/users/eileencodes/events{/privacy}","received_events_url":"https://api.github.com/users/eileencodes/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/rails/rails/milestones/81","html_url":"https://github.com/rails/rails/milestone/81","labels_url":"https://api.github.com/repos/rails/rails/milestones/81/labels","id":7591006,"node_id":"MI_kwDNIULOAHPUXg","number":81,"title":"7.0.4","description":"","creator":{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":3,"state":"open","created_at":"2022-01-20T01:51:07Z","updated_at":"2022-08-30T13:21:37Z","due_on":null,"closed_at":null},"comments":2,"created_at":"2022-08-30T12:58:42Z","updated_at":"2022-08-31T12:37:42Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWhile working on memory efficiency investigation I noticed that a very big bunch of object allocations comes from a single method `ActiveRecord::ConnectionAdapters::PoolManager#pool_configs`:\r\n\r\n```ruby\r\n      def pool_configs(role = nil)\r\n        if role\r\n          @role_to_shard_mapping[role].values\r\n        else\r\n          @role_to_shard_mapping.flat_map { |_, shard_map| shard_map.values }\r\n        end\r\n      end \r\n```\r\n\r\nThis method is called on every activerecord operation and does not cache its result: could we think about a way of caching its result?\r\n\r\ncc @eileencodes \r\n\r\n### Expected behavior\r\n\r\n`#pool_configs` allocates configs once\r\n\r\n### Actual behavior\r\n\r\n`#pool_configs` allocates configs every time it is executed\r\n\r\n### System configuration\r\n**Rails version**: main branch\r\n\r\n**Ruby version**: 3.1\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45906/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45901","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45901/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45901/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45901/events","html_url":"https://github.com/rails/rails/issues/45901","id":1354555667,"node_id":"I_kwDNIULOULzhEw","number":45901,"title":"bin/rails dbconsole should include_password by default","user":{"login":"wpeterson","id":178135,"node_id":"MDQ6VXNlcjE3ODEzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/178135?v=4","gravatar_id":"","url":"https://api.github.com/users/wpeterson","html_url":"https://github.com/wpeterson","followers_url":"https://api.github.com/users/wpeterson/followers","following_url":"https://api.github.com/users/wpeterson/following{/other_user}","gists_url":"https://api.github.com/users/wpeterson/gists{/gist_id}","starred_url":"https://api.github.com/users/wpeterson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wpeterson/subscriptions","organizations_url":"https://api.github.com/users/wpeterson/orgs","repos_url":"https://api.github.com/users/wpeterson/repos","events_url":"https://api.github.com/users/wpeterson/events{/privacy}","received_events_url":"https://api.github.com/users/wpeterson/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-29T16:19:45Z","updated_at":"2022-08-30T00:17:43Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n1. Configure a Rails `config/database.yml` with a `password` required to connect\r\n2. Run `rails dbconsole`\r\n3. See prompt for database password, despite password being configured/available\r\n4. Run `rails dbconsole -p`\r\n5. See dbconsole properly load and use credentials to connect to database for DB console session\r\n\r\n### Expected behavior\r\nWhenever a Rails app has credentials like a password configured for a database, the database console session should use those credentials vs. prompting the user to re-enter a password interactively.  When credentials are not configured and a password is required, we should prompt then.\r\n\r\nThis behavior is implemented since early Rails versions but is disabled by default.  I propose we enable the proper password behavior by default.\r\n\r\n### Actual behavior\r\n`bin/rails dbconsole` always prompts for a password, even when one is configured for the app.\r\n\r\n### System configuration\r\n**Rails version**: All (6.x, 7.x, head)\r\n\r\n**Ruby version**: All \r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45901/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45901/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45899","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45899/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45899/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45899/events","html_url":"https://github.com/rails/rails/issues/45899","id":1353676820,"node_id":"I_kwDNIULOUK94FA","number":45899,"title":"Active Job unit tests fail using que 2.2.0","user":{"login":"yahonda","id":73684,"node_id":"MDQ6VXNlcjczNjg0","avatar_url":"https://avatars.githubusercontent.com/u/73684?v=4","gravatar_id":"","url":"https://api.github.com/users/yahonda","html_url":"https://github.com/yahonda","followers_url":"https://api.github.com/users/yahonda/followers","following_url":"https://api.github.com/users/yahonda/following{/other_user}","gists_url":"https://api.github.com/users/yahonda/gists{/gist_id}","starred_url":"https://api.github.com/users/yahonda/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yahonda/subscriptions","organizations_url":"https://api.github.com/users/yahonda/orgs","repos_url":"https://api.github.com/users/yahonda/repos","events_url":"https://api.github.com/users/yahonda/events{/privacy}","received_events_url":"https://api.github.com/users/yahonda/received_events","type":"User","site_admin":false},"labels":[{"id":123812746,"node_id":"MDU6TGFiZWwxMjM4MTI3NDY=","url":"https://api.github.com/repos/rails/rails/labels/activejob","name":"activejob","color":"5319e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-29T04:24:06Z","updated_at":"2022-09-09T15:33:02Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"### Steps to reproduce\r\nActive Job CI has been failing since que 2.2.0 is installed. https://buildkite.com/rails/rails/builds/89068#0182e6b9-7c84-4b85-a651-8d640f5eb076\r\n\r\n```ruby\r\ngit clone https://github.com/rails/rails\r\ncd rails/activejob\r\nbundle update que\r\nAJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\n```\r\n\r\nAlthough there are 3 failures and 75 errors. This script just runs a single test because it looks the root cause is the same.\r\n\r\n\r\n### Expected behavior\r\nIt should pass.\r\n\r\n### Actual behavior\r\nIt raises `ArgumentError: wrong number of arguments (given 2, expected 1)`.\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 62302\r\n\r\n# Running:\r\n\r\nE\r\n\r\nError:\r\nQueuingTest#test_run_queued_job:\r\nArgumentError: wrong number of arguments (given 2, expected 1)\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:78:in `run'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job_methods.rb:51:in `_run'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:248:in `block (2 levels) in _run_attrs'\r\n    (eval):9:in `run_job_middleware'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:247:in `block in _run_attrs'\r\n    <internal:kernel>:90:in `tap'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:246:in `_run_attrs'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:223:in `run'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/support/que/inline.rb:15:in `enqueue'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:66:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:27:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:67:in `block in enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:118:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:28:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:27:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:9:in `block (2 levels) in <module:Instrumentation>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:27:in `tag_logger'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:14:in `block (2 levels) in <module:Logging>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:138:in `run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:63:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:30:in `perform_later'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/cases/queuing_test.rb:14:in `block in <class:QueuingTest>'\r\n\r\n\r\nbin/test test/cases/queuing_test.rb:13\r\n\r\n\r\n\r\nFinished in 0.008930s, 111.9768 runs/s, 0.0000 assertions/s.\r\n1 runs, 0 assertions, 0 failures, 1 errors, 0 skips\r\n$\r\n```\r\n\r\n### Additional information\r\n* `require_job_options_kwarg?` always returns `false` because `JobWrapper.method(:enqueue).parameters` does not have any `[:key, :job_options]` \r\nwhere it looks expected to return `true`.\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 32774\r\n\r\n# Running:\r\n\r\n[46, 55] in ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n    46|       end\r\n    47|\r\n    48|       private\r\n    49|         def require_job_options_kwarg?\r\n    50|           require 'debug'\r\n=>  51|           binding.break\r\n    52|           @require_job_options_kwarg ||=\r\n    53|             JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }\r\n    54|         end\r\n    55|\r\n=>#0\tActiveJob::QueueAdapters::QueAdapter#require_job_options_kwarg? at ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:51\r\n  #1\tActiveJob::QueueAdapters::QueAdapter#enqueue(job=#<HelloJob:0x00007fc861807740 @arguments...) at ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:24\r\n  # and 40 frames (use `bt' command for all frames)\r\n(rdbg) JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }    # ruby\r\nfalse\r\n(rdbg) JobWrapper.method(:enqueue).parameters    # ruby\r\n[[:req, :args], [:keyreq, :priority], [:keyreq, :queue], [:key, :run_at]]\r\n(rdbg) quit    # command\r\nReally quit? [Y/n] Y\r\n```\r\n\r\n* By changing `require_job_options_kwarg?` always returns `true`, it raises `ArgumentError: missing keywords: :priority, :queue`\r\n\r\n```ruby\r\n$ git diff\r\ndiff --git a/activejob/lib/active_job/queue_adapters/que_adapter.rb b/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\nindex 41b3633a07..54e8cbc39b 100644\r\n--- a/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n+++ b/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n@@ -47,6 +47,7 @@ def enqueue_at(job, timestamp) # :nodoc:\r\n\r\n       private\r\n         def require_job_options_kwarg?\r\n+          return true\r\n           @require_job_options_kwarg ||=\r\n             JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }\r\n         end\r\n$\r\n```\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 21508\r\n\r\n# Running:\r\n\r\nE\r\n\r\nError:\r\nQueuingTest#test_run_queued_job:\r\nArgumentError: missing keywords: :priority, :queue\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:65:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:25:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:67:in `block in enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:118:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:28:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:27:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:9:in `block (2 levels) in <module:Instrumentation>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:27:in `tag_logger'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:14:in `block (2 levels) in <module:Logging>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:138:in `run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:63:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:30:in `perform_later'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/cases/queuing_test.rb:14:in `block in <class:QueuingTest>'\r\n\r\n\r\nbin/test test/cases/queuing_test.rb:13\r\n\r\n\r\n\r\nFinished in 0.008724s, 114.6312 runs/s, 0.0000 assertions/s.\r\n1 runs, 0 assertions, 0 failures, 1 errors, 0 skips\r\n$\r\n```\r\n\r\n\r\n### System configuration\r\n**Rails version**: main branch\r\n\r\n**Ruby version**: $ ruby -v\r\nruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [x86_64-linux]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45899/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45893","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45893/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45893/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45893/events","html_url":"https://github.com/rails/rails/issues/45893","id":1352793907,"node_id":"I_kwDNIULOUKH_Mw","number":45893,"title":"ActiveRecord: HMT with conditions does not update the in-memory collection when pushing new objects","user":{"login":"joanniclaborde","id":411925,"node_id":"MDQ6VXNlcjQxMTkyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/411925?v=4","gravatar_id":"","url":"https://api.github.com/users/joanniclaborde","html_url":"https://github.com/joanniclaborde","followers_url":"https://api.github.com/users/joanniclaborde/followers","following_url":"https://api.github.com/users/joanniclaborde/following{/other_user}","gists_url":"https://api.github.com/users/joanniclaborde/gists{/gist_id}","starred_url":"https://api.github.com/users/joanniclaborde/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joanniclaborde/subscriptions","organizations_url":"https://api.github.com/users/joanniclaborde/orgs","repos_url":"https://api.github.com/users/joanniclaborde/repos","events_url":"https://api.github.com/users/joanniclaborde/events{/privacy}","received_events_url":"https://api.github.com/users/joanniclaborde/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-26T22:40:12Z","updated_at":"2022-08-30T15:33:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi! When using a `has_many :a, through: :b` relation, and the `:b` relation has a condition, adding new objects doesn't update the in-memory collection properly (stops after the first object).\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :packages, force: true do |t|\r\n  end\r\n\r\n  create_table :package_items, force: true do |t|\r\n    t.integer :package_id\r\n    t.integer :item_id\r\n  end\r\n\r\n  create_table :items, force: true do |t|\r\n    t.boolean \"deleted\", default: false\r\n  end\r\nend\r\n\r\nclass Package < ActiveRecord::Base\r\n  has_many :package_items, ->{ where(item_id: Item.active.pluck(:id)) }\r\n  has_many :items, through: :package_items\r\nend\r\n\r\nclass PackageItem < ActiveRecord::Base\r\n  belongs_to :package\r\n  belongs_to :item\r\nend\r\n\r\nclass Item < ActiveRecord::Base\r\n  has_many :package_items\r\n  has_many :packages, through: :package_items\r\n\r\n  scope :active, -> { where(deleted: false) }\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    package = Package.create!\r\n    package.items << Item.create!\r\n    package.items << Item.create!\r\n    package.items << Item.create!\r\n\r\n    # This should be [3, 3, 3] but we get [3, 1, 3]\r\n    assert_equal [3, 3, 3], [Item.count, package.items.count, package.reload.items.count]\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n`package.items.count` is equal to 3.\r\n\r\n### Actual behavior\r\n`package.items.count` is equal to 1, even though all the items and relations are created properly (see assertion).\r\n\r\n### System configuration\r\n**Rails version**: tested on `7.1.0.alpha` and `6.1.6.1`.\r\n\r\n**Ruby version**: tested on `2.7.5`.\r\n\r\n### Workaround\r\nI was able to fix this issue by changing the weird condition to a proper scope:\r\n\r\n```ruby\r\nclass Package < ActiveRecord::Base\r\n  has_many :package_items, ->{ includes(:item).merge(Item.active) }\r\n  has_many :items, through: :package_items\r\nend\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45893/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45893/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45880","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45880/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45880/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45880/events","html_url":"https://github.com/rails/rails/issues/45880","id":1349546108,"node_id":"I_kwDNIULOUHBwfA","number":45880,"title":"Google search links to old API docs","user":{"login":"abraham","id":3341,"node_id":"MDQ6VXNlcjMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/3341?v=4","gravatar_id":"","url":"https://api.github.com/users/abraham","html_url":"https://github.com/abraham","followers_url":"https://api.github.com/users/abraham/followers","following_url":"https://api.github.com/users/abraham/following{/other_user}","gists_url":"https://api.github.com/users/abraham/gists{/gist_id}","starred_url":"https://api.github.com/users/abraham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abraham/subscriptions","organizations_url":"https://api.github.com/users/abraham/orgs","repos_url":"https://api.github.com/users/abraham/repos","events_url":"https://api.github.com/users/abraham/events{/privacy}","received_events_url":"https://api.github.com/users/abraham/received_events","type":"User","site_admin":true},"labels":[{"id":150377,"node_id":"MDU6TGFiZWwxNTAzNzc=","url":"https://api.github.com/repos/rails/rails/labels/docs","name":"docs","color":"02d7e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-24T14:33:55Z","updated_at":"2022-08-25T23:48:01Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n1. Search Google for a Rails API https://www.google.com/search?q=rails+update_all\r\n2. Follow link for \"ActiveRecord::Relation - Rails API\"\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n\r\nFind documentation for the latest version of Rails. Currently `7.0.3.1`.\r\n\r\n`https://api.rubyonrails.org/classes/ActiveRecord/Relation.html`\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n\r\nFind documentation for the the very old version of `3.2.3`.\r\n\r\n`https://api.rubyonrails.org/v3.2.3/classes/ActiveRecord/Relation.html`\r\n\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45880/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45880/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45832","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45832/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45832/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45832/events","html_url":"https://github.com/rails/rails/issues/45832","id":1339487378,"node_id":"I_kwDNIULOT9b0kg","number":45832,"title":"MySQL 8.0 VARBINARY default value is hexadecimal","user":{"login":"HParker","id":4482399,"node_id":"MDQ6VXNlcjQ0ODIzOTk=","avatar_url":"https://avatars.githubusercontent.com/u/4482399?v=4","gravatar_id":"","url":"https://api.github.com/users/HParker","html_url":"https://github.com/HParker","followers_url":"https://api.github.com/users/HParker/followers","following_url":"https://api.github.com/users/HParker/following{/other_user}","gists_url":"https://api.github.com/users/HParker/gists{/gist_id}","starred_url":"https://api.github.com/users/HParker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HParker/subscriptions","organizations_url":"https://api.github.com/users/HParker/orgs","repos_url":"https://api.github.com/users/HParker/repos","events_url":"https://api.github.com/users/HParker/events{/privacy}","received_events_url":"https://api.github.com/users/HParker/received_events","type":"User","site_admin":true},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":309390193,"node_id":"MDU6TGFiZWwzMDkzOTAxOTM=","url":"https://api.github.com/repos/rails/rails/labels/MySQL","name":"MySQL","color":"fef2c0","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-08-15T20:42:09Z","updated_at":"2022-08-16T10:23:16Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Default values on VARBINARY columns changed behavior between MySQL 5.7 and 8.0\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"mysql2\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"mysql2\", database: \"adam_test\", prepared_statements: false, host: '127.0.0.1', port: 3307, user: \"root\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.binary :some_binary, null: false, limit: 1024, default: \"hello-world\"\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_mysql_defaults\r\n    post = Post.create!\r\n\r\n    mysql_vars = ActiveRecord::Base.connection.select_rows(\"SHOW VARIABLES LIKE '%version%'\")\r\n    puts mysql_vars.inspect\r\n    puts Post.column_defaults\r\n\r\n    # assert_equal \"0x68656C6C6F2D776F726C64\", post.some_binary # This passes\r\n    assert_equal \"hello-world\", post.some_binary # This fails\r\n\r\n    reloaded_post = Post.first\r\n    assert_equal \"hello-world\", reloaded_post.some_binary # this passes\r\n  end\r\nend\r\n```\r\n\r\nOn MySQL 5.7:\r\n\r\n```ruby\r\nPost.column_defaults # => {\"id\"=>nil, \"some_binary\"=>\"hello-world\"}\r\n```\r\n\r\nOn MySQL 8.0:\r\n\r\n```ruby\r\nPost.column_defaults # => {\"id\"=>nil, \"some_binary\"=>\"0x68656C6C6F2D776F726C64\"}\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe default value on binary columns should be Ruby strings, not ruby strings of hexadecimal.\r\n\r\n### Actual behavior\r\n\r\nThe column default in MySQL 8.0 is a hexadecimal string representing the binary data.\r\n\r\n### System configuration\r\n**Rails version**: main\r\n\r\n**Ruby version**: 3.1.0\r\n\r\nSome interesting MySQL forum posts about this behavior change:\r\n\r\n- https://forums.mysql.com/read.php?24,685577,685577\r\n- https://forums.mysql.com/read.php?20,698061,698061#msg-698061\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45832/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45832/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45830","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45830/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45830/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45830/events","html_url":"https://github.com/rails/rails/issues/45830","id":1338922250,"node_id":"I_kwDNIULOT85VCg","number":45830,"title":"ActiveRecord Rollbacks on errors which happen on commit","user":{"login":"Baxxx","id":17880055,"node_id":"MDQ6VXNlcjE3ODgwMDU1","avatar_url":"https://avatars.githubusercontent.com/u/17880055?v=4","gravatar_id":"","url":"https://api.github.com/users/Baxxx","html_url":"https://github.com/Baxxx","followers_url":"https://api.github.com/users/Baxxx/followers","following_url":"https://api.github.com/users/Baxxx/following{/other_user}","gists_url":"https://api.github.com/users/Baxxx/gists{/gist_id}","starred_url":"https://api.github.com/users/Baxxx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baxxx/subscriptions","organizations_url":"https://api.github.com/users/Baxxx/orgs","repos_url":"https://api.github.com/users/Baxxx/repos","events_url":"https://api.github.com/users/Baxxx/events{/privacy}","received_events_url":"https://api.github.com/users/Baxxx/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":126910270,"node_id":"MDU6TGFiZWwxMjY5MTAyNzA=","url":"https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps","name":"With reproduction steps","color":"009800","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2022-08-15T12:09:14Z","updated_at":"2022-08-25T13:32:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nIn some of our projects we use Postgres as database, and for some cases we deferred trigger constraints. These triggers fire up when `COMMIT` is called. Trigger can raise an error, which kills the transaction. ActiveRecord catches the error, and bubbles it up to developer, but it also sends `ROLLBACK` to Postgres, to which Postgres gives a warning that there is no transaction in progress.\r\n\r\nI didn't test this with sqlite3 or mysql.\r\n\r\nYou can see the reproduction script, and screenshot with the current behavior.\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", \"~> 7\"\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"logger\"\r\n\r\nlogger = Logger.new(STDOUT)\r\n\r\n# This connection will do for database-independent bug reports.\r\npg_opts = {adapter: \"postgresql\", database: \"ar_rollback_after_failed_commit_issue\"}\r\n\r\nActiveRecord::Base.establish_connection(pg_opts.except(:database))\r\nActiveRecord::Base.connection.drop_database(pg_opts[:database])\r\nActiveRecord::Base.connection.create_database(pg_opts[:database])\r\nlogger.info \"Database #{pg_opts[:database]} was (re)created.\"\r\n\r\nActiveRecord::Base.establish_connection(pg_opts)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  execute <<~SQL\r\n    CREATE FUNCTION perform_custom_validation()\r\n      RETURNS TRIGGER\r\n      LANGUAGE plpgsql\r\n      AS $$\r\n        DECLARE\r\n          total_invalid INTEGER;\r\n        BEGIN\r\n          SELECT COUNT(*) INTO total_invalid\r\n          FROM things\r\n          WHERE name = 'bad';\r\n\r\n          IF (total_invalid > 0) THEN\r\n            RAISE EXCEPTION 'There are bad things';\r\n          END IF;\r\n          RETURN NULL;\r\n        END;\r\n      $$;\r\n\r\n    CREATE TABLE \"things\" (\r\n      \"id\" bigserial primary key,\r\n      \"name\" character varying NOT NULL\r\n    );\r\n\r\n    CREATE CONSTRAINT\r\n      TRIGGER bank_transaction_rl_payment_date_validation\r\n      AFTER INSERT OR UPDATE ON things\r\n      DEFERRABLE INITIALLY DEFERRED\r\n      FOR EACH ROW EXECUTE FUNCTION perform_custom_validation();\r\n  SQL\r\nend\r\n\r\nclass Thing < ActiveRecord::Base\r\n  validates :name, presence: true\r\nend\r\n\r\n# All good\r\nlogger.info \"First transaction\"\r\nThing.create!(name: \"good\")\r\n\r\n# AR tries to commit, DB raises an error, AR tries to ROLLBACK, and PG gives a warning\r\nbegin\r\n  logger.info \"Second transaction\"\r\n  Thing.create!(name: \"bad\")\r\nrescue StandardError\r\n  # Doesn't matter\r\nend\r\n```\r\n\r\n### Expected behavior\r\nActiveRecord should not `ROLLBACK`, as there is no transaction in progress.\r\n\r\n### Actual behavior\r\nActiveRecord tries to `ROLLBACK`.\r\n\r\n![Screenshot from 2022-08-15 14-07-11](https://user-images.githubusercontent.com/17880055/184632335-0277cd27-4c7b-4b98-94a8-373be34a87ee.png)\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 2.7.5p203\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45830/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45830/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45823","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45823/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45823/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45823/events","html_url":"https://github.com/rails/rails/issues/45823","id":1337409694,"node_id":"I_kwDNIULOT7dAng","number":45823,"title":"Change Column with Raw Character Set Failure","user":{"login":"ahoglund","id":3407303,"node_id":"MDQ6VXNlcjM0MDczMDM=","avatar_url":"https://avatars.githubusercontent.com/u/3407303?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoglund","html_url":"https://github.com/ahoglund","followers_url":"https://api.github.com/users/ahoglund/followers","following_url":"https://api.github.com/users/ahoglund/following{/other_user}","gists_url":"https://api.github.com/users/ahoglund/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoglund/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoglund/subscriptions","organizations_url":"https://api.github.com/users/ahoglund/orgs","repos_url":"https://api.github.com/users/ahoglund/repos","events_url":"https://api.github.com/users/ahoglund/events{/privacy}","received_events_url":"https://api.github.com/users/ahoglund/received_events","type":"User","site_admin":true},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":126910270,"node_id":"MDU6TGFiZWwxMjY5MTAyNzA=","url":"https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps","name":"With reproduction steps","color":"009800","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-12T16:21:50Z","updated_at":"2022-08-12T20:47:38Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"With [this recent change to how collation is handled for column changes](https://github.com/rails/rails/pull/45744/files), there is now a potential for older migrations written in a specific manner to break if the `collation:` argument is not specific.\r\n\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\n# you need to install mysql locally for this to work.\r\n# on Mac:\r\n# brew install mysql\r\n# brew services start mysql\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"mysql2\"\r\n\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nclient = Mysql2::Client.new(host: 'localhost', username: \"root\")\r\nclient.query(\"DROP DATABASE test\")\r\nclient.query(\"CREATE DATABASE test\")\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"mysql2\", database: \"test\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :payments, force: true do |t|\r\n    t.string :description, \"varchar(64)\", null: false\r\n  end\r\nend\r\n\r\nclass Payment < ActiveRecord::Base\r\nend\r\n\r\nclass ChangeAmountToAddScale < ActiveRecord::Migration[7.1]\r\n  # This sets the default character set for the payments\r\n  # table to utf32 with a default COLLATION of utf32_general_ci.\r\n  # This can be verified by running the following query:\r\n  #\r\n  # SHOW CHARACTER SET;\r\n  #\r\n  connection.execute(<<~SQL)\r\n    ALTER TABLE payments CONVERT TO CHARACTER SET utf32\r\n  SQL\r\n\r\n  def change\r\n    reversible do |dir|\r\n      dir.up do\r\n        change_table(:payments, bulk: true) do |t|\r\n          # The default collation of utf32_general_ci\r\n          # will not be compatible with this ascii character set. \r\n          #\r\n          # when we build the column change now we automatically\r\n          # try to assign the previous collation to the column if no `collation:` is specified.\r\n          # \r\n          # https://github.com/rails/rails/pull/45744\r\n          #\r\n          # The workaround is to add `collation: 'ascii_bin'` or `collation: 'ascii_general_ci'` to the change.\r\n          #\r\n          # This isn't a huge deal and it has a workaround but it _will_ break\r\n          # anyone who has migrations that are written like this and upgrade to this version\r\n          # of Rails.\r\n          t.change :description, \"varchar(64) CHARACTER SET ascii\", null: false\r\n        end\r\n      end\r\n\r\n      dir.down do\r\n        change_table(:payments, bulk: true) do |t|\r\n          t.change :description, \"varchar(64)\", null: false\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_migration_up\r\n    ChangeAmountToAddScale.migrate(:up)\r\n    Payment.reset_column_information\r\n\r\n    assert_equal \"varchar\", Payment.columns.last.sql_type\r\n  end\r\n\r\n  def test_migration_down\r\n    ChangeAmountToAddScale.migrate(:down)\r\n    Payment.reset_column_information\r\n\r\n    assert_equal \"varchar\", Payment.columns.last.sql_type\r\n  end\r\nend\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nI would expect this to detect that the character set is being changed, and either \r\n\r\n1. change the collation to be compatible.\r\n2. At least give a clearer error that requires the `collation:` arg to be passed when the character set is being modified.\r\n\r\n### Actual behavior\r\n\r\nThis error:\r\n\r\n```\r\nError:\r\nBugTest#test_migration_up:\r\nActiveRecord::StatementInvalid: Mysql2::Error: COLLATION 'utf32_general_ci' is not valid for CHARACTER SET 'ascii'\r\n    test.rb:51:in `block (2 levels) in change'\r\n    test.rb:50:in `block in change'\r\n    test.rb:49:in `change'\r\n    test.rb:67:in `test_migration_up'\r\n```\r\n\r\n### System configuration\r\n**Rails version**: main\r\n**Ruby version**: ruby 3.1.1p18\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45823/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45823/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45822","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45822/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45822/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45822/events","html_url":"https://github.com/rails/rails/issues/45822","id":1337253221,"node_id":"I_kwDNIULOT7TdZQ","number":45822,"title":"ActiveRecord: Wrong results returned by ActiveRecord::Associations::Preloader when intermediate association is already preloaded.","user":{"login":"yopzer","id":6330271,"node_id":"MDQ6VXNlcjYzMzAyNzE=","avatar_url":"https://avatars.githubusercontent.com/u/6330271?v=4","gravatar_id":"","url":"https://api.github.com/users/yopzer","html_url":"https://github.com/yopzer","followers_url":"https://api.github.com/users/yopzer/followers","following_url":"https://api.github.com/users/yopzer/following{/other_user}","gists_url":"https://api.github.com/users/yopzer/gists{/gist_id}","starred_url":"https://api.github.com/users/yopzer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yopzer/subscriptions","organizations_url":"https://api.github.com/users/yopzer/orgs","repos_url":"https://api.github.com/users/yopzer/repos","events_url":"https://api.github.com/users/yopzer/events{/privacy}","received_events_url":"https://api.github.com/users/yopzer/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"jhawthorn","id":131752,"node_id":"MDQ6VXNlcjEzMTc1Mg==","avatar_url":"https://avatars.githubusercontent.com/u/131752?v=4","gravatar_id":"","url":"https://api.github.com/users/jhawthorn","html_url":"https://github.com/jhawthorn","followers_url":"https://api.github.com/users/jhawthorn/followers","following_url":"https://api.github.com/users/jhawthorn/following{/other_user}","gists_url":"https://api.github.com/users/jhawthorn/gists{/gist_id}","starred_url":"https://api.github.com/users/jhawthorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhawthorn/subscriptions","organizations_url":"https://api.github.com/users/jhawthorn/orgs","repos_url":"https://api.github.com/users/jhawthorn/repos","events_url":"https://api.github.com/users/jhawthorn/events{/privacy}","received_events_url":"https://api.github.com/users/jhawthorn/received_events","type":"User","site_admin":true},"assignees":[{"login":"jhawthorn","id":131752,"node_id":"MDQ6VXNlcjEzMTc1Mg==","avatar_url":"https://avatars.githubusercontent.com/u/131752?v=4","gravatar_id":"","url":"https://api.github.com/users/jhawthorn","html_url":"https://github.com/jhawthorn","followers_url":"https://api.github.com/users/jhawthorn/followers","following_url":"https://api.github.com/users/jhawthorn/following{/other_user}","gists_url":"https://api.github.com/users/jhawthorn/gists{/gist_id}","starred_url":"https://api.github.com/users/jhawthorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhawthorn/subscriptions","organizations_url":"https://api.github.com/users/jhawthorn/orgs","repos_url":"https://api.github.com/users/jhawthorn/repos","events_url":"https://api.github.com/users/jhawthorn/events{/privacy}","received_events_url":"https://api.github.com/users/jhawthorn/received_events","type":"User","site_admin":true}],"milestone":null,"comments":1,"created_at":"2022-08-12T14:06:55Z","updated_at":"2022-08-18T23:36:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"activerecord\", \"7.0.3.1\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :a_records, force: true\r\n\r\n  create_table :b_records, force: true do |t|\r\n    t.references :a_record\r\n    t.references :c_record\r\n  end\r\n\r\n  create_table :c_records, force: true\r\n\r\n  create_table :d_records, force: true do |t|\r\n    t.references :c_record\r\n  end\r\nend\r\n\r\nclass ARecord < ActiveRecord::Base\r\n  has_one :b_record\r\n  has_one :c_record, through: :b_record\r\n  has_many :d_records, through: :c_record\r\nend\r\n\r\nclass BRecord < ActiveRecord::Base\r\n  belongs_to :a_record\r\n  belongs_to :c_record\r\nend\r\n\r\nclass CRecord < ActiveRecord::Base\r\n  has_one :b_record\r\n  has_many :d_records\r\nend\r\n\r\nclass DRecord < ActiveRecord::Base\r\n  belongs_to :c_record\r\nend\r\n\r\na = ARecord.create!\r\nc = CRecord.create!\r\nBRecord.create!(a_record: a, c_record: c)\r\nDRecord.create!(c_record: c)\r\nDRecord.create!(c_record: c)\r\n\r\na.reload\r\na.c_record # NB: if removed this works\r\n\r\n::ActiveRecord::Associations::Preloader.new(records: [a], associations: :d_records).call\r\nputs({ record_ids: a.d_records.map(&:id), size: a.d_records.size })\r\n```\r\n\r\n### Expected behavior\r\nTwo records should be loaded:\r\n`{:record_ids=>[1, 2], :size=>2}`\r\n\r\n### Actual behavior\r\nNo records are loaded:\r\n`{:record_ids=>[], :size=>0}`\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 2.7.5\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45822/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45822/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45817","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45817/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45817/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45817/events","html_url":"https://github.com/rails/rails/issues/45817","id":1336797388,"node_id":"I_kwDNIULOT63ozA","number":45817,"title":"Value of attribute default proc is shared between instances after dup + dirty tracking","user":{"login":"quadule","id":15299,"node_id":"MDQ6VXNlcjE1Mjk5","avatar_url":"https://avatars.githubusercontent.com/u/15299?v=4","gravatar_id":"","url":"https://api.github.com/users/quadule","html_url":"https://github.com/quadule","followers_url":"https://api.github.com/users/quadule/followers","following_url":"https://api.github.com/users/quadule/following{/other_user}","gists_url":"https://api.github.com/users/quadule/gists{/gist_id}","starred_url":"https://api.github.com/users/quadule/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/quadule/subscriptions","organizations_url":"https://api.github.com/users/quadule/orgs","repos_url":"https://api.github.com/users/quadule/repos","events_url":"https://api.github.com/users/quadule/events{/privacy}","received_events_url":"https://api.github.com/users/quadule/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-12T06:16:00Z","updated_at":"2022-08-15T15:56:11Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWhen an attribute without a database column defines a default proc, `dup`ing a model in which the default wasn't accessed passes the unevaluated `UserProvidedDefault` attribute to the new instance as the attribute's original value. Checking the new attribute for changes will then memoize the value in the original attribute definition, making it the default value in every new model instance afterward.\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n  gem \"rails\", github: \"rails/rails\", ref: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Schema.define do\r\n  create_table :cats do |t|\r\n    t.string :name\r\n  end\r\nend\r\n\r\nclass Cat < ActiveRecord::Base\r\n  attribute :sounds, default: -> { [] }\r\nend\r\n\r\nclass VirtualAttributeTest < Minitest::Test\r\n  def test_virtual_attribute_defaults_are_independent\r\n    Cat.new.dup.save!\r\n    Cat.new.sounds << \"meow\"\r\n    refute_same Cat.new.sounds, Cat.new.sounds\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nEach new instance should get a new default value from the proc.\r\n\r\n### Actual behavior\r\nAfter using dirty tracking on a duplicated instance with an uncalled proc default, all new instances of a model receive the same default value and share any changes made to it.\r\n\r\n### Affected versions\r\nThis seems to date back quite a while; the test fails on the main branch back to 5-1-stable.\r\n\r\n### Credits\r\nThanks to @GBH for originally discovering this bug.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45817/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45817/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45794","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45794/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45794/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45794/events","html_url":"https://github.com/rails/rails/issues/45794","id":1332999733,"node_id":"I_kwDNIULOT3P2NQ","number":45794,"title":"Action Cable client goes in a connection loop if you subscribe multiple times to the same channel","user":{"login":"ProGM","id":5167659,"node_id":"MDQ6VXNlcjUxNjc2NTk=","avatar_url":"https://avatars.githubusercontent.com/u/5167659?v=4","gravatar_id":"","url":"https://api.github.com/users/ProGM","html_url":"https://github.com/ProGM","followers_url":"https://api.github.com/users/ProGM/followers","following_url":"https://api.github.com/users/ProGM/following{/other_user}","gists_url":"https://api.github.com/users/ProGM/gists{/gist_id}","starred_url":"https://api.github.com/users/ProGM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ProGM/subscriptions","organizations_url":"https://api.github.com/users/ProGM/orgs","repos_url":"https://api.github.com/users/ProGM/repos","events_url":"https://api.github.com/users/ProGM/events{/privacy}","received_events_url":"https://api.github.com/users/ProGM/received_events","type":"User","site_admin":false},"labels":[{"id":300028327,"node_id":"MDU6TGFiZWwzMDAwMjgzMjc=","url":"https://api.github.com/repos/rails/rails/labels/actioncable","name":"actioncable","color":"bfdadc","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-09T09:48:36Z","updated_at":"2022-08-17T17:57:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\nYou can just start from a fresh `rails new [project-name]` installation.\r\nChannel code:\r\n```ruby\r\nclass ArticleChannel < ApplicationCable::Channel\r\n  def subscribed\r\n    stream_from \"ArticleChannel\"\r\n  end\r\n\r\n  def unsubscribed\r\n    # Any cleanup needed when channel is unsubscribed\r\n  end\r\nend\r\n```\r\n\r\nJavascript code:\r\n```javascript\r\nimport consumer from \"channels/consumer\"\r\n\r\nfunction subscribe() {\r\n\treturn consumer.subscriptions.create('ArticleChannel', {\r\n\t\tconnected() {\r\n\t\t\tconsole.log('connected');\r\n\t\t\t// Called when the subscription is ready for use on the server\r\n\t\t},\r\n\r\n\t\tdisconnected() {\r\n\t\t\tconsole.log('disconnected');\r\n\t\t\t// Called when the subscription has been terminated by the server\r\n\t\t},\r\n\r\n\t\treceived(data) {\r\n\t\t\tconsole.log('received', data);\r\n\t\t\t// Called when there's incoming data on the websocket for this channel\r\n\t\t}\r\n\t});\r\n}\r\n\r\nsetTimeout(() => {\r\n\tsubscribe();\r\n}, 3000);\r\n\r\nsetTimeout(() => {\r\n\tsubscribe();\r\n}, 4000);\r\n```\r\n\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nAny of these options could be considered an expected behavior:\r\n* Everything just works™, both subscriptions receive notification from that channel and no error is raised\r\n* The second `subscription.create(...)` raises some kind of error, notifying that the channel is already connected\r\n* The second `subscription.create(...)` returns the same instance of Subscription and writes a `console.warning` in console\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nThe second subscriptions triggers a connection loop.\r\n\r\nExample logs with `ActionCable.logger.enabled = true`.\r\n\r\n```\r\n[ActionCable] Opening WebSocket, current state is null, subprotocols: actioncable-v1-json,actioncable-unsupported 1660037219747\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] ConnectionMonitor started. stale threshold = 6 s 1660037219748\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] WebSocket onopen event, using 'actioncable-v1-json' subprotocol 1660037219758\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] ConnectionMonitor recorded connect 1660037219759\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor guaranteeing {\"channel\":\"ArticleChannel\"} 1660037219760\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] Subscription confirmed {\"channel\":\"ArticleChannel\"} 1660037219762\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor forgetting {\"channel\":\"ArticleChannel\"} 1660037219762\r\narticle_channel-b29f3f7bf31169dfadd26c7747a46706d4992a1fd842de8268f206c5f0a0fe45.js:6 connected\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor guaranteeing {\"channel\":\"ArticleChannel\"} 1660037220744\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221248\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221248\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n... and so on, forever...\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 3.1\r\n\r\n### Possible solutions\r\nThis issue happens because the identifier of both subscriptions is the same. Since Rails (ActionCable) doesn't answer to any subsequential command \"subscribe\" from the same client (in this case: `{\"command\":\"subscribe\",\"identifier\":\"{\\\"channel\\\":\\\"ArticleChannel\\\"}\"}`), the `SubscriptionGuarantor` considers the connection failed and [retries to connect after 500ms](https://github.com/rails/rails/blob/8994f09dd2f6ae363e74d8ee3b24700d9db94a16/actioncable/app/assets/javascripts/actioncable.esm.js#L351).\r\n\r\nI see various options to fix this:\r\n* Raise an exception when trying to create a subscription with the same identifier\r\n* Add a random/uuid to the identifier when connecting, so two connection would not share the same identifier? (I've already tested it, and it seems to fix)\r\n\r\nWould you accept a PR from me regarding this?","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45794/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45794/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45791","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45791/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45791/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45791/events","html_url":"https://github.com/rails/rails/issues/45791","id":1332570977,"node_id":"I_kwDNIULOT21rYQ","number":45791,"title":"Google::Apis::ClientError raised when using ActiveStorage to generate signed URLs to access a file in a GCS bucket with GKE Workload Identity","user":{"login":"danielyazbek","id":18390164,"node_id":"MDQ6VXNlcjE4MzkwMTY0","avatar_url":"https://avatars.githubusercontent.com/u/18390164?v=4","gravatar_id":"","url":"https://api.github.com/users/danielyazbek","html_url":"https://github.com/danielyazbek","followers_url":"https://api.github.com/users/danielyazbek/followers","following_url":"https://api.github.com/users/danielyazbek/following{/other_user}","gists_url":"https://api.github.com/users/danielyazbek/gists{/gist_id}","starred_url":"https://api.github.com/users/danielyazbek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielyazbek/subscriptions","organizations_url":"https://api.github.com/users/danielyazbek/orgs","repos_url":"https://api.github.com/users/danielyazbek/repos","events_url":"https://api.github.com/users/danielyazbek/events{/privacy}","received_events_url":"https://api.github.com/users/danielyazbek/received_events","type":"User","site_admin":false},"labels":[{"id":664533972,"node_id":"MDU6TGFiZWw2NjQ1MzM5NzI=","url":"https://api.github.com/repos/rails/rails/labels/activestorage","name":"activestorage","color":"bfd4f2","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-09T01:05:08Z","updated_at":"2022-08-09T15:53:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nConfigure ActiveStorage with GKE Workload identity (as documented [here](https://edgeguides.rubyonrails.org/active_storage_overview.html#google-cloud-storage-service)):\r\n\r\n```ruby\r\ngoogle:\r\n  service: GCS\r\n  iam: true\r\n  project: <%= ENV['ACTIVE_STORAGE_PROJECT'] %>\r\n  bucket: <%= ENV['ACTIVE_STORAGE_BUCKET'] %>\r\n```\r\n\r\nDefine a class:\r\n```ruby\r\nclass Transaction < ApplicationRecord\r\n  has_one_attached :csv_report\r\nend\r\n```\r\n\r\nWrite something to ActiveStorage:\r\n```ruby\r\nt = Transaction.create\r\nt.csv_report.attach(io: StringIO.new(\"A,B,C\"), filename: 'test.csv')\r\n```\r\n\r\nGenerate a Signed URL\r\n```ruby\r\nRails.application.routes.url_helpers.rails_blob_url(Transaction.last.csv_report, disposition: 'attachment')\r\n```\r\n\r\nPaste the generated URL into a browser\r\n\r\n### Expected behavior\r\nActiveRecord provides the attachment\r\n\r\n### Actual behavior\r\nError is raised:\r\n\r\n```\r\nGoogle::Apis::ClientError (Invalid request):\r\ngems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:236:in `check_status': Invalid request (Google::Apis::ClientError)\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/api_command.rb:134:in `check_status'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:199:in `process_response'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:318:in `execute_once'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:118:in `block (2 levels) in execute'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:61:in `block in retriable'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `times'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `retriable'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:115:in `block in execute'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:61:in `block in retriable'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `times'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `retriable'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:105:in `execute'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/base_service.rb:397:in `execute_or_queue_command'\r\n    from gems/google-apis-iamcredentials_v1-0.13.0/lib/google/apis/iamcredentials_v1/service.rb:158:in `sign_service_account_blob'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service/gcs_service.rb:232:in `block in signer'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file/signer_v2.rb:135:in `generate_signature'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file/signer_v2.rb:128:in `signed_url'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file.rb:1801:in `signed_url'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service/gcs_service.rb:160:in `private_url'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:123:in `block in url'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications/instrumenter.rb:24:in `instrument'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications.rb:206:in `instrument'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:163:in `instrument'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:118:in `url'\r\n    from gems/activestorage-7.0.3.1models/active_storage/blob.rb:217:in `url'\r\n    from gems/activestorage-7.0.3.1controllers/active_storage/blobs/redirect_controller.rb:14:in `show'\r\n```\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 3.1.2\r\n\r\n**google-cloud-storage gem version:** 1.38.0\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45791/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45791/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45778","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45778/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45778/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45778/events","html_url":"https://github.com/rails/rails/issues/45778","id":1330360134,"node_id":"I_kwDNIULOT0uvRg","number":45778,"title":"ActiveStorage attachments are lost when casting using Becomes","user":{"login":"markedmondson","id":1653699,"node_id":"MDQ6VXNlcjE2NTM2OTk=","avatar_url":"https://avatars.githubusercontent.com/u/1653699?v=4","gravatar_id":"","url":"https://api.github.com/users/markedmondson","html_url":"https://github.com/markedmondson","followers_url":"https://api.github.com/users/markedmondson/followers","following_url":"https://api.github.com/users/markedmondson/following{/other_user}","gists_url":"https://api.github.com/users/markedmondson/gists{/gist_id}","starred_url":"https://api.github.com/users/markedmondson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markedmondson/subscriptions","organizations_url":"https://api.github.com/users/markedmondson/orgs","repos_url":"https://api.github.com/users/markedmondson/repos","events_url":"https://api.github.com/users/markedmondson/events{/privacy}","received_events_url":"https://api.github.com/users/markedmondson/received_events","type":"User","site_admin":false},"labels":[{"id":664533972,"node_id":"MDU6TGFiZWw2NjQ1MzM5NzI=","url":"https://api.github.com/repos/rails/rails/labels/activestorage","name":"activestorage","color":"bfd4f2","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-05T20:19:16Z","updated_at":"2022-08-09T18:05:34Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\nCreate an ActiveRecord model with an ActiveStorage relation. Initialize and add the associated attachment. Cast the object to another subclassed model, the associated attachment is lost.\r\n\r\n```ruby\r\nunless File.exist?('Gemfile')\r\n    File.write('Gemfile', <<-GEMFILE)\r\n    source 'https://rubygems.org'\r\n    gem 'rails', '~> 6.1'\r\n    gem 'sqlite3'\r\n    GEMFILE\r\n\r\n    system 'bundle'\r\nend\r\n\r\nrequire 'bundler'\r\nBundler.setup(:default)\r\n\r\nrequire 'active_record'\r\nrequire 'active_storage/engine'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  config.hosts << 'example.org'\r\n  config.eager_load = false\r\n  config.session_store :cookie_store, key: 'cookie_store_key'\r\n  secrets.secret_key_base = 'secret_key_base'\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  config.active_storage.service = :local\r\n  config.active_storage.service_configurations = {\r\n    local: {\r\n      root: Dir.tmpdir,\r\n      service: 'Disk'\r\n    }\r\n  }\r\nend\r\n\r\nENV['DATABASE_URL'] = 'sqlite3::memory:'\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\nRails.application.initialize!\r\n\r\nrequire ActiveStorage::Engine.root.join('db/migrate/20170806125915_create_active_storage_tables.rb').to_s\r\n\r\nActiveRecord::Schema.define do\r\n  CreateActiveStorageTables.new.change\r\n\r\n  create_table :posts do |t|\r\n    t.string :title\r\n    t.string :text\r\n  end\r\n\r\n  create_table :comments do |t|\r\n    t.belongs_to :post\r\n    t.string :text\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post\r\n  has_one_attached :image\r\nend\r\n\r\nclass ModeratedComment < Comment; end\r\n\r\nclass BugTest < Minitest::Test\r\n  def setup\r\n    @post = Post.create(title: 'Post', text: 'Welcome')\r\n  end\r\n\r\n  def test_association\r\n    comment = @post.comments.new(text: 'I do not like this')\r\n\r\n    moderated_comment = comment.becomes(ModeratedComment)\r\n\r\n    assert_equal @post, moderated_comment.post # Pass\r\n  end\r\n\r\n  def test_attachment\r\n    file = ActiveStorage::Blob.create_and_upload!(\r\n      content_type: \"image/png\",\r\n      filename: \"image.png\",\r\n      io: ::StringIO.new(\"png\"),\r\n    )\r\n    comment = @post.comments.new(text: 'I do not like this', image: file)\r\n\r\n    moderated_comment = comment.becomes(ModeratedComment)\r\n\r\n    assert moderated_comment.image.attached? # Fail\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nWhen casting an ActiveRecord to another model, I expect the associations to be copied thus I expect attached ActiveStorage association assets to be copied.\r\n\r\n### Actual behavior\r\nPreviously attached ActiveStorage associated objects are lost on the original object.\r\n\r\n### System configuration\r\n**Rails version**: 6.1.6.1\r\n\r\n**Ruby version**: 3.0.4\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45778/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45778/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45775","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45775/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45775/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45775/events","html_url":"https://github.com/rails/rails/issues/45775","id":1330225377,"node_id":"I_kwDNIULOT0mg4Q","number":45775,"title":"Uniqueness validation on association does not use the correct primary key","user":{"login":"mikeletscher","id":6666411,"node_id":"MDQ6VXNlcjY2NjY0MTE=","avatar_url":"https://avatars.githubusercontent.com/u/6666411?v=4","gravatar_id":"","url":"https://api.github.com/users/mikeletscher","html_url":"https://github.com/mikeletscher","followers_url":"https://api.github.com/users/mikeletscher/followers","following_url":"https://api.github.com/users/mikeletscher/following{/other_user}","gists_url":"https://api.github.com/users/mikeletscher/gists{/gist_id}","starred_url":"https://api.github.com/users/mikeletscher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikeletscher/subscriptions","organizations_url":"https://api.github.com/users/mikeletscher/orgs","repos_url":"https://api.github.com/users/mikeletscher/repos","events_url":"https://api.github.com/users/mikeletscher/events{/privacy}","received_events_url":"https://api.github.com/users/mikeletscher/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-05T18:10:22Z","updated_at":"2022-08-09T14:52:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nI'm not _entirely_ sure if this is considered a bug, or intended behavior that's not well-documented for `uniqueness` validations on associations.\r\n\r\nI'm happy to help improve the documentation on this if that would be the most helpful way forward, or if this _is_ considered a bug, I can take a stab at a PR. \r\n\r\nIt looks like the issue is that `build_relation` on the uniqueness validator calls [`bind_attribute` on `ActiveRecord::Relation`](https://github.com/rails/rails/blob/408d061a80a49878ad26b305616ed9ba88ee1411/activerecord/lib/active_record/relation.rb#L45), which properly takes into account the reflection's foreign_key, but not primary key if it's been overridden. \r\n\r\nHere's a test that reproduces the issue:\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire 'bundler/inline'\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem 'activerecord', '~> 7.0.3.1'\r\n  gem 'sqlite3'\r\nend\r\n\r\nrequire 'active_record'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(\r\n  adapter: 'sqlite3',\r\n  database: ':memory:'\r\n)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :prescriptions, force: true do |t|\r\n    t.string :rx_number\r\n  end\r\n\r\n  create_table :fills, force: true do |t|\r\n    t.string :rx_number\r\n  end\r\nend\r\n\r\nclass Prescription < ActiveRecord::Base\r\n  has_many :fills, foreign_key: :rx_number, primary_key: :rx_number\r\nend\r\n\r\nclass Fill < ActiveRecord::Base\r\n  belongs_to :prescription, foreign_key: :rx_number, primary_key: :rx_number\r\n\r\n  validates :prescription, uniqueness: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_fill_unique_by_rx_number\r\n    Fill.create!(rx_number: '1234')\r\n    prescription = Prescription.create!(rx_number: '1234')\r\n    new_fill = prescription.fills.new\r\n    refute new_fill.save\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe uniqueness validation query would use the `rx_number` value of the `Prescription` to query for an existing `Fill` since that is what is set as the associations `primary_key`. \r\n\r\n### Actual behavior\r\nThe uniqueness validation query uses the `id` value of the `Prescription` to query for existing fills, disregarding the association's overridden `primary_key`.\r\n\r\nThis test passes if I patch bind_attribute to read the primary key from the reflection instead of directly from the reflection's klass:\r\n\r\n```ruby\r\nmodule ActiveRecord\r\n  # = Active Record \\Relation\r\n  class Relation\r\n    def bind_attribute(name, value) # :nodoc:\r\n      if reflection = klass._reflect_on_association(name)\r\n        name = reflection.foreign_key\r\n        primary_key = reflection.association_primary_key || reflection.klass.primary_key\r\n        value = value.read_attribute(primary_key) unless value.nil?\r\n      end\r\n\r\n      attr = table[name]\r\n      bind = predicate_builder.build_bind_attribute(attr.name, value)\r\n      yield attr, bind\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nWe were able to work around this by adding the uniqueness validation to the `rx_number` attribute instead of the association. If this is the desired way to handle this, I can open a PR to add a note about this to the docs, as it took us by surprise that validation on the association wouldn't use the defined key to get the value to query.\r\n\r\n### System configuration\r\n**Rails version**: `7.0.3.1`\r\n\r\n**Ruby version**: `3.1.2`\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45775/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45775/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45766","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45766/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45766/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45766/events","html_url":"https://github.com/rails/rails/issues/45766","id":1329650798,"node_id":"I_kwDNIULOT0Dcbg","number":45766,"title":"Active Model Dirty: attribute_changed? options (from/to) do not accept symbol","user":{"login":"thomasvanholder","id":36309895,"node_id":"MDQ6VXNlcjM2MzA5ODk1","avatar_url":"https://avatars.githubusercontent.com/u/36309895?v=4","gravatar_id":"","url":"https://api.github.com/users/thomasvanholder","html_url":"https://github.com/thomasvanholder","followers_url":"https://api.github.com/users/thomasvanholder/followers","following_url":"https://api.github.com/users/thomasvanholder/following{/other_user}","gists_url":"https://api.github.com/users/thomasvanholder/gists{/gist_id}","starred_url":"https://api.github.com/users/thomasvanholder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomasvanholder/subscriptions","organizations_url":"https://api.github.com/users/thomasvanholder/orgs","repos_url":"https://api.github.com/users/thomasvanholder/repos","events_url":"https://api.github.com/users/thomasvanholder/events{/privacy}","received_events_url":"https://api.github.com/users/thomasvanholder/received_events","type":"User","site_admin":false},"labels":[{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-08-05T08:54:51Z","updated_at":"2022-08-07T20:25:55Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nThe `attribute_changed?` receives optional options, such as `from` and `to`. Each option key is passed a value. Only string values are accepted, and symbols are not recognized. This is inconsistent behavior as updating a column using the `update` method does accept both a string and a symbol.\r\n \r\n Source code: [attribute_changed?](https://github.com/rails/rails/blob/04972d9b9ef60796dc8f0917817b5392d61fcf09/activemodel/lib/active_model/dirty.rb#L178) \r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"debug\"\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.column :status, :integer, default: 0\r\n    t.date :review_date\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  enum :status, {draft: 0, published: 1}\r\n\r\n  before_update :set_review_date\r\n\r\n  def set_review_date\r\n    # when \"published\" is set as a string, the test correcty passes.\r\n    if status_changed?(to: :published)\r\n      self.review_date = Date.today\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_set_status\r\n    post = Post.create!\r\n    post.update(status: :published)\r\n\r\n    assert_equal \"published\", post.status\r\n  end\r\n\r\n  def test_sets_review_date\r\n    post = Post.create!\r\n    post.published!\r\n\r\n    assert_equal \"published\", post.status\r\n    assert_equal Date.today, post.review_date\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe value of the optional arguments `from` and `to` accepts both a string or symbol.\r\n\r\n### Actual behavior\r\nWhen options, such as `from` and `to` are passed to the [attribute_changed?](https://github.com/rails/rails/blob/04972d9b9ef60796dc8f0917817b5392d61fcf09/activemodel/lib/active_model/dirty.rb#L178) method the arguments are not recognized when passed as a symbol.\r\n\r\n### System configuration\r\n**Rails version**: `Rails 7.0.3`\r\n\r\n**Ruby version**: `ruby 3.1.2`\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45766/reactions","total_count":2,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45766/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45758","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45758/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45758/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45758/events","html_url":"https://github.com/rails/rails/issues/45758","id":1327892229,"node_id":"I_kwDNIULOTyYHBQ","number":45758,"title":"ActiveRecord 6.1 and JSONB: Incorrect results value/type when using both arrow operator and double arrow operator in the same SELECT statement","user":{"login":"shhavel","id":1169424,"node_id":"MDQ6VXNlcjExNjk0MjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1169424?v=4","gravatar_id":"","url":"https://api.github.com/users/shhavel","html_url":"https://github.com/shhavel","followers_url":"https://api.github.com/users/shhavel/followers","following_url":"https://api.github.com/users/shhavel/following{/other_user}","gists_url":"https://api.github.com/users/shhavel/gists{/gist_id}","starred_url":"https://api.github.com/users/shhavel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shhavel/subscriptions","organizations_url":"https://api.github.com/users/shhavel/orgs","repos_url":"https://api.github.com/users/shhavel/repos","events_url":"https://api.github.com/users/shhavel/events{/privacy}","received_events_url":"https://api.github.com/users/shhavel/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-08-03T23:42:39Z","updated_at":"2022-08-05T22:26:04Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Issue Description\r\n\r\nGenerally when using JSONB operators `->` (arrow operator) and `->>` (double arrow operator) in SELECT statement, \r\nActiveRecord returns correct result types: objects for `->` operator and string for `->>` operator.\r\nBut when using both operators in the same select statement, the returned results may have an unexpected type or be `nil`.\r\n\r\n### Steps to reproduce with Expected behaviour in tests and Actual behaviour in comments\r\n\r\n```ruby\r\n# file: activerecord_6_1_jsonb_test.rb\r\n# run: ruby activerecord_6_1_jsonb_test.rb\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"activerecord\", \"6.1.6.1\" # the same behaviour for version \"7.0.3.1\"\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\npg_opts = {adapter: \"postgresql\", database: \"jsonb_activerecord_issue\"}\r\nbegin\r\n  ActiveRecord::Base.establish_connection(pg_opts.except(:database))\r\n  ActiveRecord::Base.connection.create_database(pg_opts[:database])\r\n  puts \"Database #{pg_opts[:database]} was created.\"\r\nrescue => ActiveRecord::DatabaseAlreadyExists\r\n  puts \"Database #{pg_opts[:database]} alredy exists.\"\r\nend\r\nActiveRecord::Base.establish_connection(pg_opts)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :entries, force: true do |t|\r\n    t.jsonb :value\r\n  end\r\nend\r\n\r\nclass Entry < ActiveRecord::Base\r\nend\r\nEntry.create(value: {a: \"a\", b: \"b\", c: {}})\r\n\r\nclass BugTest < Minitest::Test\r\n  # passed\r\n  def test_jsonb_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->'a', value->'b'\"))\r\n    assert_equal [[{}, \"b\"]], Entry.pluck(Arel.sql(\"value->'c', value->'b'\"))\r\n  end\r\n\r\n  # passed\r\n  def test_jsonb_double_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'a', value->>'b'\"))\r\n    assert_equal [[\"{}\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'c', value->>'b'\"))\r\n  end\r\n\r\n  # failed (this test results are differ in activerecord 6.0)\r\n  def test_jsonb_arrow_operator_and_double_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->'a', value->>'b'\")) # Actual [[\"a\", nil]]\r\n    assert_equal [[{}, \"b\"]], Entry.pluck(Arel.sql(\"value->'c', value->>'b'\")) # Actual [[{}, nil]]\r\n  end\r\n\r\n  # failed\r\n  def test_jsonb_double_arrow_operator_and_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'a', value->'b'\")) # Actual [[nil, \"b\"]]\r\n    assert_equal [[\"{}\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'c', value->'b'\")) # Actual [[{}, \"b\"]]\r\n  end\r\nend\r\n```\r\n\r\n### PostgreSQL results \r\n\r\n```sql\r\nSELECT\r\n  pg_typeof(value->'a'), value->'a',\r\n  pg_typeof(value->'b'), value->'b',\r\n  pg_typeof(value->'c'), value->'c',\r\n  pg_typeof(value->>'a'), value->>'a',\r\n  pg_typeof(value->>'b'), value->>'b',\r\n  pg_typeof(value->>'c'), value->>'c'\r\nFROM \"entries\";\r\n\r\n pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column?\r\n-----------+----------+-----------+----------+-----------+----------+-----------+----------+-----------+----------+-----------+----------\r\n jsonb     | \"a\"      | jsonb     | \"b\"      | jsonb     | {}       | text      | a        | text      | b        | text      | {}\r\n(1 row)\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 6.1.6.1\r\n\r\n**Ruby version**: 3.1.0\r\n\r\n### Similar issue in different versions of ActiveRecord\r\n\r\nThere is a similar issue but with slightly different behaviour in AR 6.0. Created another issue: #45757\r\n\r\nPlease confirm or comment on the expected behaviour.\r\nThank you.\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45758/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45758/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45750","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45750/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45750/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45750/events","html_url":"https://github.com/rails/rails/issues/45750","id":1327484205,"node_id":"I_kwDNIULOTx_NLQ","number":45750,"title":"Running `rails test` doesn't automatically load any custom tasks under `lib/tasks`","user":{"login":"onlynone","id":833690,"node_id":"MDQ6VXNlcjgzMzY5MA==","avatar_url":"https://avatars.githubusercontent.com/u/833690?v=4","gravatar_id":"","url":"https://api.github.com/users/onlynone","html_url":"https://github.com/onlynone","followers_url":"https://api.github.com/users/onlynone/followers","following_url":"https://api.github.com/users/onlynone/following{/other_user}","gists_url":"https://api.github.com/users/onlynone/gists{/gist_id}","starred_url":"https://api.github.com/users/onlynone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/onlynone/subscriptions","organizations_url":"https://api.github.com/users/onlynone/orgs","repos_url":"https://api.github.com/users/onlynone/repos","events_url":"https://api.github.com/users/onlynone/events{/privacy}","received_events_url":"https://api.github.com/users/onlynone/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-03T16:16:38Z","updated_at":"2022-08-03T18:09:40Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n1. Create the file `lib/tasks/test.rake` with the content:\r\n```ruby\r\nENV[\"test.rake\"] = \"yes\"\r\ntask :custom_task do\r\n  ENV[\"custom_task\"] = \"yes\"\r\nend\r\n\r\ntask :test => [:custom_task]\r\n```\r\n2. Create a test file at `test/unit/rails_test_test.rb` with the content:\r\n```ruby\r\nclass RailsTestTest < ActiveSupport::TestCase\r\n  test \"test.rake is in the environment\" do\r\n    assert_equal('yes', ENV['test.rake'])\r\n  end\r\n\r\n  test \"custom_task is in the environment\" do\r\n    assert_equal('yes', ENV['custom_task'])\r\n  end\r\nend\r\n```\r\n3. Run `bin/rails test test/unit/rails_test_test.rb`\r\n4. Run `bin/rake test test/unit/rails_test_test.rb`\r\n\r\n### Expected behavior\r\nBoth `rails test` and `rake test` should succeed.\r\n\r\n### Actual behavior\r\nRunning the tests with `bin/rake` succeeds with the output:\r\n```\r\nbin/rake test test/unit/rails_test_test.rb\r\nRunning via Spring preloader in process 59092\r\nRun options: --seed 6948\r\n\r\n# Running:\r\n\r\n..\r\n\r\nFinished in 0.000943s, 2120.8907 runs/s, 2120.8907 assertions/s.\r\n2 runs, 2 assertions, 0 failures, 0 errors, 0 skips\r\n```\r\n\r\nWhile running with `bin/rails` fails with the output:\r\n\r\n```\r\nRunning via Spring preloader in process 58735\r\nRun options: --seed 33633\r\n\r\n# Running:\r\n\r\nF\r\n\r\nFailure:\r\nRailsTestTest#test_custom_task_is_in_the_environment [/Users/steven/projects/rails_test_tasks/test/unit/rails_test_test.rb:7]:\r\nExpected: \"yes\"\r\n  Actual: nil\r\n\r\n\r\nrails test test/unit/rails_test_test.rb:6\r\n\r\nF\r\n\r\nFailure:\r\nRailsTestTest#test_test.rake_is_in_the_environment [/Users/steven/projects/rails_test_tasks/test/unit/rails_test_test.rb:3]:\r\nExpected: \"yes\"\r\n  Actual: nil\r\n\r\n\r\nrails test test/unit/rails_test_test.rb:2\r\n\r\n\r\n\r\nFinished in 0.001378s, 1451.3788 runs/s, 1451.3788 assertions/s.\r\n2 runs, 2 assertions, 2 failures, 0 errors, 0 skips\r\n```\r\n\r\nBecause the file `lib/tasks/test.rake` is never loaded.\r\n\r\nIt seems like rails will only end up loading custom tasks if it can't find the command being run on the command line in its own list of built-in commands. When it can't find the command, it will load the local `Rakefile` via `find_by_namespace(\"rake\").perform(full_namespace, args, config)` in `Rails::Command.invoke`. And the local `Rakefile` usually has `Rails.application.load_tasks` and that loads any custom tasks under `lib/tasks`.\r\n\r\nFor example, this happens when the `ActiveRecord` migration exec's out to call: `bin/rails db:test:prepare`. That task is apparently not a built-in rails task, so the `Rakefile` and all custom tasks *do* end up getting loaded for that one.\r\n\r\n(As an aside here, I don't fully understand the difference between the built-in rails tasks and the ones that have to be searched for via rake. I also don't understand why the migration code needs to fork a separate process to do `db:test:prepare`. That task just ends up doing `db_namespace[\"test:load\"].invoke`. Why couldn't the `db:test:prepare` tasks simply be invoked the same way in the same process?)\r\n\r\n### System configuration\r\n**Rails version**: 6.0.5\r\n\r\n**Ruby version**: 2.6.5\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45750/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45750/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45736","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45736/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45736/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45736/events","html_url":"https://github.com/rails/rails/issues/45736","id":1326221102,"node_id":"I_kwDNIULOTwyHLg","number":45736,"title":"Virtual stored columns are always nil for newly created records","user":{"login":"camiloforero","id":6606686,"node_id":"MDQ6VXNlcjY2MDY2ODY=","avatar_url":"https://avatars.githubusercontent.com/u/6606686?v=4","gravatar_id":"","url":"https://api.github.com/users/camiloforero","html_url":"https://github.com/camiloforero","followers_url":"https://api.github.com/users/camiloforero/followers","following_url":"https://api.github.com/users/camiloforero/following{/other_user}","gists_url":"https://api.github.com/users/camiloforero/gists{/gist_id}","starred_url":"https://api.github.com/users/camiloforero/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/camiloforero/subscriptions","organizations_url":"https://api.github.com/users/camiloforero/orgs","repos_url":"https://api.github.com/users/camiloforero/repos","events_url":"https://api.github.com/users/camiloforero/events{/privacy}","received_events_url":"https://api.github.com/users/camiloforero/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-02T18:09:28Z","updated_at":"2022-08-02T19:28:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nUsing postgresql:\r\n\r\nGenerate a new model with one or more columns with default values, and a virtual stored column based on those other columns\r\nCreate a new record of that model\r\nAccess the value of the virtual stored column from the newly created ActiveRecord object\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem 'pg', '~> 1.4'\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection \"postgresql:///test\"\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.integer :counter1, null: false, default: 0\r\n    t.integer :counter2, null: false, default: 0\r\n    t.virtual :counter_sum, type: :integer, as: \"counter1 + counter2\", stored: true\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_virtual_column_value_populated\r\n    post = Post.create!\r\n\r\n    assert_equal 0, post.counter_sum\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe value of the virtual column should be *something*, in this particular case, 0\r\n\r\n### Actual behavior\r\nThe value of the virtual column is `nil`. The test fails with the following output\r\n```ruby\r\n# Running:\r\n\r\nD, [2022-08-02T13:05:17.402730 #13548] DEBUG -- :   TRANSACTION (0.1ms)  BEGIN\r\nD, [2022-08-02T13:05:17.403136 #13548] DEBUG -- :   Post Create (0.6ms)  INSERT INTO \"posts\" DEFAULT VALUES RETURNING \"id\"\r\nD, [2022-08-02T13:05:17.406144 #13548] DEBUG -- :   TRANSACTION (2.6ms)  COMMIT\r\nF\r\n\r\nFailure:\r\nBugTest#test_virtual_column_value_populated [stored_bug.rb:37]:\r\nExpected: 0\r\n  Actual: nil\r\n\r\n\r\nrails test stored_bug.rb:34\r\n\r\n\r\n\r\nFinished in 0.011047s, 90.5240 runs/s, 90.5240 assertions/s.\r\n1 runs, 1 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\n### System configuration\r\n**Rails version**: edge\r\n**Ruby version**: 3.1.2\r\n**PostgreSQL version**: 14.4\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45736/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45736/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45709","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45709/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45709/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45709/events","html_url":"https://github.com/rails/rails/issues/45709","id":1323303409,"node_id":"I_kwDNIULOTuAB8Q","number":45709,"title":"Rails & can't pin JS files from Unpkg","user":{"login":"septerr","id":1094216,"node_id":"MDQ6VXNlcjEwOTQyMTY=","avatar_url":"https://avatars.githubusercontent.com/u/1094216?v=4","gravatar_id":"","url":"https://api.github.com/users/septerr","html_url":"https://github.com/septerr","followers_url":"https://api.github.com/users/septerr/followers","following_url":"https://api.github.com/users/septerr/following{/other_user}","gists_url":"https://api.github.com/users/septerr/gists{/gist_id}","starred_url":"https://api.github.com/users/septerr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/septerr/subscriptions","organizations_url":"https://api.github.com/users/septerr/orgs","repos_url":"https://api.github.com/users/septerr/repos","events_url":"https://api.github.com/users/septerr/events{/privacy}","received_events_url":"https://api.github.com/users/septerr/received_events","type":"User","site_admin":false},"labels":[{"id":131864,"node_id":"MDU6TGFiZWwxMzE4NjQ=","url":"https://api.github.com/repos/rails/rails/labels/third%20party%20issue","name":"third party issue","color":"02d7e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-07-30T21:44:43Z","updated_at":"2022-08-02T18:08:34Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nIn a new Rails & app, try to pin a package from Unpkg CDN:\r\n\r\n```\r\n./bin/importmap pin @walletconnect/web3-provider@1.7.8 --from unpkg\r\n```\r\n\r\nYou get following response:\r\n\r\n```\r\nCouldn't find any packages in [\"@walletconnect/web3-provider@1.7.8\"] on unpkg\r\n```\r\nBut the file does exist on unpkg: https://unpkg.com/@walletconnect/web3-provider@1.7.8/dist/umd/index.min.js\r\n\r\nAfter adding some breakpoints in `.rbenv/versions/3.1.0/lib/ruby/gems/3.1.0/gems/importmap-rails-1.1.5/lib/importmap/packager.rb`, saw that the CDN post request and response are as follows:\r\n\r\nPost URL: \r\n```\r\n<URI::HTTPS https://api.jspm.io/generate>\r\n```\r\nPost Body:\r\n```\r\n \"{\\\"install\\\":[\\\"@walletconnect/web3-provider@1.7.8\\\"],\\\"flattenScope\\\":true,\\\"env\\\":[\\\"browser\\\",\\\"module\\\",\\\"production\\\"],\\\"provider\\\":\\\"unpkg\\\"}\"\r\n```\r\n\r\nPost Response:\r\n```\r\n<Net::HTTPUnauthorized 401 Unauthorized readbody=true>\r\n```\r\n\r\n### Expected behavior\r\nExpected the files from unpkg to be pinned.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nMisleading error that files don't exist on unpkg.\r\n\r\n### System configuration\r\n**Rails version**:\r\nRails 7.0.3.1\r\n\r\n**Ruby version**:\r\nruby 3.1.0p0 (2021-12-25 revision fb4df44d16) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45709/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45709/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45691","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45691/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45691/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45691/events","html_url":"https://github.com/rails/rails/issues/45691","id":1322122058,"node_id":"I_kwDNIULOTs37Sg","number":45691,"title":"ActionMailer fails to create correct multipart message with rfc822 attachment","user":{"login":"der-flo","id":35431,"node_id":"MDQ6VXNlcjM1NDMx","avatar_url":"https://avatars.githubusercontent.com/u/35431?v=4","gravatar_id":"","url":"https://api.github.com/users/der-flo","html_url":"https://github.com/der-flo","followers_url":"https://api.github.com/users/der-flo/followers","following_url":"https://api.github.com/users/der-flo/following{/other_user}","gists_url":"https://api.github.com/users/der-flo/gists{/gist_id}","starred_url":"https://api.github.com/users/der-flo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/der-flo/subscriptions","organizations_url":"https://api.github.com/users/der-flo/orgs","repos_url":"https://api.github.com/users/der-flo/repos","events_url":"https://api.github.com/users/der-flo/events{/privacy}","received_events_url":"https://api.github.com/users/der-flo/received_events","type":"User","site_admin":false},"labels":[{"id":107188,"node_id":"MDU6TGFiZWwxMDcxODg=","url":"https://api.github.com/repos/rails/rails/labels/actionmailer","name":"actionmailer","color":"8B00FC","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-29T11:19:00Z","updated_at":"2022-08-02T19:46:17Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I cannot re-open #42849 so I create a new issue…\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire 'bundler/inline'\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n  gem 'rails', github: 'rails/rails', branch: 'main'\r\nend\r\n\r\nrequire 'minitest/autorun'\r\nrequire 'action_mailer/railtie'\r\n\r\nclass TestMailer < ActionMailer::Base\r\n  def main\r\n    message_to_attach =  <<~MAIL.gsub(/\\n/, \"\\r\\n\")\r\n      Message-ID: <12345@foo.example>\r\n      Subject: Test\r\n      From: test1@foo.example\r\n      To: test2@foo.example\r\n      \r\n      hello world\r\n    MAIL\r\n    attachments['test.eml'] = {\r\n      mime_type: params[:mime_type],\r\n      content: message_to_attach\r\n    }\r\n\r\n    mail(from: 'test3@foo.example', to: 'test4@foo.example', subject: 'Test outer') do |format|\r\n      format.text { \"outer text - #{params[:mime_type]} attachment\" }\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_with_plain_mime_type\r\n    message = TestMailer.with(mime_type: 'text/plain').main\r\n    assert_equal message.mime_type, 'multipart/mixed'\r\n  end\r\n\r\n  def test_with_rfc822_mime_type\r\n    message = TestMailer.with(mime_type: 'message/rfc822').main\r\n    assert_equal message.mime_type, 'multipart/mixed'\r\n  end\r\nend\r\n```\r\n\r\nThe second test fails, the message object is rendered as follows:\r\n```\r\nDate: Fri, 23 Jul 2021 13:59:19 +0200\r\nFrom: test3@foo.example\r\nTo: test4@foo.example\r\nMessage-ID: <60faaf1738a02_14fbd98-3fb@flo.adigi.ai.mail>\r\nSubject: Test outer\r\nMime-Version: 1.0\r\nContent-Type: text/plain;\r\n boundary=\"--==_mimepart_60faaf1738008_14fbd98-484\";\r\n charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\n\r\n\r\n----==_mimepart_60faaf1738008_14fbd98-484\r\nContent-Type: text/plain;\r\n charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\n\r\nouter text - message/rfc822 attachment\r\n----==_mimepart_60faaf1738008_14fbd98-484\r\nContent-Type: message/rfc822\r\nContent-Transfer-Encoding: \r\nContent-Disposition: attachment;\r\n filename=test.eml\r\nContent-ID: <60faaf1739102_14fbd98-2b@flo.adigi.ai.mail>\r\n\r\nMessage-ID: <12345@foo.example>\r\nSubject: Test\r\nFrom: test1@foo.example\r\nTo: test2@foo.example\r\n\r\nhello world\r\n\r\n----==_mimepart_60faaf1738008_14fbd98-484--\r\n\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe `message.mime_type` is `multipart/mixed` in both test cases. ActionMailer handles attachments in the way it is described in https://guides.rubyonrails.org/action_mailer_basics.html#adding-attachments describes.\r\n\r\n### Actual behavior\r\n\r\nWhen attaching a `message/rfc822` - an email message - the generated mail parts are not nested correctly, the outer `multipart/mixed` is missing.\r\n\r\nPerhaps this behaviour is caused by the [special handling](https://github.com/mikel/mail/blob/master/lib/mail/attachments_list.rb#L9) of such attachments in the `mail` gem.\r\n\r\n\r\n### System configuration\r\n**Rails version**: main\r\n\r\n**Ruby version**: 3.0.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45691/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":1,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45691/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45640","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45640/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45640/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45640/events","html_url":"https://github.com/rails/rails/issues/45640","id":1315219867,"node_id":"I_kwDNIULOTmSpmw","number":45640,"title":"ActiveModel::Dirty changes not reset properly when using store_accessor (tested with postgres)","user":{"login":"vccoffey","id":59817868,"node_id":"MDQ6VXNlcjU5ODE3ODY4","avatar_url":"https://avatars.githubusercontent.com/u/59817868?v=4","gravatar_id":"","url":"https://api.github.com/users/vccoffey","html_url":"https://github.com/vccoffey","followers_url":"https://api.github.com/users/vccoffey/followers","following_url":"https://api.github.com/users/vccoffey/following{/other_user}","gists_url":"https://api.github.com/users/vccoffey/gists{/gist_id}","starred_url":"https://api.github.com/users/vccoffey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vccoffey/subscriptions","organizations_url":"https://api.github.com/users/vccoffey/orgs","repos_url":"https://api.github.com/users/vccoffey/repos","events_url":"https://api.github.com/users/vccoffey/events{/privacy}","received_events_url":"https://api.github.com/users/vccoffey/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-07-22T16:44:57Z","updated_at":"2022-07-23T17:51:49Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nUsing PostgreSQL (pg) database\r\nGiven a model with a jsonb column\r\n```\r\nclass CreateTestModels < ActiveRecord::Migration[6.1]\r\n  def change\r\n    create_table :test_models do |t|\r\n      t.jsonb :jsonb_hash_attr\r\n      t.timestamps\r\n    end\r\n  end\r\nend\r\n```\r\nusing store_accessor\r\n```\r\nclass TestModel < ApplicationRecord\r\n  store_accessor :jsonb_hash_attr, :key, prefix: true\r\nend\r\n```\r\n\r\n### Expected behavior\r\nBoth tests pass:\r\n```\r\nrequire \"test_helper\"\r\nclass TestModelTest < ActiveSupport::TestCase\r\n  test \"does not show changes for a jsonb attribute if changed back to original value\" do\r\n    tm = TestModel.create jsonb_hash_attr: { \"key\" => \"foo\" }\r\n    tm.jsonb_hash_attr = { \"key\" => \"bar\" }\r\n    assert_equal tm.jsonb_hash_attr_change, [{ \"key\" => \"foo\" }, { \"key\" => \"bar\" }]\r\n    tm.jsonb_hash_attr = { \"key\" => \"foo\" }\r\n    assert_equal tm.jsonb_hash_attr_change, nil\r\n  end\r\n\r\n  test \"does not show changes for a jsonb attribute if changed back to original value using store_accessor\" do\r\n    tm = TestModel.create jsonb_hash_attr: { \"key\" => \"foo\" }\r\n    tm.jsonb_hash_attr_key = \"bar\"\r\n    assert_equal tm.jsonb_hash_attr_change, [{ \"key\" => \"foo\" }, { \"key\" => \"bar\" }]\r\n    tm.jsonb_hash_attr_key = \"foo\"\r\n    assert_equal tm.jsonb_hash_attr_change, nil\r\n  end\r\nend\r\n```\r\n### Actual behavior\r\nThe second test fails\r\n```\r\n--- expected\r\n+++ actual\r\n-[{\"key\"=>\"foo\"}, {\"key\"=>\"foo\"}]\r\n+nil\r\n```\r\n### System configuration\r\n**Rails version**:\r\ntested with 6.1.6.1 and 7.0.3.1\r\n\r\n**Ruby version**: 3.1.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45640/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45640/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45639","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45639/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45639/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45639/events","html_url":"https://github.com/rails/rails/issues/45639","id":1314984267,"node_id":"I_kwDNIULOTmERSw","number":45639,"title":"Explicitly touch on save","user":{"login":"schmijos","id":245443,"node_id":"MDQ6VXNlcjI0NTQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/245443?v=4","gravatar_id":"","url":"https://api.github.com/users/schmijos","html_url":"https://github.com/schmijos","followers_url":"https://api.github.com/users/schmijos/followers","following_url":"https://api.github.com/users/schmijos/following{/other_user}","gists_url":"https://api.github.com/users/schmijos/gists{/gist_id}","starred_url":"https://api.github.com/users/schmijos/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/schmijos/subscriptions","organizations_url":"https://api.github.com/users/schmijos/orgs","repos_url":"https://api.github.com/users/schmijos/repos","events_url":"https://api.github.com/users/schmijos/events{/privacy}","received_events_url":"https://api.github.com/users/schmijos/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-22T13:05:14Z","updated_at":"2022-07-22T20:31:00Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  ruby \"3.1.0\"\r\n  gem \"rails\", \"7.0.3.1\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.timestamps\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_save_touch\r\n    Post.create!(updated_at: 3.days.ago)\r\n    Post.last.save!(touch: true)\r\n\r\n    assert_in_delta 0.seconds.ago.to_i, Post.last.updated_at.to_i, 5\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nIf I tell _ActiveRecord_ to explicitly \"touch\", then I would expect it to update the timestamps.\r\n\r\n### Actual behavior\r\n`save` never hits the database if no attribute changed.\r\n\r\n### System configuration\r\n**Rails version**: >= 3.0.0, < 8","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45639/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45639/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45638","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45638/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45638/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45638/events","html_url":"https://github.com/rails/rails/issues/45638","id":1314662755,"node_id":"I_kwDNIULOTlwpYw","number":45638,"title":"CSRF Token Expiry issue.","user":{"login":"MBM1607","id":47133639,"node_id":"MDQ6VXNlcjQ3MTMzNjM5","avatar_url":"https://avatars.githubusercontent.com/u/47133639?v=4","gravatar_id":"","url":"https://api.github.com/users/MBM1607","html_url":"https://github.com/MBM1607","followers_url":"https://api.github.com/users/MBM1607/followers","following_url":"https://api.github.com/users/MBM1607/following{/other_user}","gists_url":"https://api.github.com/users/MBM1607/gists{/gist_id}","starred_url":"https://api.github.com/users/MBM1607/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MBM1607/subscriptions","organizations_url":"https://api.github.com/users/MBM1607/orgs","repos_url":"https://api.github.com/users/MBM1607/repos","events_url":"https://api.github.com/users/MBM1607/events{/privacy}","received_events_url":"https://api.github.com/users/MBM1607/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-22T08:38:19Z","updated_at":"2022-07-22T08:40:22Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"We are encountering an issue with form submission in production environment.\r\nThe criteria seems to be exceptionally rare, I have been unable to replicate the issue. \r\n\r\nCSRF token is created and validated just fine.\r\n\r\n### Timing\r\n\r\nIssue seems to occur only when users wait more than 2 hours on a form before submitting, but doing this we have been unable to reproduce as well.\r\n\r\n### Logs\r\n```\r\nW, [2022-07-14T15:19:37.535241 #2433]  WARN -- : Can't verify CSRF token authenticity.\r\nI, [2022-07-14T15:19:37.535556 #2433]  INFO -- : Completed 422 Unprocessable Entity in 1ms (ActiveRecord: 0.0ms | Allocations: 291)\r\nF, [2022-07-14T15:19:37.536425 #2433] FATAL -- :   \r\nActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n```\r\n\r\n### System configuration\r\n**Rails version 6.1.6** \r\n**Ruby version 2.7.4**\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45638/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45638/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45636","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45636/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45636/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45636/events","html_url":"https://github.com/rails/rails/issues/45636","id":1314546104,"node_id":"I_kwDNIULOTlphuA","number":45636,"title":"Invalid template types should raise an exception","user":{"login":"axos88","id":1281218,"node_id":"MDQ6VXNlcjEyODEyMTg=","avatar_url":"https://avatars.githubusercontent.com/u/1281218?v=4","gravatar_id":"","url":"https://api.github.com/users/axos88","html_url":"https://github.com/axos88","followers_url":"https://api.github.com/users/axos88/followers","following_url":"https://api.github.com/users/axos88/following{/other_user}","gists_url":"https://api.github.com/users/axos88/gists{/gist_id}","starred_url":"https://api.github.com/users/axos88/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/axos88/subscriptions","organizations_url":"https://api.github.com/users/axos88/orgs","repos_url":"https://api.github.com/users/axos88/repos","events_url":"https://api.github.com/users/axos88/events{/privacy}","received_events_url":"https://api.github.com/users/axos88/received_events","type":"User","site_admin":false},"labels":[{"id":3666649,"node_id":"MDU6TGFiZWwzNjY2NjQ5","url":"https://api.github.com/repos/rails/rails/labels/actionview","name":"actionview","color":"d7e102","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-07-22T07:40:54Z","updated_at":"2022-08-17T18:02:14Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n  - Create a template in views/foo/bar.txt.erb # Note .txt, and not .text\r\n\r\n```ruby\r\ndetails = { locale: [:en], formats: [:txt], handlers: [:erb], variants: []}\r\nActionController::Base.view_paths.find(\"bar\", 'foo', false, details, nil, [])\r\n```\r\n\r\n### Expected behavior\r\n\r\nShould throw an exception that :txt is not a registered type in Template::Types\r\n\r\n### Actual behavior\r\n\r\nSilently fails to find the otherwise existing template, specifying the correct directory it the file resides in. \r\nConfustion intensifies.\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3\r\n**Ruby version**: 2.7.6","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45636/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45636/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45635","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45635/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45635/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45635/events","html_url":"https://github.com/rails/rails/issues/45635","id":1314015345,"node_id":"I_kwDNIULOTlJIcQ","number":45635,"title":"Recent security releases are missing from the Releases page","user":{"login":"georgeclaghorn","id":94129,"node_id":"MDQ6VXNlcjk0MTI5","avatar_url":"https://avatars.githubusercontent.com/u/94129?v=4","gravatar_id":"","url":"https://api.github.com/users/georgeclaghorn","html_url":"https://github.com/georgeclaghorn","followers_url":"https://api.github.com/users/georgeclaghorn/followers","following_url":"https://api.github.com/users/georgeclaghorn/following{/other_user}","gists_url":"https://api.github.com/users/georgeclaghorn/gists{/gist_id}","starred_url":"https://api.github.com/users/georgeclaghorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/georgeclaghorn/subscriptions","organizations_url":"https://api.github.com/users/georgeclaghorn/orgs","repos_url":"https://api.github.com/users/georgeclaghorn/repos","events_url":"https://api.github.com/users/georgeclaghorn/events{/privacy}","received_events_url":"https://api.github.com/users/georgeclaghorn/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false},"assignees":[{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2022-07-22T01:21:34Z","updated_at":"2022-08-19T18:08:06Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Rails versions 7.0.3.1, 6.1.6.1, 6.0.5.1, and 5.2.8.1 are not listed at this GitHub repository’s [Releases](https://github.com/rails/rails/releases) page. Past releases are listed there, including the most recent round of bugfix releases from May.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45635/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45635/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45632","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45632/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45632/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45632/events","html_url":"https://github.com/rails/rails/issues/45632","id":1312439669,"node_id":"I_kwDNIULOTjo9dQ","number":45632,"title":"`_read_attribute` method should also check whether an attribute is aliased or not","user":{"login":"khiav223577","id":4011729,"node_id":"MDQ6VXNlcjQwMTE3Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4011729?v=4","gravatar_id":"","url":"https://api.github.com/users/khiav223577","html_url":"https://github.com/khiav223577","followers_url":"https://api.github.com/users/khiav223577/followers","following_url":"https://api.github.com/users/khiav223577/following{/other_user}","gists_url":"https://api.github.com/users/khiav223577/gists{/gist_id}","starred_url":"https://api.github.com/users/khiav223577/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/khiav223577/subscriptions","organizations_url":"https://api.github.com/users/khiav223577/orgs","repos_url":"https://api.github.com/users/khiav223577/repos","events_url":"https://api.github.com/users/khiav223577/events{/privacy}","received_events_url":"https://api.github.com/users/khiav223577/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-07-21T03:14:22Z","updated_at":"2022-07-21T21:37:09Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n```rb\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  gem \"activerecord\", '7.0.3'\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table \"users\", force: :cascade do |t|\r\n    t.string :name\r\n  end\r\n\r\n  create_table \"posts\", force: :cascade do |t|\r\n    t.string :title\r\n    t.integer :userId\r\n  end\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\n  has_many :posts\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  belongs_to :user\r\n\r\n  alias_attribute :user_id, :userId\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def setup\r\n    user = User.create!(name: 'Tester')\r\n    post = Post.create!(user_id: user.id, title: 'Post A')\r\n  end\r\n\r\n  def test_has_many\r\n    assert_equal ['Post A'], User.first.posts.map(&:title)\r\n  end\r\n\r\n  def test_belongs_to\r\n    assert_equal 'Tester', Post.first.user&.name\r\n  end\r\nend\r\n```\r\n\r\nResult:\r\n```\r\nFinished in 0.059414s, 33.6619 runs/s, 33.6619 assertions/s.\r\n\r\n  1) Failure:\r\nBugTest#test_belongs_to [test.rb:53]:\r\nExpected: \"Tester\"\r\n  Actual: nil\r\n\r\n2 runs, 2 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\n### Expected behavior\r\n\r\nI run into this issue when I tried to add an association on an aliased attribute.\r\n\r\nThen I found `belongs_to_association` will use `_read_attribute` method to check if this `foreign_key` exists on this model or not.\r\nIt doesn't pass the condition, therefore `find_target` will not be triggered.\r\nhttps://github.com/rails/rails/blob/3272335f8f4739629283cdeff7c3db723f34a3f5/activerecord/lib/active_record/associations/association.rb#L172-L173\r\nhttps://github.com/rails/rails/blob/3272335f8f4739629283cdeff7c3db723f34a3f5/activerecord/lib/active_record/associations/association.rb#L274-L276\r\nhttps://github.com/rails/rails/blob/2ea5ff9e13b9c5d0d5d25b2441efa81a2de2a262/activerecord/lib/active_record/associations/belongs_to_association.rb#L133-L135\r\nhttps://github.com/rails/rails/blob/4ae0390c1051a39ec16a4a95451cd06172a1b260/activerecord/lib/active_record/attribute_methods/read.rb#L37-L39\r\n\r\nThe `read_attribute` method takes `attribute_alias` into consideration since https://github.com/rails/rails/pull/26529, while `_read_attribute` doesn't. I think it should, too.\r\n\r\n### Actual behavior\r\n\r\nSee the test script below.\r\n\r\n### System configuration\r\n**Rails version**: \r\n7.0.3.1\r\n\r\n**Ruby version**:\r\nruby 3.0.0p0 (2020-12-25 revision 95aff21468) [x86_64-linux]","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45632/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45632/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45609","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45609/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45609/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45609/events","html_url":"https://github.com/rails/rails/issues/45609","id":1306840730,"node_id":"I_kwDNIULOTeTOmg","number":45609,"title":"Cannot add ActiveModel::Attribute::FromDatabase to permitted YAML safe load classes","user":{"login":"stanhu","id":963826,"node_id":"MDQ6VXNlcjk2MzgyNg==","avatar_url":"https://avatars.githubusercontent.com/u/963826?v=4","gravatar_id":"","url":"https://api.github.com/users/stanhu","html_url":"https://github.com/stanhu","followers_url":"https://api.github.com/users/stanhu/followers","following_url":"https://api.github.com/users/stanhu/following{/other_user}","gists_url":"https://api.github.com/users/stanhu/gists{/gist_id}","starred_url":"https://api.github.com/users/stanhu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stanhu/subscriptions","organizations_url":"https://api.github.com/users/stanhu/orgs","repos_url":"https://api.github.com/users/stanhu/repos","events_url":"https://api.github.com/users/stanhu/events{/privacy}","received_events_url":"https://api.github.com/users/stanhu/received_events","type":"User","site_admin":false},"labels":[{"id":107186,"node_id":"MDU6TGFiZWwxMDcxODY=","url":"https://api.github.com/repos/rails/rails/labels/regression","name":"regression","color":"e10c02","default":false,"description":null},{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-07-16T15:51:30Z","updated_at":"2022-08-18T11:39:07Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWe have some database entries serialized to YAML. For example:\r\n\r\n```\r\n---\r\n:custom_message: Repository Download Started\r\n:author_name: !ruby/object:DeployToken\r\n  concise_attributes:\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: deploy_token_type\r\n    value_before_type_cast: 1\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: id\r\n    value_before_type_cast: 2\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: revoked\r\n    value_before_type_cast: false\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: read_repository\r\n    value_before_type_cast: true\r\n```\r\n\r\nHowever, since the security release announced in https://rubyonrails.org/2022/7/12/Rails-Versions-7-0-3-1-6-1-6-1-6-0-5-1-and-5-2-8-1-have-been-released to address CVE-2022-32224, we cannot simply add `ActiveModel::Attribute::FromDatabase` to the permitted class list:\r\n\r\n```ruby\r\n(byebug) YAML.safe_load(payload, permitted_classes: [ActiveModel::Attribute::FromDatabase, Symbol, DeployToken], aliases: true)\r\n*** NameError Exception: private constant ActiveModel::Attribute::FromDatabase referenced\r\n```\r\n\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\n### Expected behavior\r\n\r\nYAML loading should work. Should this constant no longer be private since it's been serialized to YAML?\r\n\r\n### Actual behavior\r\n\r\nYAML loading fails with:\r\n\r\n```\r\n*** NameError Exception: private constant ActiveModel::Attribute::FromDatabase referenced\r\n```\r\n\r\n### System configuration\r\n\r\n**Rails version**:\r\nv6.1.6.1\r\n\r\n**Ruby version**:\r\nv2.7.5","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45609/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45609/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45596","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45596/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45596/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45596/events","html_url":"https://github.com/rails/rails/issues/45596","id":1304247666,"node_id":"I_kwDNIULOTb09cg","number":45596,"title":"Setting `schema_dump` in database.yml does not change dump format","user":{"login":"leboshi","id":16550140,"node_id":"MDQ6VXNlcjE2NTUwMTQw","avatar_url":"https://avatars.githubusercontent.com/u/16550140?v=4","gravatar_id":"","url":"https://api.github.com/users/leboshi","html_url":"https://github.com/leboshi","followers_url":"https://api.github.com/users/leboshi/followers","following_url":"https://api.github.com/users/leboshi/following{/other_user}","gists_url":"https://api.github.com/users/leboshi/gists{/gist_id}","starred_url":"https://api.github.com/users/leboshi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leboshi/subscriptions","organizations_url":"https://api.github.com/users/leboshi/orgs","repos_url":"https://api.github.com/users/leboshi/repos","events_url":"https://api.github.com/users/leboshi/events{/privacy}","received_events_url":"https://api.github.com/users/leboshi/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-14T04:44:37Z","updated_at":"2022-07-14T14:34:25Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Originally brought up in #43173.  I opened PR #43240 to address it, but that was closed when it was decided #43530 did the same thing.  Unfortunately, I don't think any of us were really reading what the other was doing, because the two PRs actually each only addressed half the opened issue.\r\n\r\nPR incoming to fully address this and the second half of #43173!\r\n\r\n### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_schema_format_corresponds_with_schema_dump\r\n    Dir.mktmpdir do |dir|\r\n      ActiveRecord::Tasks::DatabaseTasks.stub(:db_dir, dir) do\r\n        old_configurations = ActiveRecord::Base.configurations\r\n        ActiveRecord::Base.configurations = {\r\n          \"development\" => {\r\n            \"primary\" => {\r\n              \"database\" => \"dev-db\",\r\n              \"schema_dump\" => \"primary_structure.sql\"\r\n            }\r\n          }\r\n        }\r\n\r\n        db_config = ActiveRecord::Base.configurations.configs_for(env_name: \"development\", name: \"primary\")\r\n        ActiveRecord::Tasks::DatabaseTasks.dump_schema(db_config)\r\n\r\n        dump_contents = File.read(File.join(dir, \"primary_structure.sql\"))\r\n        refute_match /ActiveRecord::Schema/, dump_contents\r\n        assert_match /CREATE TABLE/, dump_contents\r\n      ensure\r\n        ActiveRecord::Base.configurations = old_configurations\r\n        ActiveRecord::Base.clear_cache!\r\n      end\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nIf `schema_dump` is set to something like `primary_structure.sql`, I'd expect it to do a SQL structure dump rather than a Ruby schema dump.\r\n\r\n### Actual behavior\r\nThe filename in `schema_dump` has no bearing on the format of the dump Rails writes or expects to read.\r\n\r\n### System configuration\r\n**Rails version**: (main)\r\n\r\n**Ruby version**: 3.1.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45596/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45596/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45998","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45998/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45998/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45998/events","html_url":"https://github.com/rails/rails/issues/45998","id":1368868095,"node_id":"I_kwDNIULOUZdE_w","number":45998,"title":"CSRF getting different token","user":{"login":"Saleh-Salem","id":22606707,"node_id":"MDQ6VXNlcjIyNjA2NzA3","avatar_url":"https://avatars.githubusercontent.com/u/22606707?v=4","gravatar_id":"","url":"https://api.github.com/users/Saleh-Salem","html_url":"https://github.com/Saleh-Salem","followers_url":"https://api.github.com/users/Saleh-Salem/followers","following_url":"https://api.github.com/users/Saleh-Salem/following{/other_user}","gists_url":"https://api.github.com/users/Saleh-Salem/gists{/gist_id}","starred_url":"https://api.github.com/users/Saleh-Salem/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Saleh-Salem/subscriptions","organizations_url":"https://api.github.com/users/Saleh-Salem/orgs","repos_url":"https://api.github.com/users/Saleh-Salem/repos","events_url":"https://api.github.com/users/Saleh-Salem/events{/privacy}","received_events_url":"https://api.github.com/users/Saleh-Salem/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-11T08:08:17Z","updated_at":"2022-09-11T08:27:32Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When validating the CSRF token getting an exception in API\r\n \r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\nthe `session[:_csrf_token]` and  `request.x_csrf_token` is different and getting issue.\r\nwhen I need to skip the csrf, I add `verify_authenticity_token`, In this case, I don't need to skip it.\r\nI debug and found the issue in the method:\r\n\r\n```\r\n  def compare_with_global_token(token, session = nil) # :doc:\r\n    ActiveSupport::SecurityUtils.fixed_length_secure_compare(token, global_csrf_token(session))\r\n  end\r\n```\r\n\r\nwhat is `session[:_csrf_token]` and how can I implement it in API?\r\nIs there any missing from my side?\r\n### Steps to reproduce\r\n\r\n1. Add `protect_from_forgery with: :exception` .\r\n2. When logging in return token in response is generated by `form_authenticity_token`.\r\n3. When Trying to request any POST, PUT or DELETE API get an exception.\r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nReturn Response without exception.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\ngetting exception \r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\n### System configuration\r\n**Rails version**:\r\n6.0.3.5\r\n**Ruby version**:\r\n2.7.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45998/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45998/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45994","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45994/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45994/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45994/events","html_url":"https://github.com/rails/rails/issues/45994","id":1368555704,"node_id":"I_kwDNIULOUZKAuA","number":45994,"title":"LoadInterlockAwareMonitor deadlock when clearing cache (multiple databases, test)","user":{"login":"kuahyeow","id":16723,"node_id":"MDQ6VXNlcjE2NzIz","avatar_url":"https://avatars.githubusercontent.com/u/16723?v=4","gravatar_id":"","url":"https://api.github.com/users/kuahyeow","html_url":"https://github.com/kuahyeow","followers_url":"https://api.github.com/users/kuahyeow/followers","following_url":"https://api.github.com/users/kuahyeow/following{/other_user}","gists_url":"https://api.github.com/users/kuahyeow/gists{/gist_id}","starred_url":"https://api.github.com/users/kuahyeow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kuahyeow/subscriptions","organizations_url":"https://api.github.com/users/kuahyeow/orgs","repos_url":"https://api.github.com/users/kuahyeow/repos","events_url":"https://api.github.com/users/kuahyeow/events{/privacy}","received_events_url":"https://api.github.com/users/kuahyeow/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-10T08:52:46Z","updated_at":"2022-09-10T08:56:12Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"With multiple databases, we observe hangs within system tests.\r\n\r\nSee also https://gitlab.com/gitlab-org/gitlab/-/issues/371468 (GitLab is at Rails 6.1, Ruby 2.7.5)\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nHere's a minimal reproduction with Rails 7.0.3.1\r\n\r\n1. Checkout https://gitlab.com/tkuah/multi_database_system_test\r\n2. `bundle install`\r\n3. `bundle exec rails db:migrate`\r\n4. `bundle rails test test/system/home_pages_test.rb`\r\n\r\nThe conditions are:\r\n\r\n1. Multiple databases\r\n2. System test where there's an async request which overlaps with the main thread\r\n\r\n### Expected behavior\r\n\r\nIt does not hang, and the test completes\r\n\r\n### Actual behavior\r\n\r\nIt hangs. It looks like it's hanging when clearing query cache (see https://gitlab.com/gitlab-org/gitlab/-/issues/371468#note_1087203883, and https://gitlab.com/gitlab-org/gitlab/-/issues/371468#note_1088779499)\r\n\r\nA backtrace dump taken while the test is hanging [sigdump-68442.log](https://github.com/rails/rails/files/9539878/sigdump-68442.log)\r\n\r\nMy suspicion is that:\r\n\r\n1. `lock_thread` is true for system tests\r\n3. Therefore both the main thread, and the Puma thread attempt to clear query cache for the same set of connections\r\n\r\nSo we have two connections:\r\n\r\n1. Puma thread takes a `LoadInterlockAwareMonitor` lock for primary connection via `Post.transaction`\r\n2. Main thread takes a `LoadInterlockAwareMonitor` lock for animal connection via implicit transaction that `create` does\r\n3. Due to 2, main thread attempts to clear query cache for primary connection. **Waits for 1's lock**\r\n4. Due to 1, and because of `lock_thread`, puma thread clears query cache for primary connection. It takes a `LoadInterlockAwareMonitor` lock for primary connection which succeds\r\n5. Due to 1, puma thread now attempts clears query cache for animal connection. **Waits for 2's lock**\r\n\r\nSee [`clear_query_caches_for_current_thread` method](https://github.com/rails/rails/blob/e24fbf71fa0a10f63346b9b42604451958740844/activerecord/lib/active_record/connection_handling.rb#L244-L248)\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: ruby 2.7.5p203 (2021-11-24 revision f69aeb8314) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45994/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45994/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45984","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45984/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45984/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45984/events","html_url":"https://github.com/rails/rails/issues/45984","id":1368144421,"node_id":"I_kwDNIULOUYw6JQ","number":45984,"title":"Cannot Eager Load has_many :through Relationships with custom scope","user":{"login":"dcorrigan","id":2445528,"node_id":"MDQ6VXNlcjI0NDU1Mjg=","avatar_url":"https://avatars.githubusercontent.com/u/2445528?v=4","gravatar_id":"","url":"https://api.github.com/users/dcorrigan","html_url":"https://github.com/dcorrigan","followers_url":"https://api.github.com/users/dcorrigan/followers","following_url":"https://api.github.com/users/dcorrigan/following{/other_user}","gists_url":"https://api.github.com/users/dcorrigan/gists{/gist_id}","starred_url":"https://api.github.com/users/dcorrigan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dcorrigan/subscriptions","organizations_url":"https://api.github.com/users/dcorrigan/orgs","repos_url":"https://api.github.com/users/dcorrigan/repos","events_url":"https://api.github.com/users/dcorrigan/events{/privacy}","received_events_url":"https://api.github.com/users/dcorrigan/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-09T17:47:35Z","updated_at":"2022-09-09T17:47:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nThis seems like it's the same as #28324, but I'm still seeing the issue in Rails 7. \r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n  end\r\n\r\n  create_table :images, force: true do |t|\r\n    t.string :title\r\n    t.integer :post_id\r\n  end\r\n\r\n  create_table :captions, force: true do |t|\r\n    t.integer :image_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :images\r\n  has_many :captions, lambda { order('images.title DESC') }, through: :images\r\nend\r\n\r\nclass Image < ActiveRecord::Base\r\n  belongs_to :post\r\n  has_one :caption\r\nend\r\n\r\nclass Caption < ActiveRecord::Base\r\n  belongs_to :image\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_preload_has_many_through_association_with_scope\r\n    post = Post.create!\r\n    image = Image.create!\r\n    image.caption = Caption.create!\r\n    post.images << image\r\n    post.save!\r\n\r\n    # Access through the model works\r\n    assert_includes post.captions, Caption.first\r\n\r\n    # Query with association preloaded does not.\r\n    # When evaluated, it will apply the scope without the relevant JOIN table:\r\n    # SELECT \"captions\".* FROM \"captions\" WHERE \"captions\".\"image_id\" = ? ORDER BY images.title DESC\r\n    preloaded = Post.where(id: post.id).includes(:captions)\r\n\r\n    assert_includes preloaded.first.captions, Caption.first\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe test passes and we're able to eager load has_many :through associations with custom scopes in this way.\r\n\r\nI realize this can be fixed by adding a `references(:images)` to the query, but it seems reasonable to expect AR to infer that that the join is necessary here.\r\n\r\n### Actual behavior\r\n\r\nTest fails with an error: `ActiveRecord::StatementInvalid: SQLite3::SQLException: no such column: images.title`\r\n\r\n### System configuration\r\n**Rails version**: 7.0 \r\n\r\n**Ruby version**: 3.1.2p20\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45984/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45967","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45967/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45967/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45967/events","html_url":"https://github.com/rails/rails/issues/45967","id":1366038829,"node_id":"I_kwDNIULOUWwZLQ","number":45967,"title":"Inconsistent update of timestamps while updating associations with *_ids=","user":{"login":"matthee","id":547653,"node_id":"MDQ6VXNlcjU0NzY1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/547653?v=4","gravatar_id":"","url":"https://api.github.com/users/matthee","html_url":"https://github.com/matthee","followers_url":"https://api.github.com/users/matthee/followers","following_url":"https://api.github.com/users/matthee/following{/other_user}","gists_url":"https://api.github.com/users/matthee/gists{/gist_id}","starred_url":"https://api.github.com/users/matthee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matthee/subscriptions","organizations_url":"https://api.github.com/users/matthee/orgs","repos_url":"https://api.github.com/users/matthee/repos","events_url":"https://api.github.com/users/matthee/events{/privacy}","received_events_url":"https://api.github.com/users/matthee/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-08T10:51:09Z","updated_at":"2022-09-09T03:10:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"ActiveRecord inconsistently updates the `updated_at` column when changing `has_many through:` associations.\r\n\r\n### Steps to reproduce\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"activesupport\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"active_support/testing/time_helpers\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.timestamps\r\n  end\r\n  \r\n  create_table :tags, force: true do |t|\r\n  end\r\n\r\n  create_table :taggings, force: true do |t|\r\n    t.integer :post_id\r\n    t.integer :tag_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :taggings, dependent: :destroy\r\n  \r\n  has_many :tags, through: :taggings\r\nend\r\n\r\nclass Tagging < ActiveRecord::Base\r\n  belongs_to :post, touch: true\r\n  belongs_to :tag\r\nend\r\n\r\nclass Tag < ActiveRecord::Base\r\n  has_many :taggings\r\n  has_many :posts, through: :taggings\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  include ActiveSupport::Testing::TimeHelpers\r\n  \r\n  def test_updated_at_is_updated_when_setting_has_many_through_association\r\n    freeze_time\r\n        \r\n    tag_1 = Tag.create!\r\n    tag_2 = Tag.create!\r\n      \r\n    post = Post.create!\r\n    \r\n    travel_to(now = 1.hour.from_now)\r\n    \r\n    # Adding tags updates post.updated_at\r\n    post.update(tag_ids: [tag_1.id, tag_2.id])\r\n    assert_in_delta now, post.updated_at, 1.second, \"post#updated_at was not updated when adding tags\"\r\n    \r\n    # Removing tags does not update post.updated_at :(\r\n    travel_to(now = 2.hours.from_now)\r\n    post.update(tag_ids: [tag_1.id])\r\n    assert_in_delta now, post.updated_at, 1.second, \"post#updated_at was not updated when removing tags\"\r\n  end\r\n  \r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nIn the example above, both `.update` calls should update the `updated_at` column of the post record. (when adding and removing records)\r\n\r\n### Actual behavior\r\n\r\nWhen deleting a record, the `updated_at` timestamp is not updated.\r\n\r\n### System configuration\r\n**Rails version**:\r\n7.0.3.1\r\n**Ruby version**:\r\n3.0.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45967/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45967/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45959","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45959/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45959/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45959/events","html_url":"https://github.com/rails/rails/issues/45959","id":1364232810,"node_id":"I_kwDNIULOUVCKag","number":45959,"title":"JSON field not saving data with symbol : and it's saving with arrow =>","user":{"login":"sajjadmurtaza","id":8552702,"node_id":"MDQ6VXNlcjg1NTI3MDI=","avatar_url":"https://avatars.githubusercontent.com/u/8552702?v=4","gravatar_id":"","url":"https://api.github.com/users/sajjadmurtaza","html_url":"https://github.com/sajjadmurtaza","followers_url":"https://api.github.com/users/sajjadmurtaza/followers","following_url":"https://api.github.com/users/sajjadmurtaza/following{/other_user}","gists_url":"https://api.github.com/users/sajjadmurtaza/gists{/gist_id}","starred_url":"https://api.github.com/users/sajjadmurtaza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sajjadmurtaza/subscriptions","organizations_url":"https://api.github.com/users/sajjadmurtaza/orgs","repos_url":"https://api.github.com/users/sajjadmurtaza/repos","events_url":"https://api.github.com/users/sajjadmurtaza/events{/privacy}","received_events_url":"https://api.github.com/users/sajjadmurtaza/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":1071962662,"node_id":"MDU6TGFiZWwxMDcxOTYyNjYy","url":"https://api.github.com/repos/rails/rails/labels/more-information-needed","name":"more-information-needed","color":"bfdadc","default":false,"description":"When reporter needs to provide more information"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-09-07T07:40:12Z","updated_at":"2022-09-08T07:23:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nI have JSON field in my database `t.json \"theme\"`. When I try to save the field hash with : , it's overridden before save\r\ne.g.\r\n`object.theme = { color: 'red' }` it always change to `{ color => 'red' }`\r\n\r\ni also tried with jsonb and default value with empty hash {} but still having the same issue.\r\n\r\n\r\nI want to save the JSON data hash with symbol keys `{ color: 'red' }`\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.0\r\n\r\n**Ruby version**: 2.7.1\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45959/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45959/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45949","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45949/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45949/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45949/events","html_url":"https://github.com/rails/rails/issues/45949","id":1362899537,"node_id":"I_kwDNIULOUTwyUQ","number":45949,"title":"ActionText::Attachable#as_json override is breaking ActiveStorage::Blob#as_json when blob is not persisted","user":{"login":"balbesina","id":7312369,"node_id":"MDQ6VXNlcjczMTIzNjk=","avatar_url":"https://avatars.githubusercontent.com/u/7312369?v=4","gravatar_id":"","url":"https://api.github.com/users/balbesina","html_url":"https://github.com/balbesina","followers_url":"https://api.github.com/users/balbesina/followers","following_url":"https://api.github.com/users/balbesina/following{/other_user}","gists_url":"https://api.github.com/users/balbesina/gists{/gist_id}","starred_url":"https://api.github.com/users/balbesina/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/balbesina/subscriptions","organizations_url":"https://api.github.com/users/balbesina/orgs","repos_url":"https://api.github.com/users/balbesina/repos","events_url":"https://api.github.com/users/balbesina/events{/privacy}","received_events_url":"https://api.github.com/users/balbesina/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-06T08:26:39Z","updated_at":"2022-09-06T08:26:39Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nfrom rails console:\r\n```ruby\r\nActiveStorage::Blob.build_after_unfurling(io: StringIO.new('asd'), filename: 'asd.txt').as_json\r\n```\r\n\r\n[Reproduction script](https://gist.github.com/balbesina/30fbdafbfee4b71b06209d9e950f4128)\r\n\r\n### Expected behavior\r\nActiveStorage::Blob#as_json returns a Hash\r\n\r\n### Actual behavior\r\nActiveStorage::Blob#as_json raises exception\r\n```\r\n/Users/dhh/.rvm/gems/ruby-3.1.2/gems/globalid-1.0.0/lib/global_id/uri/gid.rb:167:in `validate_model_id': \r\nUnable to create a Global ID for ActiveStorage::Blob without a model id. (URI::GID::MissingModelIdError)\r\n```\r\n\r\n### System configuration\r\n**Rails version**: Rails 7.0.3.1\r\n**Ruby version**: ruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45949/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45949/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45939","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45939/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45939/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45939/events","html_url":"https://github.com/rails/rails/issues/45939","id":1360876688,"node_id":"I_kwDNIULOUR1UkA","number":45939,"title":"Validations aren't inherited from base model if child is called before validation declaration","user":{"login":"Exterm1nate","id":48535087,"node_id":"MDQ6VXNlcjQ4NTM1MDg3","avatar_url":"https://avatars.githubusercontent.com/u/48535087?v=4","gravatar_id":"","url":"https://api.github.com/users/Exterm1nate","html_url":"https://github.com/Exterm1nate","followers_url":"https://api.github.com/users/Exterm1nate/followers","following_url":"https://api.github.com/users/Exterm1nate/following{/other_user}","gists_url":"https://api.github.com/users/Exterm1nate/gists{/gist_id}","starred_url":"https://api.github.com/users/Exterm1nate/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Exterm1nate/subscriptions","organizations_url":"https://api.github.com/users/Exterm1nate/orgs","repos_url":"https://api.github.com/users/Exterm1nate/repos","events_url":"https://api.github.com/users/Exterm1nate/events{/privacy}","received_events_url":"https://api.github.com/users/Exterm1nate/received_events","type":"User","site_admin":false},"labels":[{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-09-03T14:46:42Z","updated_at":"2022-09-08T07:26:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nLet's create some STI models. Base `Vehicle` and two childs `Car` and `Motorcycle`.\r\n\r\n```ruby\r\n# models/vehicle.rb\r\nclass Vehicle < ApplicationRecord\r\n  TYPES = [Car, Motorcycle].freeze\r\n\r\n  validates :color, uniqueness: { scope: :model }\r\nend\r\n\r\n# models/car.rb\r\nclass Car < Vehicle\r\nend\r\n\r\n# models/motorcycle.rb\r\nclass Motorcycle < Vehicle\r\nend\r\n```\r\n\r\nAfter that we want to use `#validators_on` method to make sure the validation is present.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\nCar.validators_on(:color)\r\nMotorcycle.validators_on(:color)\r\n```\r\n\r\n### Expected behavior\r\n\r\nAll models must contain the validation.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nMotorcycle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\n```\r\n\r\n### Actual behavior\r\n\r\nBut for childs this method returns nothing.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> []\r\nMotorcycle.validators_on(:color)\r\n#=> []\r\n```\r\n\r\n### Notes\r\n\r\nIf we remove the `TYPES` constant (or just child classes calls from it) `validators_on` works as expected. Let's change original code a little bit:\r\n\r\n```ruby\r\n# models/vehicle.rb\r\nclass Vehicle < ApplicationRecord\r\n  TYPES = [Car].freeze # Motorcycle was removed from here!\r\n\r\n  validates :color, uniqueness: { scope: :model }\r\nend\r\n```\r\n\r\nAnd after that test again.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> []\r\nMotorcycle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\n```\r\n\r\n`Motorcycle` validation was returned correctly this time.\r\n\r\nIt seems to be a load error. `Car` was called before the `Vehicle`'s validation declaration, so it doesn't take this validation into account. It may also depend on loading order.\r\n\r\nNotice that validation itself is working well in all models.\r\n\r\n```ruby\r\nCar.create!(color: \"black\", model: \"Boomer\")\r\nCar.create!(color: \"black\", model: \"Boomer\") # raises ActiveRecord::RecordInvalid\r\n\r\nMotorcycle.create!(color: \"red\", model: \"Yamaha\")\r\nMotorcycle.create!(color: \"red\", model: \"Yamaha\") # raises ActiveRecord::RecordInvalid\r\n```\r\n\r\nExample project: https://github.com/Exterm1nate/rails-validation-issue\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3\r\n\r\n**Ruby version**: 3.1.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45939/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45939/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45937","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45937/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45937/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45937/events","html_url":"https://github.com/rails/rails/issues/45937","id":1360779604,"node_id":"I_kwDNIULOURvZVA","number":45937,"title":"Add strict table mode (by default) to sqlite adapter","user":{"login":"jrz","id":149668,"node_id":"MDQ6VXNlcjE0OTY2OA==","avatar_url":"https://avatars.githubusercontent.com/u/149668?v=4","gravatar_id":"","url":"https://api.github.com/users/jrz","html_url":"https://github.com/jrz","followers_url":"https://api.github.com/users/jrz/followers","following_url":"https://api.github.com/users/jrz/following{/other_user}","gists_url":"https://api.github.com/users/jrz/gists{/gist_id}","starred_url":"https://api.github.com/users/jrz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jrz/subscriptions","organizations_url":"https://api.github.com/users/jrz/orgs","repos_url":"https://api.github.com/users/jrz/repos","events_url":"https://api.github.com/users/jrz/events{/privacy}","received_events_url":"https://api.github.com/users/jrz/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-03T07:01:02Z","updated_at":"2022-09-08T07:30:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"SQLite supports 'strict tables' since 3.37.1 https://sqlite.org/stricttables.html\r\n\r\nThis forces a datatype to be specified when creating a table. This is the preferred method in any application created by developers. \r\n\r\nUnspecified/ANY datatypes are useful for quick tryouts as an enduser, similar to excel. But it's counterproductive when creating an application.\r\n\r\nIf this will become a configurable setting, the default should be set to strict.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45937/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45937/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45920","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45920/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45920/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45920/events","html_url":"https://github.com/rails/rails/issues/45920","id":1358179995,"node_id":"I_kwDNIULOUPQumw","number":45920,"title":"Replace has_one through create_association might create duplicated rows","user":{"login":"lazaronixon","id":2651240,"node_id":"MDQ6VXNlcjI2NTEyNDA=","avatar_url":"https://avatars.githubusercontent.com/u/2651240?v=4","gravatar_id":"","url":"https://api.github.com/users/lazaronixon","html_url":"https://github.com/lazaronixon","followers_url":"https://api.github.com/users/lazaronixon/followers","following_url":"https://api.github.com/users/lazaronixon/following{/other_user}","gists_url":"https://api.github.com/users/lazaronixon/gists{/gist_id}","starred_url":"https://api.github.com/users/lazaronixon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lazaronixon/subscriptions","organizations_url":"https://api.github.com/users/lazaronixon/orgs","repos_url":"https://api.github.com/users/lazaronixon/repos","events_url":"https://api.github.com/users/lazaronixon/events{/privacy}","received_events_url":"https://api.github.com/users/lazaronixon/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-09-01T03:05:07Z","updated_at":"2022-09-01T23:03:40Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# Ensure backward compatibility with minitest 4.\r\nMinitest::Test = MiniTest::Unit::TestCase unless defined?(Minitest::Test)\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts do |t|\r\n  end\r\n\r\n  create_table :comments do |t|\r\n    t.references :post\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_one :comment, dependent: :destroy\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  validates_presence_of :post_id\r\n  belongs_to :post\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    post = Post.create!\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    sleep 5.seconds\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n```\r\n# transaction begin\r\nselect previous_comment for update\r\n\r\ninsert new_comment\r\n\r\ndelete previous_comment\r\n# transaction commit\r\n```\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n```\r\n# transaction begin\r\ninsert new_comment\r\n# transaction commit\r\n\r\n# transaction begin\r\ndelete previous_comment\r\n# transaction commit\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45920/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45920/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45906","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45906/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45906/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45906/events","html_url":"https://github.com/rails/rails/issues/45906","id":1355732552,"node_id":"I_kwDNIULOUM7WSA","number":45906,"title":"High object allocation count from `ActiveRecord::ConnectionAdapters::PoolManager#pool_configs `","user":{"login":"amarchenkoshopify","id":101111422,"node_id":"U_kgDOBgbWfg","avatar_url":"https://avatars.githubusercontent.com/u/101111422?v=4","gravatar_id":"","url":"https://api.github.com/users/amarchenkoshopify","html_url":"https://github.com/amarchenkoshopify","followers_url":"https://api.github.com/users/amarchenkoshopify/followers","following_url":"https://api.github.com/users/amarchenkoshopify/following{/other_user}","gists_url":"https://api.github.com/users/amarchenkoshopify/gists{/gist_id}","starred_url":"https://api.github.com/users/amarchenkoshopify/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amarchenkoshopify/subscriptions","organizations_url":"https://api.github.com/users/amarchenkoshopify/orgs","repos_url":"https://api.github.com/users/amarchenkoshopify/repos","events_url":"https://api.github.com/users/amarchenkoshopify/events{/privacy}","received_events_url":"https://api.github.com/users/amarchenkoshopify/received_events","type":"User","site_admin":false},"labels":[{"id":107186,"node_id":"MDU6TGFiZWwxMDcxODY=","url":"https://api.github.com/repos/rails/rails/labels/regression","name":"regression","color":"e10c02","default":false,"description":null},{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"eileencodes","id":1080678,"node_id":"MDQ6VXNlcjEwODA2Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/1080678?v=4","gravatar_id":"","url":"https://api.github.com/users/eileencodes","html_url":"https://github.com/eileencodes","followers_url":"https://api.github.com/users/eileencodes/followers","following_url":"https://api.github.com/users/eileencodes/following{/other_user}","gists_url":"https://api.github.com/users/eileencodes/gists{/gist_id}","starred_url":"https://api.github.com/users/eileencodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eileencodes/subscriptions","organizations_url":"https://api.github.com/users/eileencodes/orgs","repos_url":"https://api.github.com/users/eileencodes/repos","events_url":"https://api.github.com/users/eileencodes/events{/privacy}","received_events_url":"https://api.github.com/users/eileencodes/received_events","type":"User","site_admin":false},"assignees":[{"login":"eileencodes","id":1080678,"node_id":"MDQ6VXNlcjEwODA2Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/1080678?v=4","gravatar_id":"","url":"https://api.github.com/users/eileencodes","html_url":"https://github.com/eileencodes","followers_url":"https://api.github.com/users/eileencodes/followers","following_url":"https://api.github.com/users/eileencodes/following{/other_user}","gists_url":"https://api.github.com/users/eileencodes/gists{/gist_id}","starred_url":"https://api.github.com/users/eileencodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eileencodes/subscriptions","organizations_url":"https://api.github.com/users/eileencodes/orgs","repos_url":"https://api.github.com/users/eileencodes/repos","events_url":"https://api.github.com/users/eileencodes/events{/privacy}","received_events_url":"https://api.github.com/users/eileencodes/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/rails/rails/milestones/81","html_url":"https://github.com/rails/rails/milestone/81","labels_url":"https://api.github.com/repos/rails/rails/milestones/81/labels","id":7591006,"node_id":"MI_kwDNIULOAHPUXg","number":81,"title":"7.0.4","description":"","creator":{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":3,"state":"open","created_at":"2022-01-20T01:51:07Z","updated_at":"2022-08-30T13:21:37Z","due_on":null,"closed_at":null},"comments":2,"created_at":"2022-08-30T12:58:42Z","updated_at":"2022-08-31T12:37:42Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWhile working on memory efficiency investigation I noticed that a very big bunch of object allocations comes from a single method `ActiveRecord::ConnectionAdapters::PoolManager#pool_configs`:\r\n\r\n```ruby\r\n      def pool_configs(role = nil)\r\n        if role\r\n          @role_to_shard_mapping[role].values\r\n        else\r\n          @role_to_shard_mapping.flat_map { |_, shard_map| shard_map.values }\r\n        end\r\n      end \r\n```\r\n\r\nThis method is called on every activerecord operation and does not cache its result: could we think about a way of caching its result?\r\n\r\ncc @eileencodes \r\n\r\n### Expected behavior\r\n\r\n`#pool_configs` allocates configs once\r\n\r\n### Actual behavior\r\n\r\n`#pool_configs` allocates configs every time it is executed\r\n\r\n### System configuration\r\n**Rails version**: main branch\r\n\r\n**Ruby version**: 3.1\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45906/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45901","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45901/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45901/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45901/events","html_url":"https://github.com/rails/rails/issues/45901","id":1354555667,"node_id":"I_kwDNIULOULzhEw","number":45901,"title":"bin/rails dbconsole should include_password by default","user":{"login":"wpeterson","id":178135,"node_id":"MDQ6VXNlcjE3ODEzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/178135?v=4","gravatar_id":"","url":"https://api.github.com/users/wpeterson","html_url":"https://github.com/wpeterson","followers_url":"https://api.github.com/users/wpeterson/followers","following_url":"https://api.github.com/users/wpeterson/following{/other_user}","gists_url":"https://api.github.com/users/wpeterson/gists{/gist_id}","starred_url":"https://api.github.com/users/wpeterson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wpeterson/subscriptions","organizations_url":"https://api.github.com/users/wpeterson/orgs","repos_url":"https://api.github.com/users/wpeterson/repos","events_url":"https://api.github.com/users/wpeterson/events{/privacy}","received_events_url":"https://api.github.com/users/wpeterson/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-29T16:19:45Z","updated_at":"2022-08-30T00:17:43Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n1. Configure a Rails `config/database.yml` with a `password` required to connect\r\n2. Run `rails dbconsole`\r\n3. See prompt for database password, despite password being configured/available\r\n4. Run `rails dbconsole -p`\r\n5. See dbconsole properly load and use credentials to connect to database for DB console session\r\n\r\n### Expected behavior\r\nWhenever a Rails app has credentials like a password configured for a database, the database console session should use those credentials vs. prompting the user to re-enter a password interactively.  When credentials are not configured and a password is required, we should prompt then.\r\n\r\nThis behavior is implemented since early Rails versions but is disabled by default.  I propose we enable the proper password behavior by default.\r\n\r\n### Actual behavior\r\n`bin/rails dbconsole` always prompts for a password, even when one is configured for the app.\r\n\r\n### System configuration\r\n**Rails version**: All (6.x, 7.x, head)\r\n\r\n**Ruby version**: All \r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45901/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45901/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45899","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45899/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45899/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45899/events","html_url":"https://github.com/rails/rails/issues/45899","id":1353676820,"node_id":"I_kwDNIULOUK94FA","number":45899,"title":"Active Job unit tests fail using que 2.2.0","user":{"login":"yahonda","id":73684,"node_id":"MDQ6VXNlcjczNjg0","avatar_url":"https://avatars.githubusercontent.com/u/73684?v=4","gravatar_id":"","url":"https://api.github.com/users/yahonda","html_url":"https://github.com/yahonda","followers_url":"https://api.github.com/users/yahonda/followers","following_url":"https://api.github.com/users/yahonda/following{/other_user}","gists_url":"https://api.github.com/users/yahonda/gists{/gist_id}","starred_url":"https://api.github.com/users/yahonda/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yahonda/subscriptions","organizations_url":"https://api.github.com/users/yahonda/orgs","repos_url":"https://api.github.com/users/yahonda/repos","events_url":"https://api.github.com/users/yahonda/events{/privacy}","received_events_url":"https://api.github.com/users/yahonda/received_events","type":"User","site_admin":false},"labels":[{"id":123812746,"node_id":"MDU6TGFiZWwxMjM4MTI3NDY=","url":"https://api.github.com/repos/rails/rails/labels/activejob","name":"activejob","color":"5319e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-29T04:24:06Z","updated_at":"2022-09-09T15:33:02Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"### Steps to reproduce\r\nActive Job CI has been failing since que 2.2.0 is installed. https://buildkite.com/rails/rails/builds/89068#0182e6b9-7c84-4b85-a651-8d640f5eb076\r\n\r\n```ruby\r\ngit clone https://github.com/rails/rails\r\ncd rails/activejob\r\nbundle update que\r\nAJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\n```\r\n\r\nAlthough there are 3 failures and 75 errors. This script just runs a single test because it looks the root cause is the same.\r\n\r\n\r\n### Expected behavior\r\nIt should pass.\r\n\r\n### Actual behavior\r\nIt raises `ArgumentError: wrong number of arguments (given 2, expected 1)`.\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 62302\r\n\r\n# Running:\r\n\r\nE\r\n\r\nError:\r\nQueuingTest#test_run_queued_job:\r\nArgumentError: wrong number of arguments (given 2, expected 1)\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:78:in `run'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job_methods.rb:51:in `_run'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:248:in `block (2 levels) in _run_attrs'\r\n    (eval):9:in `run_job_middleware'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:247:in `block in _run_attrs'\r\n    <internal:kernel>:90:in `tap'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:246:in `_run_attrs'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:223:in `run'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/support/que/inline.rb:15:in `enqueue'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:66:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:27:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:67:in `block in enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:118:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:28:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:27:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:9:in `block (2 levels) in <module:Instrumentation>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:27:in `tag_logger'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:14:in `block (2 levels) in <module:Logging>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:138:in `run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:63:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:30:in `perform_later'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/cases/queuing_test.rb:14:in `block in <class:QueuingTest>'\r\n\r\n\r\nbin/test test/cases/queuing_test.rb:13\r\n\r\n\r\n\r\nFinished in 0.008930s, 111.9768 runs/s, 0.0000 assertions/s.\r\n1 runs, 0 assertions, 0 failures, 1 errors, 0 skips\r\n$\r\n```\r\n\r\n### Additional information\r\n* `require_job_options_kwarg?` always returns `false` because `JobWrapper.method(:enqueue).parameters` does not have any `[:key, :job_options]` \r\nwhere it looks expected to return `true`.\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 32774\r\n\r\n# Running:\r\n\r\n[46, 55] in ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n    46|       end\r\n    47|\r\n    48|       private\r\n    49|         def require_job_options_kwarg?\r\n    50|           require 'debug'\r\n=>  51|           binding.break\r\n    52|           @require_job_options_kwarg ||=\r\n    53|             JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }\r\n    54|         end\r\n    55|\r\n=>#0\tActiveJob::QueueAdapters::QueAdapter#require_job_options_kwarg? at ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:51\r\n  #1\tActiveJob::QueueAdapters::QueAdapter#enqueue(job=#<HelloJob:0x00007fc861807740 @arguments...) at ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:24\r\n  # and 40 frames (use `bt' command for all frames)\r\n(rdbg) JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }    # ruby\r\nfalse\r\n(rdbg) JobWrapper.method(:enqueue).parameters    # ruby\r\n[[:req, :args], [:keyreq, :priority], [:keyreq, :queue], [:key, :run_at]]\r\n(rdbg) quit    # command\r\nReally quit? [Y/n] Y\r\n```\r\n\r\n* By changing `require_job_options_kwarg?` always returns `true`, it raises `ArgumentError: missing keywords: :priority, :queue`\r\n\r\n```ruby\r\n$ git diff\r\ndiff --git a/activejob/lib/active_job/queue_adapters/que_adapter.rb b/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\nindex 41b3633a07..54e8cbc39b 100644\r\n--- a/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n+++ b/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n@@ -47,6 +47,7 @@ def enqueue_at(job, timestamp) # :nodoc:\r\n\r\n       private\r\n         def require_job_options_kwarg?\r\n+          return true\r\n           @require_job_options_kwarg ||=\r\n             JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }\r\n         end\r\n$\r\n```\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 21508\r\n\r\n# Running:\r\n\r\nE\r\n\r\nError:\r\nQueuingTest#test_run_queued_job:\r\nArgumentError: missing keywords: :priority, :queue\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:65:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:25:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:67:in `block in enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:118:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:28:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:27:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:9:in `block (2 levels) in <module:Instrumentation>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:27:in `tag_logger'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:14:in `block (2 levels) in <module:Logging>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:138:in `run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:63:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:30:in `perform_later'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/cases/queuing_test.rb:14:in `block in <class:QueuingTest>'\r\n\r\n\r\nbin/test test/cases/queuing_test.rb:13\r\n\r\n\r\n\r\nFinished in 0.008724s, 114.6312 runs/s, 0.0000 assertions/s.\r\n1 runs, 0 assertions, 0 failures, 1 errors, 0 skips\r\n$\r\n```\r\n\r\n\r\n### System configuration\r\n**Rails version**: main branch\r\n\r\n**Ruby version**: $ ruby -v\r\nruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [x86_64-linux]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45899/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45893","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45893/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45893/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45893/events","html_url":"https://github.com/rails/rails/issues/45893","id":1352793907,"node_id":"I_kwDNIULOUKH_Mw","number":45893,"title":"ActiveRecord: HMT with conditions does not update the in-memory collection when pushing new objects","user":{"login":"joanniclaborde","id":411925,"node_id":"MDQ6VXNlcjQxMTkyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/411925?v=4","gravatar_id":"","url":"https://api.github.com/users/joanniclaborde","html_url":"https://github.com/joanniclaborde","followers_url":"https://api.github.com/users/joanniclaborde/followers","following_url":"https://api.github.com/users/joanniclaborde/following{/other_user}","gists_url":"https://api.github.com/users/joanniclaborde/gists{/gist_id}","starred_url":"https://api.github.com/users/joanniclaborde/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joanniclaborde/subscriptions","organizations_url":"https://api.github.com/users/joanniclaborde/orgs","repos_url":"https://api.github.com/users/joanniclaborde/repos","events_url":"https://api.github.com/users/joanniclaborde/events{/privacy}","received_events_url":"https://api.github.com/users/joanniclaborde/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-26T22:40:12Z","updated_at":"2022-08-30T15:33:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi! When using a `has_many :a, through: :b` relation, and the `:b` relation has a condition, adding new objects doesn't update the in-memory collection properly (stops after the first object).\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :packages, force: true do |t|\r\n  end\r\n\r\n  create_table :package_items, force: true do |t|\r\n    t.integer :package_id\r\n    t.integer :item_id\r\n  end\r\n\r\n  create_table :items, force: true do |t|\r\n    t.boolean \"deleted\", default: false\r\n  end\r\nend\r\n\r\nclass Package < ActiveRecord::Base\r\n  has_many :package_items, ->{ where(item_id: Item.active.pluck(:id)) }\r\n  has_many :items, through: :package_items\r\nend\r\n\r\nclass PackageItem < ActiveRecord::Base\r\n  belongs_to :package\r\n  belongs_to :item\r\nend\r\n\r\nclass Item < ActiveRecord::Base\r\n  has_many :package_items\r\n  has_many :packages, through: :package_items\r\n\r\n  scope :active, -> { where(deleted: false) }\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    package = Package.create!\r\n    package.items << Item.create!\r\n    package.items << Item.create!\r\n    package.items << Item.create!\r\n\r\n    # This should be [3, 3, 3] but we get [3, 1, 3]\r\n    assert_equal [3, 3, 3], [Item.count, package.items.count, package.reload.items.count]\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n`package.items.count` is equal to 3.\r\n\r\n### Actual behavior\r\n`package.items.count` is equal to 1, even though all the items and relations are created properly (see assertion).\r\n\r\n### System configuration\r\n**Rails version**: tested on `7.1.0.alpha` and `6.1.6.1`.\r\n\r\n**Ruby version**: tested on `2.7.5`.\r\n\r\n### Workaround\r\nI was able to fix this issue by changing the weird condition to a proper scope:\r\n\r\n```ruby\r\nclass Package < ActiveRecord::Base\r\n  has_many :package_items, ->{ includes(:item).merge(Item.active) }\r\n  has_many :items, through: :package_items\r\nend\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45893/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45893/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45880","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45880/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45880/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45880/events","html_url":"https://github.com/rails/rails/issues/45880","id":1349546108,"node_id":"I_kwDNIULOUHBwfA","number":45880,"title":"Google search links to old API docs","user":{"login":"abraham","id":3341,"node_id":"MDQ6VXNlcjMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/3341?v=4","gravatar_id":"","url":"https://api.github.com/users/abraham","html_url":"https://github.com/abraham","followers_url":"https://api.github.com/users/abraham/followers","following_url":"https://api.github.com/users/abraham/following{/other_user}","gists_url":"https://api.github.com/users/abraham/gists{/gist_id}","starred_url":"https://api.github.com/users/abraham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abraham/subscriptions","organizations_url":"https://api.github.com/users/abraham/orgs","repos_url":"https://api.github.com/users/abraham/repos","events_url":"https://api.github.com/users/abraham/events{/privacy}","received_events_url":"https://api.github.com/users/abraham/received_events","type":"User","site_admin":true},"labels":[{"id":150377,"node_id":"MDU6TGFiZWwxNTAzNzc=","url":"https://api.github.com/repos/rails/rails/labels/docs","name":"docs","color":"02d7e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-24T14:33:55Z","updated_at":"2022-08-25T23:48:01Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n1. Search Google for a Rails API https://www.google.com/search?q=rails+update_all\r\n2. Follow link for \"ActiveRecord::Relation - Rails API\"\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n\r\nFind documentation for the latest version of Rails. Currently `7.0.3.1`.\r\n\r\n`https://api.rubyonrails.org/classes/ActiveRecord/Relation.html`\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n\r\nFind documentation for the the very old version of `3.2.3`.\r\n\r\n`https://api.rubyonrails.org/v3.2.3/classes/ActiveRecord/Relation.html`\r\n\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45880/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45880/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45832","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45832/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45832/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45832/events","html_url":"https://github.com/rails/rails/issues/45832","id":1339487378,"node_id":"I_kwDNIULOT9b0kg","number":45832,"title":"MySQL 8.0 VARBINARY default value is hexadecimal","user":{"login":"HParker","id":4482399,"node_id":"MDQ6VXNlcjQ0ODIzOTk=","avatar_url":"https://avatars.githubusercontent.com/u/4482399?v=4","gravatar_id":"","url":"https://api.github.com/users/HParker","html_url":"https://github.com/HParker","followers_url":"https://api.github.com/users/HParker/followers","following_url":"https://api.github.com/users/HParker/following{/other_user}","gists_url":"https://api.github.com/users/HParker/gists{/gist_id}","starred_url":"https://api.github.com/users/HParker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HParker/subscriptions","organizations_url":"https://api.github.com/users/HParker/orgs","repos_url":"https://api.github.com/users/HParker/repos","events_url":"https://api.github.com/users/HParker/events{/privacy}","received_events_url":"https://api.github.com/users/HParker/received_events","type":"User","site_admin":true},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":309390193,"node_id":"MDU6TGFiZWwzMDkzOTAxOTM=","url":"https://api.github.com/repos/rails/rails/labels/MySQL","name":"MySQL","color":"fef2c0","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-08-15T20:42:09Z","updated_at":"2022-08-16T10:23:16Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Default values on VARBINARY columns changed behavior between MySQL 5.7 and 8.0\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"mysql2\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"mysql2\", database: \"adam_test\", prepared_statements: false, host: '127.0.0.1', port: 3307, user: \"root\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.binary :some_binary, null: false, limit: 1024, default: \"hello-world\"\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_mysql_defaults\r\n    post = Post.create!\r\n\r\n    mysql_vars = ActiveRecord::Base.connection.select_rows(\"SHOW VARIABLES LIKE '%version%'\")\r\n    puts mysql_vars.inspect\r\n    puts Post.column_defaults\r\n\r\n    # assert_equal \"0x68656C6C6F2D776F726C64\", post.some_binary # This passes\r\n    assert_equal \"hello-world\", post.some_binary # This fails\r\n\r\n    reloaded_post = Post.first\r\n    assert_equal \"hello-world\", reloaded_post.some_binary # this passes\r\n  end\r\nend\r\n```\r\n\r\nOn MySQL 5.7:\r\n\r\n```ruby\r\nPost.column_defaults # => {\"id\"=>nil, \"some_binary\"=>\"hello-world\"}\r\n```\r\n\r\nOn MySQL 8.0:\r\n\r\n```ruby\r\nPost.column_defaults # => {\"id\"=>nil, \"some_binary\"=>\"0x68656C6C6F2D776F726C64\"}\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe default value on binary columns should be Ruby strings, not ruby strings of hexadecimal.\r\n\r\n### Actual behavior\r\n\r\nThe column default in MySQL 8.0 is a hexadecimal string representing the binary data.\r\n\r\n### System configuration\r\n**Rails version**: main\r\n\r\n**Ruby version**: 3.1.0\r\n\r\nSome interesting MySQL forum posts about this behavior change:\r\n\r\n- https://forums.mysql.com/read.php?24,685577,685577\r\n- https://forums.mysql.com/read.php?20,698061,698061#msg-698061\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45832/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45832/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45830","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45830/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45830/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45830/events","html_url":"https://github.com/rails/rails/issues/45830","id":1338922250,"node_id":"I_kwDNIULOT85VCg","number":45830,"title":"ActiveRecord Rollbacks on errors which happen on commit","user":{"login":"Baxxx","id":17880055,"node_id":"MDQ6VXNlcjE3ODgwMDU1","avatar_url":"https://avatars.githubusercontent.com/u/17880055?v=4","gravatar_id":"","url":"https://api.github.com/users/Baxxx","html_url":"https://github.com/Baxxx","followers_url":"https://api.github.com/users/Baxxx/followers","following_url":"https://api.github.com/users/Baxxx/following{/other_user}","gists_url":"https://api.github.com/users/Baxxx/gists{/gist_id}","starred_url":"https://api.github.com/users/Baxxx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baxxx/subscriptions","organizations_url":"https://api.github.com/users/Baxxx/orgs","repos_url":"https://api.github.com/users/Baxxx/repos","events_url":"https://api.github.com/users/Baxxx/events{/privacy}","received_events_url":"https://api.github.com/users/Baxxx/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":126910270,"node_id":"MDU6TGFiZWwxMjY5MTAyNzA=","url":"https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps","name":"With reproduction steps","color":"009800","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2022-08-15T12:09:14Z","updated_at":"2022-08-25T13:32:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nIn some of our projects we use Postgres as database, and for some cases we deferred trigger constraints. These triggers fire up when `COMMIT` is called. Trigger can raise an error, which kills the transaction. ActiveRecord catches the error, and bubbles it up to developer, but it also sends `ROLLBACK` to Postgres, to which Postgres gives a warning that there is no transaction in progress.\r\n\r\nI didn't test this with sqlite3 or mysql.\r\n\r\nYou can see the reproduction script, and screenshot with the current behavior.\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", \"~> 7\"\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"logger\"\r\n\r\nlogger = Logger.new(STDOUT)\r\n\r\n# This connection will do for database-independent bug reports.\r\npg_opts = {adapter: \"postgresql\", database: \"ar_rollback_after_failed_commit_issue\"}\r\n\r\nActiveRecord::Base.establish_connection(pg_opts.except(:database))\r\nActiveRecord::Base.connection.drop_database(pg_opts[:database])\r\nActiveRecord::Base.connection.create_database(pg_opts[:database])\r\nlogger.info \"Database #{pg_opts[:database]} was (re)created.\"\r\n\r\nActiveRecord::Base.establish_connection(pg_opts)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  execute <<~SQL\r\n    CREATE FUNCTION perform_custom_validation()\r\n      RETURNS TRIGGER\r\n      LANGUAGE plpgsql\r\n      AS $$\r\n        DECLARE\r\n          total_invalid INTEGER;\r\n        BEGIN\r\n          SELECT COUNT(*) INTO total_invalid\r\n          FROM things\r\n          WHERE name = 'bad';\r\n\r\n          IF (total_invalid > 0) THEN\r\n            RAISE EXCEPTION 'There are bad things';\r\n          END IF;\r\n          RETURN NULL;\r\n        END;\r\n      $$;\r\n\r\n    CREATE TABLE \"things\" (\r\n      \"id\" bigserial primary key,\r\n      \"name\" character varying NOT NULL\r\n    );\r\n\r\n    CREATE CONSTRAINT\r\n      TRIGGER bank_transaction_rl_payment_date_validation\r\n      AFTER INSERT OR UPDATE ON things\r\n      DEFERRABLE INITIALLY DEFERRED\r\n      FOR EACH ROW EXECUTE FUNCTION perform_custom_validation();\r\n  SQL\r\nend\r\n\r\nclass Thing < ActiveRecord::Base\r\n  validates :name, presence: true\r\nend\r\n\r\n# All good\r\nlogger.info \"First transaction\"\r\nThing.create!(name: \"good\")\r\n\r\n# AR tries to commit, DB raises an error, AR tries to ROLLBACK, and PG gives a warning\r\nbegin\r\n  logger.info \"Second transaction\"\r\n  Thing.create!(name: \"bad\")\r\nrescue StandardError\r\n  # Doesn't matter\r\nend\r\n```\r\n\r\n### Expected behavior\r\nActiveRecord should not `ROLLBACK`, as there is no transaction in progress.\r\n\r\n### Actual behavior\r\nActiveRecord tries to `ROLLBACK`.\r\n\r\n![Screenshot from 2022-08-15 14-07-11](https://user-images.githubusercontent.com/17880055/184632335-0277cd27-4c7b-4b98-94a8-373be34a87ee.png)\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 2.7.5p203\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45830/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45830/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45823","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45823/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45823/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45823/events","html_url":"https://github.com/rails/rails/issues/45823","id":1337409694,"node_id":"I_kwDNIULOT7dAng","number":45823,"title":"Change Column with Raw Character Set Failure","user":{"login":"ahoglund","id":3407303,"node_id":"MDQ6VXNlcjM0MDczMDM=","avatar_url":"https://avatars.githubusercontent.com/u/3407303?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoglund","html_url":"https://github.com/ahoglund","followers_url":"https://api.github.com/users/ahoglund/followers","following_url":"https://api.github.com/users/ahoglund/following{/other_user}","gists_url":"https://api.github.com/users/ahoglund/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoglund/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoglund/subscriptions","organizations_url":"https://api.github.com/users/ahoglund/orgs","repos_url":"https://api.github.com/users/ahoglund/repos","events_url":"https://api.github.com/users/ahoglund/events{/privacy}","received_events_url":"https://api.github.com/users/ahoglund/received_events","type":"User","site_admin":true},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":126910270,"node_id":"MDU6TGFiZWwxMjY5MTAyNzA=","url":"https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps","name":"With reproduction steps","color":"009800","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-12T16:21:50Z","updated_at":"2022-08-12T20:47:38Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"With [this recent change to how collation is handled for column changes](https://github.com/rails/rails/pull/45744/files), there is now a potential for older migrations written in a specific manner to break if the `collation:` argument is not specific.\r\n\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\n# you need to install mysql locally for this to work.\r\n# on Mac:\r\n# brew install mysql\r\n# brew services start mysql\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"mysql2\"\r\n\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nclient = Mysql2::Client.new(host: 'localhost', username: \"root\")\r\nclient.query(\"DROP DATABASE test\")\r\nclient.query(\"CREATE DATABASE test\")\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"mysql2\", database: \"test\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :payments, force: true do |t|\r\n    t.string :description, \"varchar(64)\", null: false\r\n  end\r\nend\r\n\r\nclass Payment < ActiveRecord::Base\r\nend\r\n\r\nclass ChangeAmountToAddScale < ActiveRecord::Migration[7.1]\r\n  # This sets the default character set for the payments\r\n  # table to utf32 with a default COLLATION of utf32_general_ci.\r\n  # This can be verified by running the following query:\r\n  #\r\n  # SHOW CHARACTER SET;\r\n  #\r\n  connection.execute(<<~SQL)\r\n    ALTER TABLE payments CONVERT TO CHARACTER SET utf32\r\n  SQL\r\n\r\n  def change\r\n    reversible do |dir|\r\n      dir.up do\r\n        change_table(:payments, bulk: true) do |t|\r\n          # The default collation of utf32_general_ci\r\n          # will not be compatible with this ascii character set. \r\n          #\r\n          # when we build the column change now we automatically\r\n          # try to assign the previous collation to the column if no `collation:` is specified.\r\n          # \r\n          # https://github.com/rails/rails/pull/45744\r\n          #\r\n          # The workaround is to add `collation: 'ascii_bin'` or `collation: 'ascii_general_ci'` to the change.\r\n          #\r\n          # This isn't a huge deal and it has a workaround but it _will_ break\r\n          # anyone who has migrations that are written like this and upgrade to this version\r\n          # of Rails.\r\n          t.change :description, \"varchar(64) CHARACTER SET ascii\", null: false\r\n        end\r\n      end\r\n\r\n      dir.down do\r\n        change_table(:payments, bulk: true) do |t|\r\n          t.change :description, \"varchar(64)\", null: false\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_migration_up\r\n    ChangeAmountToAddScale.migrate(:up)\r\n    Payment.reset_column_information\r\n\r\n    assert_equal \"varchar\", Payment.columns.last.sql_type\r\n  end\r\n\r\n  def test_migration_down\r\n    ChangeAmountToAddScale.migrate(:down)\r\n    Payment.reset_column_information\r\n\r\n    assert_equal \"varchar\", Payment.columns.last.sql_type\r\n  end\r\nend\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nI would expect this to detect that the character set is being changed, and either \r\n\r\n1. change the collation to be compatible.\r\n2. At least give a clearer error that requires the `collation:` arg to be passed when the character set is being modified.\r\n\r\n### Actual behavior\r\n\r\nThis error:\r\n\r\n```\r\nError:\r\nBugTest#test_migration_up:\r\nActiveRecord::StatementInvalid: Mysql2::Error: COLLATION 'utf32_general_ci' is not valid for CHARACTER SET 'ascii'\r\n    test.rb:51:in `block (2 levels) in change'\r\n    test.rb:50:in `block in change'\r\n    test.rb:49:in `change'\r\n    test.rb:67:in `test_migration_up'\r\n```\r\n\r\n### System configuration\r\n**Rails version**: main\r\n**Ruby version**: ruby 3.1.1p18\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45823/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45823/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45822","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45822/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45822/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45822/events","html_url":"https://github.com/rails/rails/issues/45822","id":1337253221,"node_id":"I_kwDNIULOT7TdZQ","number":45822,"title":"ActiveRecord: Wrong results returned by ActiveRecord::Associations::Preloader when intermediate association is already preloaded.","user":{"login":"yopzer","id":6330271,"node_id":"MDQ6VXNlcjYzMzAyNzE=","avatar_url":"https://avatars.githubusercontent.com/u/6330271?v=4","gravatar_id":"","url":"https://api.github.com/users/yopzer","html_url":"https://github.com/yopzer","followers_url":"https://api.github.com/users/yopzer/followers","following_url":"https://api.github.com/users/yopzer/following{/other_user}","gists_url":"https://api.github.com/users/yopzer/gists{/gist_id}","starred_url":"https://api.github.com/users/yopzer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yopzer/subscriptions","organizations_url":"https://api.github.com/users/yopzer/orgs","repos_url":"https://api.github.com/users/yopzer/repos","events_url":"https://api.github.com/users/yopzer/events{/privacy}","received_events_url":"https://api.github.com/users/yopzer/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"jhawthorn","id":131752,"node_id":"MDQ6VXNlcjEzMTc1Mg==","avatar_url":"https://avatars.githubusercontent.com/u/131752?v=4","gravatar_id":"","url":"https://api.github.com/users/jhawthorn","html_url":"https://github.com/jhawthorn","followers_url":"https://api.github.com/users/jhawthorn/followers","following_url":"https://api.github.com/users/jhawthorn/following{/other_user}","gists_url":"https://api.github.com/users/jhawthorn/gists{/gist_id}","starred_url":"https://api.github.com/users/jhawthorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhawthorn/subscriptions","organizations_url":"https://api.github.com/users/jhawthorn/orgs","repos_url":"https://api.github.com/users/jhawthorn/repos","events_url":"https://api.github.com/users/jhawthorn/events{/privacy}","received_events_url":"https://api.github.com/users/jhawthorn/received_events","type":"User","site_admin":true},"assignees":[{"login":"jhawthorn","id":131752,"node_id":"MDQ6VXNlcjEzMTc1Mg==","avatar_url":"https://avatars.githubusercontent.com/u/131752?v=4","gravatar_id":"","url":"https://api.github.com/users/jhawthorn","html_url":"https://github.com/jhawthorn","followers_url":"https://api.github.com/users/jhawthorn/followers","following_url":"https://api.github.com/users/jhawthorn/following{/other_user}","gists_url":"https://api.github.com/users/jhawthorn/gists{/gist_id}","starred_url":"https://api.github.com/users/jhawthorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhawthorn/subscriptions","organizations_url":"https://api.github.com/users/jhawthorn/orgs","repos_url":"https://api.github.com/users/jhawthorn/repos","events_url":"https://api.github.com/users/jhawthorn/events{/privacy}","received_events_url":"https://api.github.com/users/jhawthorn/received_events","type":"User","site_admin":true}],"milestone":null,"comments":1,"created_at":"2022-08-12T14:06:55Z","updated_at":"2022-08-18T23:36:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"activerecord\", \"7.0.3.1\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :a_records, force: true\r\n\r\n  create_table :b_records, force: true do |t|\r\n    t.references :a_record\r\n    t.references :c_record\r\n  end\r\n\r\n  create_table :c_records, force: true\r\n\r\n  create_table :d_records, force: true do |t|\r\n    t.references :c_record\r\n  end\r\nend\r\n\r\nclass ARecord < ActiveRecord::Base\r\n  has_one :b_record\r\n  has_one :c_record, through: :b_record\r\n  has_many :d_records, through: :c_record\r\nend\r\n\r\nclass BRecord < ActiveRecord::Base\r\n  belongs_to :a_record\r\n  belongs_to :c_record\r\nend\r\n\r\nclass CRecord < ActiveRecord::Base\r\n  has_one :b_record\r\n  has_many :d_records\r\nend\r\n\r\nclass DRecord < ActiveRecord::Base\r\n  belongs_to :c_record\r\nend\r\n\r\na = ARecord.create!\r\nc = CRecord.create!\r\nBRecord.create!(a_record: a, c_record: c)\r\nDRecord.create!(c_record: c)\r\nDRecord.create!(c_record: c)\r\n\r\na.reload\r\na.c_record # NB: if removed this works\r\n\r\n::ActiveRecord::Associations::Preloader.new(records: [a], associations: :d_records).call\r\nputs({ record_ids: a.d_records.map(&:id), size: a.d_records.size })\r\n```\r\n\r\n### Expected behavior\r\nTwo records should be loaded:\r\n`{:record_ids=>[1, 2], :size=>2}`\r\n\r\n### Actual behavior\r\nNo records are loaded:\r\n`{:record_ids=>[], :size=>0}`\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 2.7.5\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45822/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45822/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45817","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45817/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45817/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45817/events","html_url":"https://github.com/rails/rails/issues/45817","id":1336797388,"node_id":"I_kwDNIULOT63ozA","number":45817,"title":"Value of attribute default proc is shared between instances after dup + dirty tracking","user":{"login":"quadule","id":15299,"node_id":"MDQ6VXNlcjE1Mjk5","avatar_url":"https://avatars.githubusercontent.com/u/15299?v=4","gravatar_id":"","url":"https://api.github.com/users/quadule","html_url":"https://github.com/quadule","followers_url":"https://api.github.com/users/quadule/followers","following_url":"https://api.github.com/users/quadule/following{/other_user}","gists_url":"https://api.github.com/users/quadule/gists{/gist_id}","starred_url":"https://api.github.com/users/quadule/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/quadule/subscriptions","organizations_url":"https://api.github.com/users/quadule/orgs","repos_url":"https://api.github.com/users/quadule/repos","events_url":"https://api.github.com/users/quadule/events{/privacy}","received_events_url":"https://api.github.com/users/quadule/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-12T06:16:00Z","updated_at":"2022-08-15T15:56:11Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWhen an attribute without a database column defines a default proc, `dup`ing a model in which the default wasn't accessed passes the unevaluated `UserProvidedDefault` attribute to the new instance as the attribute's original value. Checking the new attribute for changes will then memoize the value in the original attribute definition, making it the default value in every new model instance afterward.\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n  gem \"rails\", github: \"rails/rails\", ref: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Schema.define do\r\n  create_table :cats do |t|\r\n    t.string :name\r\n  end\r\nend\r\n\r\nclass Cat < ActiveRecord::Base\r\n  attribute :sounds, default: -> { [] }\r\nend\r\n\r\nclass VirtualAttributeTest < Minitest::Test\r\n  def test_virtual_attribute_defaults_are_independent\r\n    Cat.new.dup.save!\r\n    Cat.new.sounds << \"meow\"\r\n    refute_same Cat.new.sounds, Cat.new.sounds\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nEach new instance should get a new default value from the proc.\r\n\r\n### Actual behavior\r\nAfter using dirty tracking on a duplicated instance with an uncalled proc default, all new instances of a model receive the same default value and share any changes made to it.\r\n\r\n### Affected versions\r\nThis seems to date back quite a while; the test fails on the main branch back to 5-1-stable.\r\n\r\n### Credits\r\nThanks to @GBH for originally discovering this bug.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45817/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45817/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45794","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45794/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45794/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45794/events","html_url":"https://github.com/rails/rails/issues/45794","id":1332999733,"node_id":"I_kwDNIULOT3P2NQ","number":45794,"title":"Action Cable client goes in a connection loop if you subscribe multiple times to the same channel","user":{"login":"ProGM","id":5167659,"node_id":"MDQ6VXNlcjUxNjc2NTk=","avatar_url":"https://avatars.githubusercontent.com/u/5167659?v=4","gravatar_id":"","url":"https://api.github.com/users/ProGM","html_url":"https://github.com/ProGM","followers_url":"https://api.github.com/users/ProGM/followers","following_url":"https://api.github.com/users/ProGM/following{/other_user}","gists_url":"https://api.github.com/users/ProGM/gists{/gist_id}","starred_url":"https://api.github.com/users/ProGM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ProGM/subscriptions","organizations_url":"https://api.github.com/users/ProGM/orgs","repos_url":"https://api.github.com/users/ProGM/repos","events_url":"https://api.github.com/users/ProGM/events{/privacy}","received_events_url":"https://api.github.com/users/ProGM/received_events","type":"User","site_admin":false},"labels":[{"id":300028327,"node_id":"MDU6TGFiZWwzMDAwMjgzMjc=","url":"https://api.github.com/repos/rails/rails/labels/actioncable","name":"actioncable","color":"bfdadc","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-09T09:48:36Z","updated_at":"2022-08-17T17:57:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\nYou can just start from a fresh `rails new [project-name]` installation.\r\nChannel code:\r\n```ruby\r\nclass ArticleChannel < ApplicationCable::Channel\r\n  def subscribed\r\n    stream_from \"ArticleChannel\"\r\n  end\r\n\r\n  def unsubscribed\r\n    # Any cleanup needed when channel is unsubscribed\r\n  end\r\nend\r\n```\r\n\r\nJavascript code:\r\n```javascript\r\nimport consumer from \"channels/consumer\"\r\n\r\nfunction subscribe() {\r\n\treturn consumer.subscriptions.create('ArticleChannel', {\r\n\t\tconnected() {\r\n\t\t\tconsole.log('connected');\r\n\t\t\t// Called when the subscription is ready for use on the server\r\n\t\t},\r\n\r\n\t\tdisconnected() {\r\n\t\t\tconsole.log('disconnected');\r\n\t\t\t// Called when the subscription has been terminated by the server\r\n\t\t},\r\n\r\n\t\treceived(data) {\r\n\t\t\tconsole.log('received', data);\r\n\t\t\t// Called when there's incoming data on the websocket for this channel\r\n\t\t}\r\n\t});\r\n}\r\n\r\nsetTimeout(() => {\r\n\tsubscribe();\r\n}, 3000);\r\n\r\nsetTimeout(() => {\r\n\tsubscribe();\r\n}, 4000);\r\n```\r\n\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nAny of these options could be considered an expected behavior:\r\n* Everything just works™, both subscriptions receive notification from that channel and no error is raised\r\n* The second `subscription.create(...)` raises some kind of error, notifying that the channel is already connected\r\n* The second `subscription.create(...)` returns the same instance of Subscription and writes a `console.warning` in console\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nThe second subscriptions triggers a connection loop.\r\n\r\nExample logs with `ActionCable.logger.enabled = true`.\r\n\r\n```\r\n[ActionCable] Opening WebSocket, current state is null, subprotocols: actioncable-v1-json,actioncable-unsupported 1660037219747\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] ConnectionMonitor started. stale threshold = 6 s 1660037219748\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] WebSocket onopen event, using 'actioncable-v1-json' subprotocol 1660037219758\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] ConnectionMonitor recorded connect 1660037219759\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor guaranteeing {\"channel\":\"ArticleChannel\"} 1660037219760\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] Subscription confirmed {\"channel\":\"ArticleChannel\"} 1660037219762\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor forgetting {\"channel\":\"ArticleChannel\"} 1660037219762\r\narticle_channel-b29f3f7bf31169dfadd26c7747a46706d4992a1fd842de8268f206c5f0a0fe45.js:6 connected\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor guaranteeing {\"channel\":\"ArticleChannel\"} 1660037220744\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221248\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221248\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n... and so on, forever...\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 3.1\r\n\r\n### Possible solutions\r\nThis issue happens because the identifier of both subscriptions is the same. Since Rails (ActionCable) doesn't answer to any subsequential command \"subscribe\" from the same client (in this case: `{\"command\":\"subscribe\",\"identifier\":\"{\\\"channel\\\":\\\"ArticleChannel\\\"}\"}`), the `SubscriptionGuarantor` considers the connection failed and [retries to connect after 500ms](https://github.com/rails/rails/blob/8994f09dd2f6ae363e74d8ee3b24700d9db94a16/actioncable/app/assets/javascripts/actioncable.esm.js#L351).\r\n\r\nI see various options to fix this:\r\n* Raise an exception when trying to create a subscription with the same identifier\r\n* Add a random/uuid to the identifier when connecting, so two connection would not share the same identifier? (I've already tested it, and it seems to fix)\r\n\r\nWould you accept a PR from me regarding this?","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45794/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45794/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45791","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45791/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45791/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45791/events","html_url":"https://github.com/rails/rails/issues/45791","id":1332570977,"node_id":"I_kwDNIULOT21rYQ","number":45791,"title":"Google::Apis::ClientError raised when using ActiveStorage to generate signed URLs to access a file in a GCS bucket with GKE Workload Identity","user":{"login":"danielyazbek","id":18390164,"node_id":"MDQ6VXNlcjE4MzkwMTY0","avatar_url":"https://avatars.githubusercontent.com/u/18390164?v=4","gravatar_id":"","url":"https://api.github.com/users/danielyazbek","html_url":"https://github.com/danielyazbek","followers_url":"https://api.github.com/users/danielyazbek/followers","following_url":"https://api.github.com/users/danielyazbek/following{/other_user}","gists_url":"https://api.github.com/users/danielyazbek/gists{/gist_id}","starred_url":"https://api.github.com/users/danielyazbek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielyazbek/subscriptions","organizations_url":"https://api.github.com/users/danielyazbek/orgs","repos_url":"https://api.github.com/users/danielyazbek/repos","events_url":"https://api.github.com/users/danielyazbek/events{/privacy}","received_events_url":"https://api.github.com/users/danielyazbek/received_events","type":"User","site_admin":false},"labels":[{"id":664533972,"node_id":"MDU6TGFiZWw2NjQ1MzM5NzI=","url":"https://api.github.com/repos/rails/rails/labels/activestorage","name":"activestorage","color":"bfd4f2","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-09T01:05:08Z","updated_at":"2022-08-09T15:53:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nConfigure ActiveStorage with GKE Workload identity (as documented [here](https://edgeguides.rubyonrails.org/active_storage_overview.html#google-cloud-storage-service)):\r\n\r\n```ruby\r\ngoogle:\r\n  service: GCS\r\n  iam: true\r\n  project: <%= ENV['ACTIVE_STORAGE_PROJECT'] %>\r\n  bucket: <%= ENV['ACTIVE_STORAGE_BUCKET'] %>\r\n```\r\n\r\nDefine a class:\r\n```ruby\r\nclass Transaction < ApplicationRecord\r\n  has_one_attached :csv_report\r\nend\r\n```\r\n\r\nWrite something to ActiveStorage:\r\n```ruby\r\nt = Transaction.create\r\nt.csv_report.attach(io: StringIO.new(\"A,B,C\"), filename: 'test.csv')\r\n```\r\n\r\nGenerate a Signed URL\r\n```ruby\r\nRails.application.routes.url_helpers.rails_blob_url(Transaction.last.csv_report, disposition: 'attachment')\r\n```\r\n\r\nPaste the generated URL into a browser\r\n\r\n### Expected behavior\r\nActiveRecord provides the attachment\r\n\r\n### Actual behavior\r\nError is raised:\r\n\r\n```\r\nGoogle::Apis::ClientError (Invalid request):\r\ngems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:236:in `check_status': Invalid request (Google::Apis::ClientError)\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/api_command.rb:134:in `check_status'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:199:in `process_response'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:318:in `execute_once'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:118:in `block (2 levels) in execute'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:61:in `block in retriable'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `times'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `retriable'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:115:in `block in execute'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:61:in `block in retriable'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `times'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `retriable'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:105:in `execute'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/base_service.rb:397:in `execute_or_queue_command'\r\n    from gems/google-apis-iamcredentials_v1-0.13.0/lib/google/apis/iamcredentials_v1/service.rb:158:in `sign_service_account_blob'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service/gcs_service.rb:232:in `block in signer'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file/signer_v2.rb:135:in `generate_signature'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file/signer_v2.rb:128:in `signed_url'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file.rb:1801:in `signed_url'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service/gcs_service.rb:160:in `private_url'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:123:in `block in url'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications/instrumenter.rb:24:in `instrument'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications.rb:206:in `instrument'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:163:in `instrument'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:118:in `url'\r\n    from gems/activestorage-7.0.3.1models/active_storage/blob.rb:217:in `url'\r\n    from gems/activestorage-7.0.3.1controllers/active_storage/blobs/redirect_controller.rb:14:in `show'\r\n```\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 3.1.2\r\n\r\n**google-cloud-storage gem version:** 1.38.0\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45791/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45791/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45778","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45778/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45778/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45778/events","html_url":"https://github.com/rails/rails/issues/45778","id":1330360134,"node_id":"I_kwDNIULOT0uvRg","number":45778,"title":"ActiveStorage attachments are lost when casting using Becomes","user":{"login":"markedmondson","id":1653699,"node_id":"MDQ6VXNlcjE2NTM2OTk=","avatar_url":"https://avatars.githubusercontent.com/u/1653699?v=4","gravatar_id":"","url":"https://api.github.com/users/markedmondson","html_url":"https://github.com/markedmondson","followers_url":"https://api.github.com/users/markedmondson/followers","following_url":"https://api.github.com/users/markedmondson/following{/other_user}","gists_url":"https://api.github.com/users/markedmondson/gists{/gist_id}","starred_url":"https://api.github.com/users/markedmondson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markedmondson/subscriptions","organizations_url":"https://api.github.com/users/markedmondson/orgs","repos_url":"https://api.github.com/users/markedmondson/repos","events_url":"https://api.github.com/users/markedmondson/events{/privacy}","received_events_url":"https://api.github.com/users/markedmondson/received_events","type":"User","site_admin":false},"labels":[{"id":664533972,"node_id":"MDU6TGFiZWw2NjQ1MzM5NzI=","url":"https://api.github.com/repos/rails/rails/labels/activestorage","name":"activestorage","color":"bfd4f2","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-05T20:19:16Z","updated_at":"2022-08-09T18:05:34Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\nCreate an ActiveRecord model with an ActiveStorage relation. Initialize and add the associated attachment. Cast the object to another subclassed model, the associated attachment is lost.\r\n\r\n```ruby\r\nunless File.exist?('Gemfile')\r\n    File.write('Gemfile', <<-GEMFILE)\r\n    source 'https://rubygems.org'\r\n    gem 'rails', '~> 6.1'\r\n    gem 'sqlite3'\r\n    GEMFILE\r\n\r\n    system 'bundle'\r\nend\r\n\r\nrequire 'bundler'\r\nBundler.setup(:default)\r\n\r\nrequire 'active_record'\r\nrequire 'active_storage/engine'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  config.hosts << 'example.org'\r\n  config.eager_load = false\r\n  config.session_store :cookie_store, key: 'cookie_store_key'\r\n  secrets.secret_key_base = 'secret_key_base'\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  config.active_storage.service = :local\r\n  config.active_storage.service_configurations = {\r\n    local: {\r\n      root: Dir.tmpdir,\r\n      service: 'Disk'\r\n    }\r\n  }\r\nend\r\n\r\nENV['DATABASE_URL'] = 'sqlite3::memory:'\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\nRails.application.initialize!\r\n\r\nrequire ActiveStorage::Engine.root.join('db/migrate/20170806125915_create_active_storage_tables.rb').to_s\r\n\r\nActiveRecord::Schema.define do\r\n  CreateActiveStorageTables.new.change\r\n\r\n  create_table :posts do |t|\r\n    t.string :title\r\n    t.string :text\r\n  end\r\n\r\n  create_table :comments do |t|\r\n    t.belongs_to :post\r\n    t.string :text\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post\r\n  has_one_attached :image\r\nend\r\n\r\nclass ModeratedComment < Comment; end\r\n\r\nclass BugTest < Minitest::Test\r\n  def setup\r\n    @post = Post.create(title: 'Post', text: 'Welcome')\r\n  end\r\n\r\n  def test_association\r\n    comment = @post.comments.new(text: 'I do not like this')\r\n\r\n    moderated_comment = comment.becomes(ModeratedComment)\r\n\r\n    assert_equal @post, moderated_comment.post # Pass\r\n  end\r\n\r\n  def test_attachment\r\n    file = ActiveStorage::Blob.create_and_upload!(\r\n      content_type: \"image/png\",\r\n      filename: \"image.png\",\r\n      io: ::StringIO.new(\"png\"),\r\n    )\r\n    comment = @post.comments.new(text: 'I do not like this', image: file)\r\n\r\n    moderated_comment = comment.becomes(ModeratedComment)\r\n\r\n    assert moderated_comment.image.attached? # Fail\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nWhen casting an ActiveRecord to another model, I expect the associations to be copied thus I expect attached ActiveStorage association assets to be copied.\r\n\r\n### Actual behavior\r\nPreviously attached ActiveStorage associated objects are lost on the original object.\r\n\r\n### System configuration\r\n**Rails version**: 6.1.6.1\r\n\r\n**Ruby version**: 3.0.4\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45778/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45778/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45775","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45775/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45775/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45775/events","html_url":"https://github.com/rails/rails/issues/45775","id":1330225377,"node_id":"I_kwDNIULOT0mg4Q","number":45775,"title":"Uniqueness validation on association does not use the correct primary key","user":{"login":"mikeletscher","id":6666411,"node_id":"MDQ6VXNlcjY2NjY0MTE=","avatar_url":"https://avatars.githubusercontent.com/u/6666411?v=4","gravatar_id":"","url":"https://api.github.com/users/mikeletscher","html_url":"https://github.com/mikeletscher","followers_url":"https://api.github.com/users/mikeletscher/followers","following_url":"https://api.github.com/users/mikeletscher/following{/other_user}","gists_url":"https://api.github.com/users/mikeletscher/gists{/gist_id}","starred_url":"https://api.github.com/users/mikeletscher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikeletscher/subscriptions","organizations_url":"https://api.github.com/users/mikeletscher/orgs","repos_url":"https://api.github.com/users/mikeletscher/repos","events_url":"https://api.github.com/users/mikeletscher/events{/privacy}","received_events_url":"https://api.github.com/users/mikeletscher/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-05T18:10:22Z","updated_at":"2022-08-09T14:52:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nI'm not _entirely_ sure if this is considered a bug, or intended behavior that's not well-documented for `uniqueness` validations on associations.\r\n\r\nI'm happy to help improve the documentation on this if that would be the most helpful way forward, or if this _is_ considered a bug, I can take a stab at a PR. \r\n\r\nIt looks like the issue is that `build_relation` on the uniqueness validator calls [`bind_attribute` on `ActiveRecord::Relation`](https://github.com/rails/rails/blob/408d061a80a49878ad26b305616ed9ba88ee1411/activerecord/lib/active_record/relation.rb#L45), which properly takes into account the reflection's foreign_key, but not primary key if it's been overridden. \r\n\r\nHere's a test that reproduces the issue:\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire 'bundler/inline'\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem 'activerecord', '~> 7.0.3.1'\r\n  gem 'sqlite3'\r\nend\r\n\r\nrequire 'active_record'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(\r\n  adapter: 'sqlite3',\r\n  database: ':memory:'\r\n)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :prescriptions, force: true do |t|\r\n    t.string :rx_number\r\n  end\r\n\r\n  create_table :fills, force: true do |t|\r\n    t.string :rx_number\r\n  end\r\nend\r\n\r\nclass Prescription < ActiveRecord::Base\r\n  has_many :fills, foreign_key: :rx_number, primary_key: :rx_number\r\nend\r\n\r\nclass Fill < ActiveRecord::Base\r\n  belongs_to :prescription, foreign_key: :rx_number, primary_key: :rx_number\r\n\r\n  validates :prescription, uniqueness: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_fill_unique_by_rx_number\r\n    Fill.create!(rx_number: '1234')\r\n    prescription = Prescription.create!(rx_number: '1234')\r\n    new_fill = prescription.fills.new\r\n    refute new_fill.save\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe uniqueness validation query would use the `rx_number` value of the `Prescription` to query for an existing `Fill` since that is what is set as the associations `primary_key`. \r\n\r\n### Actual behavior\r\nThe uniqueness validation query uses the `id` value of the `Prescription` to query for existing fills, disregarding the association's overridden `primary_key`.\r\n\r\nThis test passes if I patch bind_attribute to read the primary key from the reflection instead of directly from the reflection's klass:\r\n\r\n```ruby\r\nmodule ActiveRecord\r\n  # = Active Record \\Relation\r\n  class Relation\r\n    def bind_attribute(name, value) # :nodoc:\r\n      if reflection = klass._reflect_on_association(name)\r\n        name = reflection.foreign_key\r\n        primary_key = reflection.association_primary_key || reflection.klass.primary_key\r\n        value = value.read_attribute(primary_key) unless value.nil?\r\n      end\r\n\r\n      attr = table[name]\r\n      bind = predicate_builder.build_bind_attribute(attr.name, value)\r\n      yield attr, bind\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nWe were able to work around this by adding the uniqueness validation to the `rx_number` attribute instead of the association. If this is the desired way to handle this, I can open a PR to add a note about this to the docs, as it took us by surprise that validation on the association wouldn't use the defined key to get the value to query.\r\n\r\n### System configuration\r\n**Rails version**: `7.0.3.1`\r\n\r\n**Ruby version**: `3.1.2`\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45775/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45775/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45766","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45766/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45766/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45766/events","html_url":"https://github.com/rails/rails/issues/45766","id":1329650798,"node_id":"I_kwDNIULOT0Dcbg","number":45766,"title":"Active Model Dirty: attribute_changed? options (from/to) do not accept symbol","user":{"login":"thomasvanholder","id":36309895,"node_id":"MDQ6VXNlcjM2MzA5ODk1","avatar_url":"https://avatars.githubusercontent.com/u/36309895?v=4","gravatar_id":"","url":"https://api.github.com/users/thomasvanholder","html_url":"https://github.com/thomasvanholder","followers_url":"https://api.github.com/users/thomasvanholder/followers","following_url":"https://api.github.com/users/thomasvanholder/following{/other_user}","gists_url":"https://api.github.com/users/thomasvanholder/gists{/gist_id}","starred_url":"https://api.github.com/users/thomasvanholder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomasvanholder/subscriptions","organizations_url":"https://api.github.com/users/thomasvanholder/orgs","repos_url":"https://api.github.com/users/thomasvanholder/repos","events_url":"https://api.github.com/users/thomasvanholder/events{/privacy}","received_events_url":"https://api.github.com/users/thomasvanholder/received_events","type":"User","site_admin":false},"labels":[{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-08-05T08:54:51Z","updated_at":"2022-08-07T20:25:55Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nThe `attribute_changed?` receives optional options, such as `from` and `to`. Each option key is passed a value. Only string values are accepted, and symbols are not recognized. This is inconsistent behavior as updating a column using the `update` method does accept both a string and a symbol.\r\n \r\n Source code: [attribute_changed?](https://github.com/rails/rails/blob/04972d9b9ef60796dc8f0917817b5392d61fcf09/activemodel/lib/active_model/dirty.rb#L178) \r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"debug\"\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.column :status, :integer, default: 0\r\n    t.date :review_date\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  enum :status, {draft: 0, published: 1}\r\n\r\n  before_update :set_review_date\r\n\r\n  def set_review_date\r\n    # when \"published\" is set as a string, the test correcty passes.\r\n    if status_changed?(to: :published)\r\n      self.review_date = Date.today\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_set_status\r\n    post = Post.create!\r\n    post.update(status: :published)\r\n\r\n    assert_equal \"published\", post.status\r\n  end\r\n\r\n  def test_sets_review_date\r\n    post = Post.create!\r\n    post.published!\r\n\r\n    assert_equal \"published\", post.status\r\n    assert_equal Date.today, post.review_date\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe value of the optional arguments `from` and `to` accepts both a string or symbol.\r\n\r\n### Actual behavior\r\nWhen options, such as `from` and `to` are passed to the [attribute_changed?](https://github.com/rails/rails/blob/04972d9b9ef60796dc8f0917817b5392d61fcf09/activemodel/lib/active_model/dirty.rb#L178) method the arguments are not recognized when passed as a symbol.\r\n\r\n### System configuration\r\n**Rails version**: `Rails 7.0.3`\r\n\r\n**Ruby version**: `ruby 3.1.2`\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45766/reactions","total_count":2,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45766/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45758","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45758/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45758/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45758/events","html_url":"https://github.com/rails/rails/issues/45758","id":1327892229,"node_id":"I_kwDNIULOTyYHBQ","number":45758,"title":"ActiveRecord 6.1 and JSONB: Incorrect results value/type when using both arrow operator and double arrow operator in the same SELECT statement","user":{"login":"shhavel","id":1169424,"node_id":"MDQ6VXNlcjExNjk0MjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1169424?v=4","gravatar_id":"","url":"https://api.github.com/users/shhavel","html_url":"https://github.com/shhavel","followers_url":"https://api.github.com/users/shhavel/followers","following_url":"https://api.github.com/users/shhavel/following{/other_user}","gists_url":"https://api.github.com/users/shhavel/gists{/gist_id}","starred_url":"https://api.github.com/users/shhavel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shhavel/subscriptions","organizations_url":"https://api.github.com/users/shhavel/orgs","repos_url":"https://api.github.com/users/shhavel/repos","events_url":"https://api.github.com/users/shhavel/events{/privacy}","received_events_url":"https://api.github.com/users/shhavel/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-08-03T23:42:39Z","updated_at":"2022-08-05T22:26:04Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Issue Description\r\n\r\nGenerally when using JSONB operators `->` (arrow operator) and `->>` (double arrow operator) in SELECT statement, \r\nActiveRecord returns correct result types: objects for `->` operator and string for `->>` operator.\r\nBut when using both operators in the same select statement, the returned results may have an unexpected type or be `nil`.\r\n\r\n### Steps to reproduce with Expected behaviour in tests and Actual behaviour in comments\r\n\r\n```ruby\r\n# file: activerecord_6_1_jsonb_test.rb\r\n# run: ruby activerecord_6_1_jsonb_test.rb\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"activerecord\", \"6.1.6.1\" # the same behaviour for version \"7.0.3.1\"\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\npg_opts = {adapter: \"postgresql\", database: \"jsonb_activerecord_issue\"}\r\nbegin\r\n  ActiveRecord::Base.establish_connection(pg_opts.except(:database))\r\n  ActiveRecord::Base.connection.create_database(pg_opts[:database])\r\n  puts \"Database #{pg_opts[:database]} was created.\"\r\nrescue => ActiveRecord::DatabaseAlreadyExists\r\n  puts \"Database #{pg_opts[:database]} alredy exists.\"\r\nend\r\nActiveRecord::Base.establish_connection(pg_opts)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :entries, force: true do |t|\r\n    t.jsonb :value\r\n  end\r\nend\r\n\r\nclass Entry < ActiveRecord::Base\r\nend\r\nEntry.create(value: {a: \"a\", b: \"b\", c: {}})\r\n\r\nclass BugTest < Minitest::Test\r\n  # passed\r\n  def test_jsonb_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->'a', value->'b'\"))\r\n    assert_equal [[{}, \"b\"]], Entry.pluck(Arel.sql(\"value->'c', value->'b'\"))\r\n  end\r\n\r\n  # passed\r\n  def test_jsonb_double_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'a', value->>'b'\"))\r\n    assert_equal [[\"{}\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'c', value->>'b'\"))\r\n  end\r\n\r\n  # failed (this test results are differ in activerecord 6.0)\r\n  def test_jsonb_arrow_operator_and_double_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->'a', value->>'b'\")) # Actual [[\"a\", nil]]\r\n    assert_equal [[{}, \"b\"]], Entry.pluck(Arel.sql(\"value->'c', value->>'b'\")) # Actual [[{}, nil]]\r\n  end\r\n\r\n  # failed\r\n  def test_jsonb_double_arrow_operator_and_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'a', value->'b'\")) # Actual [[nil, \"b\"]]\r\n    assert_equal [[\"{}\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'c', value->'b'\")) # Actual [[{}, \"b\"]]\r\n  end\r\nend\r\n```\r\n\r\n### PostgreSQL results \r\n\r\n```sql\r\nSELECT\r\n  pg_typeof(value->'a'), value->'a',\r\n  pg_typeof(value->'b'), value->'b',\r\n  pg_typeof(value->'c'), value->'c',\r\n  pg_typeof(value->>'a'), value->>'a',\r\n  pg_typeof(value->>'b'), value->>'b',\r\n  pg_typeof(value->>'c'), value->>'c'\r\nFROM \"entries\";\r\n\r\n pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column?\r\n-----------+----------+-----------+----------+-----------+----------+-----------+----------+-----------+----------+-----------+----------\r\n jsonb     | \"a\"      | jsonb     | \"b\"      | jsonb     | {}       | text      | a        | text      | b        | text      | {}\r\n(1 row)\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 6.1.6.1\r\n\r\n**Ruby version**: 3.1.0\r\n\r\n### Similar issue in different versions of ActiveRecord\r\n\r\nThere is a similar issue but with slightly different behaviour in AR 6.0. Created another issue: #45757\r\n\r\nPlease confirm or comment on the expected behaviour.\r\nThank you.\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45758/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45758/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45750","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45750/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45750/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45750/events","html_url":"https://github.com/rails/rails/issues/45750","id":1327484205,"node_id":"I_kwDNIULOTx_NLQ","number":45750,"title":"Running `rails test` doesn't automatically load any custom tasks under `lib/tasks`","user":{"login":"onlynone","id":833690,"node_id":"MDQ6VXNlcjgzMzY5MA==","avatar_url":"https://avatars.githubusercontent.com/u/833690?v=4","gravatar_id":"","url":"https://api.github.com/users/onlynone","html_url":"https://github.com/onlynone","followers_url":"https://api.github.com/users/onlynone/followers","following_url":"https://api.github.com/users/onlynone/following{/other_user}","gists_url":"https://api.github.com/users/onlynone/gists{/gist_id}","starred_url":"https://api.github.com/users/onlynone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/onlynone/subscriptions","organizations_url":"https://api.github.com/users/onlynone/orgs","repos_url":"https://api.github.com/users/onlynone/repos","events_url":"https://api.github.com/users/onlynone/events{/privacy}","received_events_url":"https://api.github.com/users/onlynone/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-03T16:16:38Z","updated_at":"2022-08-03T18:09:40Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n1. Create the file `lib/tasks/test.rake` with the content:\r\n```ruby\r\nENV[\"test.rake\"] = \"yes\"\r\ntask :custom_task do\r\n  ENV[\"custom_task\"] = \"yes\"\r\nend\r\n\r\ntask :test => [:custom_task]\r\n```\r\n2. Create a test file at `test/unit/rails_test_test.rb` with the content:\r\n```ruby\r\nclass RailsTestTest < ActiveSupport::TestCase\r\n  test \"test.rake is in the environment\" do\r\n    assert_equal('yes', ENV['test.rake'])\r\n  end\r\n\r\n  test \"custom_task is in the environment\" do\r\n    assert_equal('yes', ENV['custom_task'])\r\n  end\r\nend\r\n```\r\n3. Run `bin/rails test test/unit/rails_test_test.rb`\r\n4. Run `bin/rake test test/unit/rails_test_test.rb`\r\n\r\n### Expected behavior\r\nBoth `rails test` and `rake test` should succeed.\r\n\r\n### Actual behavior\r\nRunning the tests with `bin/rake` succeeds with the output:\r\n```\r\nbin/rake test test/unit/rails_test_test.rb\r\nRunning via Spring preloader in process 59092\r\nRun options: --seed 6948\r\n\r\n# Running:\r\n\r\n..\r\n\r\nFinished in 0.000943s, 2120.8907 runs/s, 2120.8907 assertions/s.\r\n2 runs, 2 assertions, 0 failures, 0 errors, 0 skips\r\n```\r\n\r\nWhile running with `bin/rails` fails with the output:\r\n\r\n```\r\nRunning via Spring preloader in process 58735\r\nRun options: --seed 33633\r\n\r\n# Running:\r\n\r\nF\r\n\r\nFailure:\r\nRailsTestTest#test_custom_task_is_in_the_environment [/Users/steven/projects/rails_test_tasks/test/unit/rails_test_test.rb:7]:\r\nExpected: \"yes\"\r\n  Actual: nil\r\n\r\n\r\nrails test test/unit/rails_test_test.rb:6\r\n\r\nF\r\n\r\nFailure:\r\nRailsTestTest#test_test.rake_is_in_the_environment [/Users/steven/projects/rails_test_tasks/test/unit/rails_test_test.rb:3]:\r\nExpected: \"yes\"\r\n  Actual: nil\r\n\r\n\r\nrails test test/unit/rails_test_test.rb:2\r\n\r\n\r\n\r\nFinished in 0.001378s, 1451.3788 runs/s, 1451.3788 assertions/s.\r\n2 runs, 2 assertions, 2 failures, 0 errors, 0 skips\r\n```\r\n\r\nBecause the file `lib/tasks/test.rake` is never loaded.\r\n\r\nIt seems like rails will only end up loading custom tasks if it can't find the command being run on the command line in its own list of built-in commands. When it can't find the command, it will load the local `Rakefile` via `find_by_namespace(\"rake\").perform(full_namespace, args, config)` in `Rails::Command.invoke`. And the local `Rakefile` usually has `Rails.application.load_tasks` and that loads any custom tasks under `lib/tasks`.\r\n\r\nFor example, this happens when the `ActiveRecord` migration exec's out to call: `bin/rails db:test:prepare`. That task is apparently not a built-in rails task, so the `Rakefile` and all custom tasks *do* end up getting loaded for that one.\r\n\r\n(As an aside here, I don't fully understand the difference between the built-in rails tasks and the ones that have to be searched for via rake. I also don't understand why the migration code needs to fork a separate process to do `db:test:prepare`. That task just ends up doing `db_namespace[\"test:load\"].invoke`. Why couldn't the `db:test:prepare` tasks simply be invoked the same way in the same process?)\r\n\r\n### System configuration\r\n**Rails version**: 6.0.5\r\n\r\n**Ruby version**: 2.6.5\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45750/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45750/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45736","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45736/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45736/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45736/events","html_url":"https://github.com/rails/rails/issues/45736","id":1326221102,"node_id":"I_kwDNIULOTwyHLg","number":45736,"title":"Virtual stored columns are always nil for newly created records","user":{"login":"camiloforero","id":6606686,"node_id":"MDQ6VXNlcjY2MDY2ODY=","avatar_url":"https://avatars.githubusercontent.com/u/6606686?v=4","gravatar_id":"","url":"https://api.github.com/users/camiloforero","html_url":"https://github.com/camiloforero","followers_url":"https://api.github.com/users/camiloforero/followers","following_url":"https://api.github.com/users/camiloforero/following{/other_user}","gists_url":"https://api.github.com/users/camiloforero/gists{/gist_id}","starred_url":"https://api.github.com/users/camiloforero/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/camiloforero/subscriptions","organizations_url":"https://api.github.com/users/camiloforero/orgs","repos_url":"https://api.github.com/users/camiloforero/repos","events_url":"https://api.github.com/users/camiloforero/events{/privacy}","received_events_url":"https://api.github.com/users/camiloforero/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-02T18:09:28Z","updated_at":"2022-08-02T19:28:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nUsing postgresql:\r\n\r\nGenerate a new model with one or more columns with default values, and a virtual stored column based on those other columns\r\nCreate a new record of that model\r\nAccess the value of the virtual stored column from the newly created ActiveRecord object\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem 'pg', '~> 1.4'\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection \"postgresql:///test\"\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.integer :counter1, null: false, default: 0\r\n    t.integer :counter2, null: false, default: 0\r\n    t.virtual :counter_sum, type: :integer, as: \"counter1 + counter2\", stored: true\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_virtual_column_value_populated\r\n    post = Post.create!\r\n\r\n    assert_equal 0, post.counter_sum\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe value of the virtual column should be *something*, in this particular case, 0\r\n\r\n### Actual behavior\r\nThe value of the virtual column is `nil`. The test fails with the following output\r\n```ruby\r\n# Running:\r\n\r\nD, [2022-08-02T13:05:17.402730 #13548] DEBUG -- :   TRANSACTION (0.1ms)  BEGIN\r\nD, [2022-08-02T13:05:17.403136 #13548] DEBUG -- :   Post Create (0.6ms)  INSERT INTO \"posts\" DEFAULT VALUES RETURNING \"id\"\r\nD, [2022-08-02T13:05:17.406144 #13548] DEBUG -- :   TRANSACTION (2.6ms)  COMMIT\r\nF\r\n\r\nFailure:\r\nBugTest#test_virtual_column_value_populated [stored_bug.rb:37]:\r\nExpected: 0\r\n  Actual: nil\r\n\r\n\r\nrails test stored_bug.rb:34\r\n\r\n\r\n\r\nFinished in 0.011047s, 90.5240 runs/s, 90.5240 assertions/s.\r\n1 runs, 1 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\n### System configuration\r\n**Rails version**: edge\r\n**Ruby version**: 3.1.2\r\n**PostgreSQL version**: 14.4\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45736/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45736/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45709","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45709/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45709/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45709/events","html_url":"https://github.com/rails/rails/issues/45709","id":1323303409,"node_id":"I_kwDNIULOTuAB8Q","number":45709,"title":"Rails & can't pin JS files from Unpkg","user":{"login":"septerr","id":1094216,"node_id":"MDQ6VXNlcjEwOTQyMTY=","avatar_url":"https://avatars.githubusercontent.com/u/1094216?v=4","gravatar_id":"","url":"https://api.github.com/users/septerr","html_url":"https://github.com/septerr","followers_url":"https://api.github.com/users/septerr/followers","following_url":"https://api.github.com/users/septerr/following{/other_user}","gists_url":"https://api.github.com/users/septerr/gists{/gist_id}","starred_url":"https://api.github.com/users/septerr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/septerr/subscriptions","organizations_url":"https://api.github.com/users/septerr/orgs","repos_url":"https://api.github.com/users/septerr/repos","events_url":"https://api.github.com/users/septerr/events{/privacy}","received_events_url":"https://api.github.com/users/septerr/received_events","type":"User","site_admin":false},"labels":[{"id":131864,"node_id":"MDU6TGFiZWwxMzE4NjQ=","url":"https://api.github.com/repos/rails/rails/labels/third%20party%20issue","name":"third party issue","color":"02d7e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-07-30T21:44:43Z","updated_at":"2022-08-02T18:08:34Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nIn a new Rails & app, try to pin a package from Unpkg CDN:\r\n\r\n```\r\n./bin/importmap pin @walletconnect/web3-provider@1.7.8 --from unpkg\r\n```\r\n\r\nYou get following response:\r\n\r\n```\r\nCouldn't find any packages in [\"@walletconnect/web3-provider@1.7.8\"] on unpkg\r\n```\r\nBut the file does exist on unpkg: https://unpkg.com/@walletconnect/web3-provider@1.7.8/dist/umd/index.min.js\r\n\r\nAfter adding some breakpoints in `.rbenv/versions/3.1.0/lib/ruby/gems/3.1.0/gems/importmap-rails-1.1.5/lib/importmap/packager.rb`, saw that the CDN post request and response are as follows:\r\n\r\nPost URL: \r\n```\r\n<URI::HTTPS https://api.jspm.io/generate>\r\n```\r\nPost Body:\r\n```\r\n \"{\\\"install\\\":[\\\"@walletconnect/web3-provider@1.7.8\\\"],\\\"flattenScope\\\":true,\\\"env\\\":[\\\"browser\\\",\\\"module\\\",\\\"production\\\"],\\\"provider\\\":\\\"unpkg\\\"}\"\r\n```\r\n\r\nPost Response:\r\n```\r\n<Net::HTTPUnauthorized 401 Unauthorized readbody=true>\r\n```\r\n\r\n### Expected behavior\r\nExpected the files from unpkg to be pinned.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nMisleading error that files don't exist on unpkg.\r\n\r\n### System configuration\r\n**Rails version**:\r\nRails 7.0.3.1\r\n\r\n**Ruby version**:\r\nruby 3.1.0p0 (2021-12-25 revision fb4df44d16) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45709/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45709/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45691","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45691/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45691/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45691/events","html_url":"https://github.com/rails/rails/issues/45691","id":1322122058,"node_id":"I_kwDNIULOTs37Sg","number":45691,"title":"ActionMailer fails to create correct multipart message with rfc822 attachment","user":{"login":"der-flo","id":35431,"node_id":"MDQ6VXNlcjM1NDMx","avatar_url":"https://avatars.githubusercontent.com/u/35431?v=4","gravatar_id":"","url":"https://api.github.com/users/der-flo","html_url":"https://github.com/der-flo","followers_url":"https://api.github.com/users/der-flo/followers","following_url":"https://api.github.com/users/der-flo/following{/other_user}","gists_url":"https://api.github.com/users/der-flo/gists{/gist_id}","starred_url":"https://api.github.com/users/der-flo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/der-flo/subscriptions","organizations_url":"https://api.github.com/users/der-flo/orgs","repos_url":"https://api.github.com/users/der-flo/repos","events_url":"https://api.github.com/users/der-flo/events{/privacy}","received_events_url":"https://api.github.com/users/der-flo/received_events","type":"User","site_admin":false},"labels":[{"id":107188,"node_id":"MDU6TGFiZWwxMDcxODg=","url":"https://api.github.com/repos/rails/rails/labels/actionmailer","name":"actionmailer","color":"8B00FC","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-29T11:19:00Z","updated_at":"2022-08-02T19:46:17Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I cannot re-open #42849 so I create a new issue…\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire 'bundler/inline'\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n  gem 'rails', github: 'rails/rails', branch: 'main'\r\nend\r\n\r\nrequire 'minitest/autorun'\r\nrequire 'action_mailer/railtie'\r\n\r\nclass TestMailer < ActionMailer::Base\r\n  def main\r\n    message_to_attach =  <<~MAIL.gsub(/\\n/, \"\\r\\n\")\r\n      Message-ID: <12345@foo.example>\r\n      Subject: Test\r\n      From: test1@foo.example\r\n      To: test2@foo.example\r\n      \r\n      hello world\r\n    MAIL\r\n    attachments['test.eml'] = {\r\n      mime_type: params[:mime_type],\r\n      content: message_to_attach\r\n    }\r\n\r\n    mail(from: 'test3@foo.example', to: 'test4@foo.example', subject: 'Test outer') do |format|\r\n      format.text { \"outer text - #{params[:mime_type]} attachment\" }\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_with_plain_mime_type\r\n    message = TestMailer.with(mime_type: 'text/plain').main\r\n    assert_equal message.mime_type, 'multipart/mixed'\r\n  end\r\n\r\n  def test_with_rfc822_mime_type\r\n    message = TestMailer.with(mime_type: 'message/rfc822').main\r\n    assert_equal message.mime_type, 'multipart/mixed'\r\n  end\r\nend\r\n```\r\n\r\nThe second test fails, the message object is rendered as follows:\r\n```\r\nDate: Fri, 23 Jul 2021 13:59:19 +0200\r\nFrom: test3@foo.example\r\nTo: test4@foo.example\r\nMessage-ID: <60faaf1738a02_14fbd98-3fb@flo.adigi.ai.mail>\r\nSubject: Test outer\r\nMime-Version: 1.0\r\nContent-Type: text/plain;\r\n boundary=\"--==_mimepart_60faaf1738008_14fbd98-484\";\r\n charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\n\r\n\r\n----==_mimepart_60faaf1738008_14fbd98-484\r\nContent-Type: text/plain;\r\n charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\n\r\nouter text - message/rfc822 attachment\r\n----==_mimepart_60faaf1738008_14fbd98-484\r\nContent-Type: message/rfc822\r\nContent-Transfer-Encoding: \r\nContent-Disposition: attachment;\r\n filename=test.eml\r\nContent-ID: <60faaf1739102_14fbd98-2b@flo.adigi.ai.mail>\r\n\r\nMessage-ID: <12345@foo.example>\r\nSubject: Test\r\nFrom: test1@foo.example\r\nTo: test2@foo.example\r\n\r\nhello world\r\n\r\n----==_mimepart_60faaf1738008_14fbd98-484--\r\n\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe `message.mime_type` is `multipart/mixed` in both test cases. ActionMailer handles attachments in the way it is described in https://guides.rubyonrails.org/action_mailer_basics.html#adding-attachments describes.\r\n\r\n### Actual behavior\r\n\r\nWhen attaching a `message/rfc822` - an email message - the generated mail parts are not nested correctly, the outer `multipart/mixed` is missing.\r\n\r\nPerhaps this behaviour is caused by the [special handling](https://github.com/mikel/mail/blob/master/lib/mail/attachments_list.rb#L9) of such attachments in the `mail` gem.\r\n\r\n\r\n### System configuration\r\n**Rails version**: main\r\n\r\n**Ruby version**: 3.0.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45691/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":1,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45691/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45640","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45640/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45640/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45640/events","html_url":"https://github.com/rails/rails/issues/45640","id":1315219867,"node_id":"I_kwDNIULOTmSpmw","number":45640,"title":"ActiveModel::Dirty changes not reset properly when using store_accessor (tested with postgres)","user":{"login":"vccoffey","id":59817868,"node_id":"MDQ6VXNlcjU5ODE3ODY4","avatar_url":"https://avatars.githubusercontent.com/u/59817868?v=4","gravatar_id":"","url":"https://api.github.com/users/vccoffey","html_url":"https://github.com/vccoffey","followers_url":"https://api.github.com/users/vccoffey/followers","following_url":"https://api.github.com/users/vccoffey/following{/other_user}","gists_url":"https://api.github.com/users/vccoffey/gists{/gist_id}","starred_url":"https://api.github.com/users/vccoffey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vccoffey/subscriptions","organizations_url":"https://api.github.com/users/vccoffey/orgs","repos_url":"https://api.github.com/users/vccoffey/repos","events_url":"https://api.github.com/users/vccoffey/events{/privacy}","received_events_url":"https://api.github.com/users/vccoffey/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-07-22T16:44:57Z","updated_at":"2022-07-23T17:51:49Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nUsing PostgreSQL (pg) database\r\nGiven a model with a jsonb column\r\n```\r\nclass CreateTestModels < ActiveRecord::Migration[6.1]\r\n  def change\r\n    create_table :test_models do |t|\r\n      t.jsonb :jsonb_hash_attr\r\n      t.timestamps\r\n    end\r\n  end\r\nend\r\n```\r\nusing store_accessor\r\n```\r\nclass TestModel < ApplicationRecord\r\n  store_accessor :jsonb_hash_attr, :key, prefix: true\r\nend\r\n```\r\n\r\n### Expected behavior\r\nBoth tests pass:\r\n```\r\nrequire \"test_helper\"\r\nclass TestModelTest < ActiveSupport::TestCase\r\n  test \"does not show changes for a jsonb attribute if changed back to original value\" do\r\n    tm = TestModel.create jsonb_hash_attr: { \"key\" => \"foo\" }\r\n    tm.jsonb_hash_attr = { \"key\" => \"bar\" }\r\n    assert_equal tm.jsonb_hash_attr_change, [{ \"key\" => \"foo\" }, { \"key\" => \"bar\" }]\r\n    tm.jsonb_hash_attr = { \"key\" => \"foo\" }\r\n    assert_equal tm.jsonb_hash_attr_change, nil\r\n  end\r\n\r\n  test \"does not show changes for a jsonb attribute if changed back to original value using store_accessor\" do\r\n    tm = TestModel.create jsonb_hash_attr: { \"key\" => \"foo\" }\r\n    tm.jsonb_hash_attr_key = \"bar\"\r\n    assert_equal tm.jsonb_hash_attr_change, [{ \"key\" => \"foo\" }, { \"key\" => \"bar\" }]\r\n    tm.jsonb_hash_attr_key = \"foo\"\r\n    assert_equal tm.jsonb_hash_attr_change, nil\r\n  end\r\nend\r\n```\r\n### Actual behavior\r\nThe second test fails\r\n```\r\n--- expected\r\n+++ actual\r\n-[{\"key\"=>\"foo\"}, {\"key\"=>\"foo\"}]\r\n+nil\r\n```\r\n### System configuration\r\n**Rails version**:\r\ntested with 6.1.6.1 and 7.0.3.1\r\n\r\n**Ruby version**: 3.1.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45640/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45640/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45639","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45639/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45639/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45639/events","html_url":"https://github.com/rails/rails/issues/45639","id":1314984267,"node_id":"I_kwDNIULOTmERSw","number":45639,"title":"Explicitly touch on save","user":{"login":"schmijos","id":245443,"node_id":"MDQ6VXNlcjI0NTQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/245443?v=4","gravatar_id":"","url":"https://api.github.com/users/schmijos","html_url":"https://github.com/schmijos","followers_url":"https://api.github.com/users/schmijos/followers","following_url":"https://api.github.com/users/schmijos/following{/other_user}","gists_url":"https://api.github.com/users/schmijos/gists{/gist_id}","starred_url":"https://api.github.com/users/schmijos/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/schmijos/subscriptions","organizations_url":"https://api.github.com/users/schmijos/orgs","repos_url":"https://api.github.com/users/schmijos/repos","events_url":"https://api.github.com/users/schmijos/events{/privacy}","received_events_url":"https://api.github.com/users/schmijos/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-22T13:05:14Z","updated_at":"2022-07-22T20:31:00Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  ruby \"3.1.0\"\r\n  gem \"rails\", \"7.0.3.1\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.timestamps\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_save_touch\r\n    Post.create!(updated_at: 3.days.ago)\r\n    Post.last.save!(touch: true)\r\n\r\n    assert_in_delta 0.seconds.ago.to_i, Post.last.updated_at.to_i, 5\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nIf I tell _ActiveRecord_ to explicitly \"touch\", then I would expect it to update the timestamps.\r\n\r\n### Actual behavior\r\n`save` never hits the database if no attribute changed.\r\n\r\n### System configuration\r\n**Rails version**: >= 3.0.0, < 8","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45639/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45639/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45638","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45638/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45638/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45638/events","html_url":"https://github.com/rails/rails/issues/45638","id":1314662755,"node_id":"I_kwDNIULOTlwpYw","number":45638,"title":"CSRF Token Expiry issue.","user":{"login":"MBM1607","id":47133639,"node_id":"MDQ6VXNlcjQ3MTMzNjM5","avatar_url":"https://avatars.githubusercontent.com/u/47133639?v=4","gravatar_id":"","url":"https://api.github.com/users/MBM1607","html_url":"https://github.com/MBM1607","followers_url":"https://api.github.com/users/MBM1607/followers","following_url":"https://api.github.com/users/MBM1607/following{/other_user}","gists_url":"https://api.github.com/users/MBM1607/gists{/gist_id}","starred_url":"https://api.github.com/users/MBM1607/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MBM1607/subscriptions","organizations_url":"https://api.github.com/users/MBM1607/orgs","repos_url":"https://api.github.com/users/MBM1607/repos","events_url":"https://api.github.com/users/MBM1607/events{/privacy}","received_events_url":"https://api.github.com/users/MBM1607/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-22T08:38:19Z","updated_at":"2022-07-22T08:40:22Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"We are encountering an issue with form submission in production environment.\r\nThe criteria seems to be exceptionally rare, I have been unable to replicate the issue. \r\n\r\nCSRF token is created and validated just fine.\r\n\r\n### Timing\r\n\r\nIssue seems to occur only when users wait more than 2 hours on a form before submitting, but doing this we have been unable to reproduce as well.\r\n\r\n### Logs\r\n```\r\nW, [2022-07-14T15:19:37.535241 #2433]  WARN -- : Can't verify CSRF token authenticity.\r\nI, [2022-07-14T15:19:37.535556 #2433]  INFO -- : Completed 422 Unprocessable Entity in 1ms (ActiveRecord: 0.0ms | Allocations: 291)\r\nF, [2022-07-14T15:19:37.536425 #2433] FATAL -- :   \r\nActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n```\r\n\r\n### System configuration\r\n**Rails version 6.1.6** \r\n**Ruby version 2.7.4**\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45638/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45638/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45636","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45636/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45636/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45636/events","html_url":"https://github.com/rails/rails/issues/45636","id":1314546104,"node_id":"I_kwDNIULOTlphuA","number":45636,"title":"Invalid template types should raise an exception","user":{"login":"axos88","id":1281218,"node_id":"MDQ6VXNlcjEyODEyMTg=","avatar_url":"https://avatars.githubusercontent.com/u/1281218?v=4","gravatar_id":"","url":"https://api.github.com/users/axos88","html_url":"https://github.com/axos88","followers_url":"https://api.github.com/users/axos88/followers","following_url":"https://api.github.com/users/axos88/following{/other_user}","gists_url":"https://api.github.com/users/axos88/gists{/gist_id}","starred_url":"https://api.github.com/users/axos88/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/axos88/subscriptions","organizations_url":"https://api.github.com/users/axos88/orgs","repos_url":"https://api.github.com/users/axos88/repos","events_url":"https://api.github.com/users/axos88/events{/privacy}","received_events_url":"https://api.github.com/users/axos88/received_events","type":"User","site_admin":false},"labels":[{"id":3666649,"node_id":"MDU6TGFiZWwzNjY2NjQ5","url":"https://api.github.com/repos/rails/rails/labels/actionview","name":"actionview","color":"d7e102","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-07-22T07:40:54Z","updated_at":"2022-08-17T18:02:14Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n  - Create a template in views/foo/bar.txt.erb # Note .txt, and not .text\r\n\r\n```ruby\r\ndetails = { locale: [:en], formats: [:txt], handlers: [:erb], variants: []}\r\nActionController::Base.view_paths.find(\"bar\", 'foo', false, details, nil, [])\r\n```\r\n\r\n### Expected behavior\r\n\r\nShould throw an exception that :txt is not a registered type in Template::Types\r\n\r\n### Actual behavior\r\n\r\nSilently fails to find the otherwise existing template, specifying the correct directory it the file resides in. \r\nConfustion intensifies.\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3\r\n**Ruby version**: 2.7.6","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45636/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45636/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45635","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45635/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45635/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45635/events","html_url":"https://github.com/rails/rails/issues/45635","id":1314015345,"node_id":"I_kwDNIULOTlJIcQ","number":45635,"title":"Recent security releases are missing from the Releases page","user":{"login":"georgeclaghorn","id":94129,"node_id":"MDQ6VXNlcjk0MTI5","avatar_url":"https://avatars.githubusercontent.com/u/94129?v=4","gravatar_id":"","url":"https://api.github.com/users/georgeclaghorn","html_url":"https://github.com/georgeclaghorn","followers_url":"https://api.github.com/users/georgeclaghorn/followers","following_url":"https://api.github.com/users/georgeclaghorn/following{/other_user}","gists_url":"https://api.github.com/users/georgeclaghorn/gists{/gist_id}","starred_url":"https://api.github.com/users/georgeclaghorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/georgeclaghorn/subscriptions","organizations_url":"https://api.github.com/users/georgeclaghorn/orgs","repos_url":"https://api.github.com/users/georgeclaghorn/repos","events_url":"https://api.github.com/users/georgeclaghorn/events{/privacy}","received_events_url":"https://api.github.com/users/georgeclaghorn/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false},"assignees":[{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2022-07-22T01:21:34Z","updated_at":"2022-08-19T18:08:06Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Rails versions 7.0.3.1, 6.1.6.1, 6.0.5.1, and 5.2.8.1 are not listed at this GitHub repository’s [Releases](https://github.com/rails/rails/releases) page. Past releases are listed there, including the most recent round of bugfix releases from May.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45635/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45635/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45632","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45632/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45632/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45632/events","html_url":"https://github.com/rails/rails/issues/45632","id":1312439669,"node_id":"I_kwDNIULOTjo9dQ","number":45632,"title":"`_read_attribute` method should also check whether an attribute is aliased or not","user":{"login":"khiav223577","id":4011729,"node_id":"MDQ6VXNlcjQwMTE3Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4011729?v=4","gravatar_id":"","url":"https://api.github.com/users/khiav223577","html_url":"https://github.com/khiav223577","followers_url":"https://api.github.com/users/khiav223577/followers","following_url":"https://api.github.com/users/khiav223577/following{/other_user}","gists_url":"https://api.github.com/users/khiav223577/gists{/gist_id}","starred_url":"https://api.github.com/users/khiav223577/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/khiav223577/subscriptions","organizations_url":"https://api.github.com/users/khiav223577/orgs","repos_url":"https://api.github.com/users/khiav223577/repos","events_url":"https://api.github.com/users/khiav223577/events{/privacy}","received_events_url":"https://api.github.com/users/khiav223577/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-07-21T03:14:22Z","updated_at":"2022-07-21T21:37:09Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n```rb\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  gem \"activerecord\", '7.0.3'\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table \"users\", force: :cascade do |t|\r\n    t.string :name\r\n  end\r\n\r\n  create_table \"posts\", force: :cascade do |t|\r\n    t.string :title\r\n    t.integer :userId\r\n  end\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\n  has_many :posts\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  belongs_to :user\r\n\r\n  alias_attribute :user_id, :userId\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def setup\r\n    user = User.create!(name: 'Tester')\r\n    post = Post.create!(user_id: user.id, title: 'Post A')\r\n  end\r\n\r\n  def test_has_many\r\n    assert_equal ['Post A'], User.first.posts.map(&:title)\r\n  end\r\n\r\n  def test_belongs_to\r\n    assert_equal 'Tester', Post.first.user&.name\r\n  end\r\nend\r\n```\r\n\r\nResult:\r\n```\r\nFinished in 0.059414s, 33.6619 runs/s, 33.6619 assertions/s.\r\n\r\n  1) Failure:\r\nBugTest#test_belongs_to [test.rb:53]:\r\nExpected: \"Tester\"\r\n  Actual: nil\r\n\r\n2 runs, 2 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\n### Expected behavior\r\n\r\nI run into this issue when I tried to add an association on an aliased attribute.\r\n\r\nThen I found `belongs_to_association` will use `_read_attribute` method to check if this `foreign_key` exists on this model or not.\r\nIt doesn't pass the condition, therefore `find_target` will not be triggered.\r\nhttps://github.com/rails/rails/blob/3272335f8f4739629283cdeff7c3db723f34a3f5/activerecord/lib/active_record/associations/association.rb#L172-L173\r\nhttps://github.com/rails/rails/blob/3272335f8f4739629283cdeff7c3db723f34a3f5/activerecord/lib/active_record/associations/association.rb#L274-L276\r\nhttps://github.com/rails/rails/blob/2ea5ff9e13b9c5d0d5d25b2441efa81a2de2a262/activerecord/lib/active_record/associations/belongs_to_association.rb#L133-L135\r\nhttps://github.com/rails/rails/blob/4ae0390c1051a39ec16a4a95451cd06172a1b260/activerecord/lib/active_record/attribute_methods/read.rb#L37-L39\r\n\r\nThe `read_attribute` method takes `attribute_alias` into consideration since https://github.com/rails/rails/pull/26529, while `_read_attribute` doesn't. I think it should, too.\r\n\r\n### Actual behavior\r\n\r\nSee the test script below.\r\n\r\n### System configuration\r\n**Rails version**: \r\n7.0.3.1\r\n\r\n**Ruby version**:\r\nruby 3.0.0p0 (2020-12-25 revision 95aff21468) [x86_64-linux]","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45632/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45632/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45609","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45609/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45609/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45609/events","html_url":"https://github.com/rails/rails/issues/45609","id":1306840730,"node_id":"I_kwDNIULOTeTOmg","number":45609,"title":"Cannot add ActiveModel::Attribute::FromDatabase to permitted YAML safe load classes","user":{"login":"stanhu","id":963826,"node_id":"MDQ6VXNlcjk2MzgyNg==","avatar_url":"https://avatars.githubusercontent.com/u/963826?v=4","gravatar_id":"","url":"https://api.github.com/users/stanhu","html_url":"https://github.com/stanhu","followers_url":"https://api.github.com/users/stanhu/followers","following_url":"https://api.github.com/users/stanhu/following{/other_user}","gists_url":"https://api.github.com/users/stanhu/gists{/gist_id}","starred_url":"https://api.github.com/users/stanhu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stanhu/subscriptions","organizations_url":"https://api.github.com/users/stanhu/orgs","repos_url":"https://api.github.com/users/stanhu/repos","events_url":"https://api.github.com/users/stanhu/events{/privacy}","received_events_url":"https://api.github.com/users/stanhu/received_events","type":"User","site_admin":false},"labels":[{"id":107186,"node_id":"MDU6TGFiZWwxMDcxODY=","url":"https://api.github.com/repos/rails/rails/labels/regression","name":"regression","color":"e10c02","default":false,"description":null},{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-07-16T15:51:30Z","updated_at":"2022-08-18T11:39:07Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWe have some database entries serialized to YAML. For example:\r\n\r\n```\r\n---\r\n:custom_message: Repository Download Started\r\n:author_name: !ruby/object:DeployToken\r\n  concise_attributes:\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: deploy_token_type\r\n    value_before_type_cast: 1\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: id\r\n    value_before_type_cast: 2\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: revoked\r\n    value_before_type_cast: false\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: read_repository\r\n    value_before_type_cast: true\r\n```\r\n\r\nHowever, since the security release announced in https://rubyonrails.org/2022/7/12/Rails-Versions-7-0-3-1-6-1-6-1-6-0-5-1-and-5-2-8-1-have-been-released to address CVE-2022-32224, we cannot simply add `ActiveModel::Attribute::FromDatabase` to the permitted class list:\r\n\r\n```ruby\r\n(byebug) YAML.safe_load(payload, permitted_classes: [ActiveModel::Attribute::FromDatabase, Symbol, DeployToken], aliases: true)\r\n*** NameError Exception: private constant ActiveModel::Attribute::FromDatabase referenced\r\n```\r\n\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\n### Expected behavior\r\n\r\nYAML loading should work. Should this constant no longer be private since it's been serialized to YAML?\r\n\r\n### Actual behavior\r\n\r\nYAML loading fails with:\r\n\r\n```\r\n*** NameError Exception: private constant ActiveModel::Attribute::FromDatabase referenced\r\n```\r\n\r\n### System configuration\r\n\r\n**Rails version**:\r\nv6.1.6.1\r\n\r\n**Ruby version**:\r\nv2.7.5","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45609/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45609/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45596","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45596/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45596/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45596/events","html_url":"https://github.com/rails/rails/issues/45596","id":1304247666,"node_id":"I_kwDNIULOTb09cg","number":45596,"title":"Setting `schema_dump` in database.yml does not change dump format","user":{"login":"leboshi","id":16550140,"node_id":"MDQ6VXNlcjE2NTUwMTQw","avatar_url":"https://avatars.githubusercontent.com/u/16550140?v=4","gravatar_id":"","url":"https://api.github.com/users/leboshi","html_url":"https://github.com/leboshi","followers_url":"https://api.github.com/users/leboshi/followers","following_url":"https://api.github.com/users/leboshi/following{/other_user}","gists_url":"https://api.github.com/users/leboshi/gists{/gist_id}","starred_url":"https://api.github.com/users/leboshi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leboshi/subscriptions","organizations_url":"https://api.github.com/users/leboshi/orgs","repos_url":"https://api.github.com/users/leboshi/repos","events_url":"https://api.github.com/users/leboshi/events{/privacy}","received_events_url":"https://api.github.com/users/leboshi/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-14T04:44:37Z","updated_at":"2022-07-14T14:34:25Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Originally brought up in #43173.  I opened PR #43240 to address it, but that was closed when it was decided #43530 did the same thing.  Unfortunately, I don't think any of us were really reading what the other was doing, because the two PRs actually each only addressed half the opened issue.\r\n\r\nPR incoming to fully address this and the second half of #43173!\r\n\r\n### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_schema_format_corresponds_with_schema_dump\r\n    Dir.mktmpdir do |dir|\r\n      ActiveRecord::Tasks::DatabaseTasks.stub(:db_dir, dir) do\r\n        old_configurations = ActiveRecord::Base.configurations\r\n        ActiveRecord::Base.configurations = {\r\n          \"development\" => {\r\n            \"primary\" => {\r\n              \"database\" => \"dev-db\",\r\n              \"schema_dump\" => \"primary_structure.sql\"\r\n            }\r\n          }\r\n        }\r\n\r\n        db_config = ActiveRecord::Base.configurations.configs_for(env_name: \"development\", name: \"primary\")\r\n        ActiveRecord::Tasks::DatabaseTasks.dump_schema(db_config)\r\n\r\n        dump_contents = File.read(File.join(dir, \"primary_structure.sql\"))\r\n        refute_match /ActiveRecord::Schema/, dump_contents\r\n        assert_match /CREATE TABLE/, dump_contents\r\n      ensure\r\n        ActiveRecord::Base.configurations = old_configurations\r\n        ActiveRecord::Base.clear_cache!\r\n      end\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nIf `schema_dump` is set to something like `primary_structure.sql`, I'd expect it to do a SQL structure dump rather than a Ruby schema dump.\r\n\r\n### Actual behavior\r\nThe filename in `schema_dump` has no bearing on the format of the dump Rails writes or expects to read.\r\n\r\n### System configuration\r\n**Rails version**: (main)\r\n\r\n**Ruby version**: 3.1.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45596/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45596/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45998","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45998/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45998/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45998/events","html_url":"https://github.com/rails/rails/issues/45998","id":1368868095,"node_id":"I_kwDNIULOUZdE_w","number":45998,"title":"CSRF getting different token","user":{"login":"Saleh-Salem","id":22606707,"node_id":"MDQ6VXNlcjIyNjA2NzA3","avatar_url":"https://avatars.githubusercontent.com/u/22606707?v=4","gravatar_id":"","url":"https://api.github.com/users/Saleh-Salem","html_url":"https://github.com/Saleh-Salem","followers_url":"https://api.github.com/users/Saleh-Salem/followers","following_url":"https://api.github.com/users/Saleh-Salem/following{/other_user}","gists_url":"https://api.github.com/users/Saleh-Salem/gists{/gist_id}","starred_url":"https://api.github.com/users/Saleh-Salem/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Saleh-Salem/subscriptions","organizations_url":"https://api.github.com/users/Saleh-Salem/orgs","repos_url":"https://api.github.com/users/Saleh-Salem/repos","events_url":"https://api.github.com/users/Saleh-Salem/events{/privacy}","received_events_url":"https://api.github.com/users/Saleh-Salem/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-11T08:08:17Z","updated_at":"2022-09-11T08:27:32Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When validating the CSRF token getting an exception in API\r\n \r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\nthe `session[:_csrf_token]` and  `request.x_csrf_token` is different and getting issue.\r\nwhen I need to skip the csrf, I add `verify_authenticity_token`, In this case, I don't need to skip it.\r\nI debug and found the issue in the method:\r\n\r\n```\r\n  def compare_with_global_token(token, session = nil) # :doc:\r\n    ActiveSupport::SecurityUtils.fixed_length_secure_compare(token, global_csrf_token(session))\r\n  end\r\n```\r\n\r\nwhat is `session[:_csrf_token]` and how can I implement it in API?\r\nIs there any missing from my side?\r\n### Steps to reproduce\r\n\r\n1. Add `protect_from_forgery with: :exception` .\r\n2. When logging in return token in response is generated by `form_authenticity_token`.\r\n3. When Trying to request any POST, PUT or DELETE API get an exception.\r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nReturn Response without exception.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\ngetting exception \r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\n### System configuration\r\n**Rails version**:\r\n6.0.3.5\r\n**Ruby version**:\r\n2.7.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45998/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45998/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45994","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45994/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45994/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45994/events","html_url":"https://github.com/rails/rails/issues/45994","id":1368555704,"node_id":"I_kwDNIULOUZKAuA","number":45994,"title":"LoadInterlockAwareMonitor deadlock when clearing cache (multiple databases, test)","user":{"login":"kuahyeow","id":16723,"node_id":"MDQ6VXNlcjE2NzIz","avatar_url":"https://avatars.githubusercontent.com/u/16723?v=4","gravatar_id":"","url":"https://api.github.com/users/kuahyeow","html_url":"https://github.com/kuahyeow","followers_url":"https://api.github.com/users/kuahyeow/followers","following_url":"https://api.github.com/users/kuahyeow/following{/other_user}","gists_url":"https://api.github.com/users/kuahyeow/gists{/gist_id}","starred_url":"https://api.github.com/users/kuahyeow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kuahyeow/subscriptions","organizations_url":"https://api.github.com/users/kuahyeow/orgs","repos_url":"https://api.github.com/users/kuahyeow/repos","events_url":"https://api.github.com/users/kuahyeow/events{/privacy}","received_events_url":"https://api.github.com/users/kuahyeow/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-10T08:52:46Z","updated_at":"2022-09-10T08:56:12Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"With multiple databases, we observe hangs within system tests.\r\n\r\nSee also https://gitlab.com/gitlab-org/gitlab/-/issues/371468 (GitLab is at Rails 6.1, Ruby 2.7.5)\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nHere's a minimal reproduction with Rails 7.0.3.1\r\n\r\n1. Checkout https://gitlab.com/tkuah/multi_database_system_test\r\n2. `bundle install`\r\n3. `bundle exec rails db:migrate`\r\n4. `bundle rails test test/system/home_pages_test.rb`\r\n\r\nThe conditions are:\r\n\r\n1. Multiple databases\r\n2. System test where there's an async request which overlaps with the main thread\r\n\r\n### Expected behavior\r\n\r\nIt does not hang, and the test completes\r\n\r\n### Actual behavior\r\n\r\nIt hangs. It looks like it's hanging when clearing query cache (see https://gitlab.com/gitlab-org/gitlab/-/issues/371468#note_1087203883, and https://gitlab.com/gitlab-org/gitlab/-/issues/371468#note_1088779499)\r\n\r\nA backtrace dump taken while the test is hanging [sigdump-68442.log](https://github.com/rails/rails/files/9539878/sigdump-68442.log)\r\n\r\nMy suspicion is that:\r\n\r\n1. `lock_thread` is true for system tests\r\n3. Therefore both the main thread, and the Puma thread attempt to clear query cache for the same set of connections\r\n\r\nSo we have two connections:\r\n\r\n1. Puma thread takes a `LoadInterlockAwareMonitor` lock for primary connection via `Post.transaction`\r\n2. Main thread takes a `LoadInterlockAwareMonitor` lock for animal connection via implicit transaction that `create` does\r\n3. Due to 2, main thread attempts to clear query cache for primary connection. **Waits for 1's lock**\r\n4. Due to 1, and because of `lock_thread`, puma thread clears query cache for primary connection. It takes a `LoadInterlockAwareMonitor` lock for primary connection which succeds\r\n5. Due to 1, puma thread now attempts clears query cache for animal connection. **Waits for 2's lock**\r\n\r\nSee [`clear_query_caches_for_current_thread` method](https://github.com/rails/rails/blob/e24fbf71fa0a10f63346b9b42604451958740844/activerecord/lib/active_record/connection_handling.rb#L244-L248)\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: ruby 2.7.5p203 (2021-11-24 revision f69aeb8314) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45994/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45994/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45984","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45984/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45984/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45984/events","html_url":"https://github.com/rails/rails/issues/45984","id":1368144421,"node_id":"I_kwDNIULOUYw6JQ","number":45984,"title":"Cannot Eager Load has_many :through Relationships with custom scope","user":{"login":"dcorrigan","id":2445528,"node_id":"MDQ6VXNlcjI0NDU1Mjg=","avatar_url":"https://avatars.githubusercontent.com/u/2445528?v=4","gravatar_id":"","url":"https://api.github.com/users/dcorrigan","html_url":"https://github.com/dcorrigan","followers_url":"https://api.github.com/users/dcorrigan/followers","following_url":"https://api.github.com/users/dcorrigan/following{/other_user}","gists_url":"https://api.github.com/users/dcorrigan/gists{/gist_id}","starred_url":"https://api.github.com/users/dcorrigan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dcorrigan/subscriptions","organizations_url":"https://api.github.com/users/dcorrigan/orgs","repos_url":"https://api.github.com/users/dcorrigan/repos","events_url":"https://api.github.com/users/dcorrigan/events{/privacy}","received_events_url":"https://api.github.com/users/dcorrigan/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-09T17:47:35Z","updated_at":"2022-09-09T17:47:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nThis seems like it's the same as #28324, but I'm still seeing the issue in Rails 7. \r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n  end\r\n\r\n  create_table :images, force: true do |t|\r\n    t.string :title\r\n    t.integer :post_id\r\n  end\r\n\r\n  create_table :captions, force: true do |t|\r\n    t.integer :image_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :images\r\n  has_many :captions, lambda { order('images.title DESC') }, through: :images\r\nend\r\n\r\nclass Image < ActiveRecord::Base\r\n  belongs_to :post\r\n  has_one :caption\r\nend\r\n\r\nclass Caption < ActiveRecord::Base\r\n  belongs_to :image\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_preload_has_many_through_association_with_scope\r\n    post = Post.create!\r\n    image = Image.create!\r\n    image.caption = Caption.create!\r\n    post.images << image\r\n    post.save!\r\n\r\n    # Access through the model works\r\n    assert_includes post.captions, Caption.first\r\n\r\n    # Query with association preloaded does not.\r\n    # When evaluated, it will apply the scope without the relevant JOIN table:\r\n    # SELECT \"captions\".* FROM \"captions\" WHERE \"captions\".\"image_id\" = ? ORDER BY images.title DESC\r\n    preloaded = Post.where(id: post.id).includes(:captions)\r\n\r\n    assert_includes preloaded.first.captions, Caption.first\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe test passes and we're able to eager load has_many :through associations with custom scopes in this way.\r\n\r\nI realize this can be fixed by adding a `references(:images)` to the query, but it seems reasonable to expect AR to infer that that the join is necessary here.\r\n\r\n### Actual behavior\r\n\r\nTest fails with an error: `ActiveRecord::StatementInvalid: SQLite3::SQLException: no such column: images.title`\r\n\r\n### System configuration\r\n**Rails version**: 7.0 \r\n\r\n**Ruby version**: 3.1.2p20\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45984/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45967","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45967/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45967/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45967/events","html_url":"https://github.com/rails/rails/issues/45967","id":1366038829,"node_id":"I_kwDNIULOUWwZLQ","number":45967,"title":"Inconsistent update of timestamps while updating associations with *_ids=","user":{"login":"matthee","id":547653,"node_id":"MDQ6VXNlcjU0NzY1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/547653?v=4","gravatar_id":"","url":"https://api.github.com/users/matthee","html_url":"https://github.com/matthee","followers_url":"https://api.github.com/users/matthee/followers","following_url":"https://api.github.com/users/matthee/following{/other_user}","gists_url":"https://api.github.com/users/matthee/gists{/gist_id}","starred_url":"https://api.github.com/users/matthee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matthee/subscriptions","organizations_url":"https://api.github.com/users/matthee/orgs","repos_url":"https://api.github.com/users/matthee/repos","events_url":"https://api.github.com/users/matthee/events{/privacy}","received_events_url":"https://api.github.com/users/matthee/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-08T10:51:09Z","updated_at":"2022-09-09T03:10:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"ActiveRecord inconsistently updates the `updated_at` column when changing `has_many through:` associations.\r\n\r\n### Steps to reproduce\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"activesupport\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"active_support/testing/time_helpers\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.timestamps\r\n  end\r\n  \r\n  create_table :tags, force: true do |t|\r\n  end\r\n\r\n  create_table :taggings, force: true do |t|\r\n    t.integer :post_id\r\n    t.integer :tag_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :taggings, dependent: :destroy\r\n  \r\n  has_many :tags, through: :taggings\r\nend\r\n\r\nclass Tagging < ActiveRecord::Base\r\n  belongs_to :post, touch: true\r\n  belongs_to :tag\r\nend\r\n\r\nclass Tag < ActiveRecord::Base\r\n  has_many :taggings\r\n  has_many :posts, through: :taggings\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  include ActiveSupport::Testing::TimeHelpers\r\n  \r\n  def test_updated_at_is_updated_when_setting_has_many_through_association\r\n    freeze_time\r\n        \r\n    tag_1 = Tag.create!\r\n    tag_2 = Tag.create!\r\n      \r\n    post = Post.create!\r\n    \r\n    travel_to(now = 1.hour.from_now)\r\n    \r\n    # Adding tags updates post.updated_at\r\n    post.update(tag_ids: [tag_1.id, tag_2.id])\r\n    assert_in_delta now, post.updated_at, 1.second, \"post#updated_at was not updated when adding tags\"\r\n    \r\n    # Removing tags does not update post.updated_at :(\r\n    travel_to(now = 2.hours.from_now)\r\n    post.update(tag_ids: [tag_1.id])\r\n    assert_in_delta now, post.updated_at, 1.second, \"post#updated_at was not updated when removing tags\"\r\n  end\r\n  \r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nIn the example above, both `.update` calls should update the `updated_at` column of the post record. (when adding and removing records)\r\n\r\n### Actual behavior\r\n\r\nWhen deleting a record, the `updated_at` timestamp is not updated.\r\n\r\n### System configuration\r\n**Rails version**:\r\n7.0.3.1\r\n**Ruby version**:\r\n3.0.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45967/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45967/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45959","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45959/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45959/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45959/events","html_url":"https://github.com/rails/rails/issues/45959","id":1364232810,"node_id":"I_kwDNIULOUVCKag","number":45959,"title":"JSON field not saving data with symbol : and it's saving with arrow =>","user":{"login":"sajjadmurtaza","id":8552702,"node_id":"MDQ6VXNlcjg1NTI3MDI=","avatar_url":"https://avatars.githubusercontent.com/u/8552702?v=4","gravatar_id":"","url":"https://api.github.com/users/sajjadmurtaza","html_url":"https://github.com/sajjadmurtaza","followers_url":"https://api.github.com/users/sajjadmurtaza/followers","following_url":"https://api.github.com/users/sajjadmurtaza/following{/other_user}","gists_url":"https://api.github.com/users/sajjadmurtaza/gists{/gist_id}","starred_url":"https://api.github.com/users/sajjadmurtaza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sajjadmurtaza/subscriptions","organizations_url":"https://api.github.com/users/sajjadmurtaza/orgs","repos_url":"https://api.github.com/users/sajjadmurtaza/repos","events_url":"https://api.github.com/users/sajjadmurtaza/events{/privacy}","received_events_url":"https://api.github.com/users/sajjadmurtaza/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":1071962662,"node_id":"MDU6TGFiZWwxMDcxOTYyNjYy","url":"https://api.github.com/repos/rails/rails/labels/more-information-needed","name":"more-information-needed","color":"bfdadc","default":false,"description":"When reporter needs to provide more information"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-09-07T07:40:12Z","updated_at":"2022-09-08T07:23:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nI have JSON field in my database `t.json \"theme\"`. When I try to save the field hash with : , it's overridden before save\r\ne.g.\r\n`object.theme = { color: 'red' }` it always change to `{ color => 'red' }`\r\n\r\ni also tried with jsonb and default value with empty hash {} but still having the same issue.\r\n\r\n\r\nI want to save the JSON data hash with symbol keys `{ color: 'red' }`\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.0\r\n\r\n**Ruby version**: 2.7.1\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45959/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45959/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45949","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45949/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45949/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45949/events","html_url":"https://github.com/rails/rails/issues/45949","id":1362899537,"node_id":"I_kwDNIULOUTwyUQ","number":45949,"title":"ActionText::Attachable#as_json override is breaking ActiveStorage::Blob#as_json when blob is not persisted","user":{"login":"balbesina","id":7312369,"node_id":"MDQ6VXNlcjczMTIzNjk=","avatar_url":"https://avatars.githubusercontent.com/u/7312369?v=4","gravatar_id":"","url":"https://api.github.com/users/balbesina","html_url":"https://github.com/balbesina","followers_url":"https://api.github.com/users/balbesina/followers","following_url":"https://api.github.com/users/balbesina/following{/other_user}","gists_url":"https://api.github.com/users/balbesina/gists{/gist_id}","starred_url":"https://api.github.com/users/balbesina/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/balbesina/subscriptions","organizations_url":"https://api.github.com/users/balbesina/orgs","repos_url":"https://api.github.com/users/balbesina/repos","events_url":"https://api.github.com/users/balbesina/events{/privacy}","received_events_url":"https://api.github.com/users/balbesina/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-06T08:26:39Z","updated_at":"2022-09-06T08:26:39Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nfrom rails console:\r\n```ruby\r\nActiveStorage::Blob.build_after_unfurling(io: StringIO.new('asd'), filename: 'asd.txt').as_json\r\n```\r\n\r\n[Reproduction script](https://gist.github.com/balbesina/30fbdafbfee4b71b06209d9e950f4128)\r\n\r\n### Expected behavior\r\nActiveStorage::Blob#as_json returns a Hash\r\n\r\n### Actual behavior\r\nActiveStorage::Blob#as_json raises exception\r\n```\r\n/Users/dhh/.rvm/gems/ruby-3.1.2/gems/globalid-1.0.0/lib/global_id/uri/gid.rb:167:in `validate_model_id': \r\nUnable to create a Global ID for ActiveStorage::Blob without a model id. (URI::GID::MissingModelIdError)\r\n```\r\n\r\n### System configuration\r\n**Rails version**: Rails 7.0.3.1\r\n**Ruby version**: ruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45949/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45949/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45939","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45939/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45939/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45939/events","html_url":"https://github.com/rails/rails/issues/45939","id":1360876688,"node_id":"I_kwDNIULOUR1UkA","number":45939,"title":"Validations aren't inherited from base model if child is called before validation declaration","user":{"login":"Exterm1nate","id":48535087,"node_id":"MDQ6VXNlcjQ4NTM1MDg3","avatar_url":"https://avatars.githubusercontent.com/u/48535087?v=4","gravatar_id":"","url":"https://api.github.com/users/Exterm1nate","html_url":"https://github.com/Exterm1nate","followers_url":"https://api.github.com/users/Exterm1nate/followers","following_url":"https://api.github.com/users/Exterm1nate/following{/other_user}","gists_url":"https://api.github.com/users/Exterm1nate/gists{/gist_id}","starred_url":"https://api.github.com/users/Exterm1nate/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Exterm1nate/subscriptions","organizations_url":"https://api.github.com/users/Exterm1nate/orgs","repos_url":"https://api.github.com/users/Exterm1nate/repos","events_url":"https://api.github.com/users/Exterm1nate/events{/privacy}","received_events_url":"https://api.github.com/users/Exterm1nate/received_events","type":"User","site_admin":false},"labels":[{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-09-03T14:46:42Z","updated_at":"2022-09-08T07:26:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nLet's create some STI models. Base `Vehicle` and two childs `Car` and `Motorcycle`.\r\n\r\n```ruby\r\n# models/vehicle.rb\r\nclass Vehicle < ApplicationRecord\r\n  TYPES = [Car, Motorcycle].freeze\r\n\r\n  validates :color, uniqueness: { scope: :model }\r\nend\r\n\r\n# models/car.rb\r\nclass Car < Vehicle\r\nend\r\n\r\n# models/motorcycle.rb\r\nclass Motorcycle < Vehicle\r\nend\r\n```\r\n\r\nAfter that we want to use `#validators_on` method to make sure the validation is present.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\nCar.validators_on(:color)\r\nMotorcycle.validators_on(:color)\r\n```\r\n\r\n### Expected behavior\r\n\r\nAll models must contain the validation.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nMotorcycle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\n```\r\n\r\n### Actual behavior\r\n\r\nBut for childs this method returns nothing.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> []\r\nMotorcycle.validators_on(:color)\r\n#=> []\r\n```\r\n\r\n### Notes\r\n\r\nIf we remove the `TYPES` constant (or just child classes calls from it) `validators_on` works as expected. Let's change original code a little bit:\r\n\r\n```ruby\r\n# models/vehicle.rb\r\nclass Vehicle < ApplicationRecord\r\n  TYPES = [Car].freeze # Motorcycle was removed from here!\r\n\r\n  validates :color, uniqueness: { scope: :model }\r\nend\r\n```\r\n\r\nAnd after that test again.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> []\r\nMotorcycle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\n```\r\n\r\n`Motorcycle` validation was returned correctly this time.\r\n\r\nIt seems to be a load error. `Car` was called before the `Vehicle`'s validation declaration, so it doesn't take this validation into account. It may also depend on loading order.\r\n\r\nNotice that validation itself is working well in all models.\r\n\r\n```ruby\r\nCar.create!(color: \"black\", model: \"Boomer\")\r\nCar.create!(color: \"black\", model: \"Boomer\") # raises ActiveRecord::RecordInvalid\r\n\r\nMotorcycle.create!(color: \"red\", model: \"Yamaha\")\r\nMotorcycle.create!(color: \"red\", model: \"Yamaha\") # raises ActiveRecord::RecordInvalid\r\n```\r\n\r\nExample project: https://github.com/Exterm1nate/rails-validation-issue\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3\r\n\r\n**Ruby version**: 3.1.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45939/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45939/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45937","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45937/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45937/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45937/events","html_url":"https://github.com/rails/rails/issues/45937","id":1360779604,"node_id":"I_kwDNIULOURvZVA","number":45937,"title":"Add strict table mode (by default) to sqlite adapter","user":{"login":"jrz","id":149668,"node_id":"MDQ6VXNlcjE0OTY2OA==","avatar_url":"https://avatars.githubusercontent.com/u/149668?v=4","gravatar_id":"","url":"https://api.github.com/users/jrz","html_url":"https://github.com/jrz","followers_url":"https://api.github.com/users/jrz/followers","following_url":"https://api.github.com/users/jrz/following{/other_user}","gists_url":"https://api.github.com/users/jrz/gists{/gist_id}","starred_url":"https://api.github.com/users/jrz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jrz/subscriptions","organizations_url":"https://api.github.com/users/jrz/orgs","repos_url":"https://api.github.com/users/jrz/repos","events_url":"https://api.github.com/users/jrz/events{/privacy}","received_events_url":"https://api.github.com/users/jrz/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-03T07:01:02Z","updated_at":"2022-09-08T07:30:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"SQLite supports 'strict tables' since 3.37.1 https://sqlite.org/stricttables.html\r\n\r\nThis forces a datatype to be specified when creating a table. This is the preferred method in any application created by developers. \r\n\r\nUnspecified/ANY datatypes are useful for quick tryouts as an enduser, similar to excel. But it's counterproductive when creating an application.\r\n\r\nIf this will become a configurable setting, the default should be set to strict.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45937/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45937/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45920","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45920/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45920/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45920/events","html_url":"https://github.com/rails/rails/issues/45920","id":1358179995,"node_id":"I_kwDNIULOUPQumw","number":45920,"title":"Replace has_one through create_association might create duplicated rows","user":{"login":"lazaronixon","id":2651240,"node_id":"MDQ6VXNlcjI2NTEyNDA=","avatar_url":"https://avatars.githubusercontent.com/u/2651240?v=4","gravatar_id":"","url":"https://api.github.com/users/lazaronixon","html_url":"https://github.com/lazaronixon","followers_url":"https://api.github.com/users/lazaronixon/followers","following_url":"https://api.github.com/users/lazaronixon/following{/other_user}","gists_url":"https://api.github.com/users/lazaronixon/gists{/gist_id}","starred_url":"https://api.github.com/users/lazaronixon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lazaronixon/subscriptions","organizations_url":"https://api.github.com/users/lazaronixon/orgs","repos_url":"https://api.github.com/users/lazaronixon/repos","events_url":"https://api.github.com/users/lazaronixon/events{/privacy}","received_events_url":"https://api.github.com/users/lazaronixon/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-09-01T03:05:07Z","updated_at":"2022-09-01T23:03:40Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# Ensure backward compatibility with minitest 4.\r\nMinitest::Test = MiniTest::Unit::TestCase unless defined?(Minitest::Test)\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts do |t|\r\n  end\r\n\r\n  create_table :comments do |t|\r\n    t.references :post\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_one :comment, dependent: :destroy\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  validates_presence_of :post_id\r\n  belongs_to :post\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    post = Post.create!\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    sleep 5.seconds\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n```\r\n# transaction begin\r\nselect previous_comment for update\r\n\r\ninsert new_comment\r\n\r\ndelete previous_comment\r\n# transaction commit\r\n```\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n```\r\n# transaction begin\r\ninsert new_comment\r\n# transaction commit\r\n\r\n# transaction begin\r\ndelete previous_comment\r\n# transaction commit\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45920/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45920/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45906","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45906/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45906/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45906/events","html_url":"https://github.com/rails/rails/issues/45906","id":1355732552,"node_id":"I_kwDNIULOUM7WSA","number":45906,"title":"High object allocation count from `ActiveRecord::ConnectionAdapters::PoolManager#pool_configs `","user":{"login":"amarchenkoshopify","id":101111422,"node_id":"U_kgDOBgbWfg","avatar_url":"https://avatars.githubusercontent.com/u/101111422?v=4","gravatar_id":"","url":"https://api.github.com/users/amarchenkoshopify","html_url":"https://github.com/amarchenkoshopify","followers_url":"https://api.github.com/users/amarchenkoshopify/followers","following_url":"https://api.github.com/users/amarchenkoshopify/following{/other_user}","gists_url":"https://api.github.com/users/amarchenkoshopify/gists{/gist_id}","starred_url":"https://api.github.com/users/amarchenkoshopify/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amarchenkoshopify/subscriptions","organizations_url":"https://api.github.com/users/amarchenkoshopify/orgs","repos_url":"https://api.github.com/users/amarchenkoshopify/repos","events_url":"https://api.github.com/users/amarchenkoshopify/events{/privacy}","received_events_url":"https://api.github.com/users/amarchenkoshopify/received_events","type":"User","site_admin":false},"labels":[{"id":107186,"node_id":"MDU6TGFiZWwxMDcxODY=","url":"https://api.github.com/repos/rails/rails/labels/regression","name":"regression","color":"e10c02","default":false,"description":null},{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"eileencodes","id":1080678,"node_id":"MDQ6VXNlcjEwODA2Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/1080678?v=4","gravatar_id":"","url":"https://api.github.com/users/eileencodes","html_url":"https://github.com/eileencodes","followers_url":"https://api.github.com/users/eileencodes/followers","following_url":"https://api.github.com/users/eileencodes/following{/other_user}","gists_url":"https://api.github.com/users/eileencodes/gists{/gist_id}","starred_url":"https://api.github.com/users/eileencodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eileencodes/subscriptions","organizations_url":"https://api.github.com/users/eileencodes/orgs","repos_url":"https://api.github.com/users/eileencodes/repos","events_url":"https://api.github.com/users/eileencodes/events{/privacy}","received_events_url":"https://api.github.com/users/eileencodes/received_events","type":"User","site_admin":false},"assignees":[{"login":"eileencodes","id":1080678,"node_id":"MDQ6VXNlcjEwODA2Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/1080678?v=4","gravatar_id":"","url":"https://api.github.com/users/eileencodes","html_url":"https://github.com/eileencodes","followers_url":"https://api.github.com/users/eileencodes/followers","following_url":"https://api.github.com/users/eileencodes/following{/other_user}","gists_url":"https://api.github.com/users/eileencodes/gists{/gist_id}","starred_url":"https://api.github.com/users/eileencodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eileencodes/subscriptions","organizations_url":"https://api.github.com/users/eileencodes/orgs","repos_url":"https://api.github.com/users/eileencodes/repos","events_url":"https://api.github.com/users/eileencodes/events{/privacy}","received_events_url":"https://api.github.com/users/eileencodes/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/rails/rails/milestones/81","html_url":"https://github.com/rails/rails/milestone/81","labels_url":"https://api.github.com/repos/rails/rails/milestones/81/labels","id":7591006,"node_id":"MI_kwDNIULOAHPUXg","number":81,"title":"7.0.4","description":"","creator":{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":3,"state":"open","created_at":"2022-01-20T01:51:07Z","updated_at":"2022-08-30T13:21:37Z","due_on":null,"closed_at":null},"comments":2,"created_at":"2022-08-30T12:58:42Z","updated_at":"2022-08-31T12:37:42Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWhile working on memory efficiency investigation I noticed that a very big bunch of object allocations comes from a single method `ActiveRecord::ConnectionAdapters::PoolManager#pool_configs`:\r\n\r\n```ruby\r\n      def pool_configs(role = nil)\r\n        if role\r\n          @role_to_shard_mapping[role].values\r\n        else\r\n          @role_to_shard_mapping.flat_map { |_, shard_map| shard_map.values }\r\n        end\r\n      end \r\n```\r\n\r\nThis method is called on every activerecord operation and does not cache its result: could we think about a way of caching its result?\r\n\r\ncc @eileencodes \r\n\r\n### Expected behavior\r\n\r\n`#pool_configs` allocates configs once\r\n\r\n### Actual behavior\r\n\r\n`#pool_configs` allocates configs every time it is executed\r\n\r\n### System configuration\r\n**Rails version**: main branch\r\n\r\n**Ruby version**: 3.1\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45906/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45901","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45901/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45901/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45901/events","html_url":"https://github.com/rails/rails/issues/45901","id":1354555667,"node_id":"I_kwDNIULOULzhEw","number":45901,"title":"bin/rails dbconsole should include_password by default","user":{"login":"wpeterson","id":178135,"node_id":"MDQ6VXNlcjE3ODEzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/178135?v=4","gravatar_id":"","url":"https://api.github.com/users/wpeterson","html_url":"https://github.com/wpeterson","followers_url":"https://api.github.com/users/wpeterson/followers","following_url":"https://api.github.com/users/wpeterson/following{/other_user}","gists_url":"https://api.github.com/users/wpeterson/gists{/gist_id}","starred_url":"https://api.github.com/users/wpeterson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wpeterson/subscriptions","organizations_url":"https://api.github.com/users/wpeterson/orgs","repos_url":"https://api.github.com/users/wpeterson/repos","events_url":"https://api.github.com/users/wpeterson/events{/privacy}","received_events_url":"https://api.github.com/users/wpeterson/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-29T16:19:45Z","updated_at":"2022-08-30T00:17:43Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n1. Configure a Rails `config/database.yml` with a `password` required to connect\r\n2. Run `rails dbconsole`\r\n3. See prompt for database password, despite password being configured/available\r\n4. Run `rails dbconsole -p`\r\n5. See dbconsole properly load and use credentials to connect to database for DB console session\r\n\r\n### Expected behavior\r\nWhenever a Rails app has credentials like a password configured for a database, the database console session should use those credentials vs. prompting the user to re-enter a password interactively.  When credentials are not configured and a password is required, we should prompt then.\r\n\r\nThis behavior is implemented since early Rails versions but is disabled by default.  I propose we enable the proper password behavior by default.\r\n\r\n### Actual behavior\r\n`bin/rails dbconsole` always prompts for a password, even when one is configured for the app.\r\n\r\n### System configuration\r\n**Rails version**: All (6.x, 7.x, head)\r\n\r\n**Ruby version**: All \r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45901/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45901/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45899","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45899/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45899/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45899/events","html_url":"https://github.com/rails/rails/issues/45899","id":1353676820,"node_id":"I_kwDNIULOUK94FA","number":45899,"title":"Active Job unit tests fail using que 2.2.0","user":{"login":"yahonda","id":73684,"node_id":"MDQ6VXNlcjczNjg0","avatar_url":"https://avatars.githubusercontent.com/u/73684?v=4","gravatar_id":"","url":"https://api.github.com/users/yahonda","html_url":"https://github.com/yahonda","followers_url":"https://api.github.com/users/yahonda/followers","following_url":"https://api.github.com/users/yahonda/following{/other_user}","gists_url":"https://api.github.com/users/yahonda/gists{/gist_id}","starred_url":"https://api.github.com/users/yahonda/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yahonda/subscriptions","organizations_url":"https://api.github.com/users/yahonda/orgs","repos_url":"https://api.github.com/users/yahonda/repos","events_url":"https://api.github.com/users/yahonda/events{/privacy}","received_events_url":"https://api.github.com/users/yahonda/received_events","type":"User","site_admin":false},"labels":[{"id":123812746,"node_id":"MDU6TGFiZWwxMjM4MTI3NDY=","url":"https://api.github.com/repos/rails/rails/labels/activejob","name":"activejob","color":"5319e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-29T04:24:06Z","updated_at":"2022-09-09T15:33:02Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"### Steps to reproduce\r\nActive Job CI has been failing since que 2.2.0 is installed. https://buildkite.com/rails/rails/builds/89068#0182e6b9-7c84-4b85-a651-8d640f5eb076\r\n\r\n```ruby\r\ngit clone https://github.com/rails/rails\r\ncd rails/activejob\r\nbundle update que\r\nAJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\n```\r\n\r\nAlthough there are 3 failures and 75 errors. This script just runs a single test because it looks the root cause is the same.\r\n\r\n\r\n### Expected behavior\r\nIt should pass.\r\n\r\n### Actual behavior\r\nIt raises `ArgumentError: wrong number of arguments (given 2, expected 1)`.\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 62302\r\n\r\n# Running:\r\n\r\nE\r\n\r\nError:\r\nQueuingTest#test_run_queued_job:\r\nArgumentError: wrong number of arguments (given 2, expected 1)\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:78:in `run'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job_methods.rb:51:in `_run'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:248:in `block (2 levels) in _run_attrs'\r\n    (eval):9:in `run_job_middleware'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:247:in `block in _run_attrs'\r\n    <internal:kernel>:90:in `tap'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:246:in `_run_attrs'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:223:in `run'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/support/que/inline.rb:15:in `enqueue'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:66:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:27:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:67:in `block in enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:118:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:28:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:27:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:9:in `block (2 levels) in <module:Instrumentation>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:27:in `tag_logger'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:14:in `block (2 levels) in <module:Logging>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:138:in `run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:63:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:30:in `perform_later'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/cases/queuing_test.rb:14:in `block in <class:QueuingTest>'\r\n\r\n\r\nbin/test test/cases/queuing_test.rb:13\r\n\r\n\r\n\r\nFinished in 0.008930s, 111.9768 runs/s, 0.0000 assertions/s.\r\n1 runs, 0 assertions, 0 failures, 1 errors, 0 skips\r\n$\r\n```\r\n\r\n### Additional information\r\n* `require_job_options_kwarg?` always returns `false` because `JobWrapper.method(:enqueue).parameters` does not have any `[:key, :job_options]` \r\nwhere it looks expected to return `true`.\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 32774\r\n\r\n# Running:\r\n\r\n[46, 55] in ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n    46|       end\r\n    47|\r\n    48|       private\r\n    49|         def require_job_options_kwarg?\r\n    50|           require 'debug'\r\n=>  51|           binding.break\r\n    52|           @require_job_options_kwarg ||=\r\n    53|             JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }\r\n    54|         end\r\n    55|\r\n=>#0\tActiveJob::QueueAdapters::QueAdapter#require_job_options_kwarg? at ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:51\r\n  #1\tActiveJob::QueueAdapters::QueAdapter#enqueue(job=#<HelloJob:0x00007fc861807740 @arguments...) at ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:24\r\n  # and 40 frames (use `bt' command for all frames)\r\n(rdbg) JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }    # ruby\r\nfalse\r\n(rdbg) JobWrapper.method(:enqueue).parameters    # ruby\r\n[[:req, :args], [:keyreq, :priority], [:keyreq, :queue], [:key, :run_at]]\r\n(rdbg) quit    # command\r\nReally quit? [Y/n] Y\r\n```\r\n\r\n* By changing `require_job_options_kwarg?` always returns `true`, it raises `ArgumentError: missing keywords: :priority, :queue`\r\n\r\n```ruby\r\n$ git diff\r\ndiff --git a/activejob/lib/active_job/queue_adapters/que_adapter.rb b/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\nindex 41b3633a07..54e8cbc39b 100644\r\n--- a/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n+++ b/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n@@ -47,6 +47,7 @@ def enqueue_at(job, timestamp) # :nodoc:\r\n\r\n       private\r\n         def require_job_options_kwarg?\r\n+          return true\r\n           @require_job_options_kwarg ||=\r\n             JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }\r\n         end\r\n$\r\n```\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 21508\r\n\r\n# Running:\r\n\r\nE\r\n\r\nError:\r\nQueuingTest#test_run_queued_job:\r\nArgumentError: missing keywords: :priority, :queue\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:65:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:25:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:67:in `block in enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:118:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:28:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:27:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:9:in `block (2 levels) in <module:Instrumentation>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:27:in `tag_logger'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:14:in `block (2 levels) in <module:Logging>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:138:in `run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:63:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:30:in `perform_later'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/cases/queuing_test.rb:14:in `block in <class:QueuingTest>'\r\n\r\n\r\nbin/test test/cases/queuing_test.rb:13\r\n\r\n\r\n\r\nFinished in 0.008724s, 114.6312 runs/s, 0.0000 assertions/s.\r\n1 runs, 0 assertions, 0 failures, 1 errors, 0 skips\r\n$\r\n```\r\n\r\n\r\n### System configuration\r\n**Rails version**: main branch\r\n\r\n**Ruby version**: $ ruby -v\r\nruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [x86_64-linux]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45899/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45893","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45893/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45893/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45893/events","html_url":"https://github.com/rails/rails/issues/45893","id":1352793907,"node_id":"I_kwDNIULOUKH_Mw","number":45893,"title":"ActiveRecord: HMT with conditions does not update the in-memory collection when pushing new objects","user":{"login":"joanniclaborde","id":411925,"node_id":"MDQ6VXNlcjQxMTkyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/411925?v=4","gravatar_id":"","url":"https://api.github.com/users/joanniclaborde","html_url":"https://github.com/joanniclaborde","followers_url":"https://api.github.com/users/joanniclaborde/followers","following_url":"https://api.github.com/users/joanniclaborde/following{/other_user}","gists_url":"https://api.github.com/users/joanniclaborde/gists{/gist_id}","starred_url":"https://api.github.com/users/joanniclaborde/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joanniclaborde/subscriptions","organizations_url":"https://api.github.com/users/joanniclaborde/orgs","repos_url":"https://api.github.com/users/joanniclaborde/repos","events_url":"https://api.github.com/users/joanniclaborde/events{/privacy}","received_events_url":"https://api.github.com/users/joanniclaborde/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-26T22:40:12Z","updated_at":"2022-08-30T15:33:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi! When using a `has_many :a, through: :b` relation, and the `:b` relation has a condition, adding new objects doesn't update the in-memory collection properly (stops after the first object).\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :packages, force: true do |t|\r\n  end\r\n\r\n  create_table :package_items, force: true do |t|\r\n    t.integer :package_id\r\n    t.integer :item_id\r\n  end\r\n\r\n  create_table :items, force: true do |t|\r\n    t.boolean \"deleted\", default: false\r\n  end\r\nend\r\n\r\nclass Package < ActiveRecord::Base\r\n  has_many :package_items, ->{ where(item_id: Item.active.pluck(:id)) }\r\n  has_many :items, through: :package_items\r\nend\r\n\r\nclass PackageItem < ActiveRecord::Base\r\n  belongs_to :package\r\n  belongs_to :item\r\nend\r\n\r\nclass Item < ActiveRecord::Base\r\n  has_many :package_items\r\n  has_many :packages, through: :package_items\r\n\r\n  scope :active, -> { where(deleted: false) }\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    package = Package.create!\r\n    package.items << Item.create!\r\n    package.items << Item.create!\r\n    package.items << Item.create!\r\n\r\n    # This should be [3, 3, 3] but we get [3, 1, 3]\r\n    assert_equal [3, 3, 3], [Item.count, package.items.count, package.reload.items.count]\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n`package.items.count` is equal to 3.\r\n\r\n### Actual behavior\r\n`package.items.count` is equal to 1, even though all the items and relations are created properly (see assertion).\r\n\r\n### System configuration\r\n**Rails version**: tested on `7.1.0.alpha` and `6.1.6.1`.\r\n\r\n**Ruby version**: tested on `2.7.5`.\r\n\r\n### Workaround\r\nI was able to fix this issue by changing the weird condition to a proper scope:\r\n\r\n```ruby\r\nclass Package < ActiveRecord::Base\r\n  has_many :package_items, ->{ includes(:item).merge(Item.active) }\r\n  has_many :items, through: :package_items\r\nend\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45893/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45893/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45880","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45880/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45880/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45880/events","html_url":"https://github.com/rails/rails/issues/45880","id":1349546108,"node_id":"I_kwDNIULOUHBwfA","number":45880,"title":"Google search links to old API docs","user":{"login":"abraham","id":3341,"node_id":"MDQ6VXNlcjMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/3341?v=4","gravatar_id":"","url":"https://api.github.com/users/abraham","html_url":"https://github.com/abraham","followers_url":"https://api.github.com/users/abraham/followers","following_url":"https://api.github.com/users/abraham/following{/other_user}","gists_url":"https://api.github.com/users/abraham/gists{/gist_id}","starred_url":"https://api.github.com/users/abraham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abraham/subscriptions","organizations_url":"https://api.github.com/users/abraham/orgs","repos_url":"https://api.github.com/users/abraham/repos","events_url":"https://api.github.com/users/abraham/events{/privacy}","received_events_url":"https://api.github.com/users/abraham/received_events","type":"User","site_admin":true},"labels":[{"id":150377,"node_id":"MDU6TGFiZWwxNTAzNzc=","url":"https://api.github.com/repos/rails/rails/labels/docs","name":"docs","color":"02d7e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-24T14:33:55Z","updated_at":"2022-08-25T23:48:01Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n1. Search Google for a Rails API https://www.google.com/search?q=rails+update_all\r\n2. Follow link for \"ActiveRecord::Relation - Rails API\"\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n\r\nFind documentation for the latest version of Rails. Currently `7.0.3.1`.\r\n\r\n`https://api.rubyonrails.org/classes/ActiveRecord/Relation.html`\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n\r\nFind documentation for the the very old version of `3.2.3`.\r\n\r\n`https://api.rubyonrails.org/v3.2.3/classes/ActiveRecord/Relation.html`\r\n\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45880/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45880/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45832","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45832/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45832/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45832/events","html_url":"https://github.com/rails/rails/issues/45832","id":1339487378,"node_id":"I_kwDNIULOT9b0kg","number":45832,"title":"MySQL 8.0 VARBINARY default value is hexadecimal","user":{"login":"HParker","id":4482399,"node_id":"MDQ6VXNlcjQ0ODIzOTk=","avatar_url":"https://avatars.githubusercontent.com/u/4482399?v=4","gravatar_id":"","url":"https://api.github.com/users/HParker","html_url":"https://github.com/HParker","followers_url":"https://api.github.com/users/HParker/followers","following_url":"https://api.github.com/users/HParker/following{/other_user}","gists_url":"https://api.github.com/users/HParker/gists{/gist_id}","starred_url":"https://api.github.com/users/HParker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HParker/subscriptions","organizations_url":"https://api.github.com/users/HParker/orgs","repos_url":"https://api.github.com/users/HParker/repos","events_url":"https://api.github.com/users/HParker/events{/privacy}","received_events_url":"https://api.github.com/users/HParker/received_events","type":"User","site_admin":true},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":309390193,"node_id":"MDU6TGFiZWwzMDkzOTAxOTM=","url":"https://api.github.com/repos/rails/rails/labels/MySQL","name":"MySQL","color":"fef2c0","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-08-15T20:42:09Z","updated_at":"2022-08-16T10:23:16Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Default values on VARBINARY columns changed behavior between MySQL 5.7 and 8.0\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"mysql2\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"mysql2\", database: \"adam_test\", prepared_statements: false, host: '127.0.0.1', port: 3307, user: \"root\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.binary :some_binary, null: false, limit: 1024, default: \"hello-world\"\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_mysql_defaults\r\n    post = Post.create!\r\n\r\n    mysql_vars = ActiveRecord::Base.connection.select_rows(\"SHOW VARIABLES LIKE '%version%'\")\r\n    puts mysql_vars.inspect\r\n    puts Post.column_defaults\r\n\r\n    # assert_equal \"0x68656C6C6F2D776F726C64\", post.some_binary # This passes\r\n    assert_equal \"hello-world\", post.some_binary # This fails\r\n\r\n    reloaded_post = Post.first\r\n    assert_equal \"hello-world\", reloaded_post.some_binary # this passes\r\n  end\r\nend\r\n```\r\n\r\nOn MySQL 5.7:\r\n\r\n```ruby\r\nPost.column_defaults # => {\"id\"=>nil, \"some_binary\"=>\"hello-world\"}\r\n```\r\n\r\nOn MySQL 8.0:\r\n\r\n```ruby\r\nPost.column_defaults # => {\"id\"=>nil, \"some_binary\"=>\"0x68656C6C6F2D776F726C64\"}\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe default value on binary columns should be Ruby strings, not ruby strings of hexadecimal.\r\n\r\n### Actual behavior\r\n\r\nThe column default in MySQL 8.0 is a hexadecimal string representing the binary data.\r\n\r\n### System configuration\r\n**Rails version**: main\r\n\r\n**Ruby version**: 3.1.0\r\n\r\nSome interesting MySQL forum posts about this behavior change:\r\n\r\n- https://forums.mysql.com/read.php?24,685577,685577\r\n- https://forums.mysql.com/read.php?20,698061,698061#msg-698061\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45832/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45832/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45830","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45830/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45830/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45830/events","html_url":"https://github.com/rails/rails/issues/45830","id":1338922250,"node_id":"I_kwDNIULOT85VCg","number":45830,"title":"ActiveRecord Rollbacks on errors which happen on commit","user":{"login":"Baxxx","id":17880055,"node_id":"MDQ6VXNlcjE3ODgwMDU1","avatar_url":"https://avatars.githubusercontent.com/u/17880055?v=4","gravatar_id":"","url":"https://api.github.com/users/Baxxx","html_url":"https://github.com/Baxxx","followers_url":"https://api.github.com/users/Baxxx/followers","following_url":"https://api.github.com/users/Baxxx/following{/other_user}","gists_url":"https://api.github.com/users/Baxxx/gists{/gist_id}","starred_url":"https://api.github.com/users/Baxxx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baxxx/subscriptions","organizations_url":"https://api.github.com/users/Baxxx/orgs","repos_url":"https://api.github.com/users/Baxxx/repos","events_url":"https://api.github.com/users/Baxxx/events{/privacy}","received_events_url":"https://api.github.com/users/Baxxx/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":126910270,"node_id":"MDU6TGFiZWwxMjY5MTAyNzA=","url":"https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps","name":"With reproduction steps","color":"009800","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2022-08-15T12:09:14Z","updated_at":"2022-08-25T13:32:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nIn some of our projects we use Postgres as database, and for some cases we deferred trigger constraints. These triggers fire up when `COMMIT` is called. Trigger can raise an error, which kills the transaction. ActiveRecord catches the error, and bubbles it up to developer, but it also sends `ROLLBACK` to Postgres, to which Postgres gives a warning that there is no transaction in progress.\r\n\r\nI didn't test this with sqlite3 or mysql.\r\n\r\nYou can see the reproduction script, and screenshot with the current behavior.\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", \"~> 7\"\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"logger\"\r\n\r\nlogger = Logger.new(STDOUT)\r\n\r\n# This connection will do for database-independent bug reports.\r\npg_opts = {adapter: \"postgresql\", database: \"ar_rollback_after_failed_commit_issue\"}\r\n\r\nActiveRecord::Base.establish_connection(pg_opts.except(:database))\r\nActiveRecord::Base.connection.drop_database(pg_opts[:database])\r\nActiveRecord::Base.connection.create_database(pg_opts[:database])\r\nlogger.info \"Database #{pg_opts[:database]} was (re)created.\"\r\n\r\nActiveRecord::Base.establish_connection(pg_opts)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  execute <<~SQL\r\n    CREATE FUNCTION perform_custom_validation()\r\n      RETURNS TRIGGER\r\n      LANGUAGE plpgsql\r\n      AS $$\r\n        DECLARE\r\n          total_invalid INTEGER;\r\n        BEGIN\r\n          SELECT COUNT(*) INTO total_invalid\r\n          FROM things\r\n          WHERE name = 'bad';\r\n\r\n          IF (total_invalid > 0) THEN\r\n            RAISE EXCEPTION 'There are bad things';\r\n          END IF;\r\n          RETURN NULL;\r\n        END;\r\n      $$;\r\n\r\n    CREATE TABLE \"things\" (\r\n      \"id\" bigserial primary key,\r\n      \"name\" character varying NOT NULL\r\n    );\r\n\r\n    CREATE CONSTRAINT\r\n      TRIGGER bank_transaction_rl_payment_date_validation\r\n      AFTER INSERT OR UPDATE ON things\r\n      DEFERRABLE INITIALLY DEFERRED\r\n      FOR EACH ROW EXECUTE FUNCTION perform_custom_validation();\r\n  SQL\r\nend\r\n\r\nclass Thing < ActiveRecord::Base\r\n  validates :name, presence: true\r\nend\r\n\r\n# All good\r\nlogger.info \"First transaction\"\r\nThing.create!(name: \"good\")\r\n\r\n# AR tries to commit, DB raises an error, AR tries to ROLLBACK, and PG gives a warning\r\nbegin\r\n  logger.info \"Second transaction\"\r\n  Thing.create!(name: \"bad\")\r\nrescue StandardError\r\n  # Doesn't matter\r\nend\r\n```\r\n\r\n### Expected behavior\r\nActiveRecord should not `ROLLBACK`, as there is no transaction in progress.\r\n\r\n### Actual behavior\r\nActiveRecord tries to `ROLLBACK`.\r\n\r\n![Screenshot from 2022-08-15 14-07-11](https://user-images.githubusercontent.com/17880055/184632335-0277cd27-4c7b-4b98-94a8-373be34a87ee.png)\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 2.7.5p203\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45830/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45830/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45823","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45823/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45823/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45823/events","html_url":"https://github.com/rails/rails/issues/45823","id":1337409694,"node_id":"I_kwDNIULOT7dAng","number":45823,"title":"Change Column with Raw Character Set Failure","user":{"login":"ahoglund","id":3407303,"node_id":"MDQ6VXNlcjM0MDczMDM=","avatar_url":"https://avatars.githubusercontent.com/u/3407303?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoglund","html_url":"https://github.com/ahoglund","followers_url":"https://api.github.com/users/ahoglund/followers","following_url":"https://api.github.com/users/ahoglund/following{/other_user}","gists_url":"https://api.github.com/users/ahoglund/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoglund/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoglund/subscriptions","organizations_url":"https://api.github.com/users/ahoglund/orgs","repos_url":"https://api.github.com/users/ahoglund/repos","events_url":"https://api.github.com/users/ahoglund/events{/privacy}","received_events_url":"https://api.github.com/users/ahoglund/received_events","type":"User","site_admin":true},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":126910270,"node_id":"MDU6TGFiZWwxMjY5MTAyNzA=","url":"https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps","name":"With reproduction steps","color":"009800","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-12T16:21:50Z","updated_at":"2022-08-12T20:47:38Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"With [this recent change to how collation is handled for column changes](https://github.com/rails/rails/pull/45744/files), there is now a potential for older migrations written in a specific manner to break if the `collation:` argument is not specific.\r\n\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\n# you need to install mysql locally for this to work.\r\n# on Mac:\r\n# brew install mysql\r\n# brew services start mysql\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"mysql2\"\r\n\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nclient = Mysql2::Client.new(host: 'localhost', username: \"root\")\r\nclient.query(\"DROP DATABASE test\")\r\nclient.query(\"CREATE DATABASE test\")\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"mysql2\", database: \"test\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :payments, force: true do |t|\r\n    t.string :description, \"varchar(64)\", null: false\r\n  end\r\nend\r\n\r\nclass Payment < ActiveRecord::Base\r\nend\r\n\r\nclass ChangeAmountToAddScale < ActiveRecord::Migration[7.1]\r\n  # This sets the default character set for the payments\r\n  # table to utf32 with a default COLLATION of utf32_general_ci.\r\n  # This can be verified by running the following query:\r\n  #\r\n  # SHOW CHARACTER SET;\r\n  #\r\n  connection.execute(<<~SQL)\r\n    ALTER TABLE payments CONVERT TO CHARACTER SET utf32\r\n  SQL\r\n\r\n  def change\r\n    reversible do |dir|\r\n      dir.up do\r\n        change_table(:payments, bulk: true) do |t|\r\n          # The default collation of utf32_general_ci\r\n          # will not be compatible with this ascii character set. \r\n          #\r\n          # when we build the column change now we automatically\r\n          # try to assign the previous collation to the column if no `collation:` is specified.\r\n          # \r\n          # https://github.com/rails/rails/pull/45744\r\n          #\r\n          # The workaround is to add `collation: 'ascii_bin'` or `collation: 'ascii_general_ci'` to the change.\r\n          #\r\n          # This isn't a huge deal and it has a workaround but it _will_ break\r\n          # anyone who has migrations that are written like this and upgrade to this version\r\n          # of Rails.\r\n          t.change :description, \"varchar(64) CHARACTER SET ascii\", null: false\r\n        end\r\n      end\r\n\r\n      dir.down do\r\n        change_table(:payments, bulk: true) do |t|\r\n          t.change :description, \"varchar(64)\", null: false\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_migration_up\r\n    ChangeAmountToAddScale.migrate(:up)\r\n    Payment.reset_column_information\r\n\r\n    assert_equal \"varchar\", Payment.columns.last.sql_type\r\n  end\r\n\r\n  def test_migration_down\r\n    ChangeAmountToAddScale.migrate(:down)\r\n    Payment.reset_column_information\r\n\r\n    assert_equal \"varchar\", Payment.columns.last.sql_type\r\n  end\r\nend\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nI would expect this to detect that the character set is being changed, and either \r\n\r\n1. change the collation to be compatible.\r\n2. At least give a clearer error that requires the `collation:` arg to be passed when the character set is being modified.\r\n\r\n### Actual behavior\r\n\r\nThis error:\r\n\r\n```\r\nError:\r\nBugTest#test_migration_up:\r\nActiveRecord::StatementInvalid: Mysql2::Error: COLLATION 'utf32_general_ci' is not valid for CHARACTER SET 'ascii'\r\n    test.rb:51:in `block (2 levels) in change'\r\n    test.rb:50:in `block in change'\r\n    test.rb:49:in `change'\r\n    test.rb:67:in `test_migration_up'\r\n```\r\n\r\n### System configuration\r\n**Rails version**: main\r\n**Ruby version**: ruby 3.1.1p18\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45823/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45823/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45822","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45822/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45822/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45822/events","html_url":"https://github.com/rails/rails/issues/45822","id":1337253221,"node_id":"I_kwDNIULOT7TdZQ","number":45822,"title":"ActiveRecord: Wrong results returned by ActiveRecord::Associations::Preloader when intermediate association is already preloaded.","user":{"login":"yopzer","id":6330271,"node_id":"MDQ6VXNlcjYzMzAyNzE=","avatar_url":"https://avatars.githubusercontent.com/u/6330271?v=4","gravatar_id":"","url":"https://api.github.com/users/yopzer","html_url":"https://github.com/yopzer","followers_url":"https://api.github.com/users/yopzer/followers","following_url":"https://api.github.com/users/yopzer/following{/other_user}","gists_url":"https://api.github.com/users/yopzer/gists{/gist_id}","starred_url":"https://api.github.com/users/yopzer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yopzer/subscriptions","organizations_url":"https://api.github.com/users/yopzer/orgs","repos_url":"https://api.github.com/users/yopzer/repos","events_url":"https://api.github.com/users/yopzer/events{/privacy}","received_events_url":"https://api.github.com/users/yopzer/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"jhawthorn","id":131752,"node_id":"MDQ6VXNlcjEzMTc1Mg==","avatar_url":"https://avatars.githubusercontent.com/u/131752?v=4","gravatar_id":"","url":"https://api.github.com/users/jhawthorn","html_url":"https://github.com/jhawthorn","followers_url":"https://api.github.com/users/jhawthorn/followers","following_url":"https://api.github.com/users/jhawthorn/following{/other_user}","gists_url":"https://api.github.com/users/jhawthorn/gists{/gist_id}","starred_url":"https://api.github.com/users/jhawthorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhawthorn/subscriptions","organizations_url":"https://api.github.com/users/jhawthorn/orgs","repos_url":"https://api.github.com/users/jhawthorn/repos","events_url":"https://api.github.com/users/jhawthorn/events{/privacy}","received_events_url":"https://api.github.com/users/jhawthorn/received_events","type":"User","site_admin":true},"assignees":[{"login":"jhawthorn","id":131752,"node_id":"MDQ6VXNlcjEzMTc1Mg==","avatar_url":"https://avatars.githubusercontent.com/u/131752?v=4","gravatar_id":"","url":"https://api.github.com/users/jhawthorn","html_url":"https://github.com/jhawthorn","followers_url":"https://api.github.com/users/jhawthorn/followers","following_url":"https://api.github.com/users/jhawthorn/following{/other_user}","gists_url":"https://api.github.com/users/jhawthorn/gists{/gist_id}","starred_url":"https://api.github.com/users/jhawthorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhawthorn/subscriptions","organizations_url":"https://api.github.com/users/jhawthorn/orgs","repos_url":"https://api.github.com/users/jhawthorn/repos","events_url":"https://api.github.com/users/jhawthorn/events{/privacy}","received_events_url":"https://api.github.com/users/jhawthorn/received_events","type":"User","site_admin":true}],"milestone":null,"comments":1,"created_at":"2022-08-12T14:06:55Z","updated_at":"2022-08-18T23:36:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"activerecord\", \"7.0.3.1\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :a_records, force: true\r\n\r\n  create_table :b_records, force: true do |t|\r\n    t.references :a_record\r\n    t.references :c_record\r\n  end\r\n\r\n  create_table :c_records, force: true\r\n\r\n  create_table :d_records, force: true do |t|\r\n    t.references :c_record\r\n  end\r\nend\r\n\r\nclass ARecord < ActiveRecord::Base\r\n  has_one :b_record\r\n  has_one :c_record, through: :b_record\r\n  has_many :d_records, through: :c_record\r\nend\r\n\r\nclass BRecord < ActiveRecord::Base\r\n  belongs_to :a_record\r\n  belongs_to :c_record\r\nend\r\n\r\nclass CRecord < ActiveRecord::Base\r\n  has_one :b_record\r\n  has_many :d_records\r\nend\r\n\r\nclass DRecord < ActiveRecord::Base\r\n  belongs_to :c_record\r\nend\r\n\r\na = ARecord.create!\r\nc = CRecord.create!\r\nBRecord.create!(a_record: a, c_record: c)\r\nDRecord.create!(c_record: c)\r\nDRecord.create!(c_record: c)\r\n\r\na.reload\r\na.c_record # NB: if removed this works\r\n\r\n::ActiveRecord::Associations::Preloader.new(records: [a], associations: :d_records).call\r\nputs({ record_ids: a.d_records.map(&:id), size: a.d_records.size })\r\n```\r\n\r\n### Expected behavior\r\nTwo records should be loaded:\r\n`{:record_ids=>[1, 2], :size=>2}`\r\n\r\n### Actual behavior\r\nNo records are loaded:\r\n`{:record_ids=>[], :size=>0}`\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 2.7.5\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45822/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45822/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45817","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45817/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45817/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45817/events","html_url":"https://github.com/rails/rails/issues/45817","id":1336797388,"node_id":"I_kwDNIULOT63ozA","number":45817,"title":"Value of attribute default proc is shared between instances after dup + dirty tracking","user":{"login":"quadule","id":15299,"node_id":"MDQ6VXNlcjE1Mjk5","avatar_url":"https://avatars.githubusercontent.com/u/15299?v=4","gravatar_id":"","url":"https://api.github.com/users/quadule","html_url":"https://github.com/quadule","followers_url":"https://api.github.com/users/quadule/followers","following_url":"https://api.github.com/users/quadule/following{/other_user}","gists_url":"https://api.github.com/users/quadule/gists{/gist_id}","starred_url":"https://api.github.com/users/quadule/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/quadule/subscriptions","organizations_url":"https://api.github.com/users/quadule/orgs","repos_url":"https://api.github.com/users/quadule/repos","events_url":"https://api.github.com/users/quadule/events{/privacy}","received_events_url":"https://api.github.com/users/quadule/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-12T06:16:00Z","updated_at":"2022-08-15T15:56:11Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWhen an attribute without a database column defines a default proc, `dup`ing a model in which the default wasn't accessed passes the unevaluated `UserProvidedDefault` attribute to the new instance as the attribute's original value. Checking the new attribute for changes will then memoize the value in the original attribute definition, making it the default value in every new model instance afterward.\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n  gem \"rails\", github: \"rails/rails\", ref: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Schema.define do\r\n  create_table :cats do |t|\r\n    t.string :name\r\n  end\r\nend\r\n\r\nclass Cat < ActiveRecord::Base\r\n  attribute :sounds, default: -> { [] }\r\nend\r\n\r\nclass VirtualAttributeTest < Minitest::Test\r\n  def test_virtual_attribute_defaults_are_independent\r\n    Cat.new.dup.save!\r\n    Cat.new.sounds << \"meow\"\r\n    refute_same Cat.new.sounds, Cat.new.sounds\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nEach new instance should get a new default value from the proc.\r\n\r\n### Actual behavior\r\nAfter using dirty tracking on a duplicated instance with an uncalled proc default, all new instances of a model receive the same default value and share any changes made to it.\r\n\r\n### Affected versions\r\nThis seems to date back quite a while; the test fails on the main branch back to 5-1-stable.\r\n\r\n### Credits\r\nThanks to @GBH for originally discovering this bug.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45817/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45817/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45794","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45794/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45794/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45794/events","html_url":"https://github.com/rails/rails/issues/45794","id":1332999733,"node_id":"I_kwDNIULOT3P2NQ","number":45794,"title":"Action Cable client goes in a connection loop if you subscribe multiple times to the same channel","user":{"login":"ProGM","id":5167659,"node_id":"MDQ6VXNlcjUxNjc2NTk=","avatar_url":"https://avatars.githubusercontent.com/u/5167659?v=4","gravatar_id":"","url":"https://api.github.com/users/ProGM","html_url":"https://github.com/ProGM","followers_url":"https://api.github.com/users/ProGM/followers","following_url":"https://api.github.com/users/ProGM/following{/other_user}","gists_url":"https://api.github.com/users/ProGM/gists{/gist_id}","starred_url":"https://api.github.com/users/ProGM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ProGM/subscriptions","organizations_url":"https://api.github.com/users/ProGM/orgs","repos_url":"https://api.github.com/users/ProGM/repos","events_url":"https://api.github.com/users/ProGM/events{/privacy}","received_events_url":"https://api.github.com/users/ProGM/received_events","type":"User","site_admin":false},"labels":[{"id":300028327,"node_id":"MDU6TGFiZWwzMDAwMjgzMjc=","url":"https://api.github.com/repos/rails/rails/labels/actioncable","name":"actioncable","color":"bfdadc","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-09T09:48:36Z","updated_at":"2022-08-17T17:57:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\nYou can just start from a fresh `rails new [project-name]` installation.\r\nChannel code:\r\n```ruby\r\nclass ArticleChannel < ApplicationCable::Channel\r\n  def subscribed\r\n    stream_from \"ArticleChannel\"\r\n  end\r\n\r\n  def unsubscribed\r\n    # Any cleanup needed when channel is unsubscribed\r\n  end\r\nend\r\n```\r\n\r\nJavascript code:\r\n```javascript\r\nimport consumer from \"channels/consumer\"\r\n\r\nfunction subscribe() {\r\n\treturn consumer.subscriptions.create('ArticleChannel', {\r\n\t\tconnected() {\r\n\t\t\tconsole.log('connected');\r\n\t\t\t// Called when the subscription is ready for use on the server\r\n\t\t},\r\n\r\n\t\tdisconnected() {\r\n\t\t\tconsole.log('disconnected');\r\n\t\t\t// Called when the subscription has been terminated by the server\r\n\t\t},\r\n\r\n\t\treceived(data) {\r\n\t\t\tconsole.log('received', data);\r\n\t\t\t// Called when there's incoming data on the websocket for this channel\r\n\t\t}\r\n\t});\r\n}\r\n\r\nsetTimeout(() => {\r\n\tsubscribe();\r\n}, 3000);\r\n\r\nsetTimeout(() => {\r\n\tsubscribe();\r\n}, 4000);\r\n```\r\n\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nAny of these options could be considered an expected behavior:\r\n* Everything just works™, both subscriptions receive notification from that channel and no error is raised\r\n* The second `subscription.create(...)` raises some kind of error, notifying that the channel is already connected\r\n* The second `subscription.create(...)` returns the same instance of Subscription and writes a `console.warning` in console\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nThe second subscriptions triggers a connection loop.\r\n\r\nExample logs with `ActionCable.logger.enabled = true`.\r\n\r\n```\r\n[ActionCable] Opening WebSocket, current state is null, subprotocols: actioncable-v1-json,actioncable-unsupported 1660037219747\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] ConnectionMonitor started. stale threshold = 6 s 1660037219748\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] WebSocket onopen event, using 'actioncable-v1-json' subprotocol 1660037219758\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] ConnectionMonitor recorded connect 1660037219759\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor guaranteeing {\"channel\":\"ArticleChannel\"} 1660037219760\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] Subscription confirmed {\"channel\":\"ArticleChannel\"} 1660037219762\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor forgetting {\"channel\":\"ArticleChannel\"} 1660037219762\r\narticle_channel-b29f3f7bf31169dfadd26c7747a46706d4992a1fd842de8268f206c5f0a0fe45.js:6 connected\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor guaranteeing {\"channel\":\"ArticleChannel\"} 1660037220744\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221248\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221248\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n... and so on, forever...\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 3.1\r\n\r\n### Possible solutions\r\nThis issue happens because the identifier of both subscriptions is the same. Since Rails (ActionCable) doesn't answer to any subsequential command \"subscribe\" from the same client (in this case: `{\"command\":\"subscribe\",\"identifier\":\"{\\\"channel\\\":\\\"ArticleChannel\\\"}\"}`), the `SubscriptionGuarantor` considers the connection failed and [retries to connect after 500ms](https://github.com/rails/rails/blob/8994f09dd2f6ae363e74d8ee3b24700d9db94a16/actioncable/app/assets/javascripts/actioncable.esm.js#L351).\r\n\r\nI see various options to fix this:\r\n* Raise an exception when trying to create a subscription with the same identifier\r\n* Add a random/uuid to the identifier when connecting, so two connection would not share the same identifier? (I've already tested it, and it seems to fix)\r\n\r\nWould you accept a PR from me regarding this?","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45794/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45794/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45791","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45791/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45791/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45791/events","html_url":"https://github.com/rails/rails/issues/45791","id":1332570977,"node_id":"I_kwDNIULOT21rYQ","number":45791,"title":"Google::Apis::ClientError raised when using ActiveStorage to generate signed URLs to access a file in a GCS bucket with GKE Workload Identity","user":{"login":"danielyazbek","id":18390164,"node_id":"MDQ6VXNlcjE4MzkwMTY0","avatar_url":"https://avatars.githubusercontent.com/u/18390164?v=4","gravatar_id":"","url":"https://api.github.com/users/danielyazbek","html_url":"https://github.com/danielyazbek","followers_url":"https://api.github.com/users/danielyazbek/followers","following_url":"https://api.github.com/users/danielyazbek/following{/other_user}","gists_url":"https://api.github.com/users/danielyazbek/gists{/gist_id}","starred_url":"https://api.github.com/users/danielyazbek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielyazbek/subscriptions","organizations_url":"https://api.github.com/users/danielyazbek/orgs","repos_url":"https://api.github.com/users/danielyazbek/repos","events_url":"https://api.github.com/users/danielyazbek/events{/privacy}","received_events_url":"https://api.github.com/users/danielyazbek/received_events","type":"User","site_admin":false},"labels":[{"id":664533972,"node_id":"MDU6TGFiZWw2NjQ1MzM5NzI=","url":"https://api.github.com/repos/rails/rails/labels/activestorage","name":"activestorage","color":"bfd4f2","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-09T01:05:08Z","updated_at":"2022-08-09T15:53:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nConfigure ActiveStorage with GKE Workload identity (as documented [here](https://edgeguides.rubyonrails.org/active_storage_overview.html#google-cloud-storage-service)):\r\n\r\n```ruby\r\ngoogle:\r\n  service: GCS\r\n  iam: true\r\n  project: <%= ENV['ACTIVE_STORAGE_PROJECT'] %>\r\n  bucket: <%= ENV['ACTIVE_STORAGE_BUCKET'] %>\r\n```\r\n\r\nDefine a class:\r\n```ruby\r\nclass Transaction < ApplicationRecord\r\n  has_one_attached :csv_report\r\nend\r\n```\r\n\r\nWrite something to ActiveStorage:\r\n```ruby\r\nt = Transaction.create\r\nt.csv_report.attach(io: StringIO.new(\"A,B,C\"), filename: 'test.csv')\r\n```\r\n\r\nGenerate a Signed URL\r\n```ruby\r\nRails.application.routes.url_helpers.rails_blob_url(Transaction.last.csv_report, disposition: 'attachment')\r\n```\r\n\r\nPaste the generated URL into a browser\r\n\r\n### Expected behavior\r\nActiveRecord provides the attachment\r\n\r\n### Actual behavior\r\nError is raised:\r\n\r\n```\r\nGoogle::Apis::ClientError (Invalid request):\r\ngems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:236:in `check_status': Invalid request (Google::Apis::ClientError)\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/api_command.rb:134:in `check_status'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:199:in `process_response'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:318:in `execute_once'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:118:in `block (2 levels) in execute'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:61:in `block in retriable'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `times'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `retriable'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:115:in `block in execute'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:61:in `block in retriable'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `times'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `retriable'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:105:in `execute'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/base_service.rb:397:in `execute_or_queue_command'\r\n    from gems/google-apis-iamcredentials_v1-0.13.0/lib/google/apis/iamcredentials_v1/service.rb:158:in `sign_service_account_blob'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service/gcs_service.rb:232:in `block in signer'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file/signer_v2.rb:135:in `generate_signature'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file/signer_v2.rb:128:in `signed_url'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file.rb:1801:in `signed_url'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service/gcs_service.rb:160:in `private_url'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:123:in `block in url'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications/instrumenter.rb:24:in `instrument'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications.rb:206:in `instrument'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:163:in `instrument'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:118:in `url'\r\n    from gems/activestorage-7.0.3.1models/active_storage/blob.rb:217:in `url'\r\n    from gems/activestorage-7.0.3.1controllers/active_storage/blobs/redirect_controller.rb:14:in `show'\r\n```\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 3.1.2\r\n\r\n**google-cloud-storage gem version:** 1.38.0\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45791/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45791/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45778","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45778/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45778/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45778/events","html_url":"https://github.com/rails/rails/issues/45778","id":1330360134,"node_id":"I_kwDNIULOT0uvRg","number":45778,"title":"ActiveStorage attachments are lost when casting using Becomes","user":{"login":"markedmondson","id":1653699,"node_id":"MDQ6VXNlcjE2NTM2OTk=","avatar_url":"https://avatars.githubusercontent.com/u/1653699?v=4","gravatar_id":"","url":"https://api.github.com/users/markedmondson","html_url":"https://github.com/markedmondson","followers_url":"https://api.github.com/users/markedmondson/followers","following_url":"https://api.github.com/users/markedmondson/following{/other_user}","gists_url":"https://api.github.com/users/markedmondson/gists{/gist_id}","starred_url":"https://api.github.com/users/markedmondson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markedmondson/subscriptions","organizations_url":"https://api.github.com/users/markedmondson/orgs","repos_url":"https://api.github.com/users/markedmondson/repos","events_url":"https://api.github.com/users/markedmondson/events{/privacy}","received_events_url":"https://api.github.com/users/markedmondson/received_events","type":"User","site_admin":false},"labels":[{"id":664533972,"node_id":"MDU6TGFiZWw2NjQ1MzM5NzI=","url":"https://api.github.com/repos/rails/rails/labels/activestorage","name":"activestorage","color":"bfd4f2","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-05T20:19:16Z","updated_at":"2022-08-09T18:05:34Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\nCreate an ActiveRecord model with an ActiveStorage relation. Initialize and add the associated attachment. Cast the object to another subclassed model, the associated attachment is lost.\r\n\r\n```ruby\r\nunless File.exist?('Gemfile')\r\n    File.write('Gemfile', <<-GEMFILE)\r\n    source 'https://rubygems.org'\r\n    gem 'rails', '~> 6.1'\r\n    gem 'sqlite3'\r\n    GEMFILE\r\n\r\n    system 'bundle'\r\nend\r\n\r\nrequire 'bundler'\r\nBundler.setup(:default)\r\n\r\nrequire 'active_record'\r\nrequire 'active_storage/engine'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  config.hosts << 'example.org'\r\n  config.eager_load = false\r\n  config.session_store :cookie_store, key: 'cookie_store_key'\r\n  secrets.secret_key_base = 'secret_key_base'\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  config.active_storage.service = :local\r\n  config.active_storage.service_configurations = {\r\n    local: {\r\n      root: Dir.tmpdir,\r\n      service: 'Disk'\r\n    }\r\n  }\r\nend\r\n\r\nENV['DATABASE_URL'] = 'sqlite3::memory:'\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\nRails.application.initialize!\r\n\r\nrequire ActiveStorage::Engine.root.join('db/migrate/20170806125915_create_active_storage_tables.rb').to_s\r\n\r\nActiveRecord::Schema.define do\r\n  CreateActiveStorageTables.new.change\r\n\r\n  create_table :posts do |t|\r\n    t.string :title\r\n    t.string :text\r\n  end\r\n\r\n  create_table :comments do |t|\r\n    t.belongs_to :post\r\n    t.string :text\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post\r\n  has_one_attached :image\r\nend\r\n\r\nclass ModeratedComment < Comment; end\r\n\r\nclass BugTest < Minitest::Test\r\n  def setup\r\n    @post = Post.create(title: 'Post', text: 'Welcome')\r\n  end\r\n\r\n  def test_association\r\n    comment = @post.comments.new(text: 'I do not like this')\r\n\r\n    moderated_comment = comment.becomes(ModeratedComment)\r\n\r\n    assert_equal @post, moderated_comment.post # Pass\r\n  end\r\n\r\n  def test_attachment\r\n    file = ActiveStorage::Blob.create_and_upload!(\r\n      content_type: \"image/png\",\r\n      filename: \"image.png\",\r\n      io: ::StringIO.new(\"png\"),\r\n    )\r\n    comment = @post.comments.new(text: 'I do not like this', image: file)\r\n\r\n    moderated_comment = comment.becomes(ModeratedComment)\r\n\r\n    assert moderated_comment.image.attached? # Fail\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nWhen casting an ActiveRecord to another model, I expect the associations to be copied thus I expect attached ActiveStorage association assets to be copied.\r\n\r\n### Actual behavior\r\nPreviously attached ActiveStorage associated objects are lost on the original object.\r\n\r\n### System configuration\r\n**Rails version**: 6.1.6.1\r\n\r\n**Ruby version**: 3.0.4\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45778/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45778/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45775","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45775/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45775/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45775/events","html_url":"https://github.com/rails/rails/issues/45775","id":1330225377,"node_id":"I_kwDNIULOT0mg4Q","number":45775,"title":"Uniqueness validation on association does not use the correct primary key","user":{"login":"mikeletscher","id":6666411,"node_id":"MDQ6VXNlcjY2NjY0MTE=","avatar_url":"https://avatars.githubusercontent.com/u/6666411?v=4","gravatar_id":"","url":"https://api.github.com/users/mikeletscher","html_url":"https://github.com/mikeletscher","followers_url":"https://api.github.com/users/mikeletscher/followers","following_url":"https://api.github.com/users/mikeletscher/following{/other_user}","gists_url":"https://api.github.com/users/mikeletscher/gists{/gist_id}","starred_url":"https://api.github.com/users/mikeletscher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikeletscher/subscriptions","organizations_url":"https://api.github.com/users/mikeletscher/orgs","repos_url":"https://api.github.com/users/mikeletscher/repos","events_url":"https://api.github.com/users/mikeletscher/events{/privacy}","received_events_url":"https://api.github.com/users/mikeletscher/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-05T18:10:22Z","updated_at":"2022-08-09T14:52:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nI'm not _entirely_ sure if this is considered a bug, or intended behavior that's not well-documented for `uniqueness` validations on associations.\r\n\r\nI'm happy to help improve the documentation on this if that would be the most helpful way forward, or if this _is_ considered a bug, I can take a stab at a PR. \r\n\r\nIt looks like the issue is that `build_relation` on the uniqueness validator calls [`bind_attribute` on `ActiveRecord::Relation`](https://github.com/rails/rails/blob/408d061a80a49878ad26b305616ed9ba88ee1411/activerecord/lib/active_record/relation.rb#L45), which properly takes into account the reflection's foreign_key, but not primary key if it's been overridden. \r\n\r\nHere's a test that reproduces the issue:\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire 'bundler/inline'\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem 'activerecord', '~> 7.0.3.1'\r\n  gem 'sqlite3'\r\nend\r\n\r\nrequire 'active_record'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(\r\n  adapter: 'sqlite3',\r\n  database: ':memory:'\r\n)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :prescriptions, force: true do |t|\r\n    t.string :rx_number\r\n  end\r\n\r\n  create_table :fills, force: true do |t|\r\n    t.string :rx_number\r\n  end\r\nend\r\n\r\nclass Prescription < ActiveRecord::Base\r\n  has_many :fills, foreign_key: :rx_number, primary_key: :rx_number\r\nend\r\n\r\nclass Fill < ActiveRecord::Base\r\n  belongs_to :prescription, foreign_key: :rx_number, primary_key: :rx_number\r\n\r\n  validates :prescription, uniqueness: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_fill_unique_by_rx_number\r\n    Fill.create!(rx_number: '1234')\r\n    prescription = Prescription.create!(rx_number: '1234')\r\n    new_fill = prescription.fills.new\r\n    refute new_fill.save\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe uniqueness validation query would use the `rx_number` value of the `Prescription` to query for an existing `Fill` since that is what is set as the associations `primary_key`. \r\n\r\n### Actual behavior\r\nThe uniqueness validation query uses the `id` value of the `Prescription` to query for existing fills, disregarding the association's overridden `primary_key`.\r\n\r\nThis test passes if I patch bind_attribute to read the primary key from the reflection instead of directly from the reflection's klass:\r\n\r\n```ruby\r\nmodule ActiveRecord\r\n  # = Active Record \\Relation\r\n  class Relation\r\n    def bind_attribute(name, value) # :nodoc:\r\n      if reflection = klass._reflect_on_association(name)\r\n        name = reflection.foreign_key\r\n        primary_key = reflection.association_primary_key || reflection.klass.primary_key\r\n        value = value.read_attribute(primary_key) unless value.nil?\r\n      end\r\n\r\n      attr = table[name]\r\n      bind = predicate_builder.build_bind_attribute(attr.name, value)\r\n      yield attr, bind\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nWe were able to work around this by adding the uniqueness validation to the `rx_number` attribute instead of the association. If this is the desired way to handle this, I can open a PR to add a note about this to the docs, as it took us by surprise that validation on the association wouldn't use the defined key to get the value to query.\r\n\r\n### System configuration\r\n**Rails version**: `7.0.3.1`\r\n\r\n**Ruby version**: `3.1.2`\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45775/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45775/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45766","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45766/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45766/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45766/events","html_url":"https://github.com/rails/rails/issues/45766","id":1329650798,"node_id":"I_kwDNIULOT0Dcbg","number":45766,"title":"Active Model Dirty: attribute_changed? options (from/to) do not accept symbol","user":{"login":"thomasvanholder","id":36309895,"node_id":"MDQ6VXNlcjM2MzA5ODk1","avatar_url":"https://avatars.githubusercontent.com/u/36309895?v=4","gravatar_id":"","url":"https://api.github.com/users/thomasvanholder","html_url":"https://github.com/thomasvanholder","followers_url":"https://api.github.com/users/thomasvanholder/followers","following_url":"https://api.github.com/users/thomasvanholder/following{/other_user}","gists_url":"https://api.github.com/users/thomasvanholder/gists{/gist_id}","starred_url":"https://api.github.com/users/thomasvanholder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomasvanholder/subscriptions","organizations_url":"https://api.github.com/users/thomasvanholder/orgs","repos_url":"https://api.github.com/users/thomasvanholder/repos","events_url":"https://api.github.com/users/thomasvanholder/events{/privacy}","received_events_url":"https://api.github.com/users/thomasvanholder/received_events","type":"User","site_admin":false},"labels":[{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-08-05T08:54:51Z","updated_at":"2022-08-07T20:25:55Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nThe `attribute_changed?` receives optional options, such as `from` and `to`. Each option key is passed a value. Only string values are accepted, and symbols are not recognized. This is inconsistent behavior as updating a column using the `update` method does accept both a string and a symbol.\r\n \r\n Source code: [attribute_changed?](https://github.com/rails/rails/blob/04972d9b9ef60796dc8f0917817b5392d61fcf09/activemodel/lib/active_model/dirty.rb#L178) \r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"debug\"\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.column :status, :integer, default: 0\r\n    t.date :review_date\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  enum :status, {draft: 0, published: 1}\r\n\r\n  before_update :set_review_date\r\n\r\n  def set_review_date\r\n    # when \"published\" is set as a string, the test correcty passes.\r\n    if status_changed?(to: :published)\r\n      self.review_date = Date.today\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_set_status\r\n    post = Post.create!\r\n    post.update(status: :published)\r\n\r\n    assert_equal \"published\", post.status\r\n  end\r\n\r\n  def test_sets_review_date\r\n    post = Post.create!\r\n    post.published!\r\n\r\n    assert_equal \"published\", post.status\r\n    assert_equal Date.today, post.review_date\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe value of the optional arguments `from` and `to` accepts both a string or symbol.\r\n\r\n### Actual behavior\r\nWhen options, such as `from` and `to` are passed to the [attribute_changed?](https://github.com/rails/rails/blob/04972d9b9ef60796dc8f0917817b5392d61fcf09/activemodel/lib/active_model/dirty.rb#L178) method the arguments are not recognized when passed as a symbol.\r\n\r\n### System configuration\r\n**Rails version**: `Rails 7.0.3`\r\n\r\n**Ruby version**: `ruby 3.1.2`\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45766/reactions","total_count":2,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45766/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45758","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45758/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45758/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45758/events","html_url":"https://github.com/rails/rails/issues/45758","id":1327892229,"node_id":"I_kwDNIULOTyYHBQ","number":45758,"title":"ActiveRecord 6.1 and JSONB: Incorrect results value/type when using both arrow operator and double arrow operator in the same SELECT statement","user":{"login":"shhavel","id":1169424,"node_id":"MDQ6VXNlcjExNjk0MjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1169424?v=4","gravatar_id":"","url":"https://api.github.com/users/shhavel","html_url":"https://github.com/shhavel","followers_url":"https://api.github.com/users/shhavel/followers","following_url":"https://api.github.com/users/shhavel/following{/other_user}","gists_url":"https://api.github.com/users/shhavel/gists{/gist_id}","starred_url":"https://api.github.com/users/shhavel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shhavel/subscriptions","organizations_url":"https://api.github.com/users/shhavel/orgs","repos_url":"https://api.github.com/users/shhavel/repos","events_url":"https://api.github.com/users/shhavel/events{/privacy}","received_events_url":"https://api.github.com/users/shhavel/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-08-03T23:42:39Z","updated_at":"2022-08-05T22:26:04Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Issue Description\r\n\r\nGenerally when using JSONB operators `->` (arrow operator) and `->>` (double arrow operator) in SELECT statement, \r\nActiveRecord returns correct result types: objects for `->` operator and string for `->>` operator.\r\nBut when using both operators in the same select statement, the returned results may have an unexpected type or be `nil`.\r\n\r\n### Steps to reproduce with Expected behaviour in tests and Actual behaviour in comments\r\n\r\n```ruby\r\n# file: activerecord_6_1_jsonb_test.rb\r\n# run: ruby activerecord_6_1_jsonb_test.rb\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"activerecord\", \"6.1.6.1\" # the same behaviour for version \"7.0.3.1\"\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\npg_opts = {adapter: \"postgresql\", database: \"jsonb_activerecord_issue\"}\r\nbegin\r\n  ActiveRecord::Base.establish_connection(pg_opts.except(:database))\r\n  ActiveRecord::Base.connection.create_database(pg_opts[:database])\r\n  puts \"Database #{pg_opts[:database]} was created.\"\r\nrescue => ActiveRecord::DatabaseAlreadyExists\r\n  puts \"Database #{pg_opts[:database]} alredy exists.\"\r\nend\r\nActiveRecord::Base.establish_connection(pg_opts)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :entries, force: true do |t|\r\n    t.jsonb :value\r\n  end\r\nend\r\n\r\nclass Entry < ActiveRecord::Base\r\nend\r\nEntry.create(value: {a: \"a\", b: \"b\", c: {}})\r\n\r\nclass BugTest < Minitest::Test\r\n  # passed\r\n  def test_jsonb_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->'a', value->'b'\"))\r\n    assert_equal [[{}, \"b\"]], Entry.pluck(Arel.sql(\"value->'c', value->'b'\"))\r\n  end\r\n\r\n  # passed\r\n  def test_jsonb_double_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'a', value->>'b'\"))\r\n    assert_equal [[\"{}\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'c', value->>'b'\"))\r\n  end\r\n\r\n  # failed (this test results are differ in activerecord 6.0)\r\n  def test_jsonb_arrow_operator_and_double_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->'a', value->>'b'\")) # Actual [[\"a\", nil]]\r\n    assert_equal [[{}, \"b\"]], Entry.pluck(Arel.sql(\"value->'c', value->>'b'\")) # Actual [[{}, nil]]\r\n  end\r\n\r\n  # failed\r\n  def test_jsonb_double_arrow_operator_and_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'a', value->'b'\")) # Actual [[nil, \"b\"]]\r\n    assert_equal [[\"{}\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'c', value->'b'\")) # Actual [[{}, \"b\"]]\r\n  end\r\nend\r\n```\r\n\r\n### PostgreSQL results \r\n\r\n```sql\r\nSELECT\r\n  pg_typeof(value->'a'), value->'a',\r\n  pg_typeof(value->'b'), value->'b',\r\n  pg_typeof(value->'c'), value->'c',\r\n  pg_typeof(value->>'a'), value->>'a',\r\n  pg_typeof(value->>'b'), value->>'b',\r\n  pg_typeof(value->>'c'), value->>'c'\r\nFROM \"entries\";\r\n\r\n pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column?\r\n-----------+----------+-----------+----------+-----------+----------+-----------+----------+-----------+----------+-----------+----------\r\n jsonb     | \"a\"      | jsonb     | \"b\"      | jsonb     | {}       | text      | a        | text      | b        | text      | {}\r\n(1 row)\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 6.1.6.1\r\n\r\n**Ruby version**: 3.1.0\r\n\r\n### Similar issue in different versions of ActiveRecord\r\n\r\nThere is a similar issue but with slightly different behaviour in AR 6.0. Created another issue: #45757\r\n\r\nPlease confirm or comment on the expected behaviour.\r\nThank you.\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45758/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45758/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45750","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45750/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45750/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45750/events","html_url":"https://github.com/rails/rails/issues/45750","id":1327484205,"node_id":"I_kwDNIULOTx_NLQ","number":45750,"title":"Running `rails test` doesn't automatically load any custom tasks under `lib/tasks`","user":{"login":"onlynone","id":833690,"node_id":"MDQ6VXNlcjgzMzY5MA==","avatar_url":"https://avatars.githubusercontent.com/u/833690?v=4","gravatar_id":"","url":"https://api.github.com/users/onlynone","html_url":"https://github.com/onlynone","followers_url":"https://api.github.com/users/onlynone/followers","following_url":"https://api.github.com/users/onlynone/following{/other_user}","gists_url":"https://api.github.com/users/onlynone/gists{/gist_id}","starred_url":"https://api.github.com/users/onlynone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/onlynone/subscriptions","organizations_url":"https://api.github.com/users/onlynone/orgs","repos_url":"https://api.github.com/users/onlynone/repos","events_url":"https://api.github.com/users/onlynone/events{/privacy}","received_events_url":"https://api.github.com/users/onlynone/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-03T16:16:38Z","updated_at":"2022-08-03T18:09:40Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n1. Create the file `lib/tasks/test.rake` with the content:\r\n```ruby\r\nENV[\"test.rake\"] = \"yes\"\r\ntask :custom_task do\r\n  ENV[\"custom_task\"] = \"yes\"\r\nend\r\n\r\ntask :test => [:custom_task]\r\n```\r\n2. Create a test file at `test/unit/rails_test_test.rb` with the content:\r\n```ruby\r\nclass RailsTestTest < ActiveSupport::TestCase\r\n  test \"test.rake is in the environment\" do\r\n    assert_equal('yes', ENV['test.rake'])\r\n  end\r\n\r\n  test \"custom_task is in the environment\" do\r\n    assert_equal('yes', ENV['custom_task'])\r\n  end\r\nend\r\n```\r\n3. Run `bin/rails test test/unit/rails_test_test.rb`\r\n4. Run `bin/rake test test/unit/rails_test_test.rb`\r\n\r\n### Expected behavior\r\nBoth `rails test` and `rake test` should succeed.\r\n\r\n### Actual behavior\r\nRunning the tests with `bin/rake` succeeds with the output:\r\n```\r\nbin/rake test test/unit/rails_test_test.rb\r\nRunning via Spring preloader in process 59092\r\nRun options: --seed 6948\r\n\r\n# Running:\r\n\r\n..\r\n\r\nFinished in 0.000943s, 2120.8907 runs/s, 2120.8907 assertions/s.\r\n2 runs, 2 assertions, 0 failures, 0 errors, 0 skips\r\n```\r\n\r\nWhile running with `bin/rails` fails with the output:\r\n\r\n```\r\nRunning via Spring preloader in process 58735\r\nRun options: --seed 33633\r\n\r\n# Running:\r\n\r\nF\r\n\r\nFailure:\r\nRailsTestTest#test_custom_task_is_in_the_environment [/Users/steven/projects/rails_test_tasks/test/unit/rails_test_test.rb:7]:\r\nExpected: \"yes\"\r\n  Actual: nil\r\n\r\n\r\nrails test test/unit/rails_test_test.rb:6\r\n\r\nF\r\n\r\nFailure:\r\nRailsTestTest#test_test.rake_is_in_the_environment [/Users/steven/projects/rails_test_tasks/test/unit/rails_test_test.rb:3]:\r\nExpected: \"yes\"\r\n  Actual: nil\r\n\r\n\r\nrails test test/unit/rails_test_test.rb:2\r\n\r\n\r\n\r\nFinished in 0.001378s, 1451.3788 runs/s, 1451.3788 assertions/s.\r\n2 runs, 2 assertions, 2 failures, 0 errors, 0 skips\r\n```\r\n\r\nBecause the file `lib/tasks/test.rake` is never loaded.\r\n\r\nIt seems like rails will only end up loading custom tasks if it can't find the command being run on the command line in its own list of built-in commands. When it can't find the command, it will load the local `Rakefile` via `find_by_namespace(\"rake\").perform(full_namespace, args, config)` in `Rails::Command.invoke`. And the local `Rakefile` usually has `Rails.application.load_tasks` and that loads any custom tasks under `lib/tasks`.\r\n\r\nFor example, this happens when the `ActiveRecord` migration exec's out to call: `bin/rails db:test:prepare`. That task is apparently not a built-in rails task, so the `Rakefile` and all custom tasks *do* end up getting loaded for that one.\r\n\r\n(As an aside here, I don't fully understand the difference between the built-in rails tasks and the ones that have to be searched for via rake. I also don't understand why the migration code needs to fork a separate process to do `db:test:prepare`. That task just ends up doing `db_namespace[\"test:load\"].invoke`. Why couldn't the `db:test:prepare` tasks simply be invoked the same way in the same process?)\r\n\r\n### System configuration\r\n**Rails version**: 6.0.5\r\n\r\n**Ruby version**: 2.6.5\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45750/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45750/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45736","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45736/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45736/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45736/events","html_url":"https://github.com/rails/rails/issues/45736","id":1326221102,"node_id":"I_kwDNIULOTwyHLg","number":45736,"title":"Virtual stored columns are always nil for newly created records","user":{"login":"camiloforero","id":6606686,"node_id":"MDQ6VXNlcjY2MDY2ODY=","avatar_url":"https://avatars.githubusercontent.com/u/6606686?v=4","gravatar_id":"","url":"https://api.github.com/users/camiloforero","html_url":"https://github.com/camiloforero","followers_url":"https://api.github.com/users/camiloforero/followers","following_url":"https://api.github.com/users/camiloforero/following{/other_user}","gists_url":"https://api.github.com/users/camiloforero/gists{/gist_id}","starred_url":"https://api.github.com/users/camiloforero/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/camiloforero/subscriptions","organizations_url":"https://api.github.com/users/camiloforero/orgs","repos_url":"https://api.github.com/users/camiloforero/repos","events_url":"https://api.github.com/users/camiloforero/events{/privacy}","received_events_url":"https://api.github.com/users/camiloforero/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-02T18:09:28Z","updated_at":"2022-08-02T19:28:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nUsing postgresql:\r\n\r\nGenerate a new model with one or more columns with default values, and a virtual stored column based on those other columns\r\nCreate a new record of that model\r\nAccess the value of the virtual stored column from the newly created ActiveRecord object\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem 'pg', '~> 1.4'\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection \"postgresql:///test\"\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.integer :counter1, null: false, default: 0\r\n    t.integer :counter2, null: false, default: 0\r\n    t.virtual :counter_sum, type: :integer, as: \"counter1 + counter2\", stored: true\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_virtual_column_value_populated\r\n    post = Post.create!\r\n\r\n    assert_equal 0, post.counter_sum\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe value of the virtual column should be *something*, in this particular case, 0\r\n\r\n### Actual behavior\r\nThe value of the virtual column is `nil`. The test fails with the following output\r\n```ruby\r\n# Running:\r\n\r\nD, [2022-08-02T13:05:17.402730 #13548] DEBUG -- :   TRANSACTION (0.1ms)  BEGIN\r\nD, [2022-08-02T13:05:17.403136 #13548] DEBUG -- :   Post Create (0.6ms)  INSERT INTO \"posts\" DEFAULT VALUES RETURNING \"id\"\r\nD, [2022-08-02T13:05:17.406144 #13548] DEBUG -- :   TRANSACTION (2.6ms)  COMMIT\r\nF\r\n\r\nFailure:\r\nBugTest#test_virtual_column_value_populated [stored_bug.rb:37]:\r\nExpected: 0\r\n  Actual: nil\r\n\r\n\r\nrails test stored_bug.rb:34\r\n\r\n\r\n\r\nFinished in 0.011047s, 90.5240 runs/s, 90.5240 assertions/s.\r\n1 runs, 1 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\n### System configuration\r\n**Rails version**: edge\r\n**Ruby version**: 3.1.2\r\n**PostgreSQL version**: 14.4\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45736/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45736/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45709","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45709/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45709/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45709/events","html_url":"https://github.com/rails/rails/issues/45709","id":1323303409,"node_id":"I_kwDNIULOTuAB8Q","number":45709,"title":"Rails & can't pin JS files from Unpkg","user":{"login":"septerr","id":1094216,"node_id":"MDQ6VXNlcjEwOTQyMTY=","avatar_url":"https://avatars.githubusercontent.com/u/1094216?v=4","gravatar_id":"","url":"https://api.github.com/users/septerr","html_url":"https://github.com/septerr","followers_url":"https://api.github.com/users/septerr/followers","following_url":"https://api.github.com/users/septerr/following{/other_user}","gists_url":"https://api.github.com/users/septerr/gists{/gist_id}","starred_url":"https://api.github.com/users/septerr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/septerr/subscriptions","organizations_url":"https://api.github.com/users/septerr/orgs","repos_url":"https://api.github.com/users/septerr/repos","events_url":"https://api.github.com/users/septerr/events{/privacy}","received_events_url":"https://api.github.com/users/septerr/received_events","type":"User","site_admin":false},"labels":[{"id":131864,"node_id":"MDU6TGFiZWwxMzE4NjQ=","url":"https://api.github.com/repos/rails/rails/labels/third%20party%20issue","name":"third party issue","color":"02d7e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-07-30T21:44:43Z","updated_at":"2022-08-02T18:08:34Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nIn a new Rails & app, try to pin a package from Unpkg CDN:\r\n\r\n```\r\n./bin/importmap pin @walletconnect/web3-provider@1.7.8 --from unpkg\r\n```\r\n\r\nYou get following response:\r\n\r\n```\r\nCouldn't find any packages in [\"@walletconnect/web3-provider@1.7.8\"] on unpkg\r\n```\r\nBut the file does exist on unpkg: https://unpkg.com/@walletconnect/web3-provider@1.7.8/dist/umd/index.min.js\r\n\r\nAfter adding some breakpoints in `.rbenv/versions/3.1.0/lib/ruby/gems/3.1.0/gems/importmap-rails-1.1.5/lib/importmap/packager.rb`, saw that the CDN post request and response are as follows:\r\n\r\nPost URL: \r\n```\r\n<URI::HTTPS https://api.jspm.io/generate>\r\n```\r\nPost Body:\r\n```\r\n \"{\\\"install\\\":[\\\"@walletconnect/web3-provider@1.7.8\\\"],\\\"flattenScope\\\":true,\\\"env\\\":[\\\"browser\\\",\\\"module\\\",\\\"production\\\"],\\\"provider\\\":\\\"unpkg\\\"}\"\r\n```\r\n\r\nPost Response:\r\n```\r\n<Net::HTTPUnauthorized 401 Unauthorized readbody=true>\r\n```\r\n\r\n### Expected behavior\r\nExpected the files from unpkg to be pinned.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nMisleading error that files don't exist on unpkg.\r\n\r\n### System configuration\r\n**Rails version**:\r\nRails 7.0.3.1\r\n\r\n**Ruby version**:\r\nruby 3.1.0p0 (2021-12-25 revision fb4df44d16) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45709/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45709/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45691","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45691/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45691/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45691/events","html_url":"https://github.com/rails/rails/issues/45691","id":1322122058,"node_id":"I_kwDNIULOTs37Sg","number":45691,"title":"ActionMailer fails to create correct multipart message with rfc822 attachment","user":{"login":"der-flo","id":35431,"node_id":"MDQ6VXNlcjM1NDMx","avatar_url":"https://avatars.githubusercontent.com/u/35431?v=4","gravatar_id":"","url":"https://api.github.com/users/der-flo","html_url":"https://github.com/der-flo","followers_url":"https://api.github.com/users/der-flo/followers","following_url":"https://api.github.com/users/der-flo/following{/other_user}","gists_url":"https://api.github.com/users/der-flo/gists{/gist_id}","starred_url":"https://api.github.com/users/der-flo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/der-flo/subscriptions","organizations_url":"https://api.github.com/users/der-flo/orgs","repos_url":"https://api.github.com/users/der-flo/repos","events_url":"https://api.github.com/users/der-flo/events{/privacy}","received_events_url":"https://api.github.com/users/der-flo/received_events","type":"User","site_admin":false},"labels":[{"id":107188,"node_id":"MDU6TGFiZWwxMDcxODg=","url":"https://api.github.com/repos/rails/rails/labels/actionmailer","name":"actionmailer","color":"8B00FC","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-29T11:19:00Z","updated_at":"2022-08-02T19:46:17Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I cannot re-open #42849 so I create a new issue…\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire 'bundler/inline'\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n  gem 'rails', github: 'rails/rails', branch: 'main'\r\nend\r\n\r\nrequire 'minitest/autorun'\r\nrequire 'action_mailer/railtie'\r\n\r\nclass TestMailer < ActionMailer::Base\r\n  def main\r\n    message_to_attach =  <<~MAIL.gsub(/\\n/, \"\\r\\n\")\r\n      Message-ID: <12345@foo.example>\r\n      Subject: Test\r\n      From: test1@foo.example\r\n      To: test2@foo.example\r\n      \r\n      hello world\r\n    MAIL\r\n    attachments['test.eml'] = {\r\n      mime_type: params[:mime_type],\r\n      content: message_to_attach\r\n    }\r\n\r\n    mail(from: 'test3@foo.example', to: 'test4@foo.example', subject: 'Test outer') do |format|\r\n      format.text { \"outer text - #{params[:mime_type]} attachment\" }\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_with_plain_mime_type\r\n    message = TestMailer.with(mime_type: 'text/plain').main\r\n    assert_equal message.mime_type, 'multipart/mixed'\r\n  end\r\n\r\n  def test_with_rfc822_mime_type\r\n    message = TestMailer.with(mime_type: 'message/rfc822').main\r\n    assert_equal message.mime_type, 'multipart/mixed'\r\n  end\r\nend\r\n```\r\n\r\nThe second test fails, the message object is rendered as follows:\r\n```\r\nDate: Fri, 23 Jul 2021 13:59:19 +0200\r\nFrom: test3@foo.example\r\nTo: test4@foo.example\r\nMessage-ID: <60faaf1738a02_14fbd98-3fb@flo.adigi.ai.mail>\r\nSubject: Test outer\r\nMime-Version: 1.0\r\nContent-Type: text/plain;\r\n boundary=\"--==_mimepart_60faaf1738008_14fbd98-484\";\r\n charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\n\r\n\r\n----==_mimepart_60faaf1738008_14fbd98-484\r\nContent-Type: text/plain;\r\n charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\n\r\nouter text - message/rfc822 attachment\r\n----==_mimepart_60faaf1738008_14fbd98-484\r\nContent-Type: message/rfc822\r\nContent-Transfer-Encoding: \r\nContent-Disposition: attachment;\r\n filename=test.eml\r\nContent-ID: <60faaf1739102_14fbd98-2b@flo.adigi.ai.mail>\r\n\r\nMessage-ID: <12345@foo.example>\r\nSubject: Test\r\nFrom: test1@foo.example\r\nTo: test2@foo.example\r\n\r\nhello world\r\n\r\n----==_mimepart_60faaf1738008_14fbd98-484--\r\n\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe `message.mime_type` is `multipart/mixed` in both test cases. ActionMailer handles attachments in the way it is described in https://guides.rubyonrails.org/action_mailer_basics.html#adding-attachments describes.\r\n\r\n### Actual behavior\r\n\r\nWhen attaching a `message/rfc822` - an email message - the generated mail parts are not nested correctly, the outer `multipart/mixed` is missing.\r\n\r\nPerhaps this behaviour is caused by the [special handling](https://github.com/mikel/mail/blob/master/lib/mail/attachments_list.rb#L9) of such attachments in the `mail` gem.\r\n\r\n\r\n### System configuration\r\n**Rails version**: main\r\n\r\n**Ruby version**: 3.0.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45691/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":1,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45691/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45640","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45640/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45640/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45640/events","html_url":"https://github.com/rails/rails/issues/45640","id":1315219867,"node_id":"I_kwDNIULOTmSpmw","number":45640,"title":"ActiveModel::Dirty changes not reset properly when using store_accessor (tested with postgres)","user":{"login":"vccoffey","id":59817868,"node_id":"MDQ6VXNlcjU5ODE3ODY4","avatar_url":"https://avatars.githubusercontent.com/u/59817868?v=4","gravatar_id":"","url":"https://api.github.com/users/vccoffey","html_url":"https://github.com/vccoffey","followers_url":"https://api.github.com/users/vccoffey/followers","following_url":"https://api.github.com/users/vccoffey/following{/other_user}","gists_url":"https://api.github.com/users/vccoffey/gists{/gist_id}","starred_url":"https://api.github.com/users/vccoffey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vccoffey/subscriptions","organizations_url":"https://api.github.com/users/vccoffey/orgs","repos_url":"https://api.github.com/users/vccoffey/repos","events_url":"https://api.github.com/users/vccoffey/events{/privacy}","received_events_url":"https://api.github.com/users/vccoffey/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-07-22T16:44:57Z","updated_at":"2022-07-23T17:51:49Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nUsing PostgreSQL (pg) database\r\nGiven a model with a jsonb column\r\n```\r\nclass CreateTestModels < ActiveRecord::Migration[6.1]\r\n  def change\r\n    create_table :test_models do |t|\r\n      t.jsonb :jsonb_hash_attr\r\n      t.timestamps\r\n    end\r\n  end\r\nend\r\n```\r\nusing store_accessor\r\n```\r\nclass TestModel < ApplicationRecord\r\n  store_accessor :jsonb_hash_attr, :key, prefix: true\r\nend\r\n```\r\n\r\n### Expected behavior\r\nBoth tests pass:\r\n```\r\nrequire \"test_helper\"\r\nclass TestModelTest < ActiveSupport::TestCase\r\n  test \"does not show changes for a jsonb attribute if changed back to original value\" do\r\n    tm = TestModel.create jsonb_hash_attr: { \"key\" => \"foo\" }\r\n    tm.jsonb_hash_attr = { \"key\" => \"bar\" }\r\n    assert_equal tm.jsonb_hash_attr_change, [{ \"key\" => \"foo\" }, { \"key\" => \"bar\" }]\r\n    tm.jsonb_hash_attr = { \"key\" => \"foo\" }\r\n    assert_equal tm.jsonb_hash_attr_change, nil\r\n  end\r\n\r\n  test \"does not show changes for a jsonb attribute if changed back to original value using store_accessor\" do\r\n    tm = TestModel.create jsonb_hash_attr: { \"key\" => \"foo\" }\r\n    tm.jsonb_hash_attr_key = \"bar\"\r\n    assert_equal tm.jsonb_hash_attr_change, [{ \"key\" => \"foo\" }, { \"key\" => \"bar\" }]\r\n    tm.jsonb_hash_attr_key = \"foo\"\r\n    assert_equal tm.jsonb_hash_attr_change, nil\r\n  end\r\nend\r\n```\r\n### Actual behavior\r\nThe second test fails\r\n```\r\n--- expected\r\n+++ actual\r\n-[{\"key\"=>\"foo\"}, {\"key\"=>\"foo\"}]\r\n+nil\r\n```\r\n### System configuration\r\n**Rails version**:\r\ntested with 6.1.6.1 and 7.0.3.1\r\n\r\n**Ruby version**: 3.1.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45640/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45640/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45639","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45639/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45639/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45639/events","html_url":"https://github.com/rails/rails/issues/45639","id":1314984267,"node_id":"I_kwDNIULOTmERSw","number":45639,"title":"Explicitly touch on save","user":{"login":"schmijos","id":245443,"node_id":"MDQ6VXNlcjI0NTQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/245443?v=4","gravatar_id":"","url":"https://api.github.com/users/schmijos","html_url":"https://github.com/schmijos","followers_url":"https://api.github.com/users/schmijos/followers","following_url":"https://api.github.com/users/schmijos/following{/other_user}","gists_url":"https://api.github.com/users/schmijos/gists{/gist_id}","starred_url":"https://api.github.com/users/schmijos/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/schmijos/subscriptions","organizations_url":"https://api.github.com/users/schmijos/orgs","repos_url":"https://api.github.com/users/schmijos/repos","events_url":"https://api.github.com/users/schmijos/events{/privacy}","received_events_url":"https://api.github.com/users/schmijos/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-22T13:05:14Z","updated_at":"2022-07-22T20:31:00Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  ruby \"3.1.0\"\r\n  gem \"rails\", \"7.0.3.1\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.timestamps\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_save_touch\r\n    Post.create!(updated_at: 3.days.ago)\r\n    Post.last.save!(touch: true)\r\n\r\n    assert_in_delta 0.seconds.ago.to_i, Post.last.updated_at.to_i, 5\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nIf I tell _ActiveRecord_ to explicitly \"touch\", then I would expect it to update the timestamps.\r\n\r\n### Actual behavior\r\n`save` never hits the database if no attribute changed.\r\n\r\n### System configuration\r\n**Rails version**: >= 3.0.0, < 8","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45639/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45639/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45638","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45638/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45638/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45638/events","html_url":"https://github.com/rails/rails/issues/45638","id":1314662755,"node_id":"I_kwDNIULOTlwpYw","number":45638,"title":"CSRF Token Expiry issue.","user":{"login":"MBM1607","id":47133639,"node_id":"MDQ6VXNlcjQ3MTMzNjM5","avatar_url":"https://avatars.githubusercontent.com/u/47133639?v=4","gravatar_id":"","url":"https://api.github.com/users/MBM1607","html_url":"https://github.com/MBM1607","followers_url":"https://api.github.com/users/MBM1607/followers","following_url":"https://api.github.com/users/MBM1607/following{/other_user}","gists_url":"https://api.github.com/users/MBM1607/gists{/gist_id}","starred_url":"https://api.github.com/users/MBM1607/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MBM1607/subscriptions","organizations_url":"https://api.github.com/users/MBM1607/orgs","repos_url":"https://api.github.com/users/MBM1607/repos","events_url":"https://api.github.com/users/MBM1607/events{/privacy}","received_events_url":"https://api.github.com/users/MBM1607/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-22T08:38:19Z","updated_at":"2022-07-22T08:40:22Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"We are encountering an issue with form submission in production environment.\r\nThe criteria seems to be exceptionally rare, I have been unable to replicate the issue. \r\n\r\nCSRF token is created and validated just fine.\r\n\r\n### Timing\r\n\r\nIssue seems to occur only when users wait more than 2 hours on a form before submitting, but doing this we have been unable to reproduce as well.\r\n\r\n### Logs\r\n```\r\nW, [2022-07-14T15:19:37.535241 #2433]  WARN -- : Can't verify CSRF token authenticity.\r\nI, [2022-07-14T15:19:37.535556 #2433]  INFO -- : Completed 422 Unprocessable Entity in 1ms (ActiveRecord: 0.0ms | Allocations: 291)\r\nF, [2022-07-14T15:19:37.536425 #2433] FATAL -- :   \r\nActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n```\r\n\r\n### System configuration\r\n**Rails version 6.1.6** \r\n**Ruby version 2.7.4**\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45638/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45638/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45636","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45636/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45636/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45636/events","html_url":"https://github.com/rails/rails/issues/45636","id":1314546104,"node_id":"I_kwDNIULOTlphuA","number":45636,"title":"Invalid template types should raise an exception","user":{"login":"axos88","id":1281218,"node_id":"MDQ6VXNlcjEyODEyMTg=","avatar_url":"https://avatars.githubusercontent.com/u/1281218?v=4","gravatar_id":"","url":"https://api.github.com/users/axos88","html_url":"https://github.com/axos88","followers_url":"https://api.github.com/users/axos88/followers","following_url":"https://api.github.com/users/axos88/following{/other_user}","gists_url":"https://api.github.com/users/axos88/gists{/gist_id}","starred_url":"https://api.github.com/users/axos88/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/axos88/subscriptions","organizations_url":"https://api.github.com/users/axos88/orgs","repos_url":"https://api.github.com/users/axos88/repos","events_url":"https://api.github.com/users/axos88/events{/privacy}","received_events_url":"https://api.github.com/users/axos88/received_events","type":"User","site_admin":false},"labels":[{"id":3666649,"node_id":"MDU6TGFiZWwzNjY2NjQ5","url":"https://api.github.com/repos/rails/rails/labels/actionview","name":"actionview","color":"d7e102","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-07-22T07:40:54Z","updated_at":"2022-08-17T18:02:14Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n  - Create a template in views/foo/bar.txt.erb # Note .txt, and not .text\r\n\r\n```ruby\r\ndetails = { locale: [:en], formats: [:txt], handlers: [:erb], variants: []}\r\nActionController::Base.view_paths.find(\"bar\", 'foo', false, details, nil, [])\r\n```\r\n\r\n### Expected behavior\r\n\r\nShould throw an exception that :txt is not a registered type in Template::Types\r\n\r\n### Actual behavior\r\n\r\nSilently fails to find the otherwise existing template, specifying the correct directory it the file resides in. \r\nConfustion intensifies.\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3\r\n**Ruby version**: 2.7.6","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45636/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45636/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45635","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45635/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45635/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45635/events","html_url":"https://github.com/rails/rails/issues/45635","id":1314015345,"node_id":"I_kwDNIULOTlJIcQ","number":45635,"title":"Recent security releases are missing from the Releases page","user":{"login":"georgeclaghorn","id":94129,"node_id":"MDQ6VXNlcjk0MTI5","avatar_url":"https://avatars.githubusercontent.com/u/94129?v=4","gravatar_id":"","url":"https://api.github.com/users/georgeclaghorn","html_url":"https://github.com/georgeclaghorn","followers_url":"https://api.github.com/users/georgeclaghorn/followers","following_url":"https://api.github.com/users/georgeclaghorn/following{/other_user}","gists_url":"https://api.github.com/users/georgeclaghorn/gists{/gist_id}","starred_url":"https://api.github.com/users/georgeclaghorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/georgeclaghorn/subscriptions","organizations_url":"https://api.github.com/users/georgeclaghorn/orgs","repos_url":"https://api.github.com/users/georgeclaghorn/repos","events_url":"https://api.github.com/users/georgeclaghorn/events{/privacy}","received_events_url":"https://api.github.com/users/georgeclaghorn/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false},"assignees":[{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2022-07-22T01:21:34Z","updated_at":"2022-08-19T18:08:06Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Rails versions 7.0.3.1, 6.1.6.1, 6.0.5.1, and 5.2.8.1 are not listed at this GitHub repository’s [Releases](https://github.com/rails/rails/releases) page. Past releases are listed there, including the most recent round of bugfix releases from May.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45635/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45635/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45632","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45632/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45632/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45632/events","html_url":"https://github.com/rails/rails/issues/45632","id":1312439669,"node_id":"I_kwDNIULOTjo9dQ","number":45632,"title":"`_read_attribute` method should also check whether an attribute is aliased or not","user":{"login":"khiav223577","id":4011729,"node_id":"MDQ6VXNlcjQwMTE3Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4011729?v=4","gravatar_id":"","url":"https://api.github.com/users/khiav223577","html_url":"https://github.com/khiav223577","followers_url":"https://api.github.com/users/khiav223577/followers","following_url":"https://api.github.com/users/khiav223577/following{/other_user}","gists_url":"https://api.github.com/users/khiav223577/gists{/gist_id}","starred_url":"https://api.github.com/users/khiav223577/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/khiav223577/subscriptions","organizations_url":"https://api.github.com/users/khiav223577/orgs","repos_url":"https://api.github.com/users/khiav223577/repos","events_url":"https://api.github.com/users/khiav223577/events{/privacy}","received_events_url":"https://api.github.com/users/khiav223577/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-07-21T03:14:22Z","updated_at":"2022-07-21T21:37:09Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n```rb\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  gem \"activerecord\", '7.0.3'\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table \"users\", force: :cascade do |t|\r\n    t.string :name\r\n  end\r\n\r\n  create_table \"posts\", force: :cascade do |t|\r\n    t.string :title\r\n    t.integer :userId\r\n  end\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\n  has_many :posts\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  belongs_to :user\r\n\r\n  alias_attribute :user_id, :userId\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def setup\r\n    user = User.create!(name: 'Tester')\r\n    post = Post.create!(user_id: user.id, title: 'Post A')\r\n  end\r\n\r\n  def test_has_many\r\n    assert_equal ['Post A'], User.first.posts.map(&:title)\r\n  end\r\n\r\n  def test_belongs_to\r\n    assert_equal 'Tester', Post.first.user&.name\r\n  end\r\nend\r\n```\r\n\r\nResult:\r\n```\r\nFinished in 0.059414s, 33.6619 runs/s, 33.6619 assertions/s.\r\n\r\n  1) Failure:\r\nBugTest#test_belongs_to [test.rb:53]:\r\nExpected: \"Tester\"\r\n  Actual: nil\r\n\r\n2 runs, 2 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\n### Expected behavior\r\n\r\nI run into this issue when I tried to add an association on an aliased attribute.\r\n\r\nThen I found `belongs_to_association` will use `_read_attribute` method to check if this `foreign_key` exists on this model or not.\r\nIt doesn't pass the condition, therefore `find_target` will not be triggered.\r\nhttps://github.com/rails/rails/blob/3272335f8f4739629283cdeff7c3db723f34a3f5/activerecord/lib/active_record/associations/association.rb#L172-L173\r\nhttps://github.com/rails/rails/blob/3272335f8f4739629283cdeff7c3db723f34a3f5/activerecord/lib/active_record/associations/association.rb#L274-L276\r\nhttps://github.com/rails/rails/blob/2ea5ff9e13b9c5d0d5d25b2441efa81a2de2a262/activerecord/lib/active_record/associations/belongs_to_association.rb#L133-L135\r\nhttps://github.com/rails/rails/blob/4ae0390c1051a39ec16a4a95451cd06172a1b260/activerecord/lib/active_record/attribute_methods/read.rb#L37-L39\r\n\r\nThe `read_attribute` method takes `attribute_alias` into consideration since https://github.com/rails/rails/pull/26529, while `_read_attribute` doesn't. I think it should, too.\r\n\r\n### Actual behavior\r\n\r\nSee the test script below.\r\n\r\n### System configuration\r\n**Rails version**: \r\n7.0.3.1\r\n\r\n**Ruby version**:\r\nruby 3.0.0p0 (2020-12-25 revision 95aff21468) [x86_64-linux]","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45632/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45632/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45609","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45609/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45609/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45609/events","html_url":"https://github.com/rails/rails/issues/45609","id":1306840730,"node_id":"I_kwDNIULOTeTOmg","number":45609,"title":"Cannot add ActiveModel::Attribute::FromDatabase to permitted YAML safe load classes","user":{"login":"stanhu","id":963826,"node_id":"MDQ6VXNlcjk2MzgyNg==","avatar_url":"https://avatars.githubusercontent.com/u/963826?v=4","gravatar_id":"","url":"https://api.github.com/users/stanhu","html_url":"https://github.com/stanhu","followers_url":"https://api.github.com/users/stanhu/followers","following_url":"https://api.github.com/users/stanhu/following{/other_user}","gists_url":"https://api.github.com/users/stanhu/gists{/gist_id}","starred_url":"https://api.github.com/users/stanhu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stanhu/subscriptions","organizations_url":"https://api.github.com/users/stanhu/orgs","repos_url":"https://api.github.com/users/stanhu/repos","events_url":"https://api.github.com/users/stanhu/events{/privacy}","received_events_url":"https://api.github.com/users/stanhu/received_events","type":"User","site_admin":false},"labels":[{"id":107186,"node_id":"MDU6TGFiZWwxMDcxODY=","url":"https://api.github.com/repos/rails/rails/labels/regression","name":"regression","color":"e10c02","default":false,"description":null},{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-07-16T15:51:30Z","updated_at":"2022-08-18T11:39:07Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWe have some database entries serialized to YAML. For example:\r\n\r\n```\r\n---\r\n:custom_message: Repository Download Started\r\n:author_name: !ruby/object:DeployToken\r\n  concise_attributes:\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: deploy_token_type\r\n    value_before_type_cast: 1\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: id\r\n    value_before_type_cast: 2\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: revoked\r\n    value_before_type_cast: false\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: read_repository\r\n    value_before_type_cast: true\r\n```\r\n\r\nHowever, since the security release announced in https://rubyonrails.org/2022/7/12/Rails-Versions-7-0-3-1-6-1-6-1-6-0-5-1-and-5-2-8-1-have-been-released to address CVE-2022-32224, we cannot simply add `ActiveModel::Attribute::FromDatabase` to the permitted class list:\r\n\r\n```ruby\r\n(byebug) YAML.safe_load(payload, permitted_classes: [ActiveModel::Attribute::FromDatabase, Symbol, DeployToken], aliases: true)\r\n*** NameError Exception: private constant ActiveModel::Attribute::FromDatabase referenced\r\n```\r\n\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\n### Expected behavior\r\n\r\nYAML loading should work. Should this constant no longer be private since it's been serialized to YAML?\r\n\r\n### Actual behavior\r\n\r\nYAML loading fails with:\r\n\r\n```\r\n*** NameError Exception: private constant ActiveModel::Attribute::FromDatabase referenced\r\n```\r\n\r\n### System configuration\r\n\r\n**Rails version**:\r\nv6.1.6.1\r\n\r\n**Ruby version**:\r\nv2.7.5","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45609/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45609/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45596","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45596/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45596/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45596/events","html_url":"https://github.com/rails/rails/issues/45596","id":1304247666,"node_id":"I_kwDNIULOTb09cg","number":45596,"title":"Setting `schema_dump` in database.yml does not change dump format","user":{"login":"leboshi","id":16550140,"node_id":"MDQ6VXNlcjE2NTUwMTQw","avatar_url":"https://avatars.githubusercontent.com/u/16550140?v=4","gravatar_id":"","url":"https://api.github.com/users/leboshi","html_url":"https://github.com/leboshi","followers_url":"https://api.github.com/users/leboshi/followers","following_url":"https://api.github.com/users/leboshi/following{/other_user}","gists_url":"https://api.github.com/users/leboshi/gists{/gist_id}","starred_url":"https://api.github.com/users/leboshi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leboshi/subscriptions","organizations_url":"https://api.github.com/users/leboshi/orgs","repos_url":"https://api.github.com/users/leboshi/repos","events_url":"https://api.github.com/users/leboshi/events{/privacy}","received_events_url":"https://api.github.com/users/leboshi/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-14T04:44:37Z","updated_at":"2022-07-14T14:34:25Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Originally brought up in #43173.  I opened PR #43240 to address it, but that was closed when it was decided #43530 did the same thing.  Unfortunately, I don't think any of us were really reading what the other was doing, because the two PRs actually each only addressed half the opened issue.\r\n\r\nPR incoming to fully address this and the second half of #43173!\r\n\r\n### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_schema_format_corresponds_with_schema_dump\r\n    Dir.mktmpdir do |dir|\r\n      ActiveRecord::Tasks::DatabaseTasks.stub(:db_dir, dir) do\r\n        old_configurations = ActiveRecord::Base.configurations\r\n        ActiveRecord::Base.configurations = {\r\n          \"development\" => {\r\n            \"primary\" => {\r\n              \"database\" => \"dev-db\",\r\n              \"schema_dump\" => \"primary_structure.sql\"\r\n            }\r\n          }\r\n        }\r\n\r\n        db_config = ActiveRecord::Base.configurations.configs_for(env_name: \"development\", name: \"primary\")\r\n        ActiveRecord::Tasks::DatabaseTasks.dump_schema(db_config)\r\n\r\n        dump_contents = File.read(File.join(dir, \"primary_structure.sql\"))\r\n        refute_match /ActiveRecord::Schema/, dump_contents\r\n        assert_match /CREATE TABLE/, dump_contents\r\n      ensure\r\n        ActiveRecord::Base.configurations = old_configurations\r\n        ActiveRecord::Base.clear_cache!\r\n      end\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nIf `schema_dump` is set to something like `primary_structure.sql`, I'd expect it to do a SQL structure dump rather than a Ruby schema dump.\r\n\r\n### Actual behavior\r\nThe filename in `schema_dump` has no bearing on the format of the dump Rails writes or expects to read.\r\n\r\n### System configuration\r\n**Rails version**: (main)\r\n\r\n**Ruby version**: 3.1.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45596/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45596/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45998","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45998/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45998/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45998/events","html_url":"https://github.com/rails/rails/issues/45998","id":1368868095,"node_id":"I_kwDNIULOUZdE_w","number":45998,"title":"CSRF getting different token","user":{"login":"Saleh-Salem","id":22606707,"node_id":"MDQ6VXNlcjIyNjA2NzA3","avatar_url":"https://avatars.githubusercontent.com/u/22606707?v=4","gravatar_id":"","url":"https://api.github.com/users/Saleh-Salem","html_url":"https://github.com/Saleh-Salem","followers_url":"https://api.github.com/users/Saleh-Salem/followers","following_url":"https://api.github.com/users/Saleh-Salem/following{/other_user}","gists_url":"https://api.github.com/users/Saleh-Salem/gists{/gist_id}","starred_url":"https://api.github.com/users/Saleh-Salem/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Saleh-Salem/subscriptions","organizations_url":"https://api.github.com/users/Saleh-Salem/orgs","repos_url":"https://api.github.com/users/Saleh-Salem/repos","events_url":"https://api.github.com/users/Saleh-Salem/events{/privacy}","received_events_url":"https://api.github.com/users/Saleh-Salem/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-11T08:08:17Z","updated_at":"2022-09-11T08:27:32Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When validating the CSRF token getting an exception in API\r\n \r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\nthe `session[:_csrf_token]` and  `request.x_csrf_token` is different and getting issue.\r\nwhen I need to skip the csrf, I add `verify_authenticity_token`, In this case, I don't need to skip it.\r\nI debug and found the issue in the method:\r\n\r\n```\r\n  def compare_with_global_token(token, session = nil) # :doc:\r\n    ActiveSupport::SecurityUtils.fixed_length_secure_compare(token, global_csrf_token(session))\r\n  end\r\n```\r\n\r\nwhat is `session[:_csrf_token]` and how can I implement it in API?\r\nIs there any missing from my side?\r\n### Steps to reproduce\r\n\r\n1. Add `protect_from_forgery with: :exception` .\r\n2. When logging in return token in response is generated by `form_authenticity_token`.\r\n3. When Trying to request any POST, PUT or DELETE API get an exception.\r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nReturn Response without exception.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\ngetting exception \r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\n### System configuration\r\n**Rails version**:\r\n6.0.3.5\r\n**Ruby version**:\r\n2.7.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45998/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45998/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45994","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45994/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45994/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45994/events","html_url":"https://github.com/rails/rails/issues/45994","id":1368555704,"node_id":"I_kwDNIULOUZKAuA","number":45994,"title":"LoadInterlockAwareMonitor deadlock when clearing cache (multiple databases, test)","user":{"login":"kuahyeow","id":16723,"node_id":"MDQ6VXNlcjE2NzIz","avatar_url":"https://avatars.githubusercontent.com/u/16723?v=4","gravatar_id":"","url":"https://api.github.com/users/kuahyeow","html_url":"https://github.com/kuahyeow","followers_url":"https://api.github.com/users/kuahyeow/followers","following_url":"https://api.github.com/users/kuahyeow/following{/other_user}","gists_url":"https://api.github.com/users/kuahyeow/gists{/gist_id}","starred_url":"https://api.github.com/users/kuahyeow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kuahyeow/subscriptions","organizations_url":"https://api.github.com/users/kuahyeow/orgs","repos_url":"https://api.github.com/users/kuahyeow/repos","events_url":"https://api.github.com/users/kuahyeow/events{/privacy}","received_events_url":"https://api.github.com/users/kuahyeow/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-10T08:52:46Z","updated_at":"2022-09-10T08:56:12Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"With multiple databases, we observe hangs within system tests.\r\n\r\nSee also https://gitlab.com/gitlab-org/gitlab/-/issues/371468 (GitLab is at Rails 6.1, Ruby 2.7.5)\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nHere's a minimal reproduction with Rails 7.0.3.1\r\n\r\n1. Checkout https://gitlab.com/tkuah/multi_database_system_test\r\n2. `bundle install`\r\n3. `bundle exec rails db:migrate`\r\n4. `bundle rails test test/system/home_pages_test.rb`\r\n\r\nThe conditions are:\r\n\r\n1. Multiple databases\r\n2. System test where there's an async request which overlaps with the main thread\r\n\r\n### Expected behavior\r\n\r\nIt does not hang, and the test completes\r\n\r\n### Actual behavior\r\n\r\nIt hangs. It looks like it's hanging when clearing query cache (see https://gitlab.com/gitlab-org/gitlab/-/issues/371468#note_1087203883, and https://gitlab.com/gitlab-org/gitlab/-/issues/371468#note_1088779499)\r\n\r\nA backtrace dump taken while the test is hanging [sigdump-68442.log](https://github.com/rails/rails/files/9539878/sigdump-68442.log)\r\n\r\nMy suspicion is that:\r\n\r\n1. `lock_thread` is true for system tests\r\n3. Therefore both the main thread, and the Puma thread attempt to clear query cache for the same set of connections\r\n\r\nSo we have two connections:\r\n\r\n1. Puma thread takes a `LoadInterlockAwareMonitor` lock for primary connection via `Post.transaction`\r\n2. Main thread takes a `LoadInterlockAwareMonitor` lock for animal connection via implicit transaction that `create` does\r\n3. Due to 2, main thread attempts to clear query cache for primary connection. **Waits for 1's lock**\r\n4. Due to 1, and because of `lock_thread`, puma thread clears query cache for primary connection. It takes a `LoadInterlockAwareMonitor` lock for primary connection which succeds\r\n5. Due to 1, puma thread now attempts clears query cache for animal connection. **Waits for 2's lock**\r\n\r\nSee [`clear_query_caches_for_current_thread` method](https://github.com/rails/rails/blob/e24fbf71fa0a10f63346b9b42604451958740844/activerecord/lib/active_record/connection_handling.rb#L244-L248)\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: ruby 2.7.5p203 (2021-11-24 revision f69aeb8314) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45994/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45994/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45984","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45984/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45984/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45984/events","html_url":"https://github.com/rails/rails/issues/45984","id":1368144421,"node_id":"I_kwDNIULOUYw6JQ","number":45984,"title":"Cannot Eager Load has_many :through Relationships with custom scope","user":{"login":"dcorrigan","id":2445528,"node_id":"MDQ6VXNlcjI0NDU1Mjg=","avatar_url":"https://avatars.githubusercontent.com/u/2445528?v=4","gravatar_id":"","url":"https://api.github.com/users/dcorrigan","html_url":"https://github.com/dcorrigan","followers_url":"https://api.github.com/users/dcorrigan/followers","following_url":"https://api.github.com/users/dcorrigan/following{/other_user}","gists_url":"https://api.github.com/users/dcorrigan/gists{/gist_id}","starred_url":"https://api.github.com/users/dcorrigan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dcorrigan/subscriptions","organizations_url":"https://api.github.com/users/dcorrigan/orgs","repos_url":"https://api.github.com/users/dcorrigan/repos","events_url":"https://api.github.com/users/dcorrigan/events{/privacy}","received_events_url":"https://api.github.com/users/dcorrigan/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-09T17:47:35Z","updated_at":"2022-09-09T17:47:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nThis seems like it's the same as #28324, but I'm still seeing the issue in Rails 7. \r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n  end\r\n\r\n  create_table :images, force: true do |t|\r\n    t.string :title\r\n    t.integer :post_id\r\n  end\r\n\r\n  create_table :captions, force: true do |t|\r\n    t.integer :image_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :images\r\n  has_many :captions, lambda { order('images.title DESC') }, through: :images\r\nend\r\n\r\nclass Image < ActiveRecord::Base\r\n  belongs_to :post\r\n  has_one :caption\r\nend\r\n\r\nclass Caption < ActiveRecord::Base\r\n  belongs_to :image\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_preload_has_many_through_association_with_scope\r\n    post = Post.create!\r\n    image = Image.create!\r\n    image.caption = Caption.create!\r\n    post.images << image\r\n    post.save!\r\n\r\n    # Access through the model works\r\n    assert_includes post.captions, Caption.first\r\n\r\n    # Query with association preloaded does not.\r\n    # When evaluated, it will apply the scope without the relevant JOIN table:\r\n    # SELECT \"captions\".* FROM \"captions\" WHERE \"captions\".\"image_id\" = ? ORDER BY images.title DESC\r\n    preloaded = Post.where(id: post.id).includes(:captions)\r\n\r\n    assert_includes preloaded.first.captions, Caption.first\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe test passes and we're able to eager load has_many :through associations with custom scopes in this way.\r\n\r\nI realize this can be fixed by adding a `references(:images)` to the query, but it seems reasonable to expect AR to infer that that the join is necessary here.\r\n\r\n### Actual behavior\r\n\r\nTest fails with an error: `ActiveRecord::StatementInvalid: SQLite3::SQLException: no such column: images.title`\r\n\r\n### System configuration\r\n**Rails version**: 7.0 \r\n\r\n**Ruby version**: 3.1.2p20\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45984/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45967","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45967/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45967/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45967/events","html_url":"https://github.com/rails/rails/issues/45967","id":1366038829,"node_id":"I_kwDNIULOUWwZLQ","number":45967,"title":"Inconsistent update of timestamps while updating associations with *_ids=","user":{"login":"matthee","id":547653,"node_id":"MDQ6VXNlcjU0NzY1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/547653?v=4","gravatar_id":"","url":"https://api.github.com/users/matthee","html_url":"https://github.com/matthee","followers_url":"https://api.github.com/users/matthee/followers","following_url":"https://api.github.com/users/matthee/following{/other_user}","gists_url":"https://api.github.com/users/matthee/gists{/gist_id}","starred_url":"https://api.github.com/users/matthee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matthee/subscriptions","organizations_url":"https://api.github.com/users/matthee/orgs","repos_url":"https://api.github.com/users/matthee/repos","events_url":"https://api.github.com/users/matthee/events{/privacy}","received_events_url":"https://api.github.com/users/matthee/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-08T10:51:09Z","updated_at":"2022-09-09T03:10:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"ActiveRecord inconsistently updates the `updated_at` column when changing `has_many through:` associations.\r\n\r\n### Steps to reproduce\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"activesupport\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"active_support/testing/time_helpers\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.timestamps\r\n  end\r\n  \r\n  create_table :tags, force: true do |t|\r\n  end\r\n\r\n  create_table :taggings, force: true do |t|\r\n    t.integer :post_id\r\n    t.integer :tag_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :taggings, dependent: :destroy\r\n  \r\n  has_many :tags, through: :taggings\r\nend\r\n\r\nclass Tagging < ActiveRecord::Base\r\n  belongs_to :post, touch: true\r\n  belongs_to :tag\r\nend\r\n\r\nclass Tag < ActiveRecord::Base\r\n  has_many :taggings\r\n  has_many :posts, through: :taggings\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  include ActiveSupport::Testing::TimeHelpers\r\n  \r\n  def test_updated_at_is_updated_when_setting_has_many_through_association\r\n    freeze_time\r\n        \r\n    tag_1 = Tag.create!\r\n    tag_2 = Tag.create!\r\n      \r\n    post = Post.create!\r\n    \r\n    travel_to(now = 1.hour.from_now)\r\n    \r\n    # Adding tags updates post.updated_at\r\n    post.update(tag_ids: [tag_1.id, tag_2.id])\r\n    assert_in_delta now, post.updated_at, 1.second, \"post#updated_at was not updated when adding tags\"\r\n    \r\n    # Removing tags does not update post.updated_at :(\r\n    travel_to(now = 2.hours.from_now)\r\n    post.update(tag_ids: [tag_1.id])\r\n    assert_in_delta now, post.updated_at, 1.second, \"post#updated_at was not updated when removing tags\"\r\n  end\r\n  \r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nIn the example above, both `.update` calls should update the `updated_at` column of the post record. (when adding and removing records)\r\n\r\n### Actual behavior\r\n\r\nWhen deleting a record, the `updated_at` timestamp is not updated.\r\n\r\n### System configuration\r\n**Rails version**:\r\n7.0.3.1\r\n**Ruby version**:\r\n3.0.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45967/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45967/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45959","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45959/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45959/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45959/events","html_url":"https://github.com/rails/rails/issues/45959","id":1364232810,"node_id":"I_kwDNIULOUVCKag","number":45959,"title":"JSON field not saving data with symbol : and it's saving with arrow =>","user":{"login":"sajjadmurtaza","id":8552702,"node_id":"MDQ6VXNlcjg1NTI3MDI=","avatar_url":"https://avatars.githubusercontent.com/u/8552702?v=4","gravatar_id":"","url":"https://api.github.com/users/sajjadmurtaza","html_url":"https://github.com/sajjadmurtaza","followers_url":"https://api.github.com/users/sajjadmurtaza/followers","following_url":"https://api.github.com/users/sajjadmurtaza/following{/other_user}","gists_url":"https://api.github.com/users/sajjadmurtaza/gists{/gist_id}","starred_url":"https://api.github.com/users/sajjadmurtaza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sajjadmurtaza/subscriptions","organizations_url":"https://api.github.com/users/sajjadmurtaza/orgs","repos_url":"https://api.github.com/users/sajjadmurtaza/repos","events_url":"https://api.github.com/users/sajjadmurtaza/events{/privacy}","received_events_url":"https://api.github.com/users/sajjadmurtaza/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":1071962662,"node_id":"MDU6TGFiZWwxMDcxOTYyNjYy","url":"https://api.github.com/repos/rails/rails/labels/more-information-needed","name":"more-information-needed","color":"bfdadc","default":false,"description":"When reporter needs to provide more information"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-09-07T07:40:12Z","updated_at":"2022-09-08T07:23:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nI have JSON field in my database `t.json \"theme\"`. When I try to save the field hash with : , it's overridden before save\r\ne.g.\r\n`object.theme = { color: 'red' }` it always change to `{ color => 'red' }`\r\n\r\ni also tried with jsonb and default value with empty hash {} but still having the same issue.\r\n\r\n\r\nI want to save the JSON data hash with symbol keys `{ color: 'red' }`\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.0\r\n\r\n**Ruby version**: 2.7.1\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45959/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45959/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45949","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45949/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45949/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45949/events","html_url":"https://github.com/rails/rails/issues/45949","id":1362899537,"node_id":"I_kwDNIULOUTwyUQ","number":45949,"title":"ActionText::Attachable#as_json override is breaking ActiveStorage::Blob#as_json when blob is not persisted","user":{"login":"balbesina","id":7312369,"node_id":"MDQ6VXNlcjczMTIzNjk=","avatar_url":"https://avatars.githubusercontent.com/u/7312369?v=4","gravatar_id":"","url":"https://api.github.com/users/balbesina","html_url":"https://github.com/balbesina","followers_url":"https://api.github.com/users/balbesina/followers","following_url":"https://api.github.com/users/balbesina/following{/other_user}","gists_url":"https://api.github.com/users/balbesina/gists{/gist_id}","starred_url":"https://api.github.com/users/balbesina/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/balbesina/subscriptions","organizations_url":"https://api.github.com/users/balbesina/orgs","repos_url":"https://api.github.com/users/balbesina/repos","events_url":"https://api.github.com/users/balbesina/events{/privacy}","received_events_url":"https://api.github.com/users/balbesina/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-06T08:26:39Z","updated_at":"2022-09-06T08:26:39Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nfrom rails console:\r\n```ruby\r\nActiveStorage::Blob.build_after_unfurling(io: StringIO.new('asd'), filename: 'asd.txt').as_json\r\n```\r\n\r\n[Reproduction script](https://gist.github.com/balbesina/30fbdafbfee4b71b06209d9e950f4128)\r\n\r\n### Expected behavior\r\nActiveStorage::Blob#as_json returns a Hash\r\n\r\n### Actual behavior\r\nActiveStorage::Blob#as_json raises exception\r\n```\r\n/Users/dhh/.rvm/gems/ruby-3.1.2/gems/globalid-1.0.0/lib/global_id/uri/gid.rb:167:in `validate_model_id': \r\nUnable to create a Global ID for ActiveStorage::Blob without a model id. (URI::GID::MissingModelIdError)\r\n```\r\n\r\n### System configuration\r\n**Rails version**: Rails 7.0.3.1\r\n**Ruby version**: ruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45949/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45949/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45939","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45939/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45939/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45939/events","html_url":"https://github.com/rails/rails/issues/45939","id":1360876688,"node_id":"I_kwDNIULOUR1UkA","number":45939,"title":"Validations aren't inherited from base model if child is called before validation declaration","user":{"login":"Exterm1nate","id":48535087,"node_id":"MDQ6VXNlcjQ4NTM1MDg3","avatar_url":"https://avatars.githubusercontent.com/u/48535087?v=4","gravatar_id":"","url":"https://api.github.com/users/Exterm1nate","html_url":"https://github.com/Exterm1nate","followers_url":"https://api.github.com/users/Exterm1nate/followers","following_url":"https://api.github.com/users/Exterm1nate/following{/other_user}","gists_url":"https://api.github.com/users/Exterm1nate/gists{/gist_id}","starred_url":"https://api.github.com/users/Exterm1nate/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Exterm1nate/subscriptions","organizations_url":"https://api.github.com/users/Exterm1nate/orgs","repos_url":"https://api.github.com/users/Exterm1nate/repos","events_url":"https://api.github.com/users/Exterm1nate/events{/privacy}","received_events_url":"https://api.github.com/users/Exterm1nate/received_events","type":"User","site_admin":false},"labels":[{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-09-03T14:46:42Z","updated_at":"2022-09-08T07:26:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nLet's create some STI models. Base `Vehicle` and two childs `Car` and `Motorcycle`.\r\n\r\n```ruby\r\n# models/vehicle.rb\r\nclass Vehicle < ApplicationRecord\r\n  TYPES = [Car, Motorcycle].freeze\r\n\r\n  validates :color, uniqueness: { scope: :model }\r\nend\r\n\r\n# models/car.rb\r\nclass Car < Vehicle\r\nend\r\n\r\n# models/motorcycle.rb\r\nclass Motorcycle < Vehicle\r\nend\r\n```\r\n\r\nAfter that we want to use `#validators_on` method to make sure the validation is present.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\nCar.validators_on(:color)\r\nMotorcycle.validators_on(:color)\r\n```\r\n\r\n### Expected behavior\r\n\r\nAll models must contain the validation.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nMotorcycle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\n```\r\n\r\n### Actual behavior\r\n\r\nBut for childs this method returns nothing.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> []\r\nMotorcycle.validators_on(:color)\r\n#=> []\r\n```\r\n\r\n### Notes\r\n\r\nIf we remove the `TYPES` constant (or just child classes calls from it) `validators_on` works as expected. Let's change original code a little bit:\r\n\r\n```ruby\r\n# models/vehicle.rb\r\nclass Vehicle < ApplicationRecord\r\n  TYPES = [Car].freeze # Motorcycle was removed from here!\r\n\r\n  validates :color, uniqueness: { scope: :model }\r\nend\r\n```\r\n\r\nAnd after that test again.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> []\r\nMotorcycle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\n```\r\n\r\n`Motorcycle` validation was returned correctly this time.\r\n\r\nIt seems to be a load error. `Car` was called before the `Vehicle`'s validation declaration, so it doesn't take this validation into account. It may also depend on loading order.\r\n\r\nNotice that validation itself is working well in all models.\r\n\r\n```ruby\r\nCar.create!(color: \"black\", model: \"Boomer\")\r\nCar.create!(color: \"black\", model: \"Boomer\") # raises ActiveRecord::RecordInvalid\r\n\r\nMotorcycle.create!(color: \"red\", model: \"Yamaha\")\r\nMotorcycle.create!(color: \"red\", model: \"Yamaha\") # raises ActiveRecord::RecordInvalid\r\n```\r\n\r\nExample project: https://github.com/Exterm1nate/rails-validation-issue\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3\r\n\r\n**Ruby version**: 3.1.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45939/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45939/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45937","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45937/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45937/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45937/events","html_url":"https://github.com/rails/rails/issues/45937","id":1360779604,"node_id":"I_kwDNIULOURvZVA","number":45937,"title":"Add strict table mode (by default) to sqlite adapter","user":{"login":"jrz","id":149668,"node_id":"MDQ6VXNlcjE0OTY2OA==","avatar_url":"https://avatars.githubusercontent.com/u/149668?v=4","gravatar_id":"","url":"https://api.github.com/users/jrz","html_url":"https://github.com/jrz","followers_url":"https://api.github.com/users/jrz/followers","following_url":"https://api.github.com/users/jrz/following{/other_user}","gists_url":"https://api.github.com/users/jrz/gists{/gist_id}","starred_url":"https://api.github.com/users/jrz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jrz/subscriptions","organizations_url":"https://api.github.com/users/jrz/orgs","repos_url":"https://api.github.com/users/jrz/repos","events_url":"https://api.github.com/users/jrz/events{/privacy}","received_events_url":"https://api.github.com/users/jrz/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-03T07:01:02Z","updated_at":"2022-09-08T07:30:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"SQLite supports 'strict tables' since 3.37.1 https://sqlite.org/stricttables.html\r\n\r\nThis forces a datatype to be specified when creating a table. This is the preferred method in any application created by developers. \r\n\r\nUnspecified/ANY datatypes are useful for quick tryouts as an enduser, similar to excel. But it's counterproductive when creating an application.\r\n\r\nIf this will become a configurable setting, the default should be set to strict.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45937/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45937/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45920","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45920/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45920/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45920/events","html_url":"https://github.com/rails/rails/issues/45920","id":1358179995,"node_id":"I_kwDNIULOUPQumw","number":45920,"title":"Replace has_one through create_association might create duplicated rows","user":{"login":"lazaronixon","id":2651240,"node_id":"MDQ6VXNlcjI2NTEyNDA=","avatar_url":"https://avatars.githubusercontent.com/u/2651240?v=4","gravatar_id":"","url":"https://api.github.com/users/lazaronixon","html_url":"https://github.com/lazaronixon","followers_url":"https://api.github.com/users/lazaronixon/followers","following_url":"https://api.github.com/users/lazaronixon/following{/other_user}","gists_url":"https://api.github.com/users/lazaronixon/gists{/gist_id}","starred_url":"https://api.github.com/users/lazaronixon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lazaronixon/subscriptions","organizations_url":"https://api.github.com/users/lazaronixon/orgs","repos_url":"https://api.github.com/users/lazaronixon/repos","events_url":"https://api.github.com/users/lazaronixon/events{/privacy}","received_events_url":"https://api.github.com/users/lazaronixon/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-09-01T03:05:07Z","updated_at":"2022-09-01T23:03:40Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# Ensure backward compatibility with minitest 4.\r\nMinitest::Test = MiniTest::Unit::TestCase unless defined?(Minitest::Test)\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts do |t|\r\n  end\r\n\r\n  create_table :comments do |t|\r\n    t.references :post\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_one :comment, dependent: :destroy\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  validates_presence_of :post_id\r\n  belongs_to :post\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    post = Post.create!\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    sleep 5.seconds\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n```\r\n# transaction begin\r\nselect previous_comment for update\r\n\r\ninsert new_comment\r\n\r\ndelete previous_comment\r\n# transaction commit\r\n```\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n```\r\n# transaction begin\r\ninsert new_comment\r\n# transaction commit\r\n\r\n# transaction begin\r\ndelete previous_comment\r\n# transaction commit\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45920/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45920/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45906","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45906/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45906/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45906/events","html_url":"https://github.com/rails/rails/issues/45906","id":1355732552,"node_id":"I_kwDNIULOUM7WSA","number":45906,"title":"High object allocation count from `ActiveRecord::ConnectionAdapters::PoolManager#pool_configs `","user":{"login":"amarchenkoshopify","id":101111422,"node_id":"U_kgDOBgbWfg","avatar_url":"https://avatars.githubusercontent.com/u/101111422?v=4","gravatar_id":"","url":"https://api.github.com/users/amarchenkoshopify","html_url":"https://github.com/amarchenkoshopify","followers_url":"https://api.github.com/users/amarchenkoshopify/followers","following_url":"https://api.github.com/users/amarchenkoshopify/following{/other_user}","gists_url":"https://api.github.com/users/amarchenkoshopify/gists{/gist_id}","starred_url":"https://api.github.com/users/amarchenkoshopify/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amarchenkoshopify/subscriptions","organizations_url":"https://api.github.com/users/amarchenkoshopify/orgs","repos_url":"https://api.github.com/users/amarchenkoshopify/repos","events_url":"https://api.github.com/users/amarchenkoshopify/events{/privacy}","received_events_url":"https://api.github.com/users/amarchenkoshopify/received_events","type":"User","site_admin":false},"labels":[{"id":107186,"node_id":"MDU6TGFiZWwxMDcxODY=","url":"https://api.github.com/repos/rails/rails/labels/regression","name":"regression","color":"e10c02","default":false,"description":null},{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"eileencodes","id":1080678,"node_id":"MDQ6VXNlcjEwODA2Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/1080678?v=4","gravatar_id":"","url":"https://api.github.com/users/eileencodes","html_url":"https://github.com/eileencodes","followers_url":"https://api.github.com/users/eileencodes/followers","following_url":"https://api.github.com/users/eileencodes/following{/other_user}","gists_url":"https://api.github.com/users/eileencodes/gists{/gist_id}","starred_url":"https://api.github.com/users/eileencodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eileencodes/subscriptions","organizations_url":"https://api.github.com/users/eileencodes/orgs","repos_url":"https://api.github.com/users/eileencodes/repos","events_url":"https://api.github.com/users/eileencodes/events{/privacy}","received_events_url":"https://api.github.com/users/eileencodes/received_events","type":"User","site_admin":false},"assignees":[{"login":"eileencodes","id":1080678,"node_id":"MDQ6VXNlcjEwODA2Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/1080678?v=4","gravatar_id":"","url":"https://api.github.com/users/eileencodes","html_url":"https://github.com/eileencodes","followers_url":"https://api.github.com/users/eileencodes/followers","following_url":"https://api.github.com/users/eileencodes/following{/other_user}","gists_url":"https://api.github.com/users/eileencodes/gists{/gist_id}","starred_url":"https://api.github.com/users/eileencodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eileencodes/subscriptions","organizations_url":"https://api.github.com/users/eileencodes/orgs","repos_url":"https://api.github.com/users/eileencodes/repos","events_url":"https://api.github.com/users/eileencodes/events{/privacy}","received_events_url":"https://api.github.com/users/eileencodes/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/rails/rails/milestones/81","html_url":"https://github.com/rails/rails/milestone/81","labels_url":"https://api.github.com/repos/rails/rails/milestones/81/labels","id":7591006,"node_id":"MI_kwDNIULOAHPUXg","number":81,"title":"7.0.4","description":"","creator":{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":3,"state":"open","created_at":"2022-01-20T01:51:07Z","updated_at":"2022-08-30T13:21:37Z","due_on":null,"closed_at":null},"comments":2,"created_at":"2022-08-30T12:58:42Z","updated_at":"2022-08-31T12:37:42Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWhile working on memory efficiency investigation I noticed that a very big bunch of object allocations comes from a single method `ActiveRecord::ConnectionAdapters::PoolManager#pool_configs`:\r\n\r\n```ruby\r\n      def pool_configs(role = nil)\r\n        if role\r\n          @role_to_shard_mapping[role].values\r\n        else\r\n          @role_to_shard_mapping.flat_map { |_, shard_map| shard_map.values }\r\n        end\r\n      end \r\n```\r\n\r\nThis method is called on every activerecord operation and does not cache its result: could we think about a way of caching its result?\r\n\r\ncc @eileencodes \r\n\r\n### Expected behavior\r\n\r\n`#pool_configs` allocates configs once\r\n\r\n### Actual behavior\r\n\r\n`#pool_configs` allocates configs every time it is executed\r\n\r\n### System configuration\r\n**Rails version**: main branch\r\n\r\n**Ruby version**: 3.1\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45906/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45901","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45901/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45901/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45901/events","html_url":"https://github.com/rails/rails/issues/45901","id":1354555667,"node_id":"I_kwDNIULOULzhEw","number":45901,"title":"bin/rails dbconsole should include_password by default","user":{"login":"wpeterson","id":178135,"node_id":"MDQ6VXNlcjE3ODEzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/178135?v=4","gravatar_id":"","url":"https://api.github.com/users/wpeterson","html_url":"https://github.com/wpeterson","followers_url":"https://api.github.com/users/wpeterson/followers","following_url":"https://api.github.com/users/wpeterson/following{/other_user}","gists_url":"https://api.github.com/users/wpeterson/gists{/gist_id}","starred_url":"https://api.github.com/users/wpeterson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wpeterson/subscriptions","organizations_url":"https://api.github.com/users/wpeterson/orgs","repos_url":"https://api.github.com/users/wpeterson/repos","events_url":"https://api.github.com/users/wpeterson/events{/privacy}","received_events_url":"https://api.github.com/users/wpeterson/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-29T16:19:45Z","updated_at":"2022-08-30T00:17:43Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n1. Configure a Rails `config/database.yml` with a `password` required to connect\r\n2. Run `rails dbconsole`\r\n3. See prompt for database password, despite password being configured/available\r\n4. Run `rails dbconsole -p`\r\n5. See dbconsole properly load and use credentials to connect to database for DB console session\r\n\r\n### Expected behavior\r\nWhenever a Rails app has credentials like a password configured for a database, the database console session should use those credentials vs. prompting the user to re-enter a password interactively.  When credentials are not configured and a password is required, we should prompt then.\r\n\r\nThis behavior is implemented since early Rails versions but is disabled by default.  I propose we enable the proper password behavior by default.\r\n\r\n### Actual behavior\r\n`bin/rails dbconsole` always prompts for a password, even when one is configured for the app.\r\n\r\n### System configuration\r\n**Rails version**: All (6.x, 7.x, head)\r\n\r\n**Ruby version**: All \r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45901/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45901/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45899","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45899/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45899/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45899/events","html_url":"https://github.com/rails/rails/issues/45899","id":1353676820,"node_id":"I_kwDNIULOUK94FA","number":45899,"title":"Active Job unit tests fail using que 2.2.0","user":{"login":"yahonda","id":73684,"node_id":"MDQ6VXNlcjczNjg0","avatar_url":"https://avatars.githubusercontent.com/u/73684?v=4","gravatar_id":"","url":"https://api.github.com/users/yahonda","html_url":"https://github.com/yahonda","followers_url":"https://api.github.com/users/yahonda/followers","following_url":"https://api.github.com/users/yahonda/following{/other_user}","gists_url":"https://api.github.com/users/yahonda/gists{/gist_id}","starred_url":"https://api.github.com/users/yahonda/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yahonda/subscriptions","organizations_url":"https://api.github.com/users/yahonda/orgs","repos_url":"https://api.github.com/users/yahonda/repos","events_url":"https://api.github.com/users/yahonda/events{/privacy}","received_events_url":"https://api.github.com/users/yahonda/received_events","type":"User","site_admin":false},"labels":[{"id":123812746,"node_id":"MDU6TGFiZWwxMjM4MTI3NDY=","url":"https://api.github.com/repos/rails/rails/labels/activejob","name":"activejob","color":"5319e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-29T04:24:06Z","updated_at":"2022-09-09T15:33:02Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"### Steps to reproduce\r\nActive Job CI has been failing since que 2.2.0 is installed. https://buildkite.com/rails/rails/builds/89068#0182e6b9-7c84-4b85-a651-8d640f5eb076\r\n\r\n```ruby\r\ngit clone https://github.com/rails/rails\r\ncd rails/activejob\r\nbundle update que\r\nAJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\n```\r\n\r\nAlthough there are 3 failures and 75 errors. This script just runs a single test because it looks the root cause is the same.\r\n\r\n\r\n### Expected behavior\r\nIt should pass.\r\n\r\n### Actual behavior\r\nIt raises `ArgumentError: wrong number of arguments (given 2, expected 1)`.\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 62302\r\n\r\n# Running:\r\n\r\nE\r\n\r\nError:\r\nQueuingTest#test_run_queued_job:\r\nArgumentError: wrong number of arguments (given 2, expected 1)\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:78:in `run'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job_methods.rb:51:in `_run'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:248:in `block (2 levels) in _run_attrs'\r\n    (eval):9:in `run_job_middleware'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:247:in `block in _run_attrs'\r\n    <internal:kernel>:90:in `tap'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:246:in `_run_attrs'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:223:in `run'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/support/que/inline.rb:15:in `enqueue'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:66:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:27:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:67:in `block in enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:118:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:28:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:27:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:9:in `block (2 levels) in <module:Instrumentation>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:27:in `tag_logger'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:14:in `block (2 levels) in <module:Logging>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:138:in `run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:63:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:30:in `perform_later'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/cases/queuing_test.rb:14:in `block in <class:QueuingTest>'\r\n\r\n\r\nbin/test test/cases/queuing_test.rb:13\r\n\r\n\r\n\r\nFinished in 0.008930s, 111.9768 runs/s, 0.0000 assertions/s.\r\n1 runs, 0 assertions, 0 failures, 1 errors, 0 skips\r\n$\r\n```\r\n\r\n### Additional information\r\n* `require_job_options_kwarg?` always returns `false` because `JobWrapper.method(:enqueue).parameters` does not have any `[:key, :job_options]` \r\nwhere it looks expected to return `true`.\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 32774\r\n\r\n# Running:\r\n\r\n[46, 55] in ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n    46|       end\r\n    47|\r\n    48|       private\r\n    49|         def require_job_options_kwarg?\r\n    50|           require 'debug'\r\n=>  51|           binding.break\r\n    52|           @require_job_options_kwarg ||=\r\n    53|             JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }\r\n    54|         end\r\n    55|\r\n=>#0\tActiveJob::QueueAdapters::QueAdapter#require_job_options_kwarg? at ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:51\r\n  #1\tActiveJob::QueueAdapters::QueAdapter#enqueue(job=#<HelloJob:0x00007fc861807740 @arguments...) at ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:24\r\n  # and 40 frames (use `bt' command for all frames)\r\n(rdbg) JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }    # ruby\r\nfalse\r\n(rdbg) JobWrapper.method(:enqueue).parameters    # ruby\r\n[[:req, :args], [:keyreq, :priority], [:keyreq, :queue], [:key, :run_at]]\r\n(rdbg) quit    # command\r\nReally quit? [Y/n] Y\r\n```\r\n\r\n* By changing `require_job_options_kwarg?` always returns `true`, it raises `ArgumentError: missing keywords: :priority, :queue`\r\n\r\n```ruby\r\n$ git diff\r\ndiff --git a/activejob/lib/active_job/queue_adapters/que_adapter.rb b/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\nindex 41b3633a07..54e8cbc39b 100644\r\n--- a/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n+++ b/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n@@ -47,6 +47,7 @@ def enqueue_at(job, timestamp) # :nodoc:\r\n\r\n       private\r\n         def require_job_options_kwarg?\r\n+          return true\r\n           @require_job_options_kwarg ||=\r\n             JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }\r\n         end\r\n$\r\n```\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 21508\r\n\r\n# Running:\r\n\r\nE\r\n\r\nError:\r\nQueuingTest#test_run_queued_job:\r\nArgumentError: missing keywords: :priority, :queue\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:65:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:25:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:67:in `block in enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:118:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:28:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:27:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:9:in `block (2 levels) in <module:Instrumentation>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:27:in `tag_logger'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:14:in `block (2 levels) in <module:Logging>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:138:in `run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:63:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:30:in `perform_later'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/cases/queuing_test.rb:14:in `block in <class:QueuingTest>'\r\n\r\n\r\nbin/test test/cases/queuing_test.rb:13\r\n\r\n\r\n\r\nFinished in 0.008724s, 114.6312 runs/s, 0.0000 assertions/s.\r\n1 runs, 0 assertions, 0 failures, 1 errors, 0 skips\r\n$\r\n```\r\n\r\n\r\n### System configuration\r\n**Rails version**: main branch\r\n\r\n**Ruby version**: $ ruby -v\r\nruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [x86_64-linux]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45899/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45893","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45893/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45893/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45893/events","html_url":"https://github.com/rails/rails/issues/45893","id":1352793907,"node_id":"I_kwDNIULOUKH_Mw","number":45893,"title":"ActiveRecord: HMT with conditions does not update the in-memory collection when pushing new objects","user":{"login":"joanniclaborde","id":411925,"node_id":"MDQ6VXNlcjQxMTkyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/411925?v=4","gravatar_id":"","url":"https://api.github.com/users/joanniclaborde","html_url":"https://github.com/joanniclaborde","followers_url":"https://api.github.com/users/joanniclaborde/followers","following_url":"https://api.github.com/users/joanniclaborde/following{/other_user}","gists_url":"https://api.github.com/users/joanniclaborde/gists{/gist_id}","starred_url":"https://api.github.com/users/joanniclaborde/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joanniclaborde/subscriptions","organizations_url":"https://api.github.com/users/joanniclaborde/orgs","repos_url":"https://api.github.com/users/joanniclaborde/repos","events_url":"https://api.github.com/users/joanniclaborde/events{/privacy}","received_events_url":"https://api.github.com/users/joanniclaborde/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-26T22:40:12Z","updated_at":"2022-08-30T15:33:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi! When using a `has_many :a, through: :b` relation, and the `:b` relation has a condition, adding new objects doesn't update the in-memory collection properly (stops after the first object).\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :packages, force: true do |t|\r\n  end\r\n\r\n  create_table :package_items, force: true do |t|\r\n    t.integer :package_id\r\n    t.integer :item_id\r\n  end\r\n\r\n  create_table :items, force: true do |t|\r\n    t.boolean \"deleted\", default: false\r\n  end\r\nend\r\n\r\nclass Package < ActiveRecord::Base\r\n  has_many :package_items, ->{ where(item_id: Item.active.pluck(:id)) }\r\n  has_many :items, through: :package_items\r\nend\r\n\r\nclass PackageItem < ActiveRecord::Base\r\n  belongs_to :package\r\n  belongs_to :item\r\nend\r\n\r\nclass Item < ActiveRecord::Base\r\n  has_many :package_items\r\n  has_many :packages, through: :package_items\r\n\r\n  scope :active, -> { where(deleted: false) }\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    package = Package.create!\r\n    package.items << Item.create!\r\n    package.items << Item.create!\r\n    package.items << Item.create!\r\n\r\n    # This should be [3, 3, 3] but we get [3, 1, 3]\r\n    assert_equal [3, 3, 3], [Item.count, package.items.count, package.reload.items.count]\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n`package.items.count` is equal to 3.\r\n\r\n### Actual behavior\r\n`package.items.count` is equal to 1, even though all the items and relations are created properly (see assertion).\r\n\r\n### System configuration\r\n**Rails version**: tested on `7.1.0.alpha` and `6.1.6.1`.\r\n\r\n**Ruby version**: tested on `2.7.5`.\r\n\r\n### Workaround\r\nI was able to fix this issue by changing the weird condition to a proper scope:\r\n\r\n```ruby\r\nclass Package < ActiveRecord::Base\r\n  has_many :package_items, ->{ includes(:item).merge(Item.active) }\r\n  has_many :items, through: :package_items\r\nend\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45893/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45893/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45880","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45880/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45880/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45880/events","html_url":"https://github.com/rails/rails/issues/45880","id":1349546108,"node_id":"I_kwDNIULOUHBwfA","number":45880,"title":"Google search links to old API docs","user":{"login":"abraham","id":3341,"node_id":"MDQ6VXNlcjMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/3341?v=4","gravatar_id":"","url":"https://api.github.com/users/abraham","html_url":"https://github.com/abraham","followers_url":"https://api.github.com/users/abraham/followers","following_url":"https://api.github.com/users/abraham/following{/other_user}","gists_url":"https://api.github.com/users/abraham/gists{/gist_id}","starred_url":"https://api.github.com/users/abraham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abraham/subscriptions","organizations_url":"https://api.github.com/users/abraham/orgs","repos_url":"https://api.github.com/users/abraham/repos","events_url":"https://api.github.com/users/abraham/events{/privacy}","received_events_url":"https://api.github.com/users/abraham/received_events","type":"User","site_admin":true},"labels":[{"id":150377,"node_id":"MDU6TGFiZWwxNTAzNzc=","url":"https://api.github.com/repos/rails/rails/labels/docs","name":"docs","color":"02d7e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-24T14:33:55Z","updated_at":"2022-08-25T23:48:01Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n1. Search Google for a Rails API https://www.google.com/search?q=rails+update_all\r\n2. Follow link for \"ActiveRecord::Relation - Rails API\"\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n\r\nFind documentation for the latest version of Rails. Currently `7.0.3.1`.\r\n\r\n`https://api.rubyonrails.org/classes/ActiveRecord/Relation.html`\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n\r\nFind documentation for the the very old version of `3.2.3`.\r\n\r\n`https://api.rubyonrails.org/v3.2.3/classes/ActiveRecord/Relation.html`\r\n\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45880/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45880/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45832","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45832/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45832/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45832/events","html_url":"https://github.com/rails/rails/issues/45832","id":1339487378,"node_id":"I_kwDNIULOT9b0kg","number":45832,"title":"MySQL 8.0 VARBINARY default value is hexadecimal","user":{"login":"HParker","id":4482399,"node_id":"MDQ6VXNlcjQ0ODIzOTk=","avatar_url":"https://avatars.githubusercontent.com/u/4482399?v=4","gravatar_id":"","url":"https://api.github.com/users/HParker","html_url":"https://github.com/HParker","followers_url":"https://api.github.com/users/HParker/followers","following_url":"https://api.github.com/users/HParker/following{/other_user}","gists_url":"https://api.github.com/users/HParker/gists{/gist_id}","starred_url":"https://api.github.com/users/HParker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HParker/subscriptions","organizations_url":"https://api.github.com/users/HParker/orgs","repos_url":"https://api.github.com/users/HParker/repos","events_url":"https://api.github.com/users/HParker/events{/privacy}","received_events_url":"https://api.github.com/users/HParker/received_events","type":"User","site_admin":true},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":309390193,"node_id":"MDU6TGFiZWwzMDkzOTAxOTM=","url":"https://api.github.com/repos/rails/rails/labels/MySQL","name":"MySQL","color":"fef2c0","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-08-15T20:42:09Z","updated_at":"2022-08-16T10:23:16Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Default values on VARBINARY columns changed behavior between MySQL 5.7 and 8.0\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"mysql2\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"mysql2\", database: \"adam_test\", prepared_statements: false, host: '127.0.0.1', port: 3307, user: \"root\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.binary :some_binary, null: false, limit: 1024, default: \"hello-world\"\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_mysql_defaults\r\n    post = Post.create!\r\n\r\n    mysql_vars = ActiveRecord::Base.connection.select_rows(\"SHOW VARIABLES LIKE '%version%'\")\r\n    puts mysql_vars.inspect\r\n    puts Post.column_defaults\r\n\r\n    # assert_equal \"0x68656C6C6F2D776F726C64\", post.some_binary # This passes\r\n    assert_equal \"hello-world\", post.some_binary # This fails\r\n\r\n    reloaded_post = Post.first\r\n    assert_equal \"hello-world\", reloaded_post.some_binary # this passes\r\n  end\r\nend\r\n```\r\n\r\nOn MySQL 5.7:\r\n\r\n```ruby\r\nPost.column_defaults # => {\"id\"=>nil, \"some_binary\"=>\"hello-world\"}\r\n```\r\n\r\nOn MySQL 8.0:\r\n\r\n```ruby\r\nPost.column_defaults # => {\"id\"=>nil, \"some_binary\"=>\"0x68656C6C6F2D776F726C64\"}\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe default value on binary columns should be Ruby strings, not ruby strings of hexadecimal.\r\n\r\n### Actual behavior\r\n\r\nThe column default in MySQL 8.0 is a hexadecimal string representing the binary data.\r\n\r\n### System configuration\r\n**Rails version**: main\r\n\r\n**Ruby version**: 3.1.0\r\n\r\nSome interesting MySQL forum posts about this behavior change:\r\n\r\n- https://forums.mysql.com/read.php?24,685577,685577\r\n- https://forums.mysql.com/read.php?20,698061,698061#msg-698061\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45832/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45832/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45830","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45830/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45830/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45830/events","html_url":"https://github.com/rails/rails/issues/45830","id":1338922250,"node_id":"I_kwDNIULOT85VCg","number":45830,"title":"ActiveRecord Rollbacks on errors which happen on commit","user":{"login":"Baxxx","id":17880055,"node_id":"MDQ6VXNlcjE3ODgwMDU1","avatar_url":"https://avatars.githubusercontent.com/u/17880055?v=4","gravatar_id":"","url":"https://api.github.com/users/Baxxx","html_url":"https://github.com/Baxxx","followers_url":"https://api.github.com/users/Baxxx/followers","following_url":"https://api.github.com/users/Baxxx/following{/other_user}","gists_url":"https://api.github.com/users/Baxxx/gists{/gist_id}","starred_url":"https://api.github.com/users/Baxxx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baxxx/subscriptions","organizations_url":"https://api.github.com/users/Baxxx/orgs","repos_url":"https://api.github.com/users/Baxxx/repos","events_url":"https://api.github.com/users/Baxxx/events{/privacy}","received_events_url":"https://api.github.com/users/Baxxx/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":126910270,"node_id":"MDU6TGFiZWwxMjY5MTAyNzA=","url":"https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps","name":"With reproduction steps","color":"009800","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2022-08-15T12:09:14Z","updated_at":"2022-08-25T13:32:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nIn some of our projects we use Postgres as database, and for some cases we deferred trigger constraints. These triggers fire up when `COMMIT` is called. Trigger can raise an error, which kills the transaction. ActiveRecord catches the error, and bubbles it up to developer, but it also sends `ROLLBACK` to Postgres, to which Postgres gives a warning that there is no transaction in progress.\r\n\r\nI didn't test this with sqlite3 or mysql.\r\n\r\nYou can see the reproduction script, and screenshot with the current behavior.\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", \"~> 7\"\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"logger\"\r\n\r\nlogger = Logger.new(STDOUT)\r\n\r\n# This connection will do for database-independent bug reports.\r\npg_opts = {adapter: \"postgresql\", database: \"ar_rollback_after_failed_commit_issue\"}\r\n\r\nActiveRecord::Base.establish_connection(pg_opts.except(:database))\r\nActiveRecord::Base.connection.drop_database(pg_opts[:database])\r\nActiveRecord::Base.connection.create_database(pg_opts[:database])\r\nlogger.info \"Database #{pg_opts[:database]} was (re)created.\"\r\n\r\nActiveRecord::Base.establish_connection(pg_opts)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  execute <<~SQL\r\n    CREATE FUNCTION perform_custom_validation()\r\n      RETURNS TRIGGER\r\n      LANGUAGE plpgsql\r\n      AS $$\r\n        DECLARE\r\n          total_invalid INTEGER;\r\n        BEGIN\r\n          SELECT COUNT(*) INTO total_invalid\r\n          FROM things\r\n          WHERE name = 'bad';\r\n\r\n          IF (total_invalid > 0) THEN\r\n            RAISE EXCEPTION 'There are bad things';\r\n          END IF;\r\n          RETURN NULL;\r\n        END;\r\n      $$;\r\n\r\n    CREATE TABLE \"things\" (\r\n      \"id\" bigserial primary key,\r\n      \"name\" character varying NOT NULL\r\n    );\r\n\r\n    CREATE CONSTRAINT\r\n      TRIGGER bank_transaction_rl_payment_date_validation\r\n      AFTER INSERT OR UPDATE ON things\r\n      DEFERRABLE INITIALLY DEFERRED\r\n      FOR EACH ROW EXECUTE FUNCTION perform_custom_validation();\r\n  SQL\r\nend\r\n\r\nclass Thing < ActiveRecord::Base\r\n  validates :name, presence: true\r\nend\r\n\r\n# All good\r\nlogger.info \"First transaction\"\r\nThing.create!(name: \"good\")\r\n\r\n# AR tries to commit, DB raises an error, AR tries to ROLLBACK, and PG gives a warning\r\nbegin\r\n  logger.info \"Second transaction\"\r\n  Thing.create!(name: \"bad\")\r\nrescue StandardError\r\n  # Doesn't matter\r\nend\r\n```\r\n\r\n### Expected behavior\r\nActiveRecord should not `ROLLBACK`, as there is no transaction in progress.\r\n\r\n### Actual behavior\r\nActiveRecord tries to `ROLLBACK`.\r\n\r\n![Screenshot from 2022-08-15 14-07-11](https://user-images.githubusercontent.com/17880055/184632335-0277cd27-4c7b-4b98-94a8-373be34a87ee.png)\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 2.7.5p203\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45830/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45830/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45823","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45823/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45823/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45823/events","html_url":"https://github.com/rails/rails/issues/45823","id":1337409694,"node_id":"I_kwDNIULOT7dAng","number":45823,"title":"Change Column with Raw Character Set Failure","user":{"login":"ahoglund","id":3407303,"node_id":"MDQ6VXNlcjM0MDczMDM=","avatar_url":"https://avatars.githubusercontent.com/u/3407303?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoglund","html_url":"https://github.com/ahoglund","followers_url":"https://api.github.com/users/ahoglund/followers","following_url":"https://api.github.com/users/ahoglund/following{/other_user}","gists_url":"https://api.github.com/users/ahoglund/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoglund/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoglund/subscriptions","organizations_url":"https://api.github.com/users/ahoglund/orgs","repos_url":"https://api.github.com/users/ahoglund/repos","events_url":"https://api.github.com/users/ahoglund/events{/privacy}","received_events_url":"https://api.github.com/users/ahoglund/received_events","type":"User","site_admin":true},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":126910270,"node_id":"MDU6TGFiZWwxMjY5MTAyNzA=","url":"https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps","name":"With reproduction steps","color":"009800","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-12T16:21:50Z","updated_at":"2022-08-12T20:47:38Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"With [this recent change to how collation is handled for column changes](https://github.com/rails/rails/pull/45744/files), there is now a potential for older migrations written in a specific manner to break if the `collation:` argument is not specific.\r\n\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\n# you need to install mysql locally for this to work.\r\n# on Mac:\r\n# brew install mysql\r\n# brew services start mysql\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"mysql2\"\r\n\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nclient = Mysql2::Client.new(host: 'localhost', username: \"root\")\r\nclient.query(\"DROP DATABASE test\")\r\nclient.query(\"CREATE DATABASE test\")\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"mysql2\", database: \"test\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :payments, force: true do |t|\r\n    t.string :description, \"varchar(64)\", null: false\r\n  end\r\nend\r\n\r\nclass Payment < ActiveRecord::Base\r\nend\r\n\r\nclass ChangeAmountToAddScale < ActiveRecord::Migration[7.1]\r\n  # This sets the default character set for the payments\r\n  # table to utf32 with a default COLLATION of utf32_general_ci.\r\n  # This can be verified by running the following query:\r\n  #\r\n  # SHOW CHARACTER SET;\r\n  #\r\n  connection.execute(<<~SQL)\r\n    ALTER TABLE payments CONVERT TO CHARACTER SET utf32\r\n  SQL\r\n\r\n  def change\r\n    reversible do |dir|\r\n      dir.up do\r\n        change_table(:payments, bulk: true) do |t|\r\n          # The default collation of utf32_general_ci\r\n          # will not be compatible with this ascii character set. \r\n          #\r\n          # when we build the column change now we automatically\r\n          # try to assign the previous collation to the column if no `collation:` is specified.\r\n          # \r\n          # https://github.com/rails/rails/pull/45744\r\n          #\r\n          # The workaround is to add `collation: 'ascii_bin'` or `collation: 'ascii_general_ci'` to the change.\r\n          #\r\n          # This isn't a huge deal and it has a workaround but it _will_ break\r\n          # anyone who has migrations that are written like this and upgrade to this version\r\n          # of Rails.\r\n          t.change :description, \"varchar(64) CHARACTER SET ascii\", null: false\r\n        end\r\n      end\r\n\r\n      dir.down do\r\n        change_table(:payments, bulk: true) do |t|\r\n          t.change :description, \"varchar(64)\", null: false\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_migration_up\r\n    ChangeAmountToAddScale.migrate(:up)\r\n    Payment.reset_column_information\r\n\r\n    assert_equal \"varchar\", Payment.columns.last.sql_type\r\n  end\r\n\r\n  def test_migration_down\r\n    ChangeAmountToAddScale.migrate(:down)\r\n    Payment.reset_column_information\r\n\r\n    assert_equal \"varchar\", Payment.columns.last.sql_type\r\n  end\r\nend\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nI would expect this to detect that the character set is being changed, and either \r\n\r\n1. change the collation to be compatible.\r\n2. At least give a clearer error that requires the `collation:` arg to be passed when the character set is being modified.\r\n\r\n### Actual behavior\r\n\r\nThis error:\r\n\r\n```\r\nError:\r\nBugTest#test_migration_up:\r\nActiveRecord::StatementInvalid: Mysql2::Error: COLLATION 'utf32_general_ci' is not valid for CHARACTER SET 'ascii'\r\n    test.rb:51:in `block (2 levels) in change'\r\n    test.rb:50:in `block in change'\r\n    test.rb:49:in `change'\r\n    test.rb:67:in `test_migration_up'\r\n```\r\n\r\n### System configuration\r\n**Rails version**: main\r\n**Ruby version**: ruby 3.1.1p18\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45823/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45823/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45822","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45822/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45822/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45822/events","html_url":"https://github.com/rails/rails/issues/45822","id":1337253221,"node_id":"I_kwDNIULOT7TdZQ","number":45822,"title":"ActiveRecord: Wrong results returned by ActiveRecord::Associations::Preloader when intermediate association is already preloaded.","user":{"login":"yopzer","id":6330271,"node_id":"MDQ6VXNlcjYzMzAyNzE=","avatar_url":"https://avatars.githubusercontent.com/u/6330271?v=4","gravatar_id":"","url":"https://api.github.com/users/yopzer","html_url":"https://github.com/yopzer","followers_url":"https://api.github.com/users/yopzer/followers","following_url":"https://api.github.com/users/yopzer/following{/other_user}","gists_url":"https://api.github.com/users/yopzer/gists{/gist_id}","starred_url":"https://api.github.com/users/yopzer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yopzer/subscriptions","organizations_url":"https://api.github.com/users/yopzer/orgs","repos_url":"https://api.github.com/users/yopzer/repos","events_url":"https://api.github.com/users/yopzer/events{/privacy}","received_events_url":"https://api.github.com/users/yopzer/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"jhawthorn","id":131752,"node_id":"MDQ6VXNlcjEzMTc1Mg==","avatar_url":"https://avatars.githubusercontent.com/u/131752?v=4","gravatar_id":"","url":"https://api.github.com/users/jhawthorn","html_url":"https://github.com/jhawthorn","followers_url":"https://api.github.com/users/jhawthorn/followers","following_url":"https://api.github.com/users/jhawthorn/following{/other_user}","gists_url":"https://api.github.com/users/jhawthorn/gists{/gist_id}","starred_url":"https://api.github.com/users/jhawthorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhawthorn/subscriptions","organizations_url":"https://api.github.com/users/jhawthorn/orgs","repos_url":"https://api.github.com/users/jhawthorn/repos","events_url":"https://api.github.com/users/jhawthorn/events{/privacy}","received_events_url":"https://api.github.com/users/jhawthorn/received_events","type":"User","site_admin":true},"assignees":[{"login":"jhawthorn","id":131752,"node_id":"MDQ6VXNlcjEzMTc1Mg==","avatar_url":"https://avatars.githubusercontent.com/u/131752?v=4","gravatar_id":"","url":"https://api.github.com/users/jhawthorn","html_url":"https://github.com/jhawthorn","followers_url":"https://api.github.com/users/jhawthorn/followers","following_url":"https://api.github.com/users/jhawthorn/following{/other_user}","gists_url":"https://api.github.com/users/jhawthorn/gists{/gist_id}","starred_url":"https://api.github.com/users/jhawthorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhawthorn/subscriptions","organizations_url":"https://api.github.com/users/jhawthorn/orgs","repos_url":"https://api.github.com/users/jhawthorn/repos","events_url":"https://api.github.com/users/jhawthorn/events{/privacy}","received_events_url":"https://api.github.com/users/jhawthorn/received_events","type":"User","site_admin":true}],"milestone":null,"comments":1,"created_at":"2022-08-12T14:06:55Z","updated_at":"2022-08-18T23:36:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"activerecord\", \"7.0.3.1\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :a_records, force: true\r\n\r\n  create_table :b_records, force: true do |t|\r\n    t.references :a_record\r\n    t.references :c_record\r\n  end\r\n\r\n  create_table :c_records, force: true\r\n\r\n  create_table :d_records, force: true do |t|\r\n    t.references :c_record\r\n  end\r\nend\r\n\r\nclass ARecord < ActiveRecord::Base\r\n  has_one :b_record\r\n  has_one :c_record, through: :b_record\r\n  has_many :d_records, through: :c_record\r\nend\r\n\r\nclass BRecord < ActiveRecord::Base\r\n  belongs_to :a_record\r\n  belongs_to :c_record\r\nend\r\n\r\nclass CRecord < ActiveRecord::Base\r\n  has_one :b_record\r\n  has_many :d_records\r\nend\r\n\r\nclass DRecord < ActiveRecord::Base\r\n  belongs_to :c_record\r\nend\r\n\r\na = ARecord.create!\r\nc = CRecord.create!\r\nBRecord.create!(a_record: a, c_record: c)\r\nDRecord.create!(c_record: c)\r\nDRecord.create!(c_record: c)\r\n\r\na.reload\r\na.c_record # NB: if removed this works\r\n\r\n::ActiveRecord::Associations::Preloader.new(records: [a], associations: :d_records).call\r\nputs({ record_ids: a.d_records.map(&:id), size: a.d_records.size })\r\n```\r\n\r\n### Expected behavior\r\nTwo records should be loaded:\r\n`{:record_ids=>[1, 2], :size=>2}`\r\n\r\n### Actual behavior\r\nNo records are loaded:\r\n`{:record_ids=>[], :size=>0}`\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 2.7.5\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45822/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45822/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45817","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45817/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45817/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45817/events","html_url":"https://github.com/rails/rails/issues/45817","id":1336797388,"node_id":"I_kwDNIULOT63ozA","number":45817,"title":"Value of attribute default proc is shared between instances after dup + dirty tracking","user":{"login":"quadule","id":15299,"node_id":"MDQ6VXNlcjE1Mjk5","avatar_url":"https://avatars.githubusercontent.com/u/15299?v=4","gravatar_id":"","url":"https://api.github.com/users/quadule","html_url":"https://github.com/quadule","followers_url":"https://api.github.com/users/quadule/followers","following_url":"https://api.github.com/users/quadule/following{/other_user}","gists_url":"https://api.github.com/users/quadule/gists{/gist_id}","starred_url":"https://api.github.com/users/quadule/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/quadule/subscriptions","organizations_url":"https://api.github.com/users/quadule/orgs","repos_url":"https://api.github.com/users/quadule/repos","events_url":"https://api.github.com/users/quadule/events{/privacy}","received_events_url":"https://api.github.com/users/quadule/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-12T06:16:00Z","updated_at":"2022-08-15T15:56:11Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWhen an attribute without a database column defines a default proc, `dup`ing a model in which the default wasn't accessed passes the unevaluated `UserProvidedDefault` attribute to the new instance as the attribute's original value. Checking the new attribute for changes will then memoize the value in the original attribute definition, making it the default value in every new model instance afterward.\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n  gem \"rails\", github: \"rails/rails\", ref: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Schema.define do\r\n  create_table :cats do |t|\r\n    t.string :name\r\n  end\r\nend\r\n\r\nclass Cat < ActiveRecord::Base\r\n  attribute :sounds, default: -> { [] }\r\nend\r\n\r\nclass VirtualAttributeTest < Minitest::Test\r\n  def test_virtual_attribute_defaults_are_independent\r\n    Cat.new.dup.save!\r\n    Cat.new.sounds << \"meow\"\r\n    refute_same Cat.new.sounds, Cat.new.sounds\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nEach new instance should get a new default value from the proc.\r\n\r\n### Actual behavior\r\nAfter using dirty tracking on a duplicated instance with an uncalled proc default, all new instances of a model receive the same default value and share any changes made to it.\r\n\r\n### Affected versions\r\nThis seems to date back quite a while; the test fails on the main branch back to 5-1-stable.\r\n\r\n### Credits\r\nThanks to @GBH for originally discovering this bug.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45817/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45817/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45794","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45794/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45794/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45794/events","html_url":"https://github.com/rails/rails/issues/45794","id":1332999733,"node_id":"I_kwDNIULOT3P2NQ","number":45794,"title":"Action Cable client goes in a connection loop if you subscribe multiple times to the same channel","user":{"login":"ProGM","id":5167659,"node_id":"MDQ6VXNlcjUxNjc2NTk=","avatar_url":"https://avatars.githubusercontent.com/u/5167659?v=4","gravatar_id":"","url":"https://api.github.com/users/ProGM","html_url":"https://github.com/ProGM","followers_url":"https://api.github.com/users/ProGM/followers","following_url":"https://api.github.com/users/ProGM/following{/other_user}","gists_url":"https://api.github.com/users/ProGM/gists{/gist_id}","starred_url":"https://api.github.com/users/ProGM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ProGM/subscriptions","organizations_url":"https://api.github.com/users/ProGM/orgs","repos_url":"https://api.github.com/users/ProGM/repos","events_url":"https://api.github.com/users/ProGM/events{/privacy}","received_events_url":"https://api.github.com/users/ProGM/received_events","type":"User","site_admin":false},"labels":[{"id":300028327,"node_id":"MDU6TGFiZWwzMDAwMjgzMjc=","url":"https://api.github.com/repos/rails/rails/labels/actioncable","name":"actioncable","color":"bfdadc","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-09T09:48:36Z","updated_at":"2022-08-17T17:57:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\nYou can just start from a fresh `rails new [project-name]` installation.\r\nChannel code:\r\n```ruby\r\nclass ArticleChannel < ApplicationCable::Channel\r\n  def subscribed\r\n    stream_from \"ArticleChannel\"\r\n  end\r\n\r\n  def unsubscribed\r\n    # Any cleanup needed when channel is unsubscribed\r\n  end\r\nend\r\n```\r\n\r\nJavascript code:\r\n```javascript\r\nimport consumer from \"channels/consumer\"\r\n\r\nfunction subscribe() {\r\n\treturn consumer.subscriptions.create('ArticleChannel', {\r\n\t\tconnected() {\r\n\t\t\tconsole.log('connected');\r\n\t\t\t// Called when the subscription is ready for use on the server\r\n\t\t},\r\n\r\n\t\tdisconnected() {\r\n\t\t\tconsole.log('disconnected');\r\n\t\t\t// Called when the subscription has been terminated by the server\r\n\t\t},\r\n\r\n\t\treceived(data) {\r\n\t\t\tconsole.log('received', data);\r\n\t\t\t// Called when there's incoming data on the websocket for this channel\r\n\t\t}\r\n\t});\r\n}\r\n\r\nsetTimeout(() => {\r\n\tsubscribe();\r\n}, 3000);\r\n\r\nsetTimeout(() => {\r\n\tsubscribe();\r\n}, 4000);\r\n```\r\n\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nAny of these options could be considered an expected behavior:\r\n* Everything just works™, both subscriptions receive notification from that channel and no error is raised\r\n* The second `subscription.create(...)` raises some kind of error, notifying that the channel is already connected\r\n* The second `subscription.create(...)` returns the same instance of Subscription and writes a `console.warning` in console\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nThe second subscriptions triggers a connection loop.\r\n\r\nExample logs with `ActionCable.logger.enabled = true`.\r\n\r\n```\r\n[ActionCable] Opening WebSocket, current state is null, subprotocols: actioncable-v1-json,actioncable-unsupported 1660037219747\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] ConnectionMonitor started. stale threshold = 6 s 1660037219748\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] WebSocket onopen event, using 'actioncable-v1-json' subprotocol 1660037219758\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] ConnectionMonitor recorded connect 1660037219759\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor guaranteeing {\"channel\":\"ArticleChannel\"} 1660037219760\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] Subscription confirmed {\"channel\":\"ArticleChannel\"} 1660037219762\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor forgetting {\"channel\":\"ArticleChannel\"} 1660037219762\r\narticle_channel-b29f3f7bf31169dfadd26c7747a46706d4992a1fd842de8268f206c5f0a0fe45.js:6 connected\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor guaranteeing {\"channel\":\"ArticleChannel\"} 1660037220744\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221248\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221248\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n... and so on, forever...\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 3.1\r\n\r\n### Possible solutions\r\nThis issue happens because the identifier of both subscriptions is the same. Since Rails (ActionCable) doesn't answer to any subsequential command \"subscribe\" from the same client (in this case: `{\"command\":\"subscribe\",\"identifier\":\"{\\\"channel\\\":\\\"ArticleChannel\\\"}\"}`), the `SubscriptionGuarantor` considers the connection failed and [retries to connect after 500ms](https://github.com/rails/rails/blob/8994f09dd2f6ae363e74d8ee3b24700d9db94a16/actioncable/app/assets/javascripts/actioncable.esm.js#L351).\r\n\r\nI see various options to fix this:\r\n* Raise an exception when trying to create a subscription with the same identifier\r\n* Add a random/uuid to the identifier when connecting, so two connection would not share the same identifier? (I've already tested it, and it seems to fix)\r\n\r\nWould you accept a PR from me regarding this?","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45794/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45794/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45791","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45791/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45791/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45791/events","html_url":"https://github.com/rails/rails/issues/45791","id":1332570977,"node_id":"I_kwDNIULOT21rYQ","number":45791,"title":"Google::Apis::ClientError raised when using ActiveStorage to generate signed URLs to access a file in a GCS bucket with GKE Workload Identity","user":{"login":"danielyazbek","id":18390164,"node_id":"MDQ6VXNlcjE4MzkwMTY0","avatar_url":"https://avatars.githubusercontent.com/u/18390164?v=4","gravatar_id":"","url":"https://api.github.com/users/danielyazbek","html_url":"https://github.com/danielyazbek","followers_url":"https://api.github.com/users/danielyazbek/followers","following_url":"https://api.github.com/users/danielyazbek/following{/other_user}","gists_url":"https://api.github.com/users/danielyazbek/gists{/gist_id}","starred_url":"https://api.github.com/users/danielyazbek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielyazbek/subscriptions","organizations_url":"https://api.github.com/users/danielyazbek/orgs","repos_url":"https://api.github.com/users/danielyazbek/repos","events_url":"https://api.github.com/users/danielyazbek/events{/privacy}","received_events_url":"https://api.github.com/users/danielyazbek/received_events","type":"User","site_admin":false},"labels":[{"id":664533972,"node_id":"MDU6TGFiZWw2NjQ1MzM5NzI=","url":"https://api.github.com/repos/rails/rails/labels/activestorage","name":"activestorage","color":"bfd4f2","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-09T01:05:08Z","updated_at":"2022-08-09T15:53:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nConfigure ActiveStorage with GKE Workload identity (as documented [here](https://edgeguides.rubyonrails.org/active_storage_overview.html#google-cloud-storage-service)):\r\n\r\n```ruby\r\ngoogle:\r\n  service: GCS\r\n  iam: true\r\n  project: <%= ENV['ACTIVE_STORAGE_PROJECT'] %>\r\n  bucket: <%= ENV['ACTIVE_STORAGE_BUCKET'] %>\r\n```\r\n\r\nDefine a class:\r\n```ruby\r\nclass Transaction < ApplicationRecord\r\n  has_one_attached :csv_report\r\nend\r\n```\r\n\r\nWrite something to ActiveStorage:\r\n```ruby\r\nt = Transaction.create\r\nt.csv_report.attach(io: StringIO.new(\"A,B,C\"), filename: 'test.csv')\r\n```\r\n\r\nGenerate a Signed URL\r\n```ruby\r\nRails.application.routes.url_helpers.rails_blob_url(Transaction.last.csv_report, disposition: 'attachment')\r\n```\r\n\r\nPaste the generated URL into a browser\r\n\r\n### Expected behavior\r\nActiveRecord provides the attachment\r\n\r\n### Actual behavior\r\nError is raised:\r\n\r\n```\r\nGoogle::Apis::ClientError (Invalid request):\r\ngems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:236:in `check_status': Invalid request (Google::Apis::ClientError)\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/api_command.rb:134:in `check_status'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:199:in `process_response'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:318:in `execute_once'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:118:in `block (2 levels) in execute'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:61:in `block in retriable'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `times'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `retriable'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:115:in `block in execute'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:61:in `block in retriable'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `times'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `retriable'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:105:in `execute'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/base_service.rb:397:in `execute_or_queue_command'\r\n    from gems/google-apis-iamcredentials_v1-0.13.0/lib/google/apis/iamcredentials_v1/service.rb:158:in `sign_service_account_blob'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service/gcs_service.rb:232:in `block in signer'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file/signer_v2.rb:135:in `generate_signature'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file/signer_v2.rb:128:in `signed_url'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file.rb:1801:in `signed_url'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service/gcs_service.rb:160:in `private_url'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:123:in `block in url'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications/instrumenter.rb:24:in `instrument'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications.rb:206:in `instrument'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:163:in `instrument'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:118:in `url'\r\n    from gems/activestorage-7.0.3.1models/active_storage/blob.rb:217:in `url'\r\n    from gems/activestorage-7.0.3.1controllers/active_storage/blobs/redirect_controller.rb:14:in `show'\r\n```\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 3.1.2\r\n\r\n**google-cloud-storage gem version:** 1.38.0\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45791/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45791/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45778","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45778/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45778/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45778/events","html_url":"https://github.com/rails/rails/issues/45778","id":1330360134,"node_id":"I_kwDNIULOT0uvRg","number":45778,"title":"ActiveStorage attachments are lost when casting using Becomes","user":{"login":"markedmondson","id":1653699,"node_id":"MDQ6VXNlcjE2NTM2OTk=","avatar_url":"https://avatars.githubusercontent.com/u/1653699?v=4","gravatar_id":"","url":"https://api.github.com/users/markedmondson","html_url":"https://github.com/markedmondson","followers_url":"https://api.github.com/users/markedmondson/followers","following_url":"https://api.github.com/users/markedmondson/following{/other_user}","gists_url":"https://api.github.com/users/markedmondson/gists{/gist_id}","starred_url":"https://api.github.com/users/markedmondson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markedmondson/subscriptions","organizations_url":"https://api.github.com/users/markedmondson/orgs","repos_url":"https://api.github.com/users/markedmondson/repos","events_url":"https://api.github.com/users/markedmondson/events{/privacy}","received_events_url":"https://api.github.com/users/markedmondson/received_events","type":"User","site_admin":false},"labels":[{"id":664533972,"node_id":"MDU6TGFiZWw2NjQ1MzM5NzI=","url":"https://api.github.com/repos/rails/rails/labels/activestorage","name":"activestorage","color":"bfd4f2","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-05T20:19:16Z","updated_at":"2022-08-09T18:05:34Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\nCreate an ActiveRecord model with an ActiveStorage relation. Initialize and add the associated attachment. Cast the object to another subclassed model, the associated attachment is lost.\r\n\r\n```ruby\r\nunless File.exist?('Gemfile')\r\n    File.write('Gemfile', <<-GEMFILE)\r\n    source 'https://rubygems.org'\r\n    gem 'rails', '~> 6.1'\r\n    gem 'sqlite3'\r\n    GEMFILE\r\n\r\n    system 'bundle'\r\nend\r\n\r\nrequire 'bundler'\r\nBundler.setup(:default)\r\n\r\nrequire 'active_record'\r\nrequire 'active_storage/engine'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  config.hosts << 'example.org'\r\n  config.eager_load = false\r\n  config.session_store :cookie_store, key: 'cookie_store_key'\r\n  secrets.secret_key_base = 'secret_key_base'\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  config.active_storage.service = :local\r\n  config.active_storage.service_configurations = {\r\n    local: {\r\n      root: Dir.tmpdir,\r\n      service: 'Disk'\r\n    }\r\n  }\r\nend\r\n\r\nENV['DATABASE_URL'] = 'sqlite3::memory:'\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\nRails.application.initialize!\r\n\r\nrequire ActiveStorage::Engine.root.join('db/migrate/20170806125915_create_active_storage_tables.rb').to_s\r\n\r\nActiveRecord::Schema.define do\r\n  CreateActiveStorageTables.new.change\r\n\r\n  create_table :posts do |t|\r\n    t.string :title\r\n    t.string :text\r\n  end\r\n\r\n  create_table :comments do |t|\r\n    t.belongs_to :post\r\n    t.string :text\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post\r\n  has_one_attached :image\r\nend\r\n\r\nclass ModeratedComment < Comment; end\r\n\r\nclass BugTest < Minitest::Test\r\n  def setup\r\n    @post = Post.create(title: 'Post', text: 'Welcome')\r\n  end\r\n\r\n  def test_association\r\n    comment = @post.comments.new(text: 'I do not like this')\r\n\r\n    moderated_comment = comment.becomes(ModeratedComment)\r\n\r\n    assert_equal @post, moderated_comment.post # Pass\r\n  end\r\n\r\n  def test_attachment\r\n    file = ActiveStorage::Blob.create_and_upload!(\r\n      content_type: \"image/png\",\r\n      filename: \"image.png\",\r\n      io: ::StringIO.new(\"png\"),\r\n    )\r\n    comment = @post.comments.new(text: 'I do not like this', image: file)\r\n\r\n    moderated_comment = comment.becomes(ModeratedComment)\r\n\r\n    assert moderated_comment.image.attached? # Fail\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nWhen casting an ActiveRecord to another model, I expect the associations to be copied thus I expect attached ActiveStorage association assets to be copied.\r\n\r\n### Actual behavior\r\nPreviously attached ActiveStorage associated objects are lost on the original object.\r\n\r\n### System configuration\r\n**Rails version**: 6.1.6.1\r\n\r\n**Ruby version**: 3.0.4\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45778/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45778/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45775","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45775/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45775/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45775/events","html_url":"https://github.com/rails/rails/issues/45775","id":1330225377,"node_id":"I_kwDNIULOT0mg4Q","number":45775,"title":"Uniqueness validation on association does not use the correct primary key","user":{"login":"mikeletscher","id":6666411,"node_id":"MDQ6VXNlcjY2NjY0MTE=","avatar_url":"https://avatars.githubusercontent.com/u/6666411?v=4","gravatar_id":"","url":"https://api.github.com/users/mikeletscher","html_url":"https://github.com/mikeletscher","followers_url":"https://api.github.com/users/mikeletscher/followers","following_url":"https://api.github.com/users/mikeletscher/following{/other_user}","gists_url":"https://api.github.com/users/mikeletscher/gists{/gist_id}","starred_url":"https://api.github.com/users/mikeletscher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikeletscher/subscriptions","organizations_url":"https://api.github.com/users/mikeletscher/orgs","repos_url":"https://api.github.com/users/mikeletscher/repos","events_url":"https://api.github.com/users/mikeletscher/events{/privacy}","received_events_url":"https://api.github.com/users/mikeletscher/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-05T18:10:22Z","updated_at":"2022-08-09T14:52:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nI'm not _entirely_ sure if this is considered a bug, or intended behavior that's not well-documented for `uniqueness` validations on associations.\r\n\r\nI'm happy to help improve the documentation on this if that would be the most helpful way forward, or if this _is_ considered a bug, I can take a stab at a PR. \r\n\r\nIt looks like the issue is that `build_relation` on the uniqueness validator calls [`bind_attribute` on `ActiveRecord::Relation`](https://github.com/rails/rails/blob/408d061a80a49878ad26b305616ed9ba88ee1411/activerecord/lib/active_record/relation.rb#L45), which properly takes into account the reflection's foreign_key, but not primary key if it's been overridden. \r\n\r\nHere's a test that reproduces the issue:\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire 'bundler/inline'\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem 'activerecord', '~> 7.0.3.1'\r\n  gem 'sqlite3'\r\nend\r\n\r\nrequire 'active_record'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(\r\n  adapter: 'sqlite3',\r\n  database: ':memory:'\r\n)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :prescriptions, force: true do |t|\r\n    t.string :rx_number\r\n  end\r\n\r\n  create_table :fills, force: true do |t|\r\n    t.string :rx_number\r\n  end\r\nend\r\n\r\nclass Prescription < ActiveRecord::Base\r\n  has_many :fills, foreign_key: :rx_number, primary_key: :rx_number\r\nend\r\n\r\nclass Fill < ActiveRecord::Base\r\n  belongs_to :prescription, foreign_key: :rx_number, primary_key: :rx_number\r\n\r\n  validates :prescription, uniqueness: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_fill_unique_by_rx_number\r\n    Fill.create!(rx_number: '1234')\r\n    prescription = Prescription.create!(rx_number: '1234')\r\n    new_fill = prescription.fills.new\r\n    refute new_fill.save\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe uniqueness validation query would use the `rx_number` value of the `Prescription` to query for an existing `Fill` since that is what is set as the associations `primary_key`. \r\n\r\n### Actual behavior\r\nThe uniqueness validation query uses the `id` value of the `Prescription` to query for existing fills, disregarding the association's overridden `primary_key`.\r\n\r\nThis test passes if I patch bind_attribute to read the primary key from the reflection instead of directly from the reflection's klass:\r\n\r\n```ruby\r\nmodule ActiveRecord\r\n  # = Active Record \\Relation\r\n  class Relation\r\n    def bind_attribute(name, value) # :nodoc:\r\n      if reflection = klass._reflect_on_association(name)\r\n        name = reflection.foreign_key\r\n        primary_key = reflection.association_primary_key || reflection.klass.primary_key\r\n        value = value.read_attribute(primary_key) unless value.nil?\r\n      end\r\n\r\n      attr = table[name]\r\n      bind = predicate_builder.build_bind_attribute(attr.name, value)\r\n      yield attr, bind\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nWe were able to work around this by adding the uniqueness validation to the `rx_number` attribute instead of the association. If this is the desired way to handle this, I can open a PR to add a note about this to the docs, as it took us by surprise that validation on the association wouldn't use the defined key to get the value to query.\r\n\r\n### System configuration\r\n**Rails version**: `7.0.3.1`\r\n\r\n**Ruby version**: `3.1.2`\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45775/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45775/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45766","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45766/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45766/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45766/events","html_url":"https://github.com/rails/rails/issues/45766","id":1329650798,"node_id":"I_kwDNIULOT0Dcbg","number":45766,"title":"Active Model Dirty: attribute_changed? options (from/to) do not accept symbol","user":{"login":"thomasvanholder","id":36309895,"node_id":"MDQ6VXNlcjM2MzA5ODk1","avatar_url":"https://avatars.githubusercontent.com/u/36309895?v=4","gravatar_id":"","url":"https://api.github.com/users/thomasvanholder","html_url":"https://github.com/thomasvanholder","followers_url":"https://api.github.com/users/thomasvanholder/followers","following_url":"https://api.github.com/users/thomasvanholder/following{/other_user}","gists_url":"https://api.github.com/users/thomasvanholder/gists{/gist_id}","starred_url":"https://api.github.com/users/thomasvanholder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomasvanholder/subscriptions","organizations_url":"https://api.github.com/users/thomasvanholder/orgs","repos_url":"https://api.github.com/users/thomasvanholder/repos","events_url":"https://api.github.com/users/thomasvanholder/events{/privacy}","received_events_url":"https://api.github.com/users/thomasvanholder/received_events","type":"User","site_admin":false},"labels":[{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-08-05T08:54:51Z","updated_at":"2022-08-07T20:25:55Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nThe `attribute_changed?` receives optional options, such as `from` and `to`. Each option key is passed a value. Only string values are accepted, and symbols are not recognized. This is inconsistent behavior as updating a column using the `update` method does accept both a string and a symbol.\r\n \r\n Source code: [attribute_changed?](https://github.com/rails/rails/blob/04972d9b9ef60796dc8f0917817b5392d61fcf09/activemodel/lib/active_model/dirty.rb#L178) \r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"debug\"\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.column :status, :integer, default: 0\r\n    t.date :review_date\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  enum :status, {draft: 0, published: 1}\r\n\r\n  before_update :set_review_date\r\n\r\n  def set_review_date\r\n    # when \"published\" is set as a string, the test correcty passes.\r\n    if status_changed?(to: :published)\r\n      self.review_date = Date.today\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_set_status\r\n    post = Post.create!\r\n    post.update(status: :published)\r\n\r\n    assert_equal \"published\", post.status\r\n  end\r\n\r\n  def test_sets_review_date\r\n    post = Post.create!\r\n    post.published!\r\n\r\n    assert_equal \"published\", post.status\r\n    assert_equal Date.today, post.review_date\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe value of the optional arguments `from` and `to` accepts both a string or symbol.\r\n\r\n### Actual behavior\r\nWhen options, such as `from` and `to` are passed to the [attribute_changed?](https://github.com/rails/rails/blob/04972d9b9ef60796dc8f0917817b5392d61fcf09/activemodel/lib/active_model/dirty.rb#L178) method the arguments are not recognized when passed as a symbol.\r\n\r\n### System configuration\r\n**Rails version**: `Rails 7.0.3`\r\n\r\n**Ruby version**: `ruby 3.1.2`\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45766/reactions","total_count":2,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45766/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45758","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45758/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45758/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45758/events","html_url":"https://github.com/rails/rails/issues/45758","id":1327892229,"node_id":"I_kwDNIULOTyYHBQ","number":45758,"title":"ActiveRecord 6.1 and JSONB: Incorrect results value/type when using both arrow operator and double arrow operator in the same SELECT statement","user":{"login":"shhavel","id":1169424,"node_id":"MDQ6VXNlcjExNjk0MjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1169424?v=4","gravatar_id":"","url":"https://api.github.com/users/shhavel","html_url":"https://github.com/shhavel","followers_url":"https://api.github.com/users/shhavel/followers","following_url":"https://api.github.com/users/shhavel/following{/other_user}","gists_url":"https://api.github.com/users/shhavel/gists{/gist_id}","starred_url":"https://api.github.com/users/shhavel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shhavel/subscriptions","organizations_url":"https://api.github.com/users/shhavel/orgs","repos_url":"https://api.github.com/users/shhavel/repos","events_url":"https://api.github.com/users/shhavel/events{/privacy}","received_events_url":"https://api.github.com/users/shhavel/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-08-03T23:42:39Z","updated_at":"2022-08-05T22:26:04Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Issue Description\r\n\r\nGenerally when using JSONB operators `->` (arrow operator) and `->>` (double arrow operator) in SELECT statement, \r\nActiveRecord returns correct result types: objects for `->` operator and string for `->>` operator.\r\nBut when using both operators in the same select statement, the returned results may have an unexpected type or be `nil`.\r\n\r\n### Steps to reproduce with Expected behaviour in tests and Actual behaviour in comments\r\n\r\n```ruby\r\n# file: activerecord_6_1_jsonb_test.rb\r\n# run: ruby activerecord_6_1_jsonb_test.rb\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"activerecord\", \"6.1.6.1\" # the same behaviour for version \"7.0.3.1\"\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\npg_opts = {adapter: \"postgresql\", database: \"jsonb_activerecord_issue\"}\r\nbegin\r\n  ActiveRecord::Base.establish_connection(pg_opts.except(:database))\r\n  ActiveRecord::Base.connection.create_database(pg_opts[:database])\r\n  puts \"Database #{pg_opts[:database]} was created.\"\r\nrescue => ActiveRecord::DatabaseAlreadyExists\r\n  puts \"Database #{pg_opts[:database]} alredy exists.\"\r\nend\r\nActiveRecord::Base.establish_connection(pg_opts)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :entries, force: true do |t|\r\n    t.jsonb :value\r\n  end\r\nend\r\n\r\nclass Entry < ActiveRecord::Base\r\nend\r\nEntry.create(value: {a: \"a\", b: \"b\", c: {}})\r\n\r\nclass BugTest < Minitest::Test\r\n  # passed\r\n  def test_jsonb_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->'a', value->'b'\"))\r\n    assert_equal [[{}, \"b\"]], Entry.pluck(Arel.sql(\"value->'c', value->'b'\"))\r\n  end\r\n\r\n  # passed\r\n  def test_jsonb_double_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'a', value->>'b'\"))\r\n    assert_equal [[\"{}\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'c', value->>'b'\"))\r\n  end\r\n\r\n  # failed (this test results are differ in activerecord 6.0)\r\n  def test_jsonb_arrow_operator_and_double_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->'a', value->>'b'\")) # Actual [[\"a\", nil]]\r\n    assert_equal [[{}, \"b\"]], Entry.pluck(Arel.sql(\"value->'c', value->>'b'\")) # Actual [[{}, nil]]\r\n  end\r\n\r\n  # failed\r\n  def test_jsonb_double_arrow_operator_and_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'a', value->'b'\")) # Actual [[nil, \"b\"]]\r\n    assert_equal [[\"{}\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'c', value->'b'\")) # Actual [[{}, \"b\"]]\r\n  end\r\nend\r\n```\r\n\r\n### PostgreSQL results \r\n\r\n```sql\r\nSELECT\r\n  pg_typeof(value->'a'), value->'a',\r\n  pg_typeof(value->'b'), value->'b',\r\n  pg_typeof(value->'c'), value->'c',\r\n  pg_typeof(value->>'a'), value->>'a',\r\n  pg_typeof(value->>'b'), value->>'b',\r\n  pg_typeof(value->>'c'), value->>'c'\r\nFROM \"entries\";\r\n\r\n pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column?\r\n-----------+----------+-----------+----------+-----------+----------+-----------+----------+-----------+----------+-----------+----------\r\n jsonb     | \"a\"      | jsonb     | \"b\"      | jsonb     | {}       | text      | a        | text      | b        | text      | {}\r\n(1 row)\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 6.1.6.1\r\n\r\n**Ruby version**: 3.1.0\r\n\r\n### Similar issue in different versions of ActiveRecord\r\n\r\nThere is a similar issue but with slightly different behaviour in AR 6.0. Created another issue: #45757\r\n\r\nPlease confirm or comment on the expected behaviour.\r\nThank you.\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45758/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45758/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45750","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45750/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45750/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45750/events","html_url":"https://github.com/rails/rails/issues/45750","id":1327484205,"node_id":"I_kwDNIULOTx_NLQ","number":45750,"title":"Running `rails test` doesn't automatically load any custom tasks under `lib/tasks`","user":{"login":"onlynone","id":833690,"node_id":"MDQ6VXNlcjgzMzY5MA==","avatar_url":"https://avatars.githubusercontent.com/u/833690?v=4","gravatar_id":"","url":"https://api.github.com/users/onlynone","html_url":"https://github.com/onlynone","followers_url":"https://api.github.com/users/onlynone/followers","following_url":"https://api.github.com/users/onlynone/following{/other_user}","gists_url":"https://api.github.com/users/onlynone/gists{/gist_id}","starred_url":"https://api.github.com/users/onlynone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/onlynone/subscriptions","organizations_url":"https://api.github.com/users/onlynone/orgs","repos_url":"https://api.github.com/users/onlynone/repos","events_url":"https://api.github.com/users/onlynone/events{/privacy}","received_events_url":"https://api.github.com/users/onlynone/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-03T16:16:38Z","updated_at":"2022-08-03T18:09:40Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n1. Create the file `lib/tasks/test.rake` with the content:\r\n```ruby\r\nENV[\"test.rake\"] = \"yes\"\r\ntask :custom_task do\r\n  ENV[\"custom_task\"] = \"yes\"\r\nend\r\n\r\ntask :test => [:custom_task]\r\n```\r\n2. Create a test file at `test/unit/rails_test_test.rb` with the content:\r\n```ruby\r\nclass RailsTestTest < ActiveSupport::TestCase\r\n  test \"test.rake is in the environment\" do\r\n    assert_equal('yes', ENV['test.rake'])\r\n  end\r\n\r\n  test \"custom_task is in the environment\" do\r\n    assert_equal('yes', ENV['custom_task'])\r\n  end\r\nend\r\n```\r\n3. Run `bin/rails test test/unit/rails_test_test.rb`\r\n4. Run `bin/rake test test/unit/rails_test_test.rb`\r\n\r\n### Expected behavior\r\nBoth `rails test` and `rake test` should succeed.\r\n\r\n### Actual behavior\r\nRunning the tests with `bin/rake` succeeds with the output:\r\n```\r\nbin/rake test test/unit/rails_test_test.rb\r\nRunning via Spring preloader in process 59092\r\nRun options: --seed 6948\r\n\r\n# Running:\r\n\r\n..\r\n\r\nFinished in 0.000943s, 2120.8907 runs/s, 2120.8907 assertions/s.\r\n2 runs, 2 assertions, 0 failures, 0 errors, 0 skips\r\n```\r\n\r\nWhile running with `bin/rails` fails with the output:\r\n\r\n```\r\nRunning via Spring preloader in process 58735\r\nRun options: --seed 33633\r\n\r\n# Running:\r\n\r\nF\r\n\r\nFailure:\r\nRailsTestTest#test_custom_task_is_in_the_environment [/Users/steven/projects/rails_test_tasks/test/unit/rails_test_test.rb:7]:\r\nExpected: \"yes\"\r\n  Actual: nil\r\n\r\n\r\nrails test test/unit/rails_test_test.rb:6\r\n\r\nF\r\n\r\nFailure:\r\nRailsTestTest#test_test.rake_is_in_the_environment [/Users/steven/projects/rails_test_tasks/test/unit/rails_test_test.rb:3]:\r\nExpected: \"yes\"\r\n  Actual: nil\r\n\r\n\r\nrails test test/unit/rails_test_test.rb:2\r\n\r\n\r\n\r\nFinished in 0.001378s, 1451.3788 runs/s, 1451.3788 assertions/s.\r\n2 runs, 2 assertions, 2 failures, 0 errors, 0 skips\r\n```\r\n\r\nBecause the file `lib/tasks/test.rake` is never loaded.\r\n\r\nIt seems like rails will only end up loading custom tasks if it can't find the command being run on the command line in its own list of built-in commands. When it can't find the command, it will load the local `Rakefile` via `find_by_namespace(\"rake\").perform(full_namespace, args, config)` in `Rails::Command.invoke`. And the local `Rakefile` usually has `Rails.application.load_tasks` and that loads any custom tasks under `lib/tasks`.\r\n\r\nFor example, this happens when the `ActiveRecord` migration exec's out to call: `bin/rails db:test:prepare`. That task is apparently not a built-in rails task, so the `Rakefile` and all custom tasks *do* end up getting loaded for that one.\r\n\r\n(As an aside here, I don't fully understand the difference between the built-in rails tasks and the ones that have to be searched for via rake. I also don't understand why the migration code needs to fork a separate process to do `db:test:prepare`. That task just ends up doing `db_namespace[\"test:load\"].invoke`. Why couldn't the `db:test:prepare` tasks simply be invoked the same way in the same process?)\r\n\r\n### System configuration\r\n**Rails version**: 6.0.5\r\n\r\n**Ruby version**: 2.6.5\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45750/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45750/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45736","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45736/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45736/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45736/events","html_url":"https://github.com/rails/rails/issues/45736","id":1326221102,"node_id":"I_kwDNIULOTwyHLg","number":45736,"title":"Virtual stored columns are always nil for newly created records","user":{"login":"camiloforero","id":6606686,"node_id":"MDQ6VXNlcjY2MDY2ODY=","avatar_url":"https://avatars.githubusercontent.com/u/6606686?v=4","gravatar_id":"","url":"https://api.github.com/users/camiloforero","html_url":"https://github.com/camiloforero","followers_url":"https://api.github.com/users/camiloforero/followers","following_url":"https://api.github.com/users/camiloforero/following{/other_user}","gists_url":"https://api.github.com/users/camiloforero/gists{/gist_id}","starred_url":"https://api.github.com/users/camiloforero/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/camiloforero/subscriptions","organizations_url":"https://api.github.com/users/camiloforero/orgs","repos_url":"https://api.github.com/users/camiloforero/repos","events_url":"https://api.github.com/users/camiloforero/events{/privacy}","received_events_url":"https://api.github.com/users/camiloforero/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-02T18:09:28Z","updated_at":"2022-08-02T19:28:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nUsing postgresql:\r\n\r\nGenerate a new model with one or more columns with default values, and a virtual stored column based on those other columns\r\nCreate a new record of that model\r\nAccess the value of the virtual stored column from the newly created ActiveRecord object\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem 'pg', '~> 1.4'\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection \"postgresql:///test\"\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.integer :counter1, null: false, default: 0\r\n    t.integer :counter2, null: false, default: 0\r\n    t.virtual :counter_sum, type: :integer, as: \"counter1 + counter2\", stored: true\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_virtual_column_value_populated\r\n    post = Post.create!\r\n\r\n    assert_equal 0, post.counter_sum\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe value of the virtual column should be *something*, in this particular case, 0\r\n\r\n### Actual behavior\r\nThe value of the virtual column is `nil`. The test fails with the following output\r\n```ruby\r\n# Running:\r\n\r\nD, [2022-08-02T13:05:17.402730 #13548] DEBUG -- :   TRANSACTION (0.1ms)  BEGIN\r\nD, [2022-08-02T13:05:17.403136 #13548] DEBUG -- :   Post Create (0.6ms)  INSERT INTO \"posts\" DEFAULT VALUES RETURNING \"id\"\r\nD, [2022-08-02T13:05:17.406144 #13548] DEBUG -- :   TRANSACTION (2.6ms)  COMMIT\r\nF\r\n\r\nFailure:\r\nBugTest#test_virtual_column_value_populated [stored_bug.rb:37]:\r\nExpected: 0\r\n  Actual: nil\r\n\r\n\r\nrails test stored_bug.rb:34\r\n\r\n\r\n\r\nFinished in 0.011047s, 90.5240 runs/s, 90.5240 assertions/s.\r\n1 runs, 1 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\n### System configuration\r\n**Rails version**: edge\r\n**Ruby version**: 3.1.2\r\n**PostgreSQL version**: 14.4\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45736/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45736/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45709","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45709/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45709/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45709/events","html_url":"https://github.com/rails/rails/issues/45709","id":1323303409,"node_id":"I_kwDNIULOTuAB8Q","number":45709,"title":"Rails & can't pin JS files from Unpkg","user":{"login":"septerr","id":1094216,"node_id":"MDQ6VXNlcjEwOTQyMTY=","avatar_url":"https://avatars.githubusercontent.com/u/1094216?v=4","gravatar_id":"","url":"https://api.github.com/users/septerr","html_url":"https://github.com/septerr","followers_url":"https://api.github.com/users/septerr/followers","following_url":"https://api.github.com/users/septerr/following{/other_user}","gists_url":"https://api.github.com/users/septerr/gists{/gist_id}","starred_url":"https://api.github.com/users/septerr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/septerr/subscriptions","organizations_url":"https://api.github.com/users/septerr/orgs","repos_url":"https://api.github.com/users/septerr/repos","events_url":"https://api.github.com/users/septerr/events{/privacy}","received_events_url":"https://api.github.com/users/septerr/received_events","type":"User","site_admin":false},"labels":[{"id":131864,"node_id":"MDU6TGFiZWwxMzE4NjQ=","url":"https://api.github.com/repos/rails/rails/labels/third%20party%20issue","name":"third party issue","color":"02d7e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-07-30T21:44:43Z","updated_at":"2022-08-02T18:08:34Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nIn a new Rails & app, try to pin a package from Unpkg CDN:\r\n\r\n```\r\n./bin/importmap pin @walletconnect/web3-provider@1.7.8 --from unpkg\r\n```\r\n\r\nYou get following response:\r\n\r\n```\r\nCouldn't find any packages in [\"@walletconnect/web3-provider@1.7.8\"] on unpkg\r\n```\r\nBut the file does exist on unpkg: https://unpkg.com/@walletconnect/web3-provider@1.7.8/dist/umd/index.min.js\r\n\r\nAfter adding some breakpoints in `.rbenv/versions/3.1.0/lib/ruby/gems/3.1.0/gems/importmap-rails-1.1.5/lib/importmap/packager.rb`, saw that the CDN post request and response are as follows:\r\n\r\nPost URL: \r\n```\r\n<URI::HTTPS https://api.jspm.io/generate>\r\n```\r\nPost Body:\r\n```\r\n \"{\\\"install\\\":[\\\"@walletconnect/web3-provider@1.7.8\\\"],\\\"flattenScope\\\":true,\\\"env\\\":[\\\"browser\\\",\\\"module\\\",\\\"production\\\"],\\\"provider\\\":\\\"unpkg\\\"}\"\r\n```\r\n\r\nPost Response:\r\n```\r\n<Net::HTTPUnauthorized 401 Unauthorized readbody=true>\r\n```\r\n\r\n### Expected behavior\r\nExpected the files from unpkg to be pinned.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nMisleading error that files don't exist on unpkg.\r\n\r\n### System configuration\r\n**Rails version**:\r\nRails 7.0.3.1\r\n\r\n**Ruby version**:\r\nruby 3.1.0p0 (2021-12-25 revision fb4df44d16) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45709/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45709/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45691","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45691/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45691/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45691/events","html_url":"https://github.com/rails/rails/issues/45691","id":1322122058,"node_id":"I_kwDNIULOTs37Sg","number":45691,"title":"ActionMailer fails to create correct multipart message with rfc822 attachment","user":{"login":"der-flo","id":35431,"node_id":"MDQ6VXNlcjM1NDMx","avatar_url":"https://avatars.githubusercontent.com/u/35431?v=4","gravatar_id":"","url":"https://api.github.com/users/der-flo","html_url":"https://github.com/der-flo","followers_url":"https://api.github.com/users/der-flo/followers","following_url":"https://api.github.com/users/der-flo/following{/other_user}","gists_url":"https://api.github.com/users/der-flo/gists{/gist_id}","starred_url":"https://api.github.com/users/der-flo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/der-flo/subscriptions","organizations_url":"https://api.github.com/users/der-flo/orgs","repos_url":"https://api.github.com/users/der-flo/repos","events_url":"https://api.github.com/users/der-flo/events{/privacy}","received_events_url":"https://api.github.com/users/der-flo/received_events","type":"User","site_admin":false},"labels":[{"id":107188,"node_id":"MDU6TGFiZWwxMDcxODg=","url":"https://api.github.com/repos/rails/rails/labels/actionmailer","name":"actionmailer","color":"8B00FC","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-29T11:19:00Z","updated_at":"2022-08-02T19:46:17Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I cannot re-open #42849 so I create a new issue…\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire 'bundler/inline'\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n  gem 'rails', github: 'rails/rails', branch: 'main'\r\nend\r\n\r\nrequire 'minitest/autorun'\r\nrequire 'action_mailer/railtie'\r\n\r\nclass TestMailer < ActionMailer::Base\r\n  def main\r\n    message_to_attach =  <<~MAIL.gsub(/\\n/, \"\\r\\n\")\r\n      Message-ID: <12345@foo.example>\r\n      Subject: Test\r\n      From: test1@foo.example\r\n      To: test2@foo.example\r\n      \r\n      hello world\r\n    MAIL\r\n    attachments['test.eml'] = {\r\n      mime_type: params[:mime_type],\r\n      content: message_to_attach\r\n    }\r\n\r\n    mail(from: 'test3@foo.example', to: 'test4@foo.example', subject: 'Test outer') do |format|\r\n      format.text { \"outer text - #{params[:mime_type]} attachment\" }\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_with_plain_mime_type\r\n    message = TestMailer.with(mime_type: 'text/plain').main\r\n    assert_equal message.mime_type, 'multipart/mixed'\r\n  end\r\n\r\n  def test_with_rfc822_mime_type\r\n    message = TestMailer.with(mime_type: 'message/rfc822').main\r\n    assert_equal message.mime_type, 'multipart/mixed'\r\n  end\r\nend\r\n```\r\n\r\nThe second test fails, the message object is rendered as follows:\r\n```\r\nDate: Fri, 23 Jul 2021 13:59:19 +0200\r\nFrom: test3@foo.example\r\nTo: test4@foo.example\r\nMessage-ID: <60faaf1738a02_14fbd98-3fb@flo.adigi.ai.mail>\r\nSubject: Test outer\r\nMime-Version: 1.0\r\nContent-Type: text/plain;\r\n boundary=\"--==_mimepart_60faaf1738008_14fbd98-484\";\r\n charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\n\r\n\r\n----==_mimepart_60faaf1738008_14fbd98-484\r\nContent-Type: text/plain;\r\n charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\n\r\nouter text - message/rfc822 attachment\r\n----==_mimepart_60faaf1738008_14fbd98-484\r\nContent-Type: message/rfc822\r\nContent-Transfer-Encoding: \r\nContent-Disposition: attachment;\r\n filename=test.eml\r\nContent-ID: <60faaf1739102_14fbd98-2b@flo.adigi.ai.mail>\r\n\r\nMessage-ID: <12345@foo.example>\r\nSubject: Test\r\nFrom: test1@foo.example\r\nTo: test2@foo.example\r\n\r\nhello world\r\n\r\n----==_mimepart_60faaf1738008_14fbd98-484--\r\n\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe `message.mime_type` is `multipart/mixed` in both test cases. ActionMailer handles attachments in the way it is described in https://guides.rubyonrails.org/action_mailer_basics.html#adding-attachments describes.\r\n\r\n### Actual behavior\r\n\r\nWhen attaching a `message/rfc822` - an email message - the generated mail parts are not nested correctly, the outer `multipart/mixed` is missing.\r\n\r\nPerhaps this behaviour is caused by the [special handling](https://github.com/mikel/mail/blob/master/lib/mail/attachments_list.rb#L9) of such attachments in the `mail` gem.\r\n\r\n\r\n### System configuration\r\n**Rails version**: main\r\n\r\n**Ruby version**: 3.0.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45691/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":1,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45691/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45640","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45640/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45640/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45640/events","html_url":"https://github.com/rails/rails/issues/45640","id":1315219867,"node_id":"I_kwDNIULOTmSpmw","number":45640,"title":"ActiveModel::Dirty changes not reset properly when using store_accessor (tested with postgres)","user":{"login":"vccoffey","id":59817868,"node_id":"MDQ6VXNlcjU5ODE3ODY4","avatar_url":"https://avatars.githubusercontent.com/u/59817868?v=4","gravatar_id":"","url":"https://api.github.com/users/vccoffey","html_url":"https://github.com/vccoffey","followers_url":"https://api.github.com/users/vccoffey/followers","following_url":"https://api.github.com/users/vccoffey/following{/other_user}","gists_url":"https://api.github.com/users/vccoffey/gists{/gist_id}","starred_url":"https://api.github.com/users/vccoffey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vccoffey/subscriptions","organizations_url":"https://api.github.com/users/vccoffey/orgs","repos_url":"https://api.github.com/users/vccoffey/repos","events_url":"https://api.github.com/users/vccoffey/events{/privacy}","received_events_url":"https://api.github.com/users/vccoffey/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-07-22T16:44:57Z","updated_at":"2022-07-23T17:51:49Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nUsing PostgreSQL (pg) database\r\nGiven a model with a jsonb column\r\n```\r\nclass CreateTestModels < ActiveRecord::Migration[6.1]\r\n  def change\r\n    create_table :test_models do |t|\r\n      t.jsonb :jsonb_hash_attr\r\n      t.timestamps\r\n    end\r\n  end\r\nend\r\n```\r\nusing store_accessor\r\n```\r\nclass TestModel < ApplicationRecord\r\n  store_accessor :jsonb_hash_attr, :key, prefix: true\r\nend\r\n```\r\n\r\n### Expected behavior\r\nBoth tests pass:\r\n```\r\nrequire \"test_helper\"\r\nclass TestModelTest < ActiveSupport::TestCase\r\n  test \"does not show changes for a jsonb attribute if changed back to original value\" do\r\n    tm = TestModel.create jsonb_hash_attr: { \"key\" => \"foo\" }\r\n    tm.jsonb_hash_attr = { \"key\" => \"bar\" }\r\n    assert_equal tm.jsonb_hash_attr_change, [{ \"key\" => \"foo\" }, { \"key\" => \"bar\" }]\r\n    tm.jsonb_hash_attr = { \"key\" => \"foo\" }\r\n    assert_equal tm.jsonb_hash_attr_change, nil\r\n  end\r\n\r\n  test \"does not show changes for a jsonb attribute if changed back to original value using store_accessor\" do\r\n    tm = TestModel.create jsonb_hash_attr: { \"key\" => \"foo\" }\r\n    tm.jsonb_hash_attr_key = \"bar\"\r\n    assert_equal tm.jsonb_hash_attr_change, [{ \"key\" => \"foo\" }, { \"key\" => \"bar\" }]\r\n    tm.jsonb_hash_attr_key = \"foo\"\r\n    assert_equal tm.jsonb_hash_attr_change, nil\r\n  end\r\nend\r\n```\r\n### Actual behavior\r\nThe second test fails\r\n```\r\n--- expected\r\n+++ actual\r\n-[{\"key\"=>\"foo\"}, {\"key\"=>\"foo\"}]\r\n+nil\r\n```\r\n### System configuration\r\n**Rails version**:\r\ntested with 6.1.6.1 and 7.0.3.1\r\n\r\n**Ruby version**: 3.1.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45640/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45640/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45639","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45639/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45639/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45639/events","html_url":"https://github.com/rails/rails/issues/45639","id":1314984267,"node_id":"I_kwDNIULOTmERSw","number":45639,"title":"Explicitly touch on save","user":{"login":"schmijos","id":245443,"node_id":"MDQ6VXNlcjI0NTQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/245443?v=4","gravatar_id":"","url":"https://api.github.com/users/schmijos","html_url":"https://github.com/schmijos","followers_url":"https://api.github.com/users/schmijos/followers","following_url":"https://api.github.com/users/schmijos/following{/other_user}","gists_url":"https://api.github.com/users/schmijos/gists{/gist_id}","starred_url":"https://api.github.com/users/schmijos/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/schmijos/subscriptions","organizations_url":"https://api.github.com/users/schmijos/orgs","repos_url":"https://api.github.com/users/schmijos/repos","events_url":"https://api.github.com/users/schmijos/events{/privacy}","received_events_url":"https://api.github.com/users/schmijos/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-22T13:05:14Z","updated_at":"2022-07-22T20:31:00Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  ruby \"3.1.0\"\r\n  gem \"rails\", \"7.0.3.1\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.timestamps\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_save_touch\r\n    Post.create!(updated_at: 3.days.ago)\r\n    Post.last.save!(touch: true)\r\n\r\n    assert_in_delta 0.seconds.ago.to_i, Post.last.updated_at.to_i, 5\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nIf I tell _ActiveRecord_ to explicitly \"touch\", then I would expect it to update the timestamps.\r\n\r\n### Actual behavior\r\n`save` never hits the database if no attribute changed.\r\n\r\n### System configuration\r\n**Rails version**: >= 3.0.0, < 8","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45639/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45639/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45638","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45638/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45638/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45638/events","html_url":"https://github.com/rails/rails/issues/45638","id":1314662755,"node_id":"I_kwDNIULOTlwpYw","number":45638,"title":"CSRF Token Expiry issue.","user":{"login":"MBM1607","id":47133639,"node_id":"MDQ6VXNlcjQ3MTMzNjM5","avatar_url":"https://avatars.githubusercontent.com/u/47133639?v=4","gravatar_id":"","url":"https://api.github.com/users/MBM1607","html_url":"https://github.com/MBM1607","followers_url":"https://api.github.com/users/MBM1607/followers","following_url":"https://api.github.com/users/MBM1607/following{/other_user}","gists_url":"https://api.github.com/users/MBM1607/gists{/gist_id}","starred_url":"https://api.github.com/users/MBM1607/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MBM1607/subscriptions","organizations_url":"https://api.github.com/users/MBM1607/orgs","repos_url":"https://api.github.com/users/MBM1607/repos","events_url":"https://api.github.com/users/MBM1607/events{/privacy}","received_events_url":"https://api.github.com/users/MBM1607/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-22T08:38:19Z","updated_at":"2022-07-22T08:40:22Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"We are encountering an issue with form submission in production environment.\r\nThe criteria seems to be exceptionally rare, I have been unable to replicate the issue. \r\n\r\nCSRF token is created and validated just fine.\r\n\r\n### Timing\r\n\r\nIssue seems to occur only when users wait more than 2 hours on a form before submitting, but doing this we have been unable to reproduce as well.\r\n\r\n### Logs\r\n```\r\nW, [2022-07-14T15:19:37.535241 #2433]  WARN -- : Can't verify CSRF token authenticity.\r\nI, [2022-07-14T15:19:37.535556 #2433]  INFO -- : Completed 422 Unprocessable Entity in 1ms (ActiveRecord: 0.0ms | Allocations: 291)\r\nF, [2022-07-14T15:19:37.536425 #2433] FATAL -- :   \r\nActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n```\r\n\r\n### System configuration\r\n**Rails version 6.1.6** \r\n**Ruby version 2.7.4**\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45638/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45638/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45636","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45636/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45636/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45636/events","html_url":"https://github.com/rails/rails/issues/45636","id":1314546104,"node_id":"I_kwDNIULOTlphuA","number":45636,"title":"Invalid template types should raise an exception","user":{"login":"axos88","id":1281218,"node_id":"MDQ6VXNlcjEyODEyMTg=","avatar_url":"https://avatars.githubusercontent.com/u/1281218?v=4","gravatar_id":"","url":"https://api.github.com/users/axos88","html_url":"https://github.com/axos88","followers_url":"https://api.github.com/users/axos88/followers","following_url":"https://api.github.com/users/axos88/following{/other_user}","gists_url":"https://api.github.com/users/axos88/gists{/gist_id}","starred_url":"https://api.github.com/users/axos88/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/axos88/subscriptions","organizations_url":"https://api.github.com/users/axos88/orgs","repos_url":"https://api.github.com/users/axos88/repos","events_url":"https://api.github.com/users/axos88/events{/privacy}","received_events_url":"https://api.github.com/users/axos88/received_events","type":"User","site_admin":false},"labels":[{"id":3666649,"node_id":"MDU6TGFiZWwzNjY2NjQ5","url":"https://api.github.com/repos/rails/rails/labels/actionview","name":"actionview","color":"d7e102","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-07-22T07:40:54Z","updated_at":"2022-08-17T18:02:14Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n  - Create a template in views/foo/bar.txt.erb # Note .txt, and not .text\r\n\r\n```ruby\r\ndetails = { locale: [:en], formats: [:txt], handlers: [:erb], variants: []}\r\nActionController::Base.view_paths.find(\"bar\", 'foo', false, details, nil, [])\r\n```\r\n\r\n### Expected behavior\r\n\r\nShould throw an exception that :txt is not a registered type in Template::Types\r\n\r\n### Actual behavior\r\n\r\nSilently fails to find the otherwise existing template, specifying the correct directory it the file resides in. \r\nConfustion intensifies.\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3\r\n**Ruby version**: 2.7.6","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45636/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45636/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45635","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45635/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45635/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45635/events","html_url":"https://github.com/rails/rails/issues/45635","id":1314015345,"node_id":"I_kwDNIULOTlJIcQ","number":45635,"title":"Recent security releases are missing from the Releases page","user":{"login":"georgeclaghorn","id":94129,"node_id":"MDQ6VXNlcjk0MTI5","avatar_url":"https://avatars.githubusercontent.com/u/94129?v=4","gravatar_id":"","url":"https://api.github.com/users/georgeclaghorn","html_url":"https://github.com/georgeclaghorn","followers_url":"https://api.github.com/users/georgeclaghorn/followers","following_url":"https://api.github.com/users/georgeclaghorn/following{/other_user}","gists_url":"https://api.github.com/users/georgeclaghorn/gists{/gist_id}","starred_url":"https://api.github.com/users/georgeclaghorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/georgeclaghorn/subscriptions","organizations_url":"https://api.github.com/users/georgeclaghorn/orgs","repos_url":"https://api.github.com/users/georgeclaghorn/repos","events_url":"https://api.github.com/users/georgeclaghorn/events{/privacy}","received_events_url":"https://api.github.com/users/georgeclaghorn/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false},"assignees":[{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2022-07-22T01:21:34Z","updated_at":"2022-08-19T18:08:06Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Rails versions 7.0.3.1, 6.1.6.1, 6.0.5.1, and 5.2.8.1 are not listed at this GitHub repository’s [Releases](https://github.com/rails/rails/releases) page. Past releases are listed there, including the most recent round of bugfix releases from May.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45635/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45635/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45632","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45632/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45632/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45632/events","html_url":"https://github.com/rails/rails/issues/45632","id":1312439669,"node_id":"I_kwDNIULOTjo9dQ","number":45632,"title":"`_read_attribute` method should also check whether an attribute is aliased or not","user":{"login":"khiav223577","id":4011729,"node_id":"MDQ6VXNlcjQwMTE3Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4011729?v=4","gravatar_id":"","url":"https://api.github.com/users/khiav223577","html_url":"https://github.com/khiav223577","followers_url":"https://api.github.com/users/khiav223577/followers","following_url":"https://api.github.com/users/khiav223577/following{/other_user}","gists_url":"https://api.github.com/users/khiav223577/gists{/gist_id}","starred_url":"https://api.github.com/users/khiav223577/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/khiav223577/subscriptions","organizations_url":"https://api.github.com/users/khiav223577/orgs","repos_url":"https://api.github.com/users/khiav223577/repos","events_url":"https://api.github.com/users/khiav223577/events{/privacy}","received_events_url":"https://api.github.com/users/khiav223577/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-07-21T03:14:22Z","updated_at":"2022-07-21T21:37:09Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n```rb\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  gem \"activerecord\", '7.0.3'\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table \"users\", force: :cascade do |t|\r\n    t.string :name\r\n  end\r\n\r\n  create_table \"posts\", force: :cascade do |t|\r\n    t.string :title\r\n    t.integer :userId\r\n  end\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\n  has_many :posts\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  belongs_to :user\r\n\r\n  alias_attribute :user_id, :userId\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def setup\r\n    user = User.create!(name: 'Tester')\r\n    post = Post.create!(user_id: user.id, title: 'Post A')\r\n  end\r\n\r\n  def test_has_many\r\n    assert_equal ['Post A'], User.first.posts.map(&:title)\r\n  end\r\n\r\n  def test_belongs_to\r\n    assert_equal 'Tester', Post.first.user&.name\r\n  end\r\nend\r\n```\r\n\r\nResult:\r\n```\r\nFinished in 0.059414s, 33.6619 runs/s, 33.6619 assertions/s.\r\n\r\n  1) Failure:\r\nBugTest#test_belongs_to [test.rb:53]:\r\nExpected: \"Tester\"\r\n  Actual: nil\r\n\r\n2 runs, 2 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\n### Expected behavior\r\n\r\nI run into this issue when I tried to add an association on an aliased attribute.\r\n\r\nThen I found `belongs_to_association` will use `_read_attribute` method to check if this `foreign_key` exists on this model or not.\r\nIt doesn't pass the condition, therefore `find_target` will not be triggered.\r\nhttps://github.com/rails/rails/blob/3272335f8f4739629283cdeff7c3db723f34a3f5/activerecord/lib/active_record/associations/association.rb#L172-L173\r\nhttps://github.com/rails/rails/blob/3272335f8f4739629283cdeff7c3db723f34a3f5/activerecord/lib/active_record/associations/association.rb#L274-L276\r\nhttps://github.com/rails/rails/blob/2ea5ff9e13b9c5d0d5d25b2441efa81a2de2a262/activerecord/lib/active_record/associations/belongs_to_association.rb#L133-L135\r\nhttps://github.com/rails/rails/blob/4ae0390c1051a39ec16a4a95451cd06172a1b260/activerecord/lib/active_record/attribute_methods/read.rb#L37-L39\r\n\r\nThe `read_attribute` method takes `attribute_alias` into consideration since https://github.com/rails/rails/pull/26529, while `_read_attribute` doesn't. I think it should, too.\r\n\r\n### Actual behavior\r\n\r\nSee the test script below.\r\n\r\n### System configuration\r\n**Rails version**: \r\n7.0.3.1\r\n\r\n**Ruby version**:\r\nruby 3.0.0p0 (2020-12-25 revision 95aff21468) [x86_64-linux]","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45632/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45632/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45609","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45609/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45609/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45609/events","html_url":"https://github.com/rails/rails/issues/45609","id":1306840730,"node_id":"I_kwDNIULOTeTOmg","number":45609,"title":"Cannot add ActiveModel::Attribute::FromDatabase to permitted YAML safe load classes","user":{"login":"stanhu","id":963826,"node_id":"MDQ6VXNlcjk2MzgyNg==","avatar_url":"https://avatars.githubusercontent.com/u/963826?v=4","gravatar_id":"","url":"https://api.github.com/users/stanhu","html_url":"https://github.com/stanhu","followers_url":"https://api.github.com/users/stanhu/followers","following_url":"https://api.github.com/users/stanhu/following{/other_user}","gists_url":"https://api.github.com/users/stanhu/gists{/gist_id}","starred_url":"https://api.github.com/users/stanhu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stanhu/subscriptions","organizations_url":"https://api.github.com/users/stanhu/orgs","repos_url":"https://api.github.com/users/stanhu/repos","events_url":"https://api.github.com/users/stanhu/events{/privacy}","received_events_url":"https://api.github.com/users/stanhu/received_events","type":"User","site_admin":false},"labels":[{"id":107186,"node_id":"MDU6TGFiZWwxMDcxODY=","url":"https://api.github.com/repos/rails/rails/labels/regression","name":"regression","color":"e10c02","default":false,"description":null},{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-07-16T15:51:30Z","updated_at":"2022-08-18T11:39:07Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWe have some database entries serialized to YAML. For example:\r\n\r\n```\r\n---\r\n:custom_message: Repository Download Started\r\n:author_name: !ruby/object:DeployToken\r\n  concise_attributes:\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: deploy_token_type\r\n    value_before_type_cast: 1\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: id\r\n    value_before_type_cast: 2\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: revoked\r\n    value_before_type_cast: false\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: read_repository\r\n    value_before_type_cast: true\r\n```\r\n\r\nHowever, since the security release announced in https://rubyonrails.org/2022/7/12/Rails-Versions-7-0-3-1-6-1-6-1-6-0-5-1-and-5-2-8-1-have-been-released to address CVE-2022-32224, we cannot simply add `ActiveModel::Attribute::FromDatabase` to the permitted class list:\r\n\r\n```ruby\r\n(byebug) YAML.safe_load(payload, permitted_classes: [ActiveModel::Attribute::FromDatabase, Symbol, DeployToken], aliases: true)\r\n*** NameError Exception: private constant ActiveModel::Attribute::FromDatabase referenced\r\n```\r\n\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\n### Expected behavior\r\n\r\nYAML loading should work. Should this constant no longer be private since it's been serialized to YAML?\r\n\r\n### Actual behavior\r\n\r\nYAML loading fails with:\r\n\r\n```\r\n*** NameError Exception: private constant ActiveModel::Attribute::FromDatabase referenced\r\n```\r\n\r\n### System configuration\r\n\r\n**Rails version**:\r\nv6.1.6.1\r\n\r\n**Ruby version**:\r\nv2.7.5","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45609/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45609/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45596","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45596/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45596/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45596/events","html_url":"https://github.com/rails/rails/issues/45596","id":1304247666,"node_id":"I_kwDNIULOTb09cg","number":45596,"title":"Setting `schema_dump` in database.yml does not change dump format","user":{"login":"leboshi","id":16550140,"node_id":"MDQ6VXNlcjE2NTUwMTQw","avatar_url":"https://avatars.githubusercontent.com/u/16550140?v=4","gravatar_id":"","url":"https://api.github.com/users/leboshi","html_url":"https://github.com/leboshi","followers_url":"https://api.github.com/users/leboshi/followers","following_url":"https://api.github.com/users/leboshi/following{/other_user}","gists_url":"https://api.github.com/users/leboshi/gists{/gist_id}","starred_url":"https://api.github.com/users/leboshi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leboshi/subscriptions","organizations_url":"https://api.github.com/users/leboshi/orgs","repos_url":"https://api.github.com/users/leboshi/repos","events_url":"https://api.github.com/users/leboshi/events{/privacy}","received_events_url":"https://api.github.com/users/leboshi/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-14T04:44:37Z","updated_at":"2022-07-14T14:34:25Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Originally brought up in #43173.  I opened PR #43240 to address it, but that was closed when it was decided #43530 did the same thing.  Unfortunately, I don't think any of us were really reading what the other was doing, because the two PRs actually each only addressed half the opened issue.\r\n\r\nPR incoming to fully address this and the second half of #43173!\r\n\r\n### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_schema_format_corresponds_with_schema_dump\r\n    Dir.mktmpdir do |dir|\r\n      ActiveRecord::Tasks::DatabaseTasks.stub(:db_dir, dir) do\r\n        old_configurations = ActiveRecord::Base.configurations\r\n        ActiveRecord::Base.configurations = {\r\n          \"development\" => {\r\n            \"primary\" => {\r\n              \"database\" => \"dev-db\",\r\n              \"schema_dump\" => \"primary_structure.sql\"\r\n            }\r\n          }\r\n        }\r\n\r\n        db_config = ActiveRecord::Base.configurations.configs_for(env_name: \"development\", name: \"primary\")\r\n        ActiveRecord::Tasks::DatabaseTasks.dump_schema(db_config)\r\n\r\n        dump_contents = File.read(File.join(dir, \"primary_structure.sql\"))\r\n        refute_match /ActiveRecord::Schema/, dump_contents\r\n        assert_match /CREATE TABLE/, dump_contents\r\n      ensure\r\n        ActiveRecord::Base.configurations = old_configurations\r\n        ActiveRecord::Base.clear_cache!\r\n      end\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nIf `schema_dump` is set to something like `primary_structure.sql`, I'd expect it to do a SQL structure dump rather than a Ruby schema dump.\r\n\r\n### Actual behavior\r\nThe filename in `schema_dump` has no bearing on the format of the dump Rails writes or expects to read.\r\n\r\n### System configuration\r\n**Rails version**: (main)\r\n\r\n**Ruby version**: 3.1.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45596/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45596/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45998","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45998/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45998/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45998/events","html_url":"https://github.com/rails/rails/issues/45998","id":1368868095,"node_id":"I_kwDNIULOUZdE_w","number":45998,"title":"CSRF getting different token","user":{"login":"Saleh-Salem","id":22606707,"node_id":"MDQ6VXNlcjIyNjA2NzA3","avatar_url":"https://avatars.githubusercontent.com/u/22606707?v=4","gravatar_id":"","url":"https://api.github.com/users/Saleh-Salem","html_url":"https://github.com/Saleh-Salem","followers_url":"https://api.github.com/users/Saleh-Salem/followers","following_url":"https://api.github.com/users/Saleh-Salem/following{/other_user}","gists_url":"https://api.github.com/users/Saleh-Salem/gists{/gist_id}","starred_url":"https://api.github.com/users/Saleh-Salem/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Saleh-Salem/subscriptions","organizations_url":"https://api.github.com/users/Saleh-Salem/orgs","repos_url":"https://api.github.com/users/Saleh-Salem/repos","events_url":"https://api.github.com/users/Saleh-Salem/events{/privacy}","received_events_url":"https://api.github.com/users/Saleh-Salem/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-11T08:08:17Z","updated_at":"2022-09-11T08:27:32Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When validating the CSRF token getting an exception in API\r\n \r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\nthe `session[:_csrf_token]` and  `request.x_csrf_token` is different and getting issue.\r\nwhen I need to skip the csrf, I add `verify_authenticity_token`, In this case, I don't need to skip it.\r\nI debug and found the issue in the method:\r\n\r\n```\r\n  def compare_with_global_token(token, session = nil) # :doc:\r\n    ActiveSupport::SecurityUtils.fixed_length_secure_compare(token, global_csrf_token(session))\r\n  end\r\n```\r\n\r\nwhat is `session[:_csrf_token]` and how can I implement it in API?\r\nIs there any missing from my side?\r\n### Steps to reproduce\r\n\r\n1. Add `protect_from_forgery with: :exception` .\r\n2. When logging in return token in response is generated by `form_authenticity_token`.\r\n3. When Trying to request any POST, PUT or DELETE API get an exception.\r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nReturn Response without exception.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\ngetting exception \r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\n### System configuration\r\n**Rails version**:\r\n6.0.3.5\r\n**Ruby version**:\r\n2.7.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45998/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45998/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45994","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45994/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45994/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45994/events","html_url":"https://github.com/rails/rails/issues/45994","id":1368555704,"node_id":"I_kwDNIULOUZKAuA","number":45994,"title":"LoadInterlockAwareMonitor deadlock when clearing cache (multiple databases, test)","user":{"login":"kuahyeow","id":16723,"node_id":"MDQ6VXNlcjE2NzIz","avatar_url":"https://avatars.githubusercontent.com/u/16723?v=4","gravatar_id":"","url":"https://api.github.com/users/kuahyeow","html_url":"https://github.com/kuahyeow","followers_url":"https://api.github.com/users/kuahyeow/followers","following_url":"https://api.github.com/users/kuahyeow/following{/other_user}","gists_url":"https://api.github.com/users/kuahyeow/gists{/gist_id}","starred_url":"https://api.github.com/users/kuahyeow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kuahyeow/subscriptions","organizations_url":"https://api.github.com/users/kuahyeow/orgs","repos_url":"https://api.github.com/users/kuahyeow/repos","events_url":"https://api.github.com/users/kuahyeow/events{/privacy}","received_events_url":"https://api.github.com/users/kuahyeow/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-10T08:52:46Z","updated_at":"2022-09-10T08:56:12Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"With multiple databases, we observe hangs within system tests.\r\n\r\nSee also https://gitlab.com/gitlab-org/gitlab/-/issues/371468 (GitLab is at Rails 6.1, Ruby 2.7.5)\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nHere's a minimal reproduction with Rails 7.0.3.1\r\n\r\n1. Checkout https://gitlab.com/tkuah/multi_database_system_test\r\n2. `bundle install`\r\n3. `bundle exec rails db:migrate`\r\n4. `bundle rails test test/system/home_pages_test.rb`\r\n\r\nThe conditions are:\r\n\r\n1. Multiple databases\r\n2. System test where there's an async request which overlaps with the main thread\r\n\r\n### Expected behavior\r\n\r\nIt does not hang, and the test completes\r\n\r\n### Actual behavior\r\n\r\nIt hangs. It looks like it's hanging when clearing query cache (see https://gitlab.com/gitlab-org/gitlab/-/issues/371468#note_1087203883, and https://gitlab.com/gitlab-org/gitlab/-/issues/371468#note_1088779499)\r\n\r\nA backtrace dump taken while the test is hanging [sigdump-68442.log](https://github.com/rails/rails/files/9539878/sigdump-68442.log)\r\n\r\nMy suspicion is that:\r\n\r\n1. `lock_thread` is true for system tests\r\n3. Therefore both the main thread, and the Puma thread attempt to clear query cache for the same set of connections\r\n\r\nSo we have two connections:\r\n\r\n1. Puma thread takes a `LoadInterlockAwareMonitor` lock for primary connection via `Post.transaction`\r\n2. Main thread takes a `LoadInterlockAwareMonitor` lock for animal connection via implicit transaction that `create` does\r\n3. Due to 2, main thread attempts to clear query cache for primary connection. **Waits for 1's lock**\r\n4. Due to 1, and because of `lock_thread`, puma thread clears query cache for primary connection. It takes a `LoadInterlockAwareMonitor` lock for primary connection which succeds\r\n5. Due to 1, puma thread now attempts clears query cache for animal connection. **Waits for 2's lock**\r\n\r\nSee [`clear_query_caches_for_current_thread` method](https://github.com/rails/rails/blob/e24fbf71fa0a10f63346b9b42604451958740844/activerecord/lib/active_record/connection_handling.rb#L244-L248)\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: ruby 2.7.5p203 (2021-11-24 revision f69aeb8314) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45994/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45994/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45984","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45984/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45984/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45984/events","html_url":"https://github.com/rails/rails/issues/45984","id":1368144421,"node_id":"I_kwDNIULOUYw6JQ","number":45984,"title":"Cannot Eager Load has_many :through Relationships with custom scope","user":{"login":"dcorrigan","id":2445528,"node_id":"MDQ6VXNlcjI0NDU1Mjg=","avatar_url":"https://avatars.githubusercontent.com/u/2445528?v=4","gravatar_id":"","url":"https://api.github.com/users/dcorrigan","html_url":"https://github.com/dcorrigan","followers_url":"https://api.github.com/users/dcorrigan/followers","following_url":"https://api.github.com/users/dcorrigan/following{/other_user}","gists_url":"https://api.github.com/users/dcorrigan/gists{/gist_id}","starred_url":"https://api.github.com/users/dcorrigan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dcorrigan/subscriptions","organizations_url":"https://api.github.com/users/dcorrigan/orgs","repos_url":"https://api.github.com/users/dcorrigan/repos","events_url":"https://api.github.com/users/dcorrigan/events{/privacy}","received_events_url":"https://api.github.com/users/dcorrigan/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-09T17:47:35Z","updated_at":"2022-09-09T17:47:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nThis seems like it's the same as #28324, but I'm still seeing the issue in Rails 7. \r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n  end\r\n\r\n  create_table :images, force: true do |t|\r\n    t.string :title\r\n    t.integer :post_id\r\n  end\r\n\r\n  create_table :captions, force: true do |t|\r\n    t.integer :image_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :images\r\n  has_many :captions, lambda { order('images.title DESC') }, through: :images\r\nend\r\n\r\nclass Image < ActiveRecord::Base\r\n  belongs_to :post\r\n  has_one :caption\r\nend\r\n\r\nclass Caption < ActiveRecord::Base\r\n  belongs_to :image\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_preload_has_many_through_association_with_scope\r\n    post = Post.create!\r\n    image = Image.create!\r\n    image.caption = Caption.create!\r\n    post.images << image\r\n    post.save!\r\n\r\n    # Access through the model works\r\n    assert_includes post.captions, Caption.first\r\n\r\n    # Query with association preloaded does not.\r\n    # When evaluated, it will apply the scope without the relevant JOIN table:\r\n    # SELECT \"captions\".* FROM \"captions\" WHERE \"captions\".\"image_id\" = ? ORDER BY images.title DESC\r\n    preloaded = Post.where(id: post.id).includes(:captions)\r\n\r\n    assert_includes preloaded.first.captions, Caption.first\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe test passes and we're able to eager load has_many :through associations with custom scopes in this way.\r\n\r\nI realize this can be fixed by adding a `references(:images)` to the query, but it seems reasonable to expect AR to infer that that the join is necessary here.\r\n\r\n### Actual behavior\r\n\r\nTest fails with an error: `ActiveRecord::StatementInvalid: SQLite3::SQLException: no such column: images.title`\r\n\r\n### System configuration\r\n**Rails version**: 7.0 \r\n\r\n**Ruby version**: 3.1.2p20\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45984/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45967","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45967/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45967/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45967/events","html_url":"https://github.com/rails/rails/issues/45967","id":1366038829,"node_id":"I_kwDNIULOUWwZLQ","number":45967,"title":"Inconsistent update of timestamps while updating associations with *_ids=","user":{"login":"matthee","id":547653,"node_id":"MDQ6VXNlcjU0NzY1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/547653?v=4","gravatar_id":"","url":"https://api.github.com/users/matthee","html_url":"https://github.com/matthee","followers_url":"https://api.github.com/users/matthee/followers","following_url":"https://api.github.com/users/matthee/following{/other_user}","gists_url":"https://api.github.com/users/matthee/gists{/gist_id}","starred_url":"https://api.github.com/users/matthee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matthee/subscriptions","organizations_url":"https://api.github.com/users/matthee/orgs","repos_url":"https://api.github.com/users/matthee/repos","events_url":"https://api.github.com/users/matthee/events{/privacy}","received_events_url":"https://api.github.com/users/matthee/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-08T10:51:09Z","updated_at":"2022-09-09T03:10:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"ActiveRecord inconsistently updates the `updated_at` column when changing `has_many through:` associations.\r\n\r\n### Steps to reproduce\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"activesupport\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"active_support/testing/time_helpers\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.timestamps\r\n  end\r\n  \r\n  create_table :tags, force: true do |t|\r\n  end\r\n\r\n  create_table :taggings, force: true do |t|\r\n    t.integer :post_id\r\n    t.integer :tag_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :taggings, dependent: :destroy\r\n  \r\n  has_many :tags, through: :taggings\r\nend\r\n\r\nclass Tagging < ActiveRecord::Base\r\n  belongs_to :post, touch: true\r\n  belongs_to :tag\r\nend\r\n\r\nclass Tag < ActiveRecord::Base\r\n  has_many :taggings\r\n  has_many :posts, through: :taggings\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  include ActiveSupport::Testing::TimeHelpers\r\n  \r\n  def test_updated_at_is_updated_when_setting_has_many_through_association\r\n    freeze_time\r\n        \r\n    tag_1 = Tag.create!\r\n    tag_2 = Tag.create!\r\n      \r\n    post = Post.create!\r\n    \r\n    travel_to(now = 1.hour.from_now)\r\n    \r\n    # Adding tags updates post.updated_at\r\n    post.update(tag_ids: [tag_1.id, tag_2.id])\r\n    assert_in_delta now, post.updated_at, 1.second, \"post#updated_at was not updated when adding tags\"\r\n    \r\n    # Removing tags does not update post.updated_at :(\r\n    travel_to(now = 2.hours.from_now)\r\n    post.update(tag_ids: [tag_1.id])\r\n    assert_in_delta now, post.updated_at, 1.second, \"post#updated_at was not updated when removing tags\"\r\n  end\r\n  \r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nIn the example above, both `.update` calls should update the `updated_at` column of the post record. (when adding and removing records)\r\n\r\n### Actual behavior\r\n\r\nWhen deleting a record, the `updated_at` timestamp is not updated.\r\n\r\n### System configuration\r\n**Rails version**:\r\n7.0.3.1\r\n**Ruby version**:\r\n3.0.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45967/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45967/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45959","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45959/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45959/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45959/events","html_url":"https://github.com/rails/rails/issues/45959","id":1364232810,"node_id":"I_kwDNIULOUVCKag","number":45959,"title":"JSON field not saving data with symbol : and it's saving with arrow =>","user":{"login":"sajjadmurtaza","id":8552702,"node_id":"MDQ6VXNlcjg1NTI3MDI=","avatar_url":"https://avatars.githubusercontent.com/u/8552702?v=4","gravatar_id":"","url":"https://api.github.com/users/sajjadmurtaza","html_url":"https://github.com/sajjadmurtaza","followers_url":"https://api.github.com/users/sajjadmurtaza/followers","following_url":"https://api.github.com/users/sajjadmurtaza/following{/other_user}","gists_url":"https://api.github.com/users/sajjadmurtaza/gists{/gist_id}","starred_url":"https://api.github.com/users/sajjadmurtaza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sajjadmurtaza/subscriptions","organizations_url":"https://api.github.com/users/sajjadmurtaza/orgs","repos_url":"https://api.github.com/users/sajjadmurtaza/repos","events_url":"https://api.github.com/users/sajjadmurtaza/events{/privacy}","received_events_url":"https://api.github.com/users/sajjadmurtaza/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":1071962662,"node_id":"MDU6TGFiZWwxMDcxOTYyNjYy","url":"https://api.github.com/repos/rails/rails/labels/more-information-needed","name":"more-information-needed","color":"bfdadc","default":false,"description":"When reporter needs to provide more information"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-09-07T07:40:12Z","updated_at":"2022-09-08T07:23:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nI have JSON field in my database `t.json \"theme\"`. When I try to save the field hash with : , it's overridden before save\r\ne.g.\r\n`object.theme = { color: 'red' }` it always change to `{ color => 'red' }`\r\n\r\ni also tried with jsonb and default value with empty hash {} but still having the same issue.\r\n\r\n\r\nI want to save the JSON data hash with symbol keys `{ color: 'red' }`\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.0\r\n\r\n**Ruby version**: 2.7.1\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45959/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45959/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45949","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45949/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45949/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45949/events","html_url":"https://github.com/rails/rails/issues/45949","id":1362899537,"node_id":"I_kwDNIULOUTwyUQ","number":45949,"title":"ActionText::Attachable#as_json override is breaking ActiveStorage::Blob#as_json when blob is not persisted","user":{"login":"balbesina","id":7312369,"node_id":"MDQ6VXNlcjczMTIzNjk=","avatar_url":"https://avatars.githubusercontent.com/u/7312369?v=4","gravatar_id":"","url":"https://api.github.com/users/balbesina","html_url":"https://github.com/balbesina","followers_url":"https://api.github.com/users/balbesina/followers","following_url":"https://api.github.com/users/balbesina/following{/other_user}","gists_url":"https://api.github.com/users/balbesina/gists{/gist_id}","starred_url":"https://api.github.com/users/balbesina/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/balbesina/subscriptions","organizations_url":"https://api.github.com/users/balbesina/orgs","repos_url":"https://api.github.com/users/balbesina/repos","events_url":"https://api.github.com/users/balbesina/events{/privacy}","received_events_url":"https://api.github.com/users/balbesina/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-06T08:26:39Z","updated_at":"2022-09-06T08:26:39Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nfrom rails console:\r\n```ruby\r\nActiveStorage::Blob.build_after_unfurling(io: StringIO.new('asd'), filename: 'asd.txt').as_json\r\n```\r\n\r\n[Reproduction script](https://gist.github.com/balbesina/30fbdafbfee4b71b06209d9e950f4128)\r\n\r\n### Expected behavior\r\nActiveStorage::Blob#as_json returns a Hash\r\n\r\n### Actual behavior\r\nActiveStorage::Blob#as_json raises exception\r\n```\r\n/Users/dhh/.rvm/gems/ruby-3.1.2/gems/globalid-1.0.0/lib/global_id/uri/gid.rb:167:in `validate_model_id': \r\nUnable to create a Global ID for ActiveStorage::Blob without a model id. (URI::GID::MissingModelIdError)\r\n```\r\n\r\n### System configuration\r\n**Rails version**: Rails 7.0.3.1\r\n**Ruby version**: ruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45949/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45949/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45939","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45939/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45939/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45939/events","html_url":"https://github.com/rails/rails/issues/45939","id":1360876688,"node_id":"I_kwDNIULOUR1UkA","number":45939,"title":"Validations aren't inherited from base model if child is called before validation declaration","user":{"login":"Exterm1nate","id":48535087,"node_id":"MDQ6VXNlcjQ4NTM1MDg3","avatar_url":"https://avatars.githubusercontent.com/u/48535087?v=4","gravatar_id":"","url":"https://api.github.com/users/Exterm1nate","html_url":"https://github.com/Exterm1nate","followers_url":"https://api.github.com/users/Exterm1nate/followers","following_url":"https://api.github.com/users/Exterm1nate/following{/other_user}","gists_url":"https://api.github.com/users/Exterm1nate/gists{/gist_id}","starred_url":"https://api.github.com/users/Exterm1nate/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Exterm1nate/subscriptions","organizations_url":"https://api.github.com/users/Exterm1nate/orgs","repos_url":"https://api.github.com/users/Exterm1nate/repos","events_url":"https://api.github.com/users/Exterm1nate/events{/privacy}","received_events_url":"https://api.github.com/users/Exterm1nate/received_events","type":"User","site_admin":false},"labels":[{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-09-03T14:46:42Z","updated_at":"2022-09-08T07:26:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nLet's create some STI models. Base `Vehicle` and two childs `Car` and `Motorcycle`.\r\n\r\n```ruby\r\n# models/vehicle.rb\r\nclass Vehicle < ApplicationRecord\r\n  TYPES = [Car, Motorcycle].freeze\r\n\r\n  validates :color, uniqueness: { scope: :model }\r\nend\r\n\r\n# models/car.rb\r\nclass Car < Vehicle\r\nend\r\n\r\n# models/motorcycle.rb\r\nclass Motorcycle < Vehicle\r\nend\r\n```\r\n\r\nAfter that we want to use `#validators_on` method to make sure the validation is present.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\nCar.validators_on(:color)\r\nMotorcycle.validators_on(:color)\r\n```\r\n\r\n### Expected behavior\r\n\r\nAll models must contain the validation.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nMotorcycle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\n```\r\n\r\n### Actual behavior\r\n\r\nBut for childs this method returns nothing.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> []\r\nMotorcycle.validators_on(:color)\r\n#=> []\r\n```\r\n\r\n### Notes\r\n\r\nIf we remove the `TYPES` constant (or just child classes calls from it) `validators_on` works as expected. Let's change original code a little bit:\r\n\r\n```ruby\r\n# models/vehicle.rb\r\nclass Vehicle < ApplicationRecord\r\n  TYPES = [Car].freeze # Motorcycle was removed from here!\r\n\r\n  validates :color, uniqueness: { scope: :model }\r\nend\r\n```\r\n\r\nAnd after that test again.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> []\r\nMotorcycle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\n```\r\n\r\n`Motorcycle` validation was returned correctly this time.\r\n\r\nIt seems to be a load error. `Car` was called before the `Vehicle`'s validation declaration, so it doesn't take this validation into account. It may also depend on loading order.\r\n\r\nNotice that validation itself is working well in all models.\r\n\r\n```ruby\r\nCar.create!(color: \"black\", model: \"Boomer\")\r\nCar.create!(color: \"black\", model: \"Boomer\") # raises ActiveRecord::RecordInvalid\r\n\r\nMotorcycle.create!(color: \"red\", model: \"Yamaha\")\r\nMotorcycle.create!(color: \"red\", model: \"Yamaha\") # raises ActiveRecord::RecordInvalid\r\n```\r\n\r\nExample project: https://github.com/Exterm1nate/rails-validation-issue\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3\r\n\r\n**Ruby version**: 3.1.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45939/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45939/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45937","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45937/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45937/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45937/events","html_url":"https://github.com/rails/rails/issues/45937","id":1360779604,"node_id":"I_kwDNIULOURvZVA","number":45937,"title":"Add strict table mode (by default) to sqlite adapter","user":{"login":"jrz","id":149668,"node_id":"MDQ6VXNlcjE0OTY2OA==","avatar_url":"https://avatars.githubusercontent.com/u/149668?v=4","gravatar_id":"","url":"https://api.github.com/users/jrz","html_url":"https://github.com/jrz","followers_url":"https://api.github.com/users/jrz/followers","following_url":"https://api.github.com/users/jrz/following{/other_user}","gists_url":"https://api.github.com/users/jrz/gists{/gist_id}","starred_url":"https://api.github.com/users/jrz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jrz/subscriptions","organizations_url":"https://api.github.com/users/jrz/orgs","repos_url":"https://api.github.com/users/jrz/repos","events_url":"https://api.github.com/users/jrz/events{/privacy}","received_events_url":"https://api.github.com/users/jrz/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-03T07:01:02Z","updated_at":"2022-09-08T07:30:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"SQLite supports 'strict tables' since 3.37.1 https://sqlite.org/stricttables.html\r\n\r\nThis forces a datatype to be specified when creating a table. This is the preferred method in any application created by developers. \r\n\r\nUnspecified/ANY datatypes are useful for quick tryouts as an enduser, similar to excel. But it's counterproductive when creating an application.\r\n\r\nIf this will become a configurable setting, the default should be set to strict.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45937/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45937/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45920","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45920/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45920/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45920/events","html_url":"https://github.com/rails/rails/issues/45920","id":1358179995,"node_id":"I_kwDNIULOUPQumw","number":45920,"title":"Replace has_one through create_association might create duplicated rows","user":{"login":"lazaronixon","id":2651240,"node_id":"MDQ6VXNlcjI2NTEyNDA=","avatar_url":"https://avatars.githubusercontent.com/u/2651240?v=4","gravatar_id":"","url":"https://api.github.com/users/lazaronixon","html_url":"https://github.com/lazaronixon","followers_url":"https://api.github.com/users/lazaronixon/followers","following_url":"https://api.github.com/users/lazaronixon/following{/other_user}","gists_url":"https://api.github.com/users/lazaronixon/gists{/gist_id}","starred_url":"https://api.github.com/users/lazaronixon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lazaronixon/subscriptions","organizations_url":"https://api.github.com/users/lazaronixon/orgs","repos_url":"https://api.github.com/users/lazaronixon/repos","events_url":"https://api.github.com/users/lazaronixon/events{/privacy}","received_events_url":"https://api.github.com/users/lazaronixon/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-09-01T03:05:07Z","updated_at":"2022-09-01T23:03:40Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# Ensure backward compatibility with minitest 4.\r\nMinitest::Test = MiniTest::Unit::TestCase unless defined?(Minitest::Test)\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts do |t|\r\n  end\r\n\r\n  create_table :comments do |t|\r\n    t.references :post\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_one :comment, dependent: :destroy\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  validates_presence_of :post_id\r\n  belongs_to :post\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    post = Post.create!\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    sleep 5.seconds\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n```\r\n# transaction begin\r\nselect previous_comment for update\r\n\r\ninsert new_comment\r\n\r\ndelete previous_comment\r\n# transaction commit\r\n```\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n```\r\n# transaction begin\r\ninsert new_comment\r\n# transaction commit\r\n\r\n# transaction begin\r\ndelete previous_comment\r\n# transaction commit\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45920/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45920/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45906","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45906/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45906/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45906/events","html_url":"https://github.com/rails/rails/issues/45906","id":1355732552,"node_id":"I_kwDNIULOUM7WSA","number":45906,"title":"High object allocation count from `ActiveRecord::ConnectionAdapters::PoolManager#pool_configs `","user":{"login":"amarchenkoshopify","id":101111422,"node_id":"U_kgDOBgbWfg","avatar_url":"https://avatars.githubusercontent.com/u/101111422?v=4","gravatar_id":"","url":"https://api.github.com/users/amarchenkoshopify","html_url":"https://github.com/amarchenkoshopify","followers_url":"https://api.github.com/users/amarchenkoshopify/followers","following_url":"https://api.github.com/users/amarchenkoshopify/following{/other_user}","gists_url":"https://api.github.com/users/amarchenkoshopify/gists{/gist_id}","starred_url":"https://api.github.com/users/amarchenkoshopify/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amarchenkoshopify/subscriptions","organizations_url":"https://api.github.com/users/amarchenkoshopify/orgs","repos_url":"https://api.github.com/users/amarchenkoshopify/repos","events_url":"https://api.github.com/users/amarchenkoshopify/events{/privacy}","received_events_url":"https://api.github.com/users/amarchenkoshopify/received_events","type":"User","site_admin":false},"labels":[{"id":107186,"node_id":"MDU6TGFiZWwxMDcxODY=","url":"https://api.github.com/repos/rails/rails/labels/regression","name":"regression","color":"e10c02","default":false,"description":null},{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"eileencodes","id":1080678,"node_id":"MDQ6VXNlcjEwODA2Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/1080678?v=4","gravatar_id":"","url":"https://api.github.com/users/eileencodes","html_url":"https://github.com/eileencodes","followers_url":"https://api.github.com/users/eileencodes/followers","following_url":"https://api.github.com/users/eileencodes/following{/other_user}","gists_url":"https://api.github.com/users/eileencodes/gists{/gist_id}","starred_url":"https://api.github.com/users/eileencodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eileencodes/subscriptions","organizations_url":"https://api.github.com/users/eileencodes/orgs","repos_url":"https://api.github.com/users/eileencodes/repos","events_url":"https://api.github.com/users/eileencodes/events{/privacy}","received_events_url":"https://api.github.com/users/eileencodes/received_events","type":"User","site_admin":false},"assignees":[{"login":"eileencodes","id":1080678,"node_id":"MDQ6VXNlcjEwODA2Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/1080678?v=4","gravatar_id":"","url":"https://api.github.com/users/eileencodes","html_url":"https://github.com/eileencodes","followers_url":"https://api.github.com/users/eileencodes/followers","following_url":"https://api.github.com/users/eileencodes/following{/other_user}","gists_url":"https://api.github.com/users/eileencodes/gists{/gist_id}","starred_url":"https://api.github.com/users/eileencodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eileencodes/subscriptions","organizations_url":"https://api.github.com/users/eileencodes/orgs","repos_url":"https://api.github.com/users/eileencodes/repos","events_url":"https://api.github.com/users/eileencodes/events{/privacy}","received_events_url":"https://api.github.com/users/eileencodes/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/rails/rails/milestones/81","html_url":"https://github.com/rails/rails/milestone/81","labels_url":"https://api.github.com/repos/rails/rails/milestones/81/labels","id":7591006,"node_id":"MI_kwDNIULOAHPUXg","number":81,"title":"7.0.4","description":"","creator":{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":3,"state":"open","created_at":"2022-01-20T01:51:07Z","updated_at":"2022-08-30T13:21:37Z","due_on":null,"closed_at":null},"comments":2,"created_at":"2022-08-30T12:58:42Z","updated_at":"2022-08-31T12:37:42Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWhile working on memory efficiency investigation I noticed that a very big bunch of object allocations comes from a single method `ActiveRecord::ConnectionAdapters::PoolManager#pool_configs`:\r\n\r\n```ruby\r\n      def pool_configs(role = nil)\r\n        if role\r\n          @role_to_shard_mapping[role].values\r\n        else\r\n          @role_to_shard_mapping.flat_map { |_, shard_map| shard_map.values }\r\n        end\r\n      end \r\n```\r\n\r\nThis method is called on every activerecord operation and does not cache its result: could we think about a way of caching its result?\r\n\r\ncc @eileencodes \r\n\r\n### Expected behavior\r\n\r\n`#pool_configs` allocates configs once\r\n\r\n### Actual behavior\r\n\r\n`#pool_configs` allocates configs every time it is executed\r\n\r\n### System configuration\r\n**Rails version**: main branch\r\n\r\n**Ruby version**: 3.1\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45906/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45901","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45901/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45901/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45901/events","html_url":"https://github.com/rails/rails/issues/45901","id":1354555667,"node_id":"I_kwDNIULOULzhEw","number":45901,"title":"bin/rails dbconsole should include_password by default","user":{"login":"wpeterson","id":178135,"node_id":"MDQ6VXNlcjE3ODEzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/178135?v=4","gravatar_id":"","url":"https://api.github.com/users/wpeterson","html_url":"https://github.com/wpeterson","followers_url":"https://api.github.com/users/wpeterson/followers","following_url":"https://api.github.com/users/wpeterson/following{/other_user}","gists_url":"https://api.github.com/users/wpeterson/gists{/gist_id}","starred_url":"https://api.github.com/users/wpeterson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wpeterson/subscriptions","organizations_url":"https://api.github.com/users/wpeterson/orgs","repos_url":"https://api.github.com/users/wpeterson/repos","events_url":"https://api.github.com/users/wpeterson/events{/privacy}","received_events_url":"https://api.github.com/users/wpeterson/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-29T16:19:45Z","updated_at":"2022-08-30T00:17:43Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n1. Configure a Rails `config/database.yml` with a `password` required to connect\r\n2. Run `rails dbconsole`\r\n3. See prompt for database password, despite password being configured/available\r\n4. Run `rails dbconsole -p`\r\n5. See dbconsole properly load and use credentials to connect to database for DB console session\r\n\r\n### Expected behavior\r\nWhenever a Rails app has credentials like a password configured for a database, the database console session should use those credentials vs. prompting the user to re-enter a password interactively.  When credentials are not configured and a password is required, we should prompt then.\r\n\r\nThis behavior is implemented since early Rails versions but is disabled by default.  I propose we enable the proper password behavior by default.\r\n\r\n### Actual behavior\r\n`bin/rails dbconsole` always prompts for a password, even when one is configured for the app.\r\n\r\n### System configuration\r\n**Rails version**: All (6.x, 7.x, head)\r\n\r\n**Ruby version**: All \r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45901/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45901/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45899","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45899/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45899/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45899/events","html_url":"https://github.com/rails/rails/issues/45899","id":1353676820,"node_id":"I_kwDNIULOUK94FA","number":45899,"title":"Active Job unit tests fail using que 2.2.0","user":{"login":"yahonda","id":73684,"node_id":"MDQ6VXNlcjczNjg0","avatar_url":"https://avatars.githubusercontent.com/u/73684?v=4","gravatar_id":"","url":"https://api.github.com/users/yahonda","html_url":"https://github.com/yahonda","followers_url":"https://api.github.com/users/yahonda/followers","following_url":"https://api.github.com/users/yahonda/following{/other_user}","gists_url":"https://api.github.com/users/yahonda/gists{/gist_id}","starred_url":"https://api.github.com/users/yahonda/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yahonda/subscriptions","organizations_url":"https://api.github.com/users/yahonda/orgs","repos_url":"https://api.github.com/users/yahonda/repos","events_url":"https://api.github.com/users/yahonda/events{/privacy}","received_events_url":"https://api.github.com/users/yahonda/received_events","type":"User","site_admin":false},"labels":[{"id":123812746,"node_id":"MDU6TGFiZWwxMjM4MTI3NDY=","url":"https://api.github.com/repos/rails/rails/labels/activejob","name":"activejob","color":"5319e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-29T04:24:06Z","updated_at":"2022-09-09T15:33:02Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"### Steps to reproduce\r\nActive Job CI has been failing since que 2.2.0 is installed. https://buildkite.com/rails/rails/builds/89068#0182e6b9-7c84-4b85-a651-8d640f5eb076\r\n\r\n```ruby\r\ngit clone https://github.com/rails/rails\r\ncd rails/activejob\r\nbundle update que\r\nAJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\n```\r\n\r\nAlthough there are 3 failures and 75 errors. This script just runs a single test because it looks the root cause is the same.\r\n\r\n\r\n### Expected behavior\r\nIt should pass.\r\n\r\n### Actual behavior\r\nIt raises `ArgumentError: wrong number of arguments (given 2, expected 1)`.\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 62302\r\n\r\n# Running:\r\n\r\nE\r\n\r\nError:\r\nQueuingTest#test_run_queued_job:\r\nArgumentError: wrong number of arguments (given 2, expected 1)\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:78:in `run'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job_methods.rb:51:in `_run'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:248:in `block (2 levels) in _run_attrs'\r\n    (eval):9:in `run_job_middleware'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:247:in `block in _run_attrs'\r\n    <internal:kernel>:90:in `tap'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:246:in `_run_attrs'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:223:in `run'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/support/que/inline.rb:15:in `enqueue'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:66:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:27:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:67:in `block in enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:118:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:28:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:27:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:9:in `block (2 levels) in <module:Instrumentation>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:27:in `tag_logger'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:14:in `block (2 levels) in <module:Logging>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:138:in `run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:63:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:30:in `perform_later'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/cases/queuing_test.rb:14:in `block in <class:QueuingTest>'\r\n\r\n\r\nbin/test test/cases/queuing_test.rb:13\r\n\r\n\r\n\r\nFinished in 0.008930s, 111.9768 runs/s, 0.0000 assertions/s.\r\n1 runs, 0 assertions, 0 failures, 1 errors, 0 skips\r\n$\r\n```\r\n\r\n### Additional information\r\n* `require_job_options_kwarg?` always returns `false` because `JobWrapper.method(:enqueue).parameters` does not have any `[:key, :job_options]` \r\nwhere it looks expected to return `true`.\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 32774\r\n\r\n# Running:\r\n\r\n[46, 55] in ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n    46|       end\r\n    47|\r\n    48|       private\r\n    49|         def require_job_options_kwarg?\r\n    50|           require 'debug'\r\n=>  51|           binding.break\r\n    52|           @require_job_options_kwarg ||=\r\n    53|             JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }\r\n    54|         end\r\n    55|\r\n=>#0\tActiveJob::QueueAdapters::QueAdapter#require_job_options_kwarg? at ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:51\r\n  #1\tActiveJob::QueueAdapters::QueAdapter#enqueue(job=#<HelloJob:0x00007fc861807740 @arguments...) at ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:24\r\n  # and 40 frames (use `bt' command for all frames)\r\n(rdbg) JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }    # ruby\r\nfalse\r\n(rdbg) JobWrapper.method(:enqueue).parameters    # ruby\r\n[[:req, :args], [:keyreq, :priority], [:keyreq, :queue], [:key, :run_at]]\r\n(rdbg) quit    # command\r\nReally quit? [Y/n] Y\r\n```\r\n\r\n* By changing `require_job_options_kwarg?` always returns `true`, it raises `ArgumentError: missing keywords: :priority, :queue`\r\n\r\n```ruby\r\n$ git diff\r\ndiff --git a/activejob/lib/active_job/queue_adapters/que_adapter.rb b/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\nindex 41b3633a07..54e8cbc39b 100644\r\n--- a/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n+++ b/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n@@ -47,6 +47,7 @@ def enqueue_at(job, timestamp) # :nodoc:\r\n\r\n       private\r\n         def require_job_options_kwarg?\r\n+          return true\r\n           @require_job_options_kwarg ||=\r\n             JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }\r\n         end\r\n$\r\n```\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 21508\r\n\r\n# Running:\r\n\r\nE\r\n\r\nError:\r\nQueuingTest#test_run_queued_job:\r\nArgumentError: missing keywords: :priority, :queue\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:65:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:25:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:67:in `block in enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:118:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:28:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:27:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:9:in `block (2 levels) in <module:Instrumentation>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:27:in `tag_logger'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:14:in `block (2 levels) in <module:Logging>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:138:in `run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:63:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:30:in `perform_later'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/cases/queuing_test.rb:14:in `block in <class:QueuingTest>'\r\n\r\n\r\nbin/test test/cases/queuing_test.rb:13\r\n\r\n\r\n\r\nFinished in 0.008724s, 114.6312 runs/s, 0.0000 assertions/s.\r\n1 runs, 0 assertions, 0 failures, 1 errors, 0 skips\r\n$\r\n```\r\n\r\n\r\n### System configuration\r\n**Rails version**: main branch\r\n\r\n**Ruby version**: $ ruby -v\r\nruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [x86_64-linux]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45899/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45893","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45893/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45893/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45893/events","html_url":"https://github.com/rails/rails/issues/45893","id":1352793907,"node_id":"I_kwDNIULOUKH_Mw","number":45893,"title":"ActiveRecord: HMT with conditions does not update the in-memory collection when pushing new objects","user":{"login":"joanniclaborde","id":411925,"node_id":"MDQ6VXNlcjQxMTkyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/411925?v=4","gravatar_id":"","url":"https://api.github.com/users/joanniclaborde","html_url":"https://github.com/joanniclaborde","followers_url":"https://api.github.com/users/joanniclaborde/followers","following_url":"https://api.github.com/users/joanniclaborde/following{/other_user}","gists_url":"https://api.github.com/users/joanniclaborde/gists{/gist_id}","starred_url":"https://api.github.com/users/joanniclaborde/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joanniclaborde/subscriptions","organizations_url":"https://api.github.com/users/joanniclaborde/orgs","repos_url":"https://api.github.com/users/joanniclaborde/repos","events_url":"https://api.github.com/users/joanniclaborde/events{/privacy}","received_events_url":"https://api.github.com/users/joanniclaborde/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-26T22:40:12Z","updated_at":"2022-08-30T15:33:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi! When using a `has_many :a, through: :b` relation, and the `:b` relation has a condition, adding new objects doesn't update the in-memory collection properly (stops after the first object).\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :packages, force: true do |t|\r\n  end\r\n\r\n  create_table :package_items, force: true do |t|\r\n    t.integer :package_id\r\n    t.integer :item_id\r\n  end\r\n\r\n  create_table :items, force: true do |t|\r\n    t.boolean \"deleted\", default: false\r\n  end\r\nend\r\n\r\nclass Package < ActiveRecord::Base\r\n  has_many :package_items, ->{ where(item_id: Item.active.pluck(:id)) }\r\n  has_many :items, through: :package_items\r\nend\r\n\r\nclass PackageItem < ActiveRecord::Base\r\n  belongs_to :package\r\n  belongs_to :item\r\nend\r\n\r\nclass Item < ActiveRecord::Base\r\n  has_many :package_items\r\n  has_many :packages, through: :package_items\r\n\r\n  scope :active, -> { where(deleted: false) }\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    package = Package.create!\r\n    package.items << Item.create!\r\n    package.items << Item.create!\r\n    package.items << Item.create!\r\n\r\n    # This should be [3, 3, 3] but we get [3, 1, 3]\r\n    assert_equal [3, 3, 3], [Item.count, package.items.count, package.reload.items.count]\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n`package.items.count` is equal to 3.\r\n\r\n### Actual behavior\r\n`package.items.count` is equal to 1, even though all the items and relations are created properly (see assertion).\r\n\r\n### System configuration\r\n**Rails version**: tested on `7.1.0.alpha` and `6.1.6.1`.\r\n\r\n**Ruby version**: tested on `2.7.5`.\r\n\r\n### Workaround\r\nI was able to fix this issue by changing the weird condition to a proper scope:\r\n\r\n```ruby\r\nclass Package < ActiveRecord::Base\r\n  has_many :package_items, ->{ includes(:item).merge(Item.active) }\r\n  has_many :items, through: :package_items\r\nend\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45893/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45893/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45880","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45880/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45880/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45880/events","html_url":"https://github.com/rails/rails/issues/45880","id":1349546108,"node_id":"I_kwDNIULOUHBwfA","number":45880,"title":"Google search links to old API docs","user":{"login":"abraham","id":3341,"node_id":"MDQ6VXNlcjMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/3341?v=4","gravatar_id":"","url":"https://api.github.com/users/abraham","html_url":"https://github.com/abraham","followers_url":"https://api.github.com/users/abraham/followers","following_url":"https://api.github.com/users/abraham/following{/other_user}","gists_url":"https://api.github.com/users/abraham/gists{/gist_id}","starred_url":"https://api.github.com/users/abraham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abraham/subscriptions","organizations_url":"https://api.github.com/users/abraham/orgs","repos_url":"https://api.github.com/users/abraham/repos","events_url":"https://api.github.com/users/abraham/events{/privacy}","received_events_url":"https://api.github.com/users/abraham/received_events","type":"User","site_admin":true},"labels":[{"id":150377,"node_id":"MDU6TGFiZWwxNTAzNzc=","url":"https://api.github.com/repos/rails/rails/labels/docs","name":"docs","color":"02d7e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-24T14:33:55Z","updated_at":"2022-08-25T23:48:01Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n1. Search Google for a Rails API https://www.google.com/search?q=rails+update_all\r\n2. Follow link for \"ActiveRecord::Relation - Rails API\"\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n\r\nFind documentation for the latest version of Rails. Currently `7.0.3.1`.\r\n\r\n`https://api.rubyonrails.org/classes/ActiveRecord/Relation.html`\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n\r\nFind documentation for the the very old version of `3.2.3`.\r\n\r\n`https://api.rubyonrails.org/v3.2.3/classes/ActiveRecord/Relation.html`\r\n\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45880/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45880/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45832","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45832/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45832/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45832/events","html_url":"https://github.com/rails/rails/issues/45832","id":1339487378,"node_id":"I_kwDNIULOT9b0kg","number":45832,"title":"MySQL 8.0 VARBINARY default value is hexadecimal","user":{"login":"HParker","id":4482399,"node_id":"MDQ6VXNlcjQ0ODIzOTk=","avatar_url":"https://avatars.githubusercontent.com/u/4482399?v=4","gravatar_id":"","url":"https://api.github.com/users/HParker","html_url":"https://github.com/HParker","followers_url":"https://api.github.com/users/HParker/followers","following_url":"https://api.github.com/users/HParker/following{/other_user}","gists_url":"https://api.github.com/users/HParker/gists{/gist_id}","starred_url":"https://api.github.com/users/HParker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HParker/subscriptions","organizations_url":"https://api.github.com/users/HParker/orgs","repos_url":"https://api.github.com/users/HParker/repos","events_url":"https://api.github.com/users/HParker/events{/privacy}","received_events_url":"https://api.github.com/users/HParker/received_events","type":"User","site_admin":true},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":309390193,"node_id":"MDU6TGFiZWwzMDkzOTAxOTM=","url":"https://api.github.com/repos/rails/rails/labels/MySQL","name":"MySQL","color":"fef2c0","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-08-15T20:42:09Z","updated_at":"2022-08-16T10:23:16Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Default values on VARBINARY columns changed behavior between MySQL 5.7 and 8.0\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"mysql2\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"mysql2\", database: \"adam_test\", prepared_statements: false, host: '127.0.0.1', port: 3307, user: \"root\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.binary :some_binary, null: false, limit: 1024, default: \"hello-world\"\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_mysql_defaults\r\n    post = Post.create!\r\n\r\n    mysql_vars = ActiveRecord::Base.connection.select_rows(\"SHOW VARIABLES LIKE '%version%'\")\r\n    puts mysql_vars.inspect\r\n    puts Post.column_defaults\r\n\r\n    # assert_equal \"0x68656C6C6F2D776F726C64\", post.some_binary # This passes\r\n    assert_equal \"hello-world\", post.some_binary # This fails\r\n\r\n    reloaded_post = Post.first\r\n    assert_equal \"hello-world\", reloaded_post.some_binary # this passes\r\n  end\r\nend\r\n```\r\n\r\nOn MySQL 5.7:\r\n\r\n```ruby\r\nPost.column_defaults # => {\"id\"=>nil, \"some_binary\"=>\"hello-world\"}\r\n```\r\n\r\nOn MySQL 8.0:\r\n\r\n```ruby\r\nPost.column_defaults # => {\"id\"=>nil, \"some_binary\"=>\"0x68656C6C6F2D776F726C64\"}\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe default value on binary columns should be Ruby strings, not ruby strings of hexadecimal.\r\n\r\n### Actual behavior\r\n\r\nThe column default in MySQL 8.0 is a hexadecimal string representing the binary data.\r\n\r\n### System configuration\r\n**Rails version**: main\r\n\r\n**Ruby version**: 3.1.0\r\n\r\nSome interesting MySQL forum posts about this behavior change:\r\n\r\n- https://forums.mysql.com/read.php?24,685577,685577\r\n- https://forums.mysql.com/read.php?20,698061,698061#msg-698061\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45832/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45832/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45830","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45830/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45830/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45830/events","html_url":"https://github.com/rails/rails/issues/45830","id":1338922250,"node_id":"I_kwDNIULOT85VCg","number":45830,"title":"ActiveRecord Rollbacks on errors which happen on commit","user":{"login":"Baxxx","id":17880055,"node_id":"MDQ6VXNlcjE3ODgwMDU1","avatar_url":"https://avatars.githubusercontent.com/u/17880055?v=4","gravatar_id":"","url":"https://api.github.com/users/Baxxx","html_url":"https://github.com/Baxxx","followers_url":"https://api.github.com/users/Baxxx/followers","following_url":"https://api.github.com/users/Baxxx/following{/other_user}","gists_url":"https://api.github.com/users/Baxxx/gists{/gist_id}","starred_url":"https://api.github.com/users/Baxxx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baxxx/subscriptions","organizations_url":"https://api.github.com/users/Baxxx/orgs","repos_url":"https://api.github.com/users/Baxxx/repos","events_url":"https://api.github.com/users/Baxxx/events{/privacy}","received_events_url":"https://api.github.com/users/Baxxx/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":126910270,"node_id":"MDU6TGFiZWwxMjY5MTAyNzA=","url":"https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps","name":"With reproduction steps","color":"009800","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2022-08-15T12:09:14Z","updated_at":"2022-08-25T13:32:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nIn some of our projects we use Postgres as database, and for some cases we deferred trigger constraints. These triggers fire up when `COMMIT` is called. Trigger can raise an error, which kills the transaction. ActiveRecord catches the error, and bubbles it up to developer, but it also sends `ROLLBACK` to Postgres, to which Postgres gives a warning that there is no transaction in progress.\r\n\r\nI didn't test this with sqlite3 or mysql.\r\n\r\nYou can see the reproduction script, and screenshot with the current behavior.\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", \"~> 7\"\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"logger\"\r\n\r\nlogger = Logger.new(STDOUT)\r\n\r\n# This connection will do for database-independent bug reports.\r\npg_opts = {adapter: \"postgresql\", database: \"ar_rollback_after_failed_commit_issue\"}\r\n\r\nActiveRecord::Base.establish_connection(pg_opts.except(:database))\r\nActiveRecord::Base.connection.drop_database(pg_opts[:database])\r\nActiveRecord::Base.connection.create_database(pg_opts[:database])\r\nlogger.info \"Database #{pg_opts[:database]} was (re)created.\"\r\n\r\nActiveRecord::Base.establish_connection(pg_opts)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  execute <<~SQL\r\n    CREATE FUNCTION perform_custom_validation()\r\n      RETURNS TRIGGER\r\n      LANGUAGE plpgsql\r\n      AS $$\r\n        DECLARE\r\n          total_invalid INTEGER;\r\n        BEGIN\r\n          SELECT COUNT(*) INTO total_invalid\r\n          FROM things\r\n          WHERE name = 'bad';\r\n\r\n          IF (total_invalid > 0) THEN\r\n            RAISE EXCEPTION 'There are bad things';\r\n          END IF;\r\n          RETURN NULL;\r\n        END;\r\n      $$;\r\n\r\n    CREATE TABLE \"things\" (\r\n      \"id\" bigserial primary key,\r\n      \"name\" character varying NOT NULL\r\n    );\r\n\r\n    CREATE CONSTRAINT\r\n      TRIGGER bank_transaction_rl_payment_date_validation\r\n      AFTER INSERT OR UPDATE ON things\r\n      DEFERRABLE INITIALLY DEFERRED\r\n      FOR EACH ROW EXECUTE FUNCTION perform_custom_validation();\r\n  SQL\r\nend\r\n\r\nclass Thing < ActiveRecord::Base\r\n  validates :name, presence: true\r\nend\r\n\r\n# All good\r\nlogger.info \"First transaction\"\r\nThing.create!(name: \"good\")\r\n\r\n# AR tries to commit, DB raises an error, AR tries to ROLLBACK, and PG gives a warning\r\nbegin\r\n  logger.info \"Second transaction\"\r\n  Thing.create!(name: \"bad\")\r\nrescue StandardError\r\n  # Doesn't matter\r\nend\r\n```\r\n\r\n### Expected behavior\r\nActiveRecord should not `ROLLBACK`, as there is no transaction in progress.\r\n\r\n### Actual behavior\r\nActiveRecord tries to `ROLLBACK`.\r\n\r\n![Screenshot from 2022-08-15 14-07-11](https://user-images.githubusercontent.com/17880055/184632335-0277cd27-4c7b-4b98-94a8-373be34a87ee.png)\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 2.7.5p203\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45830/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45830/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45823","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45823/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45823/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45823/events","html_url":"https://github.com/rails/rails/issues/45823","id":1337409694,"node_id":"I_kwDNIULOT7dAng","number":45823,"title":"Change Column with Raw Character Set Failure","user":{"login":"ahoglund","id":3407303,"node_id":"MDQ6VXNlcjM0MDczMDM=","avatar_url":"https://avatars.githubusercontent.com/u/3407303?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoglund","html_url":"https://github.com/ahoglund","followers_url":"https://api.github.com/users/ahoglund/followers","following_url":"https://api.github.com/users/ahoglund/following{/other_user}","gists_url":"https://api.github.com/users/ahoglund/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoglund/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoglund/subscriptions","organizations_url":"https://api.github.com/users/ahoglund/orgs","repos_url":"https://api.github.com/users/ahoglund/repos","events_url":"https://api.github.com/users/ahoglund/events{/privacy}","received_events_url":"https://api.github.com/users/ahoglund/received_events","type":"User","site_admin":true},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":126910270,"node_id":"MDU6TGFiZWwxMjY5MTAyNzA=","url":"https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps","name":"With reproduction steps","color":"009800","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-12T16:21:50Z","updated_at":"2022-08-12T20:47:38Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"With [this recent change to how collation is handled for column changes](https://github.com/rails/rails/pull/45744/files), there is now a potential for older migrations written in a specific manner to break if the `collation:` argument is not specific.\r\n\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\n# you need to install mysql locally for this to work.\r\n# on Mac:\r\n# brew install mysql\r\n# brew services start mysql\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"mysql2\"\r\n\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nclient = Mysql2::Client.new(host: 'localhost', username: \"root\")\r\nclient.query(\"DROP DATABASE test\")\r\nclient.query(\"CREATE DATABASE test\")\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"mysql2\", database: \"test\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :payments, force: true do |t|\r\n    t.string :description, \"varchar(64)\", null: false\r\n  end\r\nend\r\n\r\nclass Payment < ActiveRecord::Base\r\nend\r\n\r\nclass ChangeAmountToAddScale < ActiveRecord::Migration[7.1]\r\n  # This sets the default character set for the payments\r\n  # table to utf32 with a default COLLATION of utf32_general_ci.\r\n  # This can be verified by running the following query:\r\n  #\r\n  # SHOW CHARACTER SET;\r\n  #\r\n  connection.execute(<<~SQL)\r\n    ALTER TABLE payments CONVERT TO CHARACTER SET utf32\r\n  SQL\r\n\r\n  def change\r\n    reversible do |dir|\r\n      dir.up do\r\n        change_table(:payments, bulk: true) do |t|\r\n          # The default collation of utf32_general_ci\r\n          # will not be compatible with this ascii character set. \r\n          #\r\n          # when we build the column change now we automatically\r\n          # try to assign the previous collation to the column if no `collation:` is specified.\r\n          # \r\n          # https://github.com/rails/rails/pull/45744\r\n          #\r\n          # The workaround is to add `collation: 'ascii_bin'` or `collation: 'ascii_general_ci'` to the change.\r\n          #\r\n          # This isn't a huge deal and it has a workaround but it _will_ break\r\n          # anyone who has migrations that are written like this and upgrade to this version\r\n          # of Rails.\r\n          t.change :description, \"varchar(64) CHARACTER SET ascii\", null: false\r\n        end\r\n      end\r\n\r\n      dir.down do\r\n        change_table(:payments, bulk: true) do |t|\r\n          t.change :description, \"varchar(64)\", null: false\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_migration_up\r\n    ChangeAmountToAddScale.migrate(:up)\r\n    Payment.reset_column_information\r\n\r\n    assert_equal \"varchar\", Payment.columns.last.sql_type\r\n  end\r\n\r\n  def test_migration_down\r\n    ChangeAmountToAddScale.migrate(:down)\r\n    Payment.reset_column_information\r\n\r\n    assert_equal \"varchar\", Payment.columns.last.sql_type\r\n  end\r\nend\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nI would expect this to detect that the character set is being changed, and either \r\n\r\n1. change the collation to be compatible.\r\n2. At least give a clearer error that requires the `collation:` arg to be passed when the character set is being modified.\r\n\r\n### Actual behavior\r\n\r\nThis error:\r\n\r\n```\r\nError:\r\nBugTest#test_migration_up:\r\nActiveRecord::StatementInvalid: Mysql2::Error: COLLATION 'utf32_general_ci' is not valid for CHARACTER SET 'ascii'\r\n    test.rb:51:in `block (2 levels) in change'\r\n    test.rb:50:in `block in change'\r\n    test.rb:49:in `change'\r\n    test.rb:67:in `test_migration_up'\r\n```\r\n\r\n### System configuration\r\n**Rails version**: main\r\n**Ruby version**: ruby 3.1.1p18\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45823/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45823/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45822","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45822/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45822/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45822/events","html_url":"https://github.com/rails/rails/issues/45822","id":1337253221,"node_id":"I_kwDNIULOT7TdZQ","number":45822,"title":"ActiveRecord: Wrong results returned by ActiveRecord::Associations::Preloader when intermediate association is already preloaded.","user":{"login":"yopzer","id":6330271,"node_id":"MDQ6VXNlcjYzMzAyNzE=","avatar_url":"https://avatars.githubusercontent.com/u/6330271?v=4","gravatar_id":"","url":"https://api.github.com/users/yopzer","html_url":"https://github.com/yopzer","followers_url":"https://api.github.com/users/yopzer/followers","following_url":"https://api.github.com/users/yopzer/following{/other_user}","gists_url":"https://api.github.com/users/yopzer/gists{/gist_id}","starred_url":"https://api.github.com/users/yopzer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yopzer/subscriptions","organizations_url":"https://api.github.com/users/yopzer/orgs","repos_url":"https://api.github.com/users/yopzer/repos","events_url":"https://api.github.com/users/yopzer/events{/privacy}","received_events_url":"https://api.github.com/users/yopzer/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"jhawthorn","id":131752,"node_id":"MDQ6VXNlcjEzMTc1Mg==","avatar_url":"https://avatars.githubusercontent.com/u/131752?v=4","gravatar_id":"","url":"https://api.github.com/users/jhawthorn","html_url":"https://github.com/jhawthorn","followers_url":"https://api.github.com/users/jhawthorn/followers","following_url":"https://api.github.com/users/jhawthorn/following{/other_user}","gists_url":"https://api.github.com/users/jhawthorn/gists{/gist_id}","starred_url":"https://api.github.com/users/jhawthorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhawthorn/subscriptions","organizations_url":"https://api.github.com/users/jhawthorn/orgs","repos_url":"https://api.github.com/users/jhawthorn/repos","events_url":"https://api.github.com/users/jhawthorn/events{/privacy}","received_events_url":"https://api.github.com/users/jhawthorn/received_events","type":"User","site_admin":true},"assignees":[{"login":"jhawthorn","id":131752,"node_id":"MDQ6VXNlcjEzMTc1Mg==","avatar_url":"https://avatars.githubusercontent.com/u/131752?v=4","gravatar_id":"","url":"https://api.github.com/users/jhawthorn","html_url":"https://github.com/jhawthorn","followers_url":"https://api.github.com/users/jhawthorn/followers","following_url":"https://api.github.com/users/jhawthorn/following{/other_user}","gists_url":"https://api.github.com/users/jhawthorn/gists{/gist_id}","starred_url":"https://api.github.com/users/jhawthorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhawthorn/subscriptions","organizations_url":"https://api.github.com/users/jhawthorn/orgs","repos_url":"https://api.github.com/users/jhawthorn/repos","events_url":"https://api.github.com/users/jhawthorn/events{/privacy}","received_events_url":"https://api.github.com/users/jhawthorn/received_events","type":"User","site_admin":true}],"milestone":null,"comments":1,"created_at":"2022-08-12T14:06:55Z","updated_at":"2022-08-18T23:36:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"activerecord\", \"7.0.3.1\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :a_records, force: true\r\n\r\n  create_table :b_records, force: true do |t|\r\n    t.references :a_record\r\n    t.references :c_record\r\n  end\r\n\r\n  create_table :c_records, force: true\r\n\r\n  create_table :d_records, force: true do |t|\r\n    t.references :c_record\r\n  end\r\nend\r\n\r\nclass ARecord < ActiveRecord::Base\r\n  has_one :b_record\r\n  has_one :c_record, through: :b_record\r\n  has_many :d_records, through: :c_record\r\nend\r\n\r\nclass BRecord < ActiveRecord::Base\r\n  belongs_to :a_record\r\n  belongs_to :c_record\r\nend\r\n\r\nclass CRecord < ActiveRecord::Base\r\n  has_one :b_record\r\n  has_many :d_records\r\nend\r\n\r\nclass DRecord < ActiveRecord::Base\r\n  belongs_to :c_record\r\nend\r\n\r\na = ARecord.create!\r\nc = CRecord.create!\r\nBRecord.create!(a_record: a, c_record: c)\r\nDRecord.create!(c_record: c)\r\nDRecord.create!(c_record: c)\r\n\r\na.reload\r\na.c_record # NB: if removed this works\r\n\r\n::ActiveRecord::Associations::Preloader.new(records: [a], associations: :d_records).call\r\nputs({ record_ids: a.d_records.map(&:id), size: a.d_records.size })\r\n```\r\n\r\n### Expected behavior\r\nTwo records should be loaded:\r\n`{:record_ids=>[1, 2], :size=>2}`\r\n\r\n### Actual behavior\r\nNo records are loaded:\r\n`{:record_ids=>[], :size=>0}`\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 2.7.5\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45822/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45822/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45817","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45817/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45817/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45817/events","html_url":"https://github.com/rails/rails/issues/45817","id":1336797388,"node_id":"I_kwDNIULOT63ozA","number":45817,"title":"Value of attribute default proc is shared between instances after dup + dirty tracking","user":{"login":"quadule","id":15299,"node_id":"MDQ6VXNlcjE1Mjk5","avatar_url":"https://avatars.githubusercontent.com/u/15299?v=4","gravatar_id":"","url":"https://api.github.com/users/quadule","html_url":"https://github.com/quadule","followers_url":"https://api.github.com/users/quadule/followers","following_url":"https://api.github.com/users/quadule/following{/other_user}","gists_url":"https://api.github.com/users/quadule/gists{/gist_id}","starred_url":"https://api.github.com/users/quadule/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/quadule/subscriptions","organizations_url":"https://api.github.com/users/quadule/orgs","repos_url":"https://api.github.com/users/quadule/repos","events_url":"https://api.github.com/users/quadule/events{/privacy}","received_events_url":"https://api.github.com/users/quadule/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-12T06:16:00Z","updated_at":"2022-08-15T15:56:11Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWhen an attribute without a database column defines a default proc, `dup`ing a model in which the default wasn't accessed passes the unevaluated `UserProvidedDefault` attribute to the new instance as the attribute's original value. Checking the new attribute for changes will then memoize the value in the original attribute definition, making it the default value in every new model instance afterward.\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n  gem \"rails\", github: \"rails/rails\", ref: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Schema.define do\r\n  create_table :cats do |t|\r\n    t.string :name\r\n  end\r\nend\r\n\r\nclass Cat < ActiveRecord::Base\r\n  attribute :sounds, default: -> { [] }\r\nend\r\n\r\nclass VirtualAttributeTest < Minitest::Test\r\n  def test_virtual_attribute_defaults_are_independent\r\n    Cat.new.dup.save!\r\n    Cat.new.sounds << \"meow\"\r\n    refute_same Cat.new.sounds, Cat.new.sounds\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nEach new instance should get a new default value from the proc.\r\n\r\n### Actual behavior\r\nAfter using dirty tracking on a duplicated instance with an uncalled proc default, all new instances of a model receive the same default value and share any changes made to it.\r\n\r\n### Affected versions\r\nThis seems to date back quite a while; the test fails on the main branch back to 5-1-stable.\r\n\r\n### Credits\r\nThanks to @GBH for originally discovering this bug.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45817/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45817/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45794","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45794/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45794/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45794/events","html_url":"https://github.com/rails/rails/issues/45794","id":1332999733,"node_id":"I_kwDNIULOT3P2NQ","number":45794,"title":"Action Cable client goes in a connection loop if you subscribe multiple times to the same channel","user":{"login":"ProGM","id":5167659,"node_id":"MDQ6VXNlcjUxNjc2NTk=","avatar_url":"https://avatars.githubusercontent.com/u/5167659?v=4","gravatar_id":"","url":"https://api.github.com/users/ProGM","html_url":"https://github.com/ProGM","followers_url":"https://api.github.com/users/ProGM/followers","following_url":"https://api.github.com/users/ProGM/following{/other_user}","gists_url":"https://api.github.com/users/ProGM/gists{/gist_id}","starred_url":"https://api.github.com/users/ProGM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ProGM/subscriptions","organizations_url":"https://api.github.com/users/ProGM/orgs","repos_url":"https://api.github.com/users/ProGM/repos","events_url":"https://api.github.com/users/ProGM/events{/privacy}","received_events_url":"https://api.github.com/users/ProGM/received_events","type":"User","site_admin":false},"labels":[{"id":300028327,"node_id":"MDU6TGFiZWwzMDAwMjgzMjc=","url":"https://api.github.com/repos/rails/rails/labels/actioncable","name":"actioncable","color":"bfdadc","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-09T09:48:36Z","updated_at":"2022-08-17T17:57:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\nYou can just start from a fresh `rails new [project-name]` installation.\r\nChannel code:\r\n```ruby\r\nclass ArticleChannel < ApplicationCable::Channel\r\n  def subscribed\r\n    stream_from \"ArticleChannel\"\r\n  end\r\n\r\n  def unsubscribed\r\n    # Any cleanup needed when channel is unsubscribed\r\n  end\r\nend\r\n```\r\n\r\nJavascript code:\r\n```javascript\r\nimport consumer from \"channels/consumer\"\r\n\r\nfunction subscribe() {\r\n\treturn consumer.subscriptions.create('ArticleChannel', {\r\n\t\tconnected() {\r\n\t\t\tconsole.log('connected');\r\n\t\t\t// Called when the subscription is ready for use on the server\r\n\t\t},\r\n\r\n\t\tdisconnected() {\r\n\t\t\tconsole.log('disconnected');\r\n\t\t\t// Called when the subscription has been terminated by the server\r\n\t\t},\r\n\r\n\t\treceived(data) {\r\n\t\t\tconsole.log('received', data);\r\n\t\t\t// Called when there's incoming data on the websocket for this channel\r\n\t\t}\r\n\t});\r\n}\r\n\r\nsetTimeout(() => {\r\n\tsubscribe();\r\n}, 3000);\r\n\r\nsetTimeout(() => {\r\n\tsubscribe();\r\n}, 4000);\r\n```\r\n\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nAny of these options could be considered an expected behavior:\r\n* Everything just works™, both subscriptions receive notification from that channel and no error is raised\r\n* The second `subscription.create(...)` raises some kind of error, notifying that the channel is already connected\r\n* The second `subscription.create(...)` returns the same instance of Subscription and writes a `console.warning` in console\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nThe second subscriptions triggers a connection loop.\r\n\r\nExample logs with `ActionCable.logger.enabled = true`.\r\n\r\n```\r\n[ActionCable] Opening WebSocket, current state is null, subprotocols: actioncable-v1-json,actioncable-unsupported 1660037219747\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] ConnectionMonitor started. stale threshold = 6 s 1660037219748\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] WebSocket onopen event, using 'actioncable-v1-json' subprotocol 1660037219758\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] ConnectionMonitor recorded connect 1660037219759\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor guaranteeing {\"channel\":\"ArticleChannel\"} 1660037219760\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] Subscription confirmed {\"channel\":\"ArticleChannel\"} 1660037219762\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor forgetting {\"channel\":\"ArticleChannel\"} 1660037219762\r\narticle_channel-b29f3f7bf31169dfadd26c7747a46706d4992a1fd842de8268f206c5f0a0fe45.js:6 connected\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor guaranteeing {\"channel\":\"ArticleChannel\"} 1660037220744\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221248\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221248\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n... and so on, forever...\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 3.1\r\n\r\n### Possible solutions\r\nThis issue happens because the identifier of both subscriptions is the same. Since Rails (ActionCable) doesn't answer to any subsequential command \"subscribe\" from the same client (in this case: `{\"command\":\"subscribe\",\"identifier\":\"{\\\"channel\\\":\\\"ArticleChannel\\\"}\"}`), the `SubscriptionGuarantor` considers the connection failed and [retries to connect after 500ms](https://github.com/rails/rails/blob/8994f09dd2f6ae363e74d8ee3b24700d9db94a16/actioncable/app/assets/javascripts/actioncable.esm.js#L351).\r\n\r\nI see various options to fix this:\r\n* Raise an exception when trying to create a subscription with the same identifier\r\n* Add a random/uuid to the identifier when connecting, so two connection would not share the same identifier? (I've already tested it, and it seems to fix)\r\n\r\nWould you accept a PR from me regarding this?","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45794/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45794/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45791","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45791/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45791/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45791/events","html_url":"https://github.com/rails/rails/issues/45791","id":1332570977,"node_id":"I_kwDNIULOT21rYQ","number":45791,"title":"Google::Apis::ClientError raised when using ActiveStorage to generate signed URLs to access a file in a GCS bucket with GKE Workload Identity","user":{"login":"danielyazbek","id":18390164,"node_id":"MDQ6VXNlcjE4MzkwMTY0","avatar_url":"https://avatars.githubusercontent.com/u/18390164?v=4","gravatar_id":"","url":"https://api.github.com/users/danielyazbek","html_url":"https://github.com/danielyazbek","followers_url":"https://api.github.com/users/danielyazbek/followers","following_url":"https://api.github.com/users/danielyazbek/following{/other_user}","gists_url":"https://api.github.com/users/danielyazbek/gists{/gist_id}","starred_url":"https://api.github.com/users/danielyazbek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielyazbek/subscriptions","organizations_url":"https://api.github.com/users/danielyazbek/orgs","repos_url":"https://api.github.com/users/danielyazbek/repos","events_url":"https://api.github.com/users/danielyazbek/events{/privacy}","received_events_url":"https://api.github.com/users/danielyazbek/received_events","type":"User","site_admin":false},"labels":[{"id":664533972,"node_id":"MDU6TGFiZWw2NjQ1MzM5NzI=","url":"https://api.github.com/repos/rails/rails/labels/activestorage","name":"activestorage","color":"bfd4f2","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-09T01:05:08Z","updated_at":"2022-08-09T15:53:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nConfigure ActiveStorage with GKE Workload identity (as documented [here](https://edgeguides.rubyonrails.org/active_storage_overview.html#google-cloud-storage-service)):\r\n\r\n```ruby\r\ngoogle:\r\n  service: GCS\r\n  iam: true\r\n  project: <%= ENV['ACTIVE_STORAGE_PROJECT'] %>\r\n  bucket: <%= ENV['ACTIVE_STORAGE_BUCKET'] %>\r\n```\r\n\r\nDefine a class:\r\n```ruby\r\nclass Transaction < ApplicationRecord\r\n  has_one_attached :csv_report\r\nend\r\n```\r\n\r\nWrite something to ActiveStorage:\r\n```ruby\r\nt = Transaction.create\r\nt.csv_report.attach(io: StringIO.new(\"A,B,C\"), filename: 'test.csv')\r\n```\r\n\r\nGenerate a Signed URL\r\n```ruby\r\nRails.application.routes.url_helpers.rails_blob_url(Transaction.last.csv_report, disposition: 'attachment')\r\n```\r\n\r\nPaste the generated URL into a browser\r\n\r\n### Expected behavior\r\nActiveRecord provides the attachment\r\n\r\n### Actual behavior\r\nError is raised:\r\n\r\n```\r\nGoogle::Apis::ClientError (Invalid request):\r\ngems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:236:in `check_status': Invalid request (Google::Apis::ClientError)\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/api_command.rb:134:in `check_status'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:199:in `process_response'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:318:in `execute_once'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:118:in `block (2 levels) in execute'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:61:in `block in retriable'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `times'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `retriable'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:115:in `block in execute'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:61:in `block in retriable'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `times'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `retriable'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:105:in `execute'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/base_service.rb:397:in `execute_or_queue_command'\r\n    from gems/google-apis-iamcredentials_v1-0.13.0/lib/google/apis/iamcredentials_v1/service.rb:158:in `sign_service_account_blob'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service/gcs_service.rb:232:in `block in signer'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file/signer_v2.rb:135:in `generate_signature'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file/signer_v2.rb:128:in `signed_url'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file.rb:1801:in `signed_url'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service/gcs_service.rb:160:in `private_url'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:123:in `block in url'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications/instrumenter.rb:24:in `instrument'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications.rb:206:in `instrument'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:163:in `instrument'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:118:in `url'\r\n    from gems/activestorage-7.0.3.1models/active_storage/blob.rb:217:in `url'\r\n    from gems/activestorage-7.0.3.1controllers/active_storage/blobs/redirect_controller.rb:14:in `show'\r\n```\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 3.1.2\r\n\r\n**google-cloud-storage gem version:** 1.38.0\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45791/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45791/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45778","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45778/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45778/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45778/events","html_url":"https://github.com/rails/rails/issues/45778","id":1330360134,"node_id":"I_kwDNIULOT0uvRg","number":45778,"title":"ActiveStorage attachments are lost when casting using Becomes","user":{"login":"markedmondson","id":1653699,"node_id":"MDQ6VXNlcjE2NTM2OTk=","avatar_url":"https://avatars.githubusercontent.com/u/1653699?v=4","gravatar_id":"","url":"https://api.github.com/users/markedmondson","html_url":"https://github.com/markedmondson","followers_url":"https://api.github.com/users/markedmondson/followers","following_url":"https://api.github.com/users/markedmondson/following{/other_user}","gists_url":"https://api.github.com/users/markedmondson/gists{/gist_id}","starred_url":"https://api.github.com/users/markedmondson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markedmondson/subscriptions","organizations_url":"https://api.github.com/users/markedmondson/orgs","repos_url":"https://api.github.com/users/markedmondson/repos","events_url":"https://api.github.com/users/markedmondson/events{/privacy}","received_events_url":"https://api.github.com/users/markedmondson/received_events","type":"User","site_admin":false},"labels":[{"id":664533972,"node_id":"MDU6TGFiZWw2NjQ1MzM5NzI=","url":"https://api.github.com/repos/rails/rails/labels/activestorage","name":"activestorage","color":"bfd4f2","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-05T20:19:16Z","updated_at":"2022-08-09T18:05:34Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\nCreate an ActiveRecord model with an ActiveStorage relation. Initialize and add the associated attachment. Cast the object to another subclassed model, the associated attachment is lost.\r\n\r\n```ruby\r\nunless File.exist?('Gemfile')\r\n    File.write('Gemfile', <<-GEMFILE)\r\n    source 'https://rubygems.org'\r\n    gem 'rails', '~> 6.1'\r\n    gem 'sqlite3'\r\n    GEMFILE\r\n\r\n    system 'bundle'\r\nend\r\n\r\nrequire 'bundler'\r\nBundler.setup(:default)\r\n\r\nrequire 'active_record'\r\nrequire 'active_storage/engine'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  config.hosts << 'example.org'\r\n  config.eager_load = false\r\n  config.session_store :cookie_store, key: 'cookie_store_key'\r\n  secrets.secret_key_base = 'secret_key_base'\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  config.active_storage.service = :local\r\n  config.active_storage.service_configurations = {\r\n    local: {\r\n      root: Dir.tmpdir,\r\n      service: 'Disk'\r\n    }\r\n  }\r\nend\r\n\r\nENV['DATABASE_URL'] = 'sqlite3::memory:'\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\nRails.application.initialize!\r\n\r\nrequire ActiveStorage::Engine.root.join('db/migrate/20170806125915_create_active_storage_tables.rb').to_s\r\n\r\nActiveRecord::Schema.define do\r\n  CreateActiveStorageTables.new.change\r\n\r\n  create_table :posts do |t|\r\n    t.string :title\r\n    t.string :text\r\n  end\r\n\r\n  create_table :comments do |t|\r\n    t.belongs_to :post\r\n    t.string :text\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post\r\n  has_one_attached :image\r\nend\r\n\r\nclass ModeratedComment < Comment; end\r\n\r\nclass BugTest < Minitest::Test\r\n  def setup\r\n    @post = Post.create(title: 'Post', text: 'Welcome')\r\n  end\r\n\r\n  def test_association\r\n    comment = @post.comments.new(text: 'I do not like this')\r\n\r\n    moderated_comment = comment.becomes(ModeratedComment)\r\n\r\n    assert_equal @post, moderated_comment.post # Pass\r\n  end\r\n\r\n  def test_attachment\r\n    file = ActiveStorage::Blob.create_and_upload!(\r\n      content_type: \"image/png\",\r\n      filename: \"image.png\",\r\n      io: ::StringIO.new(\"png\"),\r\n    )\r\n    comment = @post.comments.new(text: 'I do not like this', image: file)\r\n\r\n    moderated_comment = comment.becomes(ModeratedComment)\r\n\r\n    assert moderated_comment.image.attached? # Fail\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nWhen casting an ActiveRecord to another model, I expect the associations to be copied thus I expect attached ActiveStorage association assets to be copied.\r\n\r\n### Actual behavior\r\nPreviously attached ActiveStorage associated objects are lost on the original object.\r\n\r\n### System configuration\r\n**Rails version**: 6.1.6.1\r\n\r\n**Ruby version**: 3.0.4\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45778/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45778/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45775","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45775/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45775/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45775/events","html_url":"https://github.com/rails/rails/issues/45775","id":1330225377,"node_id":"I_kwDNIULOT0mg4Q","number":45775,"title":"Uniqueness validation on association does not use the correct primary key","user":{"login":"mikeletscher","id":6666411,"node_id":"MDQ6VXNlcjY2NjY0MTE=","avatar_url":"https://avatars.githubusercontent.com/u/6666411?v=4","gravatar_id":"","url":"https://api.github.com/users/mikeletscher","html_url":"https://github.com/mikeletscher","followers_url":"https://api.github.com/users/mikeletscher/followers","following_url":"https://api.github.com/users/mikeletscher/following{/other_user}","gists_url":"https://api.github.com/users/mikeletscher/gists{/gist_id}","starred_url":"https://api.github.com/users/mikeletscher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikeletscher/subscriptions","organizations_url":"https://api.github.com/users/mikeletscher/orgs","repos_url":"https://api.github.com/users/mikeletscher/repos","events_url":"https://api.github.com/users/mikeletscher/events{/privacy}","received_events_url":"https://api.github.com/users/mikeletscher/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-05T18:10:22Z","updated_at":"2022-08-09T14:52:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nI'm not _entirely_ sure if this is considered a bug, or intended behavior that's not well-documented for `uniqueness` validations on associations.\r\n\r\nI'm happy to help improve the documentation on this if that would be the most helpful way forward, or if this _is_ considered a bug, I can take a stab at a PR. \r\n\r\nIt looks like the issue is that `build_relation` on the uniqueness validator calls [`bind_attribute` on `ActiveRecord::Relation`](https://github.com/rails/rails/blob/408d061a80a49878ad26b305616ed9ba88ee1411/activerecord/lib/active_record/relation.rb#L45), which properly takes into account the reflection's foreign_key, but not primary key if it's been overridden. \r\n\r\nHere's a test that reproduces the issue:\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire 'bundler/inline'\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem 'activerecord', '~> 7.0.3.1'\r\n  gem 'sqlite3'\r\nend\r\n\r\nrequire 'active_record'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(\r\n  adapter: 'sqlite3',\r\n  database: ':memory:'\r\n)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :prescriptions, force: true do |t|\r\n    t.string :rx_number\r\n  end\r\n\r\n  create_table :fills, force: true do |t|\r\n    t.string :rx_number\r\n  end\r\nend\r\n\r\nclass Prescription < ActiveRecord::Base\r\n  has_many :fills, foreign_key: :rx_number, primary_key: :rx_number\r\nend\r\n\r\nclass Fill < ActiveRecord::Base\r\n  belongs_to :prescription, foreign_key: :rx_number, primary_key: :rx_number\r\n\r\n  validates :prescription, uniqueness: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_fill_unique_by_rx_number\r\n    Fill.create!(rx_number: '1234')\r\n    prescription = Prescription.create!(rx_number: '1234')\r\n    new_fill = prescription.fills.new\r\n    refute new_fill.save\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe uniqueness validation query would use the `rx_number` value of the `Prescription` to query for an existing `Fill` since that is what is set as the associations `primary_key`. \r\n\r\n### Actual behavior\r\nThe uniqueness validation query uses the `id` value of the `Prescription` to query for existing fills, disregarding the association's overridden `primary_key`.\r\n\r\nThis test passes if I patch bind_attribute to read the primary key from the reflection instead of directly from the reflection's klass:\r\n\r\n```ruby\r\nmodule ActiveRecord\r\n  # = Active Record \\Relation\r\n  class Relation\r\n    def bind_attribute(name, value) # :nodoc:\r\n      if reflection = klass._reflect_on_association(name)\r\n        name = reflection.foreign_key\r\n        primary_key = reflection.association_primary_key || reflection.klass.primary_key\r\n        value = value.read_attribute(primary_key) unless value.nil?\r\n      end\r\n\r\n      attr = table[name]\r\n      bind = predicate_builder.build_bind_attribute(attr.name, value)\r\n      yield attr, bind\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nWe were able to work around this by adding the uniqueness validation to the `rx_number` attribute instead of the association. If this is the desired way to handle this, I can open a PR to add a note about this to the docs, as it took us by surprise that validation on the association wouldn't use the defined key to get the value to query.\r\n\r\n### System configuration\r\n**Rails version**: `7.0.3.1`\r\n\r\n**Ruby version**: `3.1.2`\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45775/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45775/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45766","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45766/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45766/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45766/events","html_url":"https://github.com/rails/rails/issues/45766","id":1329650798,"node_id":"I_kwDNIULOT0Dcbg","number":45766,"title":"Active Model Dirty: attribute_changed? options (from/to) do not accept symbol","user":{"login":"thomasvanholder","id":36309895,"node_id":"MDQ6VXNlcjM2MzA5ODk1","avatar_url":"https://avatars.githubusercontent.com/u/36309895?v=4","gravatar_id":"","url":"https://api.github.com/users/thomasvanholder","html_url":"https://github.com/thomasvanholder","followers_url":"https://api.github.com/users/thomasvanholder/followers","following_url":"https://api.github.com/users/thomasvanholder/following{/other_user}","gists_url":"https://api.github.com/users/thomasvanholder/gists{/gist_id}","starred_url":"https://api.github.com/users/thomasvanholder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomasvanholder/subscriptions","organizations_url":"https://api.github.com/users/thomasvanholder/orgs","repos_url":"https://api.github.com/users/thomasvanholder/repos","events_url":"https://api.github.com/users/thomasvanholder/events{/privacy}","received_events_url":"https://api.github.com/users/thomasvanholder/received_events","type":"User","site_admin":false},"labels":[{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-08-05T08:54:51Z","updated_at":"2022-08-07T20:25:55Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nThe `attribute_changed?` receives optional options, such as `from` and `to`. Each option key is passed a value. Only string values are accepted, and symbols are not recognized. This is inconsistent behavior as updating a column using the `update` method does accept both a string and a symbol.\r\n \r\n Source code: [attribute_changed?](https://github.com/rails/rails/blob/04972d9b9ef60796dc8f0917817b5392d61fcf09/activemodel/lib/active_model/dirty.rb#L178) \r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"debug\"\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.column :status, :integer, default: 0\r\n    t.date :review_date\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  enum :status, {draft: 0, published: 1}\r\n\r\n  before_update :set_review_date\r\n\r\n  def set_review_date\r\n    # when \"published\" is set as a string, the test correcty passes.\r\n    if status_changed?(to: :published)\r\n      self.review_date = Date.today\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_set_status\r\n    post = Post.create!\r\n    post.update(status: :published)\r\n\r\n    assert_equal \"published\", post.status\r\n  end\r\n\r\n  def test_sets_review_date\r\n    post = Post.create!\r\n    post.published!\r\n\r\n    assert_equal \"published\", post.status\r\n    assert_equal Date.today, post.review_date\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe value of the optional arguments `from` and `to` accepts both a string or symbol.\r\n\r\n### Actual behavior\r\nWhen options, such as `from` and `to` are passed to the [attribute_changed?](https://github.com/rails/rails/blob/04972d9b9ef60796dc8f0917817b5392d61fcf09/activemodel/lib/active_model/dirty.rb#L178) method the arguments are not recognized when passed as a symbol.\r\n\r\n### System configuration\r\n**Rails version**: `Rails 7.0.3`\r\n\r\n**Ruby version**: `ruby 3.1.2`\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45766/reactions","total_count":2,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45766/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45758","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45758/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45758/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45758/events","html_url":"https://github.com/rails/rails/issues/45758","id":1327892229,"node_id":"I_kwDNIULOTyYHBQ","number":45758,"title":"ActiveRecord 6.1 and JSONB: Incorrect results value/type when using both arrow operator and double arrow operator in the same SELECT statement","user":{"login":"shhavel","id":1169424,"node_id":"MDQ6VXNlcjExNjk0MjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1169424?v=4","gravatar_id":"","url":"https://api.github.com/users/shhavel","html_url":"https://github.com/shhavel","followers_url":"https://api.github.com/users/shhavel/followers","following_url":"https://api.github.com/users/shhavel/following{/other_user}","gists_url":"https://api.github.com/users/shhavel/gists{/gist_id}","starred_url":"https://api.github.com/users/shhavel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shhavel/subscriptions","organizations_url":"https://api.github.com/users/shhavel/orgs","repos_url":"https://api.github.com/users/shhavel/repos","events_url":"https://api.github.com/users/shhavel/events{/privacy}","received_events_url":"https://api.github.com/users/shhavel/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-08-03T23:42:39Z","updated_at":"2022-08-05T22:26:04Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Issue Description\r\n\r\nGenerally when using JSONB operators `->` (arrow operator) and `->>` (double arrow operator) in SELECT statement, \r\nActiveRecord returns correct result types: objects for `->` operator and string for `->>` operator.\r\nBut when using both operators in the same select statement, the returned results may have an unexpected type or be `nil`.\r\n\r\n### Steps to reproduce with Expected behaviour in tests and Actual behaviour in comments\r\n\r\n```ruby\r\n# file: activerecord_6_1_jsonb_test.rb\r\n# run: ruby activerecord_6_1_jsonb_test.rb\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"activerecord\", \"6.1.6.1\" # the same behaviour for version \"7.0.3.1\"\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\npg_opts = {adapter: \"postgresql\", database: \"jsonb_activerecord_issue\"}\r\nbegin\r\n  ActiveRecord::Base.establish_connection(pg_opts.except(:database))\r\n  ActiveRecord::Base.connection.create_database(pg_opts[:database])\r\n  puts \"Database #{pg_opts[:database]} was created.\"\r\nrescue => ActiveRecord::DatabaseAlreadyExists\r\n  puts \"Database #{pg_opts[:database]} alredy exists.\"\r\nend\r\nActiveRecord::Base.establish_connection(pg_opts)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :entries, force: true do |t|\r\n    t.jsonb :value\r\n  end\r\nend\r\n\r\nclass Entry < ActiveRecord::Base\r\nend\r\nEntry.create(value: {a: \"a\", b: \"b\", c: {}})\r\n\r\nclass BugTest < Minitest::Test\r\n  # passed\r\n  def test_jsonb_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->'a', value->'b'\"))\r\n    assert_equal [[{}, \"b\"]], Entry.pluck(Arel.sql(\"value->'c', value->'b'\"))\r\n  end\r\n\r\n  # passed\r\n  def test_jsonb_double_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'a', value->>'b'\"))\r\n    assert_equal [[\"{}\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'c', value->>'b'\"))\r\n  end\r\n\r\n  # failed (this test results are differ in activerecord 6.0)\r\n  def test_jsonb_arrow_operator_and_double_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->'a', value->>'b'\")) # Actual [[\"a\", nil]]\r\n    assert_equal [[{}, \"b\"]], Entry.pluck(Arel.sql(\"value->'c', value->>'b'\")) # Actual [[{}, nil]]\r\n  end\r\n\r\n  # failed\r\n  def test_jsonb_double_arrow_operator_and_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'a', value->'b'\")) # Actual [[nil, \"b\"]]\r\n    assert_equal [[\"{}\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'c', value->'b'\")) # Actual [[{}, \"b\"]]\r\n  end\r\nend\r\n```\r\n\r\n### PostgreSQL results \r\n\r\n```sql\r\nSELECT\r\n  pg_typeof(value->'a'), value->'a',\r\n  pg_typeof(value->'b'), value->'b',\r\n  pg_typeof(value->'c'), value->'c',\r\n  pg_typeof(value->>'a'), value->>'a',\r\n  pg_typeof(value->>'b'), value->>'b',\r\n  pg_typeof(value->>'c'), value->>'c'\r\nFROM \"entries\";\r\n\r\n pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column?\r\n-----------+----------+-----------+----------+-----------+----------+-----------+----------+-----------+----------+-----------+----------\r\n jsonb     | \"a\"      | jsonb     | \"b\"      | jsonb     | {}       | text      | a        | text      | b        | text      | {}\r\n(1 row)\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 6.1.6.1\r\n\r\n**Ruby version**: 3.1.0\r\n\r\n### Similar issue in different versions of ActiveRecord\r\n\r\nThere is a similar issue but with slightly different behaviour in AR 6.0. Created another issue: #45757\r\n\r\nPlease confirm or comment on the expected behaviour.\r\nThank you.\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45758/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45758/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45750","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45750/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45750/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45750/events","html_url":"https://github.com/rails/rails/issues/45750","id":1327484205,"node_id":"I_kwDNIULOTx_NLQ","number":45750,"title":"Running `rails test` doesn't automatically load any custom tasks under `lib/tasks`","user":{"login":"onlynone","id":833690,"node_id":"MDQ6VXNlcjgzMzY5MA==","avatar_url":"https://avatars.githubusercontent.com/u/833690?v=4","gravatar_id":"","url":"https://api.github.com/users/onlynone","html_url":"https://github.com/onlynone","followers_url":"https://api.github.com/users/onlynone/followers","following_url":"https://api.github.com/users/onlynone/following{/other_user}","gists_url":"https://api.github.com/users/onlynone/gists{/gist_id}","starred_url":"https://api.github.com/users/onlynone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/onlynone/subscriptions","organizations_url":"https://api.github.com/users/onlynone/orgs","repos_url":"https://api.github.com/users/onlynone/repos","events_url":"https://api.github.com/users/onlynone/events{/privacy}","received_events_url":"https://api.github.com/users/onlynone/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-03T16:16:38Z","updated_at":"2022-08-03T18:09:40Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n1. Create the file `lib/tasks/test.rake` with the content:\r\n```ruby\r\nENV[\"test.rake\"] = \"yes\"\r\ntask :custom_task do\r\n  ENV[\"custom_task\"] = \"yes\"\r\nend\r\n\r\ntask :test => [:custom_task]\r\n```\r\n2. Create a test file at `test/unit/rails_test_test.rb` with the content:\r\n```ruby\r\nclass RailsTestTest < ActiveSupport::TestCase\r\n  test \"test.rake is in the environment\" do\r\n    assert_equal('yes', ENV['test.rake'])\r\n  end\r\n\r\n  test \"custom_task is in the environment\" do\r\n    assert_equal('yes', ENV['custom_task'])\r\n  end\r\nend\r\n```\r\n3. Run `bin/rails test test/unit/rails_test_test.rb`\r\n4. Run `bin/rake test test/unit/rails_test_test.rb`\r\n\r\n### Expected behavior\r\nBoth `rails test` and `rake test` should succeed.\r\n\r\n### Actual behavior\r\nRunning the tests with `bin/rake` succeeds with the output:\r\n```\r\nbin/rake test test/unit/rails_test_test.rb\r\nRunning via Spring preloader in process 59092\r\nRun options: --seed 6948\r\n\r\n# Running:\r\n\r\n..\r\n\r\nFinished in 0.000943s, 2120.8907 runs/s, 2120.8907 assertions/s.\r\n2 runs, 2 assertions, 0 failures, 0 errors, 0 skips\r\n```\r\n\r\nWhile running with `bin/rails` fails with the output:\r\n\r\n```\r\nRunning via Spring preloader in process 58735\r\nRun options: --seed 33633\r\n\r\n# Running:\r\n\r\nF\r\n\r\nFailure:\r\nRailsTestTest#test_custom_task_is_in_the_environment [/Users/steven/projects/rails_test_tasks/test/unit/rails_test_test.rb:7]:\r\nExpected: \"yes\"\r\n  Actual: nil\r\n\r\n\r\nrails test test/unit/rails_test_test.rb:6\r\n\r\nF\r\n\r\nFailure:\r\nRailsTestTest#test_test.rake_is_in_the_environment [/Users/steven/projects/rails_test_tasks/test/unit/rails_test_test.rb:3]:\r\nExpected: \"yes\"\r\n  Actual: nil\r\n\r\n\r\nrails test test/unit/rails_test_test.rb:2\r\n\r\n\r\n\r\nFinished in 0.001378s, 1451.3788 runs/s, 1451.3788 assertions/s.\r\n2 runs, 2 assertions, 2 failures, 0 errors, 0 skips\r\n```\r\n\r\nBecause the file `lib/tasks/test.rake` is never loaded.\r\n\r\nIt seems like rails will only end up loading custom tasks if it can't find the command being run on the command line in its own list of built-in commands. When it can't find the command, it will load the local `Rakefile` via `find_by_namespace(\"rake\").perform(full_namespace, args, config)` in `Rails::Command.invoke`. And the local `Rakefile` usually has `Rails.application.load_tasks` and that loads any custom tasks under `lib/tasks`.\r\n\r\nFor example, this happens when the `ActiveRecord` migration exec's out to call: `bin/rails db:test:prepare`. That task is apparently not a built-in rails task, so the `Rakefile` and all custom tasks *do* end up getting loaded for that one.\r\n\r\n(As an aside here, I don't fully understand the difference between the built-in rails tasks and the ones that have to be searched for via rake. I also don't understand why the migration code needs to fork a separate process to do `db:test:prepare`. That task just ends up doing `db_namespace[\"test:load\"].invoke`. Why couldn't the `db:test:prepare` tasks simply be invoked the same way in the same process?)\r\n\r\n### System configuration\r\n**Rails version**: 6.0.5\r\n\r\n**Ruby version**: 2.6.5\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45750/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45750/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45736","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45736/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45736/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45736/events","html_url":"https://github.com/rails/rails/issues/45736","id":1326221102,"node_id":"I_kwDNIULOTwyHLg","number":45736,"title":"Virtual stored columns are always nil for newly created records","user":{"login":"camiloforero","id":6606686,"node_id":"MDQ6VXNlcjY2MDY2ODY=","avatar_url":"https://avatars.githubusercontent.com/u/6606686?v=4","gravatar_id":"","url":"https://api.github.com/users/camiloforero","html_url":"https://github.com/camiloforero","followers_url":"https://api.github.com/users/camiloforero/followers","following_url":"https://api.github.com/users/camiloforero/following{/other_user}","gists_url":"https://api.github.com/users/camiloforero/gists{/gist_id}","starred_url":"https://api.github.com/users/camiloforero/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/camiloforero/subscriptions","organizations_url":"https://api.github.com/users/camiloforero/orgs","repos_url":"https://api.github.com/users/camiloforero/repos","events_url":"https://api.github.com/users/camiloforero/events{/privacy}","received_events_url":"https://api.github.com/users/camiloforero/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-02T18:09:28Z","updated_at":"2022-08-02T19:28:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nUsing postgresql:\r\n\r\nGenerate a new model with one or more columns with default values, and a virtual stored column based on those other columns\r\nCreate a new record of that model\r\nAccess the value of the virtual stored column from the newly created ActiveRecord object\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem 'pg', '~> 1.4'\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection \"postgresql:///test\"\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.integer :counter1, null: false, default: 0\r\n    t.integer :counter2, null: false, default: 0\r\n    t.virtual :counter_sum, type: :integer, as: \"counter1 + counter2\", stored: true\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_virtual_column_value_populated\r\n    post = Post.create!\r\n\r\n    assert_equal 0, post.counter_sum\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe value of the virtual column should be *something*, in this particular case, 0\r\n\r\n### Actual behavior\r\nThe value of the virtual column is `nil`. The test fails with the following output\r\n```ruby\r\n# Running:\r\n\r\nD, [2022-08-02T13:05:17.402730 #13548] DEBUG -- :   TRANSACTION (0.1ms)  BEGIN\r\nD, [2022-08-02T13:05:17.403136 #13548] DEBUG -- :   Post Create (0.6ms)  INSERT INTO \"posts\" DEFAULT VALUES RETURNING \"id\"\r\nD, [2022-08-02T13:05:17.406144 #13548] DEBUG -- :   TRANSACTION (2.6ms)  COMMIT\r\nF\r\n\r\nFailure:\r\nBugTest#test_virtual_column_value_populated [stored_bug.rb:37]:\r\nExpected: 0\r\n  Actual: nil\r\n\r\n\r\nrails test stored_bug.rb:34\r\n\r\n\r\n\r\nFinished in 0.011047s, 90.5240 runs/s, 90.5240 assertions/s.\r\n1 runs, 1 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\n### System configuration\r\n**Rails version**: edge\r\n**Ruby version**: 3.1.2\r\n**PostgreSQL version**: 14.4\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45736/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45736/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45709","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45709/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45709/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45709/events","html_url":"https://github.com/rails/rails/issues/45709","id":1323303409,"node_id":"I_kwDNIULOTuAB8Q","number":45709,"title":"Rails & can't pin JS files from Unpkg","user":{"login":"septerr","id":1094216,"node_id":"MDQ6VXNlcjEwOTQyMTY=","avatar_url":"https://avatars.githubusercontent.com/u/1094216?v=4","gravatar_id":"","url":"https://api.github.com/users/septerr","html_url":"https://github.com/septerr","followers_url":"https://api.github.com/users/septerr/followers","following_url":"https://api.github.com/users/septerr/following{/other_user}","gists_url":"https://api.github.com/users/septerr/gists{/gist_id}","starred_url":"https://api.github.com/users/septerr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/septerr/subscriptions","organizations_url":"https://api.github.com/users/septerr/orgs","repos_url":"https://api.github.com/users/septerr/repos","events_url":"https://api.github.com/users/septerr/events{/privacy}","received_events_url":"https://api.github.com/users/septerr/received_events","type":"User","site_admin":false},"labels":[{"id":131864,"node_id":"MDU6TGFiZWwxMzE4NjQ=","url":"https://api.github.com/repos/rails/rails/labels/third%20party%20issue","name":"third party issue","color":"02d7e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-07-30T21:44:43Z","updated_at":"2022-08-02T18:08:34Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nIn a new Rails & app, try to pin a package from Unpkg CDN:\r\n\r\n```\r\n./bin/importmap pin @walletconnect/web3-provider@1.7.8 --from unpkg\r\n```\r\n\r\nYou get following response:\r\n\r\n```\r\nCouldn't find any packages in [\"@walletconnect/web3-provider@1.7.8\"] on unpkg\r\n```\r\nBut the file does exist on unpkg: https://unpkg.com/@walletconnect/web3-provider@1.7.8/dist/umd/index.min.js\r\n\r\nAfter adding some breakpoints in `.rbenv/versions/3.1.0/lib/ruby/gems/3.1.0/gems/importmap-rails-1.1.5/lib/importmap/packager.rb`, saw that the CDN post request and response are as follows:\r\n\r\nPost URL: \r\n```\r\n<URI::HTTPS https://api.jspm.io/generate>\r\n```\r\nPost Body:\r\n```\r\n \"{\\\"install\\\":[\\\"@walletconnect/web3-provider@1.7.8\\\"],\\\"flattenScope\\\":true,\\\"env\\\":[\\\"browser\\\",\\\"module\\\",\\\"production\\\"],\\\"provider\\\":\\\"unpkg\\\"}\"\r\n```\r\n\r\nPost Response:\r\n```\r\n<Net::HTTPUnauthorized 401 Unauthorized readbody=true>\r\n```\r\n\r\n### Expected behavior\r\nExpected the files from unpkg to be pinned.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nMisleading error that files don't exist on unpkg.\r\n\r\n### System configuration\r\n**Rails version**:\r\nRails 7.0.3.1\r\n\r\n**Ruby version**:\r\nruby 3.1.0p0 (2021-12-25 revision fb4df44d16) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45709/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45709/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45691","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45691/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45691/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45691/events","html_url":"https://github.com/rails/rails/issues/45691","id":1322122058,"node_id":"I_kwDNIULOTs37Sg","number":45691,"title":"ActionMailer fails to create correct multipart message with rfc822 attachment","user":{"login":"der-flo","id":35431,"node_id":"MDQ6VXNlcjM1NDMx","avatar_url":"https://avatars.githubusercontent.com/u/35431?v=4","gravatar_id":"","url":"https://api.github.com/users/der-flo","html_url":"https://github.com/der-flo","followers_url":"https://api.github.com/users/der-flo/followers","following_url":"https://api.github.com/users/der-flo/following{/other_user}","gists_url":"https://api.github.com/users/der-flo/gists{/gist_id}","starred_url":"https://api.github.com/users/der-flo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/der-flo/subscriptions","organizations_url":"https://api.github.com/users/der-flo/orgs","repos_url":"https://api.github.com/users/der-flo/repos","events_url":"https://api.github.com/users/der-flo/events{/privacy}","received_events_url":"https://api.github.com/users/der-flo/received_events","type":"User","site_admin":false},"labels":[{"id":107188,"node_id":"MDU6TGFiZWwxMDcxODg=","url":"https://api.github.com/repos/rails/rails/labels/actionmailer","name":"actionmailer","color":"8B00FC","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-29T11:19:00Z","updated_at":"2022-08-02T19:46:17Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I cannot re-open #42849 so I create a new issue…\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire 'bundler/inline'\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n  gem 'rails', github: 'rails/rails', branch: 'main'\r\nend\r\n\r\nrequire 'minitest/autorun'\r\nrequire 'action_mailer/railtie'\r\n\r\nclass TestMailer < ActionMailer::Base\r\n  def main\r\n    message_to_attach =  <<~MAIL.gsub(/\\n/, \"\\r\\n\")\r\n      Message-ID: <12345@foo.example>\r\n      Subject: Test\r\n      From: test1@foo.example\r\n      To: test2@foo.example\r\n      \r\n      hello world\r\n    MAIL\r\n    attachments['test.eml'] = {\r\n      mime_type: params[:mime_type],\r\n      content: message_to_attach\r\n    }\r\n\r\n    mail(from: 'test3@foo.example', to: 'test4@foo.example', subject: 'Test outer') do |format|\r\n      format.text { \"outer text - #{params[:mime_type]} attachment\" }\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_with_plain_mime_type\r\n    message = TestMailer.with(mime_type: 'text/plain').main\r\n    assert_equal message.mime_type, 'multipart/mixed'\r\n  end\r\n\r\n  def test_with_rfc822_mime_type\r\n    message = TestMailer.with(mime_type: 'message/rfc822').main\r\n    assert_equal message.mime_type, 'multipart/mixed'\r\n  end\r\nend\r\n```\r\n\r\nThe second test fails, the message object is rendered as follows:\r\n```\r\nDate: Fri, 23 Jul 2021 13:59:19 +0200\r\nFrom: test3@foo.example\r\nTo: test4@foo.example\r\nMessage-ID: <60faaf1738a02_14fbd98-3fb@flo.adigi.ai.mail>\r\nSubject: Test outer\r\nMime-Version: 1.0\r\nContent-Type: text/plain;\r\n boundary=\"--==_mimepart_60faaf1738008_14fbd98-484\";\r\n charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\n\r\n\r\n----==_mimepart_60faaf1738008_14fbd98-484\r\nContent-Type: text/plain;\r\n charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\n\r\nouter text - message/rfc822 attachment\r\n----==_mimepart_60faaf1738008_14fbd98-484\r\nContent-Type: message/rfc822\r\nContent-Transfer-Encoding: \r\nContent-Disposition: attachment;\r\n filename=test.eml\r\nContent-ID: <60faaf1739102_14fbd98-2b@flo.adigi.ai.mail>\r\n\r\nMessage-ID: <12345@foo.example>\r\nSubject: Test\r\nFrom: test1@foo.example\r\nTo: test2@foo.example\r\n\r\nhello world\r\n\r\n----==_mimepart_60faaf1738008_14fbd98-484--\r\n\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe `message.mime_type` is `multipart/mixed` in both test cases. ActionMailer handles attachments in the way it is described in https://guides.rubyonrails.org/action_mailer_basics.html#adding-attachments describes.\r\n\r\n### Actual behavior\r\n\r\nWhen attaching a `message/rfc822` - an email message - the generated mail parts are not nested correctly, the outer `multipart/mixed` is missing.\r\n\r\nPerhaps this behaviour is caused by the [special handling](https://github.com/mikel/mail/blob/master/lib/mail/attachments_list.rb#L9) of such attachments in the `mail` gem.\r\n\r\n\r\n### System configuration\r\n**Rails version**: main\r\n\r\n**Ruby version**: 3.0.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45691/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":1,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45691/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45640","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45640/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45640/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45640/events","html_url":"https://github.com/rails/rails/issues/45640","id":1315219867,"node_id":"I_kwDNIULOTmSpmw","number":45640,"title":"ActiveModel::Dirty changes not reset properly when using store_accessor (tested with postgres)","user":{"login":"vccoffey","id":59817868,"node_id":"MDQ6VXNlcjU5ODE3ODY4","avatar_url":"https://avatars.githubusercontent.com/u/59817868?v=4","gravatar_id":"","url":"https://api.github.com/users/vccoffey","html_url":"https://github.com/vccoffey","followers_url":"https://api.github.com/users/vccoffey/followers","following_url":"https://api.github.com/users/vccoffey/following{/other_user}","gists_url":"https://api.github.com/users/vccoffey/gists{/gist_id}","starred_url":"https://api.github.com/users/vccoffey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vccoffey/subscriptions","organizations_url":"https://api.github.com/users/vccoffey/orgs","repos_url":"https://api.github.com/users/vccoffey/repos","events_url":"https://api.github.com/users/vccoffey/events{/privacy}","received_events_url":"https://api.github.com/users/vccoffey/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-07-22T16:44:57Z","updated_at":"2022-07-23T17:51:49Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nUsing PostgreSQL (pg) database\r\nGiven a model with a jsonb column\r\n```\r\nclass CreateTestModels < ActiveRecord::Migration[6.1]\r\n  def change\r\n    create_table :test_models do |t|\r\n      t.jsonb :jsonb_hash_attr\r\n      t.timestamps\r\n    end\r\n  end\r\nend\r\n```\r\nusing store_accessor\r\n```\r\nclass TestModel < ApplicationRecord\r\n  store_accessor :jsonb_hash_attr, :key, prefix: true\r\nend\r\n```\r\n\r\n### Expected behavior\r\nBoth tests pass:\r\n```\r\nrequire \"test_helper\"\r\nclass TestModelTest < ActiveSupport::TestCase\r\n  test \"does not show changes for a jsonb attribute if changed back to original value\" do\r\n    tm = TestModel.create jsonb_hash_attr: { \"key\" => \"foo\" }\r\n    tm.jsonb_hash_attr = { \"key\" => \"bar\" }\r\n    assert_equal tm.jsonb_hash_attr_change, [{ \"key\" => \"foo\" }, { \"key\" => \"bar\" }]\r\n    tm.jsonb_hash_attr = { \"key\" => \"foo\" }\r\n    assert_equal tm.jsonb_hash_attr_change, nil\r\n  end\r\n\r\n  test \"does not show changes for a jsonb attribute if changed back to original value using store_accessor\" do\r\n    tm = TestModel.create jsonb_hash_attr: { \"key\" => \"foo\" }\r\n    tm.jsonb_hash_attr_key = \"bar\"\r\n    assert_equal tm.jsonb_hash_attr_change, [{ \"key\" => \"foo\" }, { \"key\" => \"bar\" }]\r\n    tm.jsonb_hash_attr_key = \"foo\"\r\n    assert_equal tm.jsonb_hash_attr_change, nil\r\n  end\r\nend\r\n```\r\n### Actual behavior\r\nThe second test fails\r\n```\r\n--- expected\r\n+++ actual\r\n-[{\"key\"=>\"foo\"}, {\"key\"=>\"foo\"}]\r\n+nil\r\n```\r\n### System configuration\r\n**Rails version**:\r\ntested with 6.1.6.1 and 7.0.3.1\r\n\r\n**Ruby version**: 3.1.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45640/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45640/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45639","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45639/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45639/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45639/events","html_url":"https://github.com/rails/rails/issues/45639","id":1314984267,"node_id":"I_kwDNIULOTmERSw","number":45639,"title":"Explicitly touch on save","user":{"login":"schmijos","id":245443,"node_id":"MDQ6VXNlcjI0NTQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/245443?v=4","gravatar_id":"","url":"https://api.github.com/users/schmijos","html_url":"https://github.com/schmijos","followers_url":"https://api.github.com/users/schmijos/followers","following_url":"https://api.github.com/users/schmijos/following{/other_user}","gists_url":"https://api.github.com/users/schmijos/gists{/gist_id}","starred_url":"https://api.github.com/users/schmijos/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/schmijos/subscriptions","organizations_url":"https://api.github.com/users/schmijos/orgs","repos_url":"https://api.github.com/users/schmijos/repos","events_url":"https://api.github.com/users/schmijos/events{/privacy}","received_events_url":"https://api.github.com/users/schmijos/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-22T13:05:14Z","updated_at":"2022-07-22T20:31:00Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  ruby \"3.1.0\"\r\n  gem \"rails\", \"7.0.3.1\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.timestamps\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_save_touch\r\n    Post.create!(updated_at: 3.days.ago)\r\n    Post.last.save!(touch: true)\r\n\r\n    assert_in_delta 0.seconds.ago.to_i, Post.last.updated_at.to_i, 5\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nIf I tell _ActiveRecord_ to explicitly \"touch\", then I would expect it to update the timestamps.\r\n\r\n### Actual behavior\r\n`save` never hits the database if no attribute changed.\r\n\r\n### System configuration\r\n**Rails version**: >= 3.0.0, < 8","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45639/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45639/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45638","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45638/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45638/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45638/events","html_url":"https://github.com/rails/rails/issues/45638","id":1314662755,"node_id":"I_kwDNIULOTlwpYw","number":45638,"title":"CSRF Token Expiry issue.","user":{"login":"MBM1607","id":47133639,"node_id":"MDQ6VXNlcjQ3MTMzNjM5","avatar_url":"https://avatars.githubusercontent.com/u/47133639?v=4","gravatar_id":"","url":"https://api.github.com/users/MBM1607","html_url":"https://github.com/MBM1607","followers_url":"https://api.github.com/users/MBM1607/followers","following_url":"https://api.github.com/users/MBM1607/following{/other_user}","gists_url":"https://api.github.com/users/MBM1607/gists{/gist_id}","starred_url":"https://api.github.com/users/MBM1607/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MBM1607/subscriptions","organizations_url":"https://api.github.com/users/MBM1607/orgs","repos_url":"https://api.github.com/users/MBM1607/repos","events_url":"https://api.github.com/users/MBM1607/events{/privacy}","received_events_url":"https://api.github.com/users/MBM1607/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-22T08:38:19Z","updated_at":"2022-07-22T08:40:22Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"We are encountering an issue with form submission in production environment.\r\nThe criteria seems to be exceptionally rare, I have been unable to replicate the issue. \r\n\r\nCSRF token is created and validated just fine.\r\n\r\n### Timing\r\n\r\nIssue seems to occur only when users wait more than 2 hours on a form before submitting, but doing this we have been unable to reproduce as well.\r\n\r\n### Logs\r\n```\r\nW, [2022-07-14T15:19:37.535241 #2433]  WARN -- : Can't verify CSRF token authenticity.\r\nI, [2022-07-14T15:19:37.535556 #2433]  INFO -- : Completed 422 Unprocessable Entity in 1ms (ActiveRecord: 0.0ms | Allocations: 291)\r\nF, [2022-07-14T15:19:37.536425 #2433] FATAL -- :   \r\nActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n```\r\n\r\n### System configuration\r\n**Rails version 6.1.6** \r\n**Ruby version 2.7.4**\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45638/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45638/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45636","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45636/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45636/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45636/events","html_url":"https://github.com/rails/rails/issues/45636","id":1314546104,"node_id":"I_kwDNIULOTlphuA","number":45636,"title":"Invalid template types should raise an exception","user":{"login":"axos88","id":1281218,"node_id":"MDQ6VXNlcjEyODEyMTg=","avatar_url":"https://avatars.githubusercontent.com/u/1281218?v=4","gravatar_id":"","url":"https://api.github.com/users/axos88","html_url":"https://github.com/axos88","followers_url":"https://api.github.com/users/axos88/followers","following_url":"https://api.github.com/users/axos88/following{/other_user}","gists_url":"https://api.github.com/users/axos88/gists{/gist_id}","starred_url":"https://api.github.com/users/axos88/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/axos88/subscriptions","organizations_url":"https://api.github.com/users/axos88/orgs","repos_url":"https://api.github.com/users/axos88/repos","events_url":"https://api.github.com/users/axos88/events{/privacy}","received_events_url":"https://api.github.com/users/axos88/received_events","type":"User","site_admin":false},"labels":[{"id":3666649,"node_id":"MDU6TGFiZWwzNjY2NjQ5","url":"https://api.github.com/repos/rails/rails/labels/actionview","name":"actionview","color":"d7e102","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-07-22T07:40:54Z","updated_at":"2022-08-17T18:02:14Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n  - Create a template in views/foo/bar.txt.erb # Note .txt, and not .text\r\n\r\n```ruby\r\ndetails = { locale: [:en], formats: [:txt], handlers: [:erb], variants: []}\r\nActionController::Base.view_paths.find(\"bar\", 'foo', false, details, nil, [])\r\n```\r\n\r\n### Expected behavior\r\n\r\nShould throw an exception that :txt is not a registered type in Template::Types\r\n\r\n### Actual behavior\r\n\r\nSilently fails to find the otherwise existing template, specifying the correct directory it the file resides in. \r\nConfustion intensifies.\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3\r\n**Ruby version**: 2.7.6","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45636/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45636/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45635","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45635/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45635/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45635/events","html_url":"https://github.com/rails/rails/issues/45635","id":1314015345,"node_id":"I_kwDNIULOTlJIcQ","number":45635,"title":"Recent security releases are missing from the Releases page","user":{"login":"georgeclaghorn","id":94129,"node_id":"MDQ6VXNlcjk0MTI5","avatar_url":"https://avatars.githubusercontent.com/u/94129?v=4","gravatar_id":"","url":"https://api.github.com/users/georgeclaghorn","html_url":"https://github.com/georgeclaghorn","followers_url":"https://api.github.com/users/georgeclaghorn/followers","following_url":"https://api.github.com/users/georgeclaghorn/following{/other_user}","gists_url":"https://api.github.com/users/georgeclaghorn/gists{/gist_id}","starred_url":"https://api.github.com/users/georgeclaghorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/georgeclaghorn/subscriptions","organizations_url":"https://api.github.com/users/georgeclaghorn/orgs","repos_url":"https://api.github.com/users/georgeclaghorn/repos","events_url":"https://api.github.com/users/georgeclaghorn/events{/privacy}","received_events_url":"https://api.github.com/users/georgeclaghorn/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false},"assignees":[{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2022-07-22T01:21:34Z","updated_at":"2022-08-19T18:08:06Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Rails versions 7.0.3.1, 6.1.6.1, 6.0.5.1, and 5.2.8.1 are not listed at this GitHub repository’s [Releases](https://github.com/rails/rails/releases) page. Past releases are listed there, including the most recent round of bugfix releases from May.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45635/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45635/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45632","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45632/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45632/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45632/events","html_url":"https://github.com/rails/rails/issues/45632","id":1312439669,"node_id":"I_kwDNIULOTjo9dQ","number":45632,"title":"`_read_attribute` method should also check whether an attribute is aliased or not","user":{"login":"khiav223577","id":4011729,"node_id":"MDQ6VXNlcjQwMTE3Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4011729?v=4","gravatar_id":"","url":"https://api.github.com/users/khiav223577","html_url":"https://github.com/khiav223577","followers_url":"https://api.github.com/users/khiav223577/followers","following_url":"https://api.github.com/users/khiav223577/following{/other_user}","gists_url":"https://api.github.com/users/khiav223577/gists{/gist_id}","starred_url":"https://api.github.com/users/khiav223577/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/khiav223577/subscriptions","organizations_url":"https://api.github.com/users/khiav223577/orgs","repos_url":"https://api.github.com/users/khiav223577/repos","events_url":"https://api.github.com/users/khiav223577/events{/privacy}","received_events_url":"https://api.github.com/users/khiav223577/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-07-21T03:14:22Z","updated_at":"2022-07-21T21:37:09Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n```rb\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  gem \"activerecord\", '7.0.3'\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table \"users\", force: :cascade do |t|\r\n    t.string :name\r\n  end\r\n\r\n  create_table \"posts\", force: :cascade do |t|\r\n    t.string :title\r\n    t.integer :userId\r\n  end\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\n  has_many :posts\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  belongs_to :user\r\n\r\n  alias_attribute :user_id, :userId\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def setup\r\n    user = User.create!(name: 'Tester')\r\n    post = Post.create!(user_id: user.id, title: 'Post A')\r\n  end\r\n\r\n  def test_has_many\r\n    assert_equal ['Post A'], User.first.posts.map(&:title)\r\n  end\r\n\r\n  def test_belongs_to\r\n    assert_equal 'Tester', Post.first.user&.name\r\n  end\r\nend\r\n```\r\n\r\nResult:\r\n```\r\nFinished in 0.059414s, 33.6619 runs/s, 33.6619 assertions/s.\r\n\r\n  1) Failure:\r\nBugTest#test_belongs_to [test.rb:53]:\r\nExpected: \"Tester\"\r\n  Actual: nil\r\n\r\n2 runs, 2 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\n### Expected behavior\r\n\r\nI run into this issue when I tried to add an association on an aliased attribute.\r\n\r\nThen I found `belongs_to_association` will use `_read_attribute` method to check if this `foreign_key` exists on this model or not.\r\nIt doesn't pass the condition, therefore `find_target` will not be triggered.\r\nhttps://github.com/rails/rails/blob/3272335f8f4739629283cdeff7c3db723f34a3f5/activerecord/lib/active_record/associations/association.rb#L172-L173\r\nhttps://github.com/rails/rails/blob/3272335f8f4739629283cdeff7c3db723f34a3f5/activerecord/lib/active_record/associations/association.rb#L274-L276\r\nhttps://github.com/rails/rails/blob/2ea5ff9e13b9c5d0d5d25b2441efa81a2de2a262/activerecord/lib/active_record/associations/belongs_to_association.rb#L133-L135\r\nhttps://github.com/rails/rails/blob/4ae0390c1051a39ec16a4a95451cd06172a1b260/activerecord/lib/active_record/attribute_methods/read.rb#L37-L39\r\n\r\nThe `read_attribute` method takes `attribute_alias` into consideration since https://github.com/rails/rails/pull/26529, while `_read_attribute` doesn't. I think it should, too.\r\n\r\n### Actual behavior\r\n\r\nSee the test script below.\r\n\r\n### System configuration\r\n**Rails version**: \r\n7.0.3.1\r\n\r\n**Ruby version**:\r\nruby 3.0.0p0 (2020-12-25 revision 95aff21468) [x86_64-linux]","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45632/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45632/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45609","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45609/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45609/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45609/events","html_url":"https://github.com/rails/rails/issues/45609","id":1306840730,"node_id":"I_kwDNIULOTeTOmg","number":45609,"title":"Cannot add ActiveModel::Attribute::FromDatabase to permitted YAML safe load classes","user":{"login":"stanhu","id":963826,"node_id":"MDQ6VXNlcjk2MzgyNg==","avatar_url":"https://avatars.githubusercontent.com/u/963826?v=4","gravatar_id":"","url":"https://api.github.com/users/stanhu","html_url":"https://github.com/stanhu","followers_url":"https://api.github.com/users/stanhu/followers","following_url":"https://api.github.com/users/stanhu/following{/other_user}","gists_url":"https://api.github.com/users/stanhu/gists{/gist_id}","starred_url":"https://api.github.com/users/stanhu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stanhu/subscriptions","organizations_url":"https://api.github.com/users/stanhu/orgs","repos_url":"https://api.github.com/users/stanhu/repos","events_url":"https://api.github.com/users/stanhu/events{/privacy}","received_events_url":"https://api.github.com/users/stanhu/received_events","type":"User","site_admin":false},"labels":[{"id":107186,"node_id":"MDU6TGFiZWwxMDcxODY=","url":"https://api.github.com/repos/rails/rails/labels/regression","name":"regression","color":"e10c02","default":false,"description":null},{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-07-16T15:51:30Z","updated_at":"2022-08-18T11:39:07Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWe have some database entries serialized to YAML. For example:\r\n\r\n```\r\n---\r\n:custom_message: Repository Download Started\r\n:author_name: !ruby/object:DeployToken\r\n  concise_attributes:\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: deploy_token_type\r\n    value_before_type_cast: 1\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: id\r\n    value_before_type_cast: 2\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: revoked\r\n    value_before_type_cast: false\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: read_repository\r\n    value_before_type_cast: true\r\n```\r\n\r\nHowever, since the security release announced in https://rubyonrails.org/2022/7/12/Rails-Versions-7-0-3-1-6-1-6-1-6-0-5-1-and-5-2-8-1-have-been-released to address CVE-2022-32224, we cannot simply add `ActiveModel::Attribute::FromDatabase` to the permitted class list:\r\n\r\n```ruby\r\n(byebug) YAML.safe_load(payload, permitted_classes: [ActiveModel::Attribute::FromDatabase, Symbol, DeployToken], aliases: true)\r\n*** NameError Exception: private constant ActiveModel::Attribute::FromDatabase referenced\r\n```\r\n\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\n### Expected behavior\r\n\r\nYAML loading should work. Should this constant no longer be private since it's been serialized to YAML?\r\n\r\n### Actual behavior\r\n\r\nYAML loading fails with:\r\n\r\n```\r\n*** NameError Exception: private constant ActiveModel::Attribute::FromDatabase referenced\r\n```\r\n\r\n### System configuration\r\n\r\n**Rails version**:\r\nv6.1.6.1\r\n\r\n**Ruby version**:\r\nv2.7.5","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45609/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45609/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45596","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45596/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45596/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45596/events","html_url":"https://github.com/rails/rails/issues/45596","id":1304247666,"node_id":"I_kwDNIULOTb09cg","number":45596,"title":"Setting `schema_dump` in database.yml does not change dump format","user":{"login":"leboshi","id":16550140,"node_id":"MDQ6VXNlcjE2NTUwMTQw","avatar_url":"https://avatars.githubusercontent.com/u/16550140?v=4","gravatar_id":"","url":"https://api.github.com/users/leboshi","html_url":"https://github.com/leboshi","followers_url":"https://api.github.com/users/leboshi/followers","following_url":"https://api.github.com/users/leboshi/following{/other_user}","gists_url":"https://api.github.com/users/leboshi/gists{/gist_id}","starred_url":"https://api.github.com/users/leboshi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leboshi/subscriptions","organizations_url":"https://api.github.com/users/leboshi/orgs","repos_url":"https://api.github.com/users/leboshi/repos","events_url":"https://api.github.com/users/leboshi/events{/privacy}","received_events_url":"https://api.github.com/users/leboshi/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-14T04:44:37Z","updated_at":"2022-07-14T14:34:25Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Originally brought up in #43173.  I opened PR #43240 to address it, but that was closed when it was decided #43530 did the same thing.  Unfortunately, I don't think any of us were really reading what the other was doing, because the two PRs actually each only addressed half the opened issue.\r\n\r\nPR incoming to fully address this and the second half of #43173!\r\n\r\n### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_schema_format_corresponds_with_schema_dump\r\n    Dir.mktmpdir do |dir|\r\n      ActiveRecord::Tasks::DatabaseTasks.stub(:db_dir, dir) do\r\n        old_configurations = ActiveRecord::Base.configurations\r\n        ActiveRecord::Base.configurations = {\r\n          \"development\" => {\r\n            \"primary\" => {\r\n              \"database\" => \"dev-db\",\r\n              \"schema_dump\" => \"primary_structure.sql\"\r\n            }\r\n          }\r\n        }\r\n\r\n        db_config = ActiveRecord::Base.configurations.configs_for(env_name: \"development\", name: \"primary\")\r\n        ActiveRecord::Tasks::DatabaseTasks.dump_schema(db_config)\r\n\r\n        dump_contents = File.read(File.join(dir, \"primary_structure.sql\"))\r\n        refute_match /ActiveRecord::Schema/, dump_contents\r\n        assert_match /CREATE TABLE/, dump_contents\r\n      ensure\r\n        ActiveRecord::Base.configurations = old_configurations\r\n        ActiveRecord::Base.clear_cache!\r\n      end\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nIf `schema_dump` is set to something like `primary_structure.sql`, I'd expect it to do a SQL structure dump rather than a Ruby schema dump.\r\n\r\n### Actual behavior\r\nThe filename in `schema_dump` has no bearing on the format of the dump Rails writes or expects to read.\r\n\r\n### System configuration\r\n**Rails version**: (main)\r\n\r\n**Ruby version**: 3.1.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45596/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45596/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45998","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45998/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45998/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45998/events","html_url":"https://github.com/rails/rails/issues/45998","id":1368868095,"node_id":"I_kwDNIULOUZdE_w","number":45998,"title":"CSRF getting different token","user":{"login":"Saleh-Salem","id":22606707,"node_id":"MDQ6VXNlcjIyNjA2NzA3","avatar_url":"https://avatars.githubusercontent.com/u/22606707?v=4","gravatar_id":"","url":"https://api.github.com/users/Saleh-Salem","html_url":"https://github.com/Saleh-Salem","followers_url":"https://api.github.com/users/Saleh-Salem/followers","following_url":"https://api.github.com/users/Saleh-Salem/following{/other_user}","gists_url":"https://api.github.com/users/Saleh-Salem/gists{/gist_id}","starred_url":"https://api.github.com/users/Saleh-Salem/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Saleh-Salem/subscriptions","organizations_url":"https://api.github.com/users/Saleh-Salem/orgs","repos_url":"https://api.github.com/users/Saleh-Salem/repos","events_url":"https://api.github.com/users/Saleh-Salem/events{/privacy}","received_events_url":"https://api.github.com/users/Saleh-Salem/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-11T08:08:17Z","updated_at":"2022-09-11T08:27:32Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When validating the CSRF token getting an exception in API\r\n \r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\nthe `session[:_csrf_token]` and  `request.x_csrf_token` is different and getting issue.\r\nwhen I need to skip the csrf, I add `verify_authenticity_token`, In this case, I don't need to skip it.\r\nI debug and found the issue in the method:\r\n\r\n```\r\n  def compare_with_global_token(token, session = nil) # :doc:\r\n    ActiveSupport::SecurityUtils.fixed_length_secure_compare(token, global_csrf_token(session))\r\n  end\r\n```\r\n\r\nwhat is `session[:_csrf_token]` and how can I implement it in API?\r\nIs there any missing from my side?\r\n### Steps to reproduce\r\n\r\n1. Add `protect_from_forgery with: :exception` .\r\n2. When logging in return token in response is generated by `form_authenticity_token`.\r\n3. When Trying to request any POST, PUT or DELETE API get an exception.\r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nReturn Response without exception.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\ngetting exception \r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\n### System configuration\r\n**Rails version**:\r\n6.0.3.5\r\n**Ruby version**:\r\n2.7.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45998/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45998/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45994","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45994/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45994/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45994/events","html_url":"https://github.com/rails/rails/issues/45994","id":1368555704,"node_id":"I_kwDNIULOUZKAuA","number":45994,"title":"LoadInterlockAwareMonitor deadlock when clearing cache (multiple databases, test)","user":{"login":"kuahyeow","id":16723,"node_id":"MDQ6VXNlcjE2NzIz","avatar_url":"https://avatars.githubusercontent.com/u/16723?v=4","gravatar_id":"","url":"https://api.github.com/users/kuahyeow","html_url":"https://github.com/kuahyeow","followers_url":"https://api.github.com/users/kuahyeow/followers","following_url":"https://api.github.com/users/kuahyeow/following{/other_user}","gists_url":"https://api.github.com/users/kuahyeow/gists{/gist_id}","starred_url":"https://api.github.com/users/kuahyeow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kuahyeow/subscriptions","organizations_url":"https://api.github.com/users/kuahyeow/orgs","repos_url":"https://api.github.com/users/kuahyeow/repos","events_url":"https://api.github.com/users/kuahyeow/events{/privacy}","received_events_url":"https://api.github.com/users/kuahyeow/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-10T08:52:46Z","updated_at":"2022-09-10T08:56:12Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"With multiple databases, we observe hangs within system tests.\r\n\r\nSee also https://gitlab.com/gitlab-org/gitlab/-/issues/371468 (GitLab is at Rails 6.1, Ruby 2.7.5)\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nHere's a minimal reproduction with Rails 7.0.3.1\r\n\r\n1. Checkout https://gitlab.com/tkuah/multi_database_system_test\r\n2. `bundle install`\r\n3. `bundle exec rails db:migrate`\r\n4. `bundle rails test test/system/home_pages_test.rb`\r\n\r\nThe conditions are:\r\n\r\n1. Multiple databases\r\n2. System test where there's an async request which overlaps with the main thread\r\n\r\n### Expected behavior\r\n\r\nIt does not hang, and the test completes\r\n\r\n### Actual behavior\r\n\r\nIt hangs. It looks like it's hanging when clearing query cache (see https://gitlab.com/gitlab-org/gitlab/-/issues/371468#note_1087203883, and https://gitlab.com/gitlab-org/gitlab/-/issues/371468#note_1088779499)\r\n\r\nA backtrace dump taken while the test is hanging [sigdump-68442.log](https://github.com/rails/rails/files/9539878/sigdump-68442.log)\r\n\r\nMy suspicion is that:\r\n\r\n1. `lock_thread` is true for system tests\r\n3. Therefore both the main thread, and the Puma thread attempt to clear query cache for the same set of connections\r\n\r\nSo we have two connections:\r\n\r\n1. Puma thread takes a `LoadInterlockAwareMonitor` lock for primary connection via `Post.transaction`\r\n2. Main thread takes a `LoadInterlockAwareMonitor` lock for animal connection via implicit transaction that `create` does\r\n3. Due to 2, main thread attempts to clear query cache for primary connection. **Waits for 1's lock**\r\n4. Due to 1, and because of `lock_thread`, puma thread clears query cache for primary connection. It takes a `LoadInterlockAwareMonitor` lock for primary connection which succeds\r\n5. Due to 1, puma thread now attempts clears query cache for animal connection. **Waits for 2's lock**\r\n\r\nSee [`clear_query_caches_for_current_thread` method](https://github.com/rails/rails/blob/e24fbf71fa0a10f63346b9b42604451958740844/activerecord/lib/active_record/connection_handling.rb#L244-L248)\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: ruby 2.7.5p203 (2021-11-24 revision f69aeb8314) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45994/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45994/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45984","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45984/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45984/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45984/events","html_url":"https://github.com/rails/rails/issues/45984","id":1368144421,"node_id":"I_kwDNIULOUYw6JQ","number":45984,"title":"Cannot Eager Load has_many :through Relationships with custom scope","user":{"login":"dcorrigan","id":2445528,"node_id":"MDQ6VXNlcjI0NDU1Mjg=","avatar_url":"https://avatars.githubusercontent.com/u/2445528?v=4","gravatar_id":"","url":"https://api.github.com/users/dcorrigan","html_url":"https://github.com/dcorrigan","followers_url":"https://api.github.com/users/dcorrigan/followers","following_url":"https://api.github.com/users/dcorrigan/following{/other_user}","gists_url":"https://api.github.com/users/dcorrigan/gists{/gist_id}","starred_url":"https://api.github.com/users/dcorrigan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dcorrigan/subscriptions","organizations_url":"https://api.github.com/users/dcorrigan/orgs","repos_url":"https://api.github.com/users/dcorrigan/repos","events_url":"https://api.github.com/users/dcorrigan/events{/privacy}","received_events_url":"https://api.github.com/users/dcorrigan/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-09T17:47:35Z","updated_at":"2022-09-09T17:47:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nThis seems like it's the same as #28324, but I'm still seeing the issue in Rails 7. \r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n  end\r\n\r\n  create_table :images, force: true do |t|\r\n    t.string :title\r\n    t.integer :post_id\r\n  end\r\n\r\n  create_table :captions, force: true do |t|\r\n    t.integer :image_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :images\r\n  has_many :captions, lambda { order('images.title DESC') }, through: :images\r\nend\r\n\r\nclass Image < ActiveRecord::Base\r\n  belongs_to :post\r\n  has_one :caption\r\nend\r\n\r\nclass Caption < ActiveRecord::Base\r\n  belongs_to :image\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_preload_has_many_through_association_with_scope\r\n    post = Post.create!\r\n    image = Image.create!\r\n    image.caption = Caption.create!\r\n    post.images << image\r\n    post.save!\r\n\r\n    # Access through the model works\r\n    assert_includes post.captions, Caption.first\r\n\r\n    # Query with association preloaded does not.\r\n    # When evaluated, it will apply the scope without the relevant JOIN table:\r\n    # SELECT \"captions\".* FROM \"captions\" WHERE \"captions\".\"image_id\" = ? ORDER BY images.title DESC\r\n    preloaded = Post.where(id: post.id).includes(:captions)\r\n\r\n    assert_includes preloaded.first.captions, Caption.first\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe test passes and we're able to eager load has_many :through associations with custom scopes in this way.\r\n\r\nI realize this can be fixed by adding a `references(:images)` to the query, but it seems reasonable to expect AR to infer that that the join is necessary here.\r\n\r\n### Actual behavior\r\n\r\nTest fails with an error: `ActiveRecord::StatementInvalid: SQLite3::SQLException: no such column: images.title`\r\n\r\n### System configuration\r\n**Rails version**: 7.0 \r\n\r\n**Ruby version**: 3.1.2p20\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45984/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45967","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45967/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45967/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45967/events","html_url":"https://github.com/rails/rails/issues/45967","id":1366038829,"node_id":"I_kwDNIULOUWwZLQ","number":45967,"title":"Inconsistent update of timestamps while updating associations with *_ids=","user":{"login":"matthee","id":547653,"node_id":"MDQ6VXNlcjU0NzY1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/547653?v=4","gravatar_id":"","url":"https://api.github.com/users/matthee","html_url":"https://github.com/matthee","followers_url":"https://api.github.com/users/matthee/followers","following_url":"https://api.github.com/users/matthee/following{/other_user}","gists_url":"https://api.github.com/users/matthee/gists{/gist_id}","starred_url":"https://api.github.com/users/matthee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matthee/subscriptions","organizations_url":"https://api.github.com/users/matthee/orgs","repos_url":"https://api.github.com/users/matthee/repos","events_url":"https://api.github.com/users/matthee/events{/privacy}","received_events_url":"https://api.github.com/users/matthee/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-08T10:51:09Z","updated_at":"2022-09-09T03:10:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"ActiveRecord inconsistently updates the `updated_at` column when changing `has_many through:` associations.\r\n\r\n### Steps to reproduce\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"activesupport\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"active_support/testing/time_helpers\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.timestamps\r\n  end\r\n  \r\n  create_table :tags, force: true do |t|\r\n  end\r\n\r\n  create_table :taggings, force: true do |t|\r\n    t.integer :post_id\r\n    t.integer :tag_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :taggings, dependent: :destroy\r\n  \r\n  has_many :tags, through: :taggings\r\nend\r\n\r\nclass Tagging < ActiveRecord::Base\r\n  belongs_to :post, touch: true\r\n  belongs_to :tag\r\nend\r\n\r\nclass Tag < ActiveRecord::Base\r\n  has_many :taggings\r\n  has_many :posts, through: :taggings\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  include ActiveSupport::Testing::TimeHelpers\r\n  \r\n  def test_updated_at_is_updated_when_setting_has_many_through_association\r\n    freeze_time\r\n        \r\n    tag_1 = Tag.create!\r\n    tag_2 = Tag.create!\r\n      \r\n    post = Post.create!\r\n    \r\n    travel_to(now = 1.hour.from_now)\r\n    \r\n    # Adding tags updates post.updated_at\r\n    post.update(tag_ids: [tag_1.id, tag_2.id])\r\n    assert_in_delta now, post.updated_at, 1.second, \"post#updated_at was not updated when adding tags\"\r\n    \r\n    # Removing tags does not update post.updated_at :(\r\n    travel_to(now = 2.hours.from_now)\r\n    post.update(tag_ids: [tag_1.id])\r\n    assert_in_delta now, post.updated_at, 1.second, \"post#updated_at was not updated when removing tags\"\r\n  end\r\n  \r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nIn the example above, both `.update` calls should update the `updated_at` column of the post record. (when adding and removing records)\r\n\r\n### Actual behavior\r\n\r\nWhen deleting a record, the `updated_at` timestamp is not updated.\r\n\r\n### System configuration\r\n**Rails version**:\r\n7.0.3.1\r\n**Ruby version**:\r\n3.0.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45967/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45967/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45959","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45959/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45959/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45959/events","html_url":"https://github.com/rails/rails/issues/45959","id":1364232810,"node_id":"I_kwDNIULOUVCKag","number":45959,"title":"JSON field not saving data with symbol : and it's saving with arrow =>","user":{"login":"sajjadmurtaza","id":8552702,"node_id":"MDQ6VXNlcjg1NTI3MDI=","avatar_url":"https://avatars.githubusercontent.com/u/8552702?v=4","gravatar_id":"","url":"https://api.github.com/users/sajjadmurtaza","html_url":"https://github.com/sajjadmurtaza","followers_url":"https://api.github.com/users/sajjadmurtaza/followers","following_url":"https://api.github.com/users/sajjadmurtaza/following{/other_user}","gists_url":"https://api.github.com/users/sajjadmurtaza/gists{/gist_id}","starred_url":"https://api.github.com/users/sajjadmurtaza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sajjadmurtaza/subscriptions","organizations_url":"https://api.github.com/users/sajjadmurtaza/orgs","repos_url":"https://api.github.com/users/sajjadmurtaza/repos","events_url":"https://api.github.com/users/sajjadmurtaza/events{/privacy}","received_events_url":"https://api.github.com/users/sajjadmurtaza/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":1071962662,"node_id":"MDU6TGFiZWwxMDcxOTYyNjYy","url":"https://api.github.com/repos/rails/rails/labels/more-information-needed","name":"more-information-needed","color":"bfdadc","default":false,"description":"When reporter needs to provide more information"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-09-07T07:40:12Z","updated_at":"2022-09-08T07:23:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nI have JSON field in my database `t.json \"theme\"`. When I try to save the field hash with : , it's overridden before save\r\ne.g.\r\n`object.theme = { color: 'red' }` it always change to `{ color => 'red' }`\r\n\r\ni also tried with jsonb and default value with empty hash {} but still having the same issue.\r\n\r\n\r\nI want to save the JSON data hash with symbol keys `{ color: 'red' }`\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.0\r\n\r\n**Ruby version**: 2.7.1\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45959/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45959/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45949","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45949/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45949/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45949/events","html_url":"https://github.com/rails/rails/issues/45949","id":1362899537,"node_id":"I_kwDNIULOUTwyUQ","number":45949,"title":"ActionText::Attachable#as_json override is breaking ActiveStorage::Blob#as_json when blob is not persisted","user":{"login":"balbesina","id":7312369,"node_id":"MDQ6VXNlcjczMTIzNjk=","avatar_url":"https://avatars.githubusercontent.com/u/7312369?v=4","gravatar_id":"","url":"https://api.github.com/users/balbesina","html_url":"https://github.com/balbesina","followers_url":"https://api.github.com/users/balbesina/followers","following_url":"https://api.github.com/users/balbesina/following{/other_user}","gists_url":"https://api.github.com/users/balbesina/gists{/gist_id}","starred_url":"https://api.github.com/users/balbesina/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/balbesina/subscriptions","organizations_url":"https://api.github.com/users/balbesina/orgs","repos_url":"https://api.github.com/users/balbesina/repos","events_url":"https://api.github.com/users/balbesina/events{/privacy}","received_events_url":"https://api.github.com/users/balbesina/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-06T08:26:39Z","updated_at":"2022-09-06T08:26:39Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nfrom rails console:\r\n```ruby\r\nActiveStorage::Blob.build_after_unfurling(io: StringIO.new('asd'), filename: 'asd.txt').as_json\r\n```\r\n\r\n[Reproduction script](https://gist.github.com/balbesina/30fbdafbfee4b71b06209d9e950f4128)\r\n\r\n### Expected behavior\r\nActiveStorage::Blob#as_json returns a Hash\r\n\r\n### Actual behavior\r\nActiveStorage::Blob#as_json raises exception\r\n```\r\n/Users/dhh/.rvm/gems/ruby-3.1.2/gems/globalid-1.0.0/lib/global_id/uri/gid.rb:167:in `validate_model_id': \r\nUnable to create a Global ID for ActiveStorage::Blob without a model id. (URI::GID::MissingModelIdError)\r\n```\r\n\r\n### System configuration\r\n**Rails version**: Rails 7.0.3.1\r\n**Ruby version**: ruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45949/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45949/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45939","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45939/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45939/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45939/events","html_url":"https://github.com/rails/rails/issues/45939","id":1360876688,"node_id":"I_kwDNIULOUR1UkA","number":45939,"title":"Validations aren't inherited from base model if child is called before validation declaration","user":{"login":"Exterm1nate","id":48535087,"node_id":"MDQ6VXNlcjQ4NTM1MDg3","avatar_url":"https://avatars.githubusercontent.com/u/48535087?v=4","gravatar_id":"","url":"https://api.github.com/users/Exterm1nate","html_url":"https://github.com/Exterm1nate","followers_url":"https://api.github.com/users/Exterm1nate/followers","following_url":"https://api.github.com/users/Exterm1nate/following{/other_user}","gists_url":"https://api.github.com/users/Exterm1nate/gists{/gist_id}","starred_url":"https://api.github.com/users/Exterm1nate/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Exterm1nate/subscriptions","organizations_url":"https://api.github.com/users/Exterm1nate/orgs","repos_url":"https://api.github.com/users/Exterm1nate/repos","events_url":"https://api.github.com/users/Exterm1nate/events{/privacy}","received_events_url":"https://api.github.com/users/Exterm1nate/received_events","type":"User","site_admin":false},"labels":[{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-09-03T14:46:42Z","updated_at":"2022-09-08T07:26:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nLet's create some STI models. Base `Vehicle` and two childs `Car` and `Motorcycle`.\r\n\r\n```ruby\r\n# models/vehicle.rb\r\nclass Vehicle < ApplicationRecord\r\n  TYPES = [Car, Motorcycle].freeze\r\n\r\n  validates :color, uniqueness: { scope: :model }\r\nend\r\n\r\n# models/car.rb\r\nclass Car < Vehicle\r\nend\r\n\r\n# models/motorcycle.rb\r\nclass Motorcycle < Vehicle\r\nend\r\n```\r\n\r\nAfter that we want to use `#validators_on` method to make sure the validation is present.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\nCar.validators_on(:color)\r\nMotorcycle.validators_on(:color)\r\n```\r\n\r\n### Expected behavior\r\n\r\nAll models must contain the validation.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nMotorcycle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\n```\r\n\r\n### Actual behavior\r\n\r\nBut for childs this method returns nothing.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> []\r\nMotorcycle.validators_on(:color)\r\n#=> []\r\n```\r\n\r\n### Notes\r\n\r\nIf we remove the `TYPES` constant (or just child classes calls from it) `validators_on` works as expected. Let's change original code a little bit:\r\n\r\n```ruby\r\n# models/vehicle.rb\r\nclass Vehicle < ApplicationRecord\r\n  TYPES = [Car].freeze # Motorcycle was removed from here!\r\n\r\n  validates :color, uniqueness: { scope: :model }\r\nend\r\n```\r\n\r\nAnd after that test again.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> []\r\nMotorcycle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\n```\r\n\r\n`Motorcycle` validation was returned correctly this time.\r\n\r\nIt seems to be a load error. `Car` was called before the `Vehicle`'s validation declaration, so it doesn't take this validation into account. It may also depend on loading order.\r\n\r\nNotice that validation itself is working well in all models.\r\n\r\n```ruby\r\nCar.create!(color: \"black\", model: \"Boomer\")\r\nCar.create!(color: \"black\", model: \"Boomer\") # raises ActiveRecord::RecordInvalid\r\n\r\nMotorcycle.create!(color: \"red\", model: \"Yamaha\")\r\nMotorcycle.create!(color: \"red\", model: \"Yamaha\") # raises ActiveRecord::RecordInvalid\r\n```\r\n\r\nExample project: https://github.com/Exterm1nate/rails-validation-issue\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3\r\n\r\n**Ruby version**: 3.1.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45939/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45939/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45937","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45937/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45937/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45937/events","html_url":"https://github.com/rails/rails/issues/45937","id":1360779604,"node_id":"I_kwDNIULOURvZVA","number":45937,"title":"Add strict table mode (by default) to sqlite adapter","user":{"login":"jrz","id":149668,"node_id":"MDQ6VXNlcjE0OTY2OA==","avatar_url":"https://avatars.githubusercontent.com/u/149668?v=4","gravatar_id":"","url":"https://api.github.com/users/jrz","html_url":"https://github.com/jrz","followers_url":"https://api.github.com/users/jrz/followers","following_url":"https://api.github.com/users/jrz/following{/other_user}","gists_url":"https://api.github.com/users/jrz/gists{/gist_id}","starred_url":"https://api.github.com/users/jrz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jrz/subscriptions","organizations_url":"https://api.github.com/users/jrz/orgs","repos_url":"https://api.github.com/users/jrz/repos","events_url":"https://api.github.com/users/jrz/events{/privacy}","received_events_url":"https://api.github.com/users/jrz/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-03T07:01:02Z","updated_at":"2022-09-08T07:30:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"SQLite supports 'strict tables' since 3.37.1 https://sqlite.org/stricttables.html\r\n\r\nThis forces a datatype to be specified when creating a table. This is the preferred method in any application created by developers. \r\n\r\nUnspecified/ANY datatypes are useful for quick tryouts as an enduser, similar to excel. But it's counterproductive when creating an application.\r\n\r\nIf this will become a configurable setting, the default should be set to strict.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45937/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45937/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45920","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45920/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45920/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45920/events","html_url":"https://github.com/rails/rails/issues/45920","id":1358179995,"node_id":"I_kwDNIULOUPQumw","number":45920,"title":"Replace has_one through create_association might create duplicated rows","user":{"login":"lazaronixon","id":2651240,"node_id":"MDQ6VXNlcjI2NTEyNDA=","avatar_url":"https://avatars.githubusercontent.com/u/2651240?v=4","gravatar_id":"","url":"https://api.github.com/users/lazaronixon","html_url":"https://github.com/lazaronixon","followers_url":"https://api.github.com/users/lazaronixon/followers","following_url":"https://api.github.com/users/lazaronixon/following{/other_user}","gists_url":"https://api.github.com/users/lazaronixon/gists{/gist_id}","starred_url":"https://api.github.com/users/lazaronixon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lazaronixon/subscriptions","organizations_url":"https://api.github.com/users/lazaronixon/orgs","repos_url":"https://api.github.com/users/lazaronixon/repos","events_url":"https://api.github.com/users/lazaronixon/events{/privacy}","received_events_url":"https://api.github.com/users/lazaronixon/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-09-01T03:05:07Z","updated_at":"2022-09-01T23:03:40Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# Ensure backward compatibility with minitest 4.\r\nMinitest::Test = MiniTest::Unit::TestCase unless defined?(Minitest::Test)\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts do |t|\r\n  end\r\n\r\n  create_table :comments do |t|\r\n    t.references :post\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_one :comment, dependent: :destroy\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  validates_presence_of :post_id\r\n  belongs_to :post\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    post = Post.create!\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    sleep 5.seconds\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n```\r\n# transaction begin\r\nselect previous_comment for update\r\n\r\ninsert new_comment\r\n\r\ndelete previous_comment\r\n# transaction commit\r\n```\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n```\r\n# transaction begin\r\ninsert new_comment\r\n# transaction commit\r\n\r\n# transaction begin\r\ndelete previous_comment\r\n# transaction commit\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45920/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45920/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45906","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45906/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45906/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45906/events","html_url":"https://github.com/rails/rails/issues/45906","id":1355732552,"node_id":"I_kwDNIULOUM7WSA","number":45906,"title":"High object allocation count from `ActiveRecord::ConnectionAdapters::PoolManager#pool_configs `","user":{"login":"amarchenkoshopify","id":101111422,"node_id":"U_kgDOBgbWfg","avatar_url":"https://avatars.githubusercontent.com/u/101111422?v=4","gravatar_id":"","url":"https://api.github.com/users/amarchenkoshopify","html_url":"https://github.com/amarchenkoshopify","followers_url":"https://api.github.com/users/amarchenkoshopify/followers","following_url":"https://api.github.com/users/amarchenkoshopify/following{/other_user}","gists_url":"https://api.github.com/users/amarchenkoshopify/gists{/gist_id}","starred_url":"https://api.github.com/users/amarchenkoshopify/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amarchenkoshopify/subscriptions","organizations_url":"https://api.github.com/users/amarchenkoshopify/orgs","repos_url":"https://api.github.com/users/amarchenkoshopify/repos","events_url":"https://api.github.com/users/amarchenkoshopify/events{/privacy}","received_events_url":"https://api.github.com/users/amarchenkoshopify/received_events","type":"User","site_admin":false},"labels":[{"id":107186,"node_id":"MDU6TGFiZWwxMDcxODY=","url":"https://api.github.com/repos/rails/rails/labels/regression","name":"regression","color":"e10c02","default":false,"description":null},{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"eileencodes","id":1080678,"node_id":"MDQ6VXNlcjEwODA2Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/1080678?v=4","gravatar_id":"","url":"https://api.github.com/users/eileencodes","html_url":"https://github.com/eileencodes","followers_url":"https://api.github.com/users/eileencodes/followers","following_url":"https://api.github.com/users/eileencodes/following{/other_user}","gists_url":"https://api.github.com/users/eileencodes/gists{/gist_id}","starred_url":"https://api.github.com/users/eileencodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eileencodes/subscriptions","organizations_url":"https://api.github.com/users/eileencodes/orgs","repos_url":"https://api.github.com/users/eileencodes/repos","events_url":"https://api.github.com/users/eileencodes/events{/privacy}","received_events_url":"https://api.github.com/users/eileencodes/received_events","type":"User","site_admin":false},"assignees":[{"login":"eileencodes","id":1080678,"node_id":"MDQ6VXNlcjEwODA2Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/1080678?v=4","gravatar_id":"","url":"https://api.github.com/users/eileencodes","html_url":"https://github.com/eileencodes","followers_url":"https://api.github.com/users/eileencodes/followers","following_url":"https://api.github.com/users/eileencodes/following{/other_user}","gists_url":"https://api.github.com/users/eileencodes/gists{/gist_id}","starred_url":"https://api.github.com/users/eileencodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eileencodes/subscriptions","organizations_url":"https://api.github.com/users/eileencodes/orgs","repos_url":"https://api.github.com/users/eileencodes/repos","events_url":"https://api.github.com/users/eileencodes/events{/privacy}","received_events_url":"https://api.github.com/users/eileencodes/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/rails/rails/milestones/81","html_url":"https://github.com/rails/rails/milestone/81","labels_url":"https://api.github.com/repos/rails/rails/milestones/81/labels","id":7591006,"node_id":"MI_kwDNIULOAHPUXg","number":81,"title":"7.0.4","description":"","creator":{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":3,"state":"open","created_at":"2022-01-20T01:51:07Z","updated_at":"2022-08-30T13:21:37Z","due_on":null,"closed_at":null},"comments":2,"created_at":"2022-08-30T12:58:42Z","updated_at":"2022-08-31T12:37:42Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWhile working on memory efficiency investigation I noticed that a very big bunch of object allocations comes from a single method `ActiveRecord::ConnectionAdapters::PoolManager#pool_configs`:\r\n\r\n```ruby\r\n      def pool_configs(role = nil)\r\n        if role\r\n          @role_to_shard_mapping[role].values\r\n        else\r\n          @role_to_shard_mapping.flat_map { |_, shard_map| shard_map.values }\r\n        end\r\n      end \r\n```\r\n\r\nThis method is called on every activerecord operation and does not cache its result: could we think about a way of caching its result?\r\n\r\ncc @eileencodes \r\n\r\n### Expected behavior\r\n\r\n`#pool_configs` allocates configs once\r\n\r\n### Actual behavior\r\n\r\n`#pool_configs` allocates configs every time it is executed\r\n\r\n### System configuration\r\n**Rails version**: main branch\r\n\r\n**Ruby version**: 3.1\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45906/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45901","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45901/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45901/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45901/events","html_url":"https://github.com/rails/rails/issues/45901","id":1354555667,"node_id":"I_kwDNIULOULzhEw","number":45901,"title":"bin/rails dbconsole should include_password by default","user":{"login":"wpeterson","id":178135,"node_id":"MDQ6VXNlcjE3ODEzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/178135?v=4","gravatar_id":"","url":"https://api.github.com/users/wpeterson","html_url":"https://github.com/wpeterson","followers_url":"https://api.github.com/users/wpeterson/followers","following_url":"https://api.github.com/users/wpeterson/following{/other_user}","gists_url":"https://api.github.com/users/wpeterson/gists{/gist_id}","starred_url":"https://api.github.com/users/wpeterson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wpeterson/subscriptions","organizations_url":"https://api.github.com/users/wpeterson/orgs","repos_url":"https://api.github.com/users/wpeterson/repos","events_url":"https://api.github.com/users/wpeterson/events{/privacy}","received_events_url":"https://api.github.com/users/wpeterson/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-29T16:19:45Z","updated_at":"2022-08-30T00:17:43Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n1. Configure a Rails `config/database.yml` with a `password` required to connect\r\n2. Run `rails dbconsole`\r\n3. See prompt for database password, despite password being configured/available\r\n4. Run `rails dbconsole -p`\r\n5. See dbconsole properly load and use credentials to connect to database for DB console session\r\n\r\n### Expected behavior\r\nWhenever a Rails app has credentials like a password configured for a database, the database console session should use those credentials vs. prompting the user to re-enter a password interactively.  When credentials are not configured and a password is required, we should prompt then.\r\n\r\nThis behavior is implemented since early Rails versions but is disabled by default.  I propose we enable the proper password behavior by default.\r\n\r\n### Actual behavior\r\n`bin/rails dbconsole` always prompts for a password, even when one is configured for the app.\r\n\r\n### System configuration\r\n**Rails version**: All (6.x, 7.x, head)\r\n\r\n**Ruby version**: All \r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45901/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45901/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45899","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45899/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45899/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45899/events","html_url":"https://github.com/rails/rails/issues/45899","id":1353676820,"node_id":"I_kwDNIULOUK94FA","number":45899,"title":"Active Job unit tests fail using que 2.2.0","user":{"login":"yahonda","id":73684,"node_id":"MDQ6VXNlcjczNjg0","avatar_url":"https://avatars.githubusercontent.com/u/73684?v=4","gravatar_id":"","url":"https://api.github.com/users/yahonda","html_url":"https://github.com/yahonda","followers_url":"https://api.github.com/users/yahonda/followers","following_url":"https://api.github.com/users/yahonda/following{/other_user}","gists_url":"https://api.github.com/users/yahonda/gists{/gist_id}","starred_url":"https://api.github.com/users/yahonda/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yahonda/subscriptions","organizations_url":"https://api.github.com/users/yahonda/orgs","repos_url":"https://api.github.com/users/yahonda/repos","events_url":"https://api.github.com/users/yahonda/events{/privacy}","received_events_url":"https://api.github.com/users/yahonda/received_events","type":"User","site_admin":false},"labels":[{"id":123812746,"node_id":"MDU6TGFiZWwxMjM4MTI3NDY=","url":"https://api.github.com/repos/rails/rails/labels/activejob","name":"activejob","color":"5319e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-29T04:24:06Z","updated_at":"2022-09-09T15:33:02Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"### Steps to reproduce\r\nActive Job CI has been failing since que 2.2.0 is installed. https://buildkite.com/rails/rails/builds/89068#0182e6b9-7c84-4b85-a651-8d640f5eb076\r\n\r\n```ruby\r\ngit clone https://github.com/rails/rails\r\ncd rails/activejob\r\nbundle update que\r\nAJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\n```\r\n\r\nAlthough there are 3 failures and 75 errors. This script just runs a single test because it looks the root cause is the same.\r\n\r\n\r\n### Expected behavior\r\nIt should pass.\r\n\r\n### Actual behavior\r\nIt raises `ArgumentError: wrong number of arguments (given 2, expected 1)`.\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 62302\r\n\r\n# Running:\r\n\r\nE\r\n\r\nError:\r\nQueuingTest#test_run_queued_job:\r\nArgumentError: wrong number of arguments (given 2, expected 1)\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:78:in `run'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job_methods.rb:51:in `_run'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:248:in `block (2 levels) in _run_attrs'\r\n    (eval):9:in `run_job_middleware'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:247:in `block in _run_attrs'\r\n    <internal:kernel>:90:in `tap'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:246:in `_run_attrs'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:223:in `run'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/support/que/inline.rb:15:in `enqueue'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:66:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:27:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:67:in `block in enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:118:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:28:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:27:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:9:in `block (2 levels) in <module:Instrumentation>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:27:in `tag_logger'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:14:in `block (2 levels) in <module:Logging>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:138:in `run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:63:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:30:in `perform_later'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/cases/queuing_test.rb:14:in `block in <class:QueuingTest>'\r\n\r\n\r\nbin/test test/cases/queuing_test.rb:13\r\n\r\n\r\n\r\nFinished in 0.008930s, 111.9768 runs/s, 0.0000 assertions/s.\r\n1 runs, 0 assertions, 0 failures, 1 errors, 0 skips\r\n$\r\n```\r\n\r\n### Additional information\r\n* `require_job_options_kwarg?` always returns `false` because `JobWrapper.method(:enqueue).parameters` does not have any `[:key, :job_options]` \r\nwhere it looks expected to return `true`.\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 32774\r\n\r\n# Running:\r\n\r\n[46, 55] in ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n    46|       end\r\n    47|\r\n    48|       private\r\n    49|         def require_job_options_kwarg?\r\n    50|           require 'debug'\r\n=>  51|           binding.break\r\n    52|           @require_job_options_kwarg ||=\r\n    53|             JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }\r\n    54|         end\r\n    55|\r\n=>#0\tActiveJob::QueueAdapters::QueAdapter#require_job_options_kwarg? at ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:51\r\n  #1\tActiveJob::QueueAdapters::QueAdapter#enqueue(job=#<HelloJob:0x00007fc861807740 @arguments...) at ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:24\r\n  # and 40 frames (use `bt' command for all frames)\r\n(rdbg) JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }    # ruby\r\nfalse\r\n(rdbg) JobWrapper.method(:enqueue).parameters    # ruby\r\n[[:req, :args], [:keyreq, :priority], [:keyreq, :queue], [:key, :run_at]]\r\n(rdbg) quit    # command\r\nReally quit? [Y/n] Y\r\n```\r\n\r\n* By changing `require_job_options_kwarg?` always returns `true`, it raises `ArgumentError: missing keywords: :priority, :queue`\r\n\r\n```ruby\r\n$ git diff\r\ndiff --git a/activejob/lib/active_job/queue_adapters/que_adapter.rb b/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\nindex 41b3633a07..54e8cbc39b 100644\r\n--- a/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n+++ b/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n@@ -47,6 +47,7 @@ def enqueue_at(job, timestamp) # :nodoc:\r\n\r\n       private\r\n         def require_job_options_kwarg?\r\n+          return true\r\n           @require_job_options_kwarg ||=\r\n             JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }\r\n         end\r\n$\r\n```\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 21508\r\n\r\n# Running:\r\n\r\nE\r\n\r\nError:\r\nQueuingTest#test_run_queued_job:\r\nArgumentError: missing keywords: :priority, :queue\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:65:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:25:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:67:in `block in enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:118:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:28:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:27:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:9:in `block (2 levels) in <module:Instrumentation>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:27:in `tag_logger'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:14:in `block (2 levels) in <module:Logging>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:138:in `run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:63:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:30:in `perform_later'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/cases/queuing_test.rb:14:in `block in <class:QueuingTest>'\r\n\r\n\r\nbin/test test/cases/queuing_test.rb:13\r\n\r\n\r\n\r\nFinished in 0.008724s, 114.6312 runs/s, 0.0000 assertions/s.\r\n1 runs, 0 assertions, 0 failures, 1 errors, 0 skips\r\n$\r\n```\r\n\r\n\r\n### System configuration\r\n**Rails version**: main branch\r\n\r\n**Ruby version**: $ ruby -v\r\nruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [x86_64-linux]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45899/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45893","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45893/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45893/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45893/events","html_url":"https://github.com/rails/rails/issues/45893","id":1352793907,"node_id":"I_kwDNIULOUKH_Mw","number":45893,"title":"ActiveRecord: HMT with conditions does not update the in-memory collection when pushing new objects","user":{"login":"joanniclaborde","id":411925,"node_id":"MDQ6VXNlcjQxMTkyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/411925?v=4","gravatar_id":"","url":"https://api.github.com/users/joanniclaborde","html_url":"https://github.com/joanniclaborde","followers_url":"https://api.github.com/users/joanniclaborde/followers","following_url":"https://api.github.com/users/joanniclaborde/following{/other_user}","gists_url":"https://api.github.com/users/joanniclaborde/gists{/gist_id}","starred_url":"https://api.github.com/users/joanniclaborde/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joanniclaborde/subscriptions","organizations_url":"https://api.github.com/users/joanniclaborde/orgs","repos_url":"https://api.github.com/users/joanniclaborde/repos","events_url":"https://api.github.com/users/joanniclaborde/events{/privacy}","received_events_url":"https://api.github.com/users/joanniclaborde/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-26T22:40:12Z","updated_at":"2022-08-30T15:33:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi! When using a `has_many :a, through: :b` relation, and the `:b` relation has a condition, adding new objects doesn't update the in-memory collection properly (stops after the first object).\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :packages, force: true do |t|\r\n  end\r\n\r\n  create_table :package_items, force: true do |t|\r\n    t.integer :package_id\r\n    t.integer :item_id\r\n  end\r\n\r\n  create_table :items, force: true do |t|\r\n    t.boolean \"deleted\", default: false\r\n  end\r\nend\r\n\r\nclass Package < ActiveRecord::Base\r\n  has_many :package_items, ->{ where(item_id: Item.active.pluck(:id)) }\r\n  has_many :items, through: :package_items\r\nend\r\n\r\nclass PackageItem < ActiveRecord::Base\r\n  belongs_to :package\r\n  belongs_to :item\r\nend\r\n\r\nclass Item < ActiveRecord::Base\r\n  has_many :package_items\r\n  has_many :packages, through: :package_items\r\n\r\n  scope :active, -> { where(deleted: false) }\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    package = Package.create!\r\n    package.items << Item.create!\r\n    package.items << Item.create!\r\n    package.items << Item.create!\r\n\r\n    # This should be [3, 3, 3] but we get [3, 1, 3]\r\n    assert_equal [3, 3, 3], [Item.count, package.items.count, package.reload.items.count]\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n`package.items.count` is equal to 3.\r\n\r\n### Actual behavior\r\n`package.items.count` is equal to 1, even though all the items and relations are created properly (see assertion).\r\n\r\n### System configuration\r\n**Rails version**: tested on `7.1.0.alpha` and `6.1.6.1`.\r\n\r\n**Ruby version**: tested on `2.7.5`.\r\n\r\n### Workaround\r\nI was able to fix this issue by changing the weird condition to a proper scope:\r\n\r\n```ruby\r\nclass Package < ActiveRecord::Base\r\n  has_many :package_items, ->{ includes(:item).merge(Item.active) }\r\n  has_many :items, through: :package_items\r\nend\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45893/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45893/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45880","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45880/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45880/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45880/events","html_url":"https://github.com/rails/rails/issues/45880","id":1349546108,"node_id":"I_kwDNIULOUHBwfA","number":45880,"title":"Google search links to old API docs","user":{"login":"abraham","id":3341,"node_id":"MDQ6VXNlcjMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/3341?v=4","gravatar_id":"","url":"https://api.github.com/users/abraham","html_url":"https://github.com/abraham","followers_url":"https://api.github.com/users/abraham/followers","following_url":"https://api.github.com/users/abraham/following{/other_user}","gists_url":"https://api.github.com/users/abraham/gists{/gist_id}","starred_url":"https://api.github.com/users/abraham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abraham/subscriptions","organizations_url":"https://api.github.com/users/abraham/orgs","repos_url":"https://api.github.com/users/abraham/repos","events_url":"https://api.github.com/users/abraham/events{/privacy}","received_events_url":"https://api.github.com/users/abraham/received_events","type":"User","site_admin":true},"labels":[{"id":150377,"node_id":"MDU6TGFiZWwxNTAzNzc=","url":"https://api.github.com/repos/rails/rails/labels/docs","name":"docs","color":"02d7e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-24T14:33:55Z","updated_at":"2022-08-25T23:48:01Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n1. Search Google for a Rails API https://www.google.com/search?q=rails+update_all\r\n2. Follow link for \"ActiveRecord::Relation - Rails API\"\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n\r\nFind documentation for the latest version of Rails. Currently `7.0.3.1`.\r\n\r\n`https://api.rubyonrails.org/classes/ActiveRecord/Relation.html`\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n\r\nFind documentation for the the very old version of `3.2.3`.\r\n\r\n`https://api.rubyonrails.org/v3.2.3/classes/ActiveRecord/Relation.html`\r\n\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45880/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45880/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45832","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45832/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45832/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45832/events","html_url":"https://github.com/rails/rails/issues/45832","id":1339487378,"node_id":"I_kwDNIULOT9b0kg","number":45832,"title":"MySQL 8.0 VARBINARY default value is hexadecimal","user":{"login":"HParker","id":4482399,"node_id":"MDQ6VXNlcjQ0ODIzOTk=","avatar_url":"https://avatars.githubusercontent.com/u/4482399?v=4","gravatar_id":"","url":"https://api.github.com/users/HParker","html_url":"https://github.com/HParker","followers_url":"https://api.github.com/users/HParker/followers","following_url":"https://api.github.com/users/HParker/following{/other_user}","gists_url":"https://api.github.com/users/HParker/gists{/gist_id}","starred_url":"https://api.github.com/users/HParker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HParker/subscriptions","organizations_url":"https://api.github.com/users/HParker/orgs","repos_url":"https://api.github.com/users/HParker/repos","events_url":"https://api.github.com/users/HParker/events{/privacy}","received_events_url":"https://api.github.com/users/HParker/received_events","type":"User","site_admin":true},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":309390193,"node_id":"MDU6TGFiZWwzMDkzOTAxOTM=","url":"https://api.github.com/repos/rails/rails/labels/MySQL","name":"MySQL","color":"fef2c0","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-08-15T20:42:09Z","updated_at":"2022-08-16T10:23:16Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Default values on VARBINARY columns changed behavior between MySQL 5.7 and 8.0\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"mysql2\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"mysql2\", database: \"adam_test\", prepared_statements: false, host: '127.0.0.1', port: 3307, user: \"root\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.binary :some_binary, null: false, limit: 1024, default: \"hello-world\"\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_mysql_defaults\r\n    post = Post.create!\r\n\r\n    mysql_vars = ActiveRecord::Base.connection.select_rows(\"SHOW VARIABLES LIKE '%version%'\")\r\n    puts mysql_vars.inspect\r\n    puts Post.column_defaults\r\n\r\n    # assert_equal \"0x68656C6C6F2D776F726C64\", post.some_binary # This passes\r\n    assert_equal \"hello-world\", post.some_binary # This fails\r\n\r\n    reloaded_post = Post.first\r\n    assert_equal \"hello-world\", reloaded_post.some_binary # this passes\r\n  end\r\nend\r\n```\r\n\r\nOn MySQL 5.7:\r\n\r\n```ruby\r\nPost.column_defaults # => {\"id\"=>nil, \"some_binary\"=>\"hello-world\"}\r\n```\r\n\r\nOn MySQL 8.0:\r\n\r\n```ruby\r\nPost.column_defaults # => {\"id\"=>nil, \"some_binary\"=>\"0x68656C6C6F2D776F726C64\"}\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe default value on binary columns should be Ruby strings, not ruby strings of hexadecimal.\r\n\r\n### Actual behavior\r\n\r\nThe column default in MySQL 8.0 is a hexadecimal string representing the binary data.\r\n\r\n### System configuration\r\n**Rails version**: main\r\n\r\n**Ruby version**: 3.1.0\r\n\r\nSome interesting MySQL forum posts about this behavior change:\r\n\r\n- https://forums.mysql.com/read.php?24,685577,685577\r\n- https://forums.mysql.com/read.php?20,698061,698061#msg-698061\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45832/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45832/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45830","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45830/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45830/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45830/events","html_url":"https://github.com/rails/rails/issues/45830","id":1338922250,"node_id":"I_kwDNIULOT85VCg","number":45830,"title":"ActiveRecord Rollbacks on errors which happen on commit","user":{"login":"Baxxx","id":17880055,"node_id":"MDQ6VXNlcjE3ODgwMDU1","avatar_url":"https://avatars.githubusercontent.com/u/17880055?v=4","gravatar_id":"","url":"https://api.github.com/users/Baxxx","html_url":"https://github.com/Baxxx","followers_url":"https://api.github.com/users/Baxxx/followers","following_url":"https://api.github.com/users/Baxxx/following{/other_user}","gists_url":"https://api.github.com/users/Baxxx/gists{/gist_id}","starred_url":"https://api.github.com/users/Baxxx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baxxx/subscriptions","organizations_url":"https://api.github.com/users/Baxxx/orgs","repos_url":"https://api.github.com/users/Baxxx/repos","events_url":"https://api.github.com/users/Baxxx/events{/privacy}","received_events_url":"https://api.github.com/users/Baxxx/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":126910270,"node_id":"MDU6TGFiZWwxMjY5MTAyNzA=","url":"https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps","name":"With reproduction steps","color":"009800","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2022-08-15T12:09:14Z","updated_at":"2022-08-25T13:32:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nIn some of our projects we use Postgres as database, and for some cases we deferred trigger constraints. These triggers fire up when `COMMIT` is called. Trigger can raise an error, which kills the transaction. ActiveRecord catches the error, and bubbles it up to developer, but it also sends `ROLLBACK` to Postgres, to which Postgres gives a warning that there is no transaction in progress.\r\n\r\nI didn't test this with sqlite3 or mysql.\r\n\r\nYou can see the reproduction script, and screenshot with the current behavior.\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", \"~> 7\"\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"logger\"\r\n\r\nlogger = Logger.new(STDOUT)\r\n\r\n# This connection will do for database-independent bug reports.\r\npg_opts = {adapter: \"postgresql\", database: \"ar_rollback_after_failed_commit_issue\"}\r\n\r\nActiveRecord::Base.establish_connection(pg_opts.except(:database))\r\nActiveRecord::Base.connection.drop_database(pg_opts[:database])\r\nActiveRecord::Base.connection.create_database(pg_opts[:database])\r\nlogger.info \"Database #{pg_opts[:database]} was (re)created.\"\r\n\r\nActiveRecord::Base.establish_connection(pg_opts)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  execute <<~SQL\r\n    CREATE FUNCTION perform_custom_validation()\r\n      RETURNS TRIGGER\r\n      LANGUAGE plpgsql\r\n      AS $$\r\n        DECLARE\r\n          total_invalid INTEGER;\r\n        BEGIN\r\n          SELECT COUNT(*) INTO total_invalid\r\n          FROM things\r\n          WHERE name = 'bad';\r\n\r\n          IF (total_invalid > 0) THEN\r\n            RAISE EXCEPTION 'There are bad things';\r\n          END IF;\r\n          RETURN NULL;\r\n        END;\r\n      $$;\r\n\r\n    CREATE TABLE \"things\" (\r\n      \"id\" bigserial primary key,\r\n      \"name\" character varying NOT NULL\r\n    );\r\n\r\n    CREATE CONSTRAINT\r\n      TRIGGER bank_transaction_rl_payment_date_validation\r\n      AFTER INSERT OR UPDATE ON things\r\n      DEFERRABLE INITIALLY DEFERRED\r\n      FOR EACH ROW EXECUTE FUNCTION perform_custom_validation();\r\n  SQL\r\nend\r\n\r\nclass Thing < ActiveRecord::Base\r\n  validates :name, presence: true\r\nend\r\n\r\n# All good\r\nlogger.info \"First transaction\"\r\nThing.create!(name: \"good\")\r\n\r\n# AR tries to commit, DB raises an error, AR tries to ROLLBACK, and PG gives a warning\r\nbegin\r\n  logger.info \"Second transaction\"\r\n  Thing.create!(name: \"bad\")\r\nrescue StandardError\r\n  # Doesn't matter\r\nend\r\n```\r\n\r\n### Expected behavior\r\nActiveRecord should not `ROLLBACK`, as there is no transaction in progress.\r\n\r\n### Actual behavior\r\nActiveRecord tries to `ROLLBACK`.\r\n\r\n![Screenshot from 2022-08-15 14-07-11](https://user-images.githubusercontent.com/17880055/184632335-0277cd27-4c7b-4b98-94a8-373be34a87ee.png)\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 2.7.5p203\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45830/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45830/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45823","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45823/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45823/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45823/events","html_url":"https://github.com/rails/rails/issues/45823","id":1337409694,"node_id":"I_kwDNIULOT7dAng","number":45823,"title":"Change Column with Raw Character Set Failure","user":{"login":"ahoglund","id":3407303,"node_id":"MDQ6VXNlcjM0MDczMDM=","avatar_url":"https://avatars.githubusercontent.com/u/3407303?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoglund","html_url":"https://github.com/ahoglund","followers_url":"https://api.github.com/users/ahoglund/followers","following_url":"https://api.github.com/users/ahoglund/following{/other_user}","gists_url":"https://api.github.com/users/ahoglund/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoglund/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoglund/subscriptions","organizations_url":"https://api.github.com/users/ahoglund/orgs","repos_url":"https://api.github.com/users/ahoglund/repos","events_url":"https://api.github.com/users/ahoglund/events{/privacy}","received_events_url":"https://api.github.com/users/ahoglund/received_events","type":"User","site_admin":true},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":126910270,"node_id":"MDU6TGFiZWwxMjY5MTAyNzA=","url":"https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps","name":"With reproduction steps","color":"009800","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-12T16:21:50Z","updated_at":"2022-08-12T20:47:38Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"With [this recent change to how collation is handled for column changes](https://github.com/rails/rails/pull/45744/files), there is now a potential for older migrations written in a specific manner to break if the `collation:` argument is not specific.\r\n\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\n# you need to install mysql locally for this to work.\r\n# on Mac:\r\n# brew install mysql\r\n# brew services start mysql\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"mysql2\"\r\n\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nclient = Mysql2::Client.new(host: 'localhost', username: \"root\")\r\nclient.query(\"DROP DATABASE test\")\r\nclient.query(\"CREATE DATABASE test\")\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"mysql2\", database: \"test\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :payments, force: true do |t|\r\n    t.string :description, \"varchar(64)\", null: false\r\n  end\r\nend\r\n\r\nclass Payment < ActiveRecord::Base\r\nend\r\n\r\nclass ChangeAmountToAddScale < ActiveRecord::Migration[7.1]\r\n  # This sets the default character set for the payments\r\n  # table to utf32 with a default COLLATION of utf32_general_ci.\r\n  # This can be verified by running the following query:\r\n  #\r\n  # SHOW CHARACTER SET;\r\n  #\r\n  connection.execute(<<~SQL)\r\n    ALTER TABLE payments CONVERT TO CHARACTER SET utf32\r\n  SQL\r\n\r\n  def change\r\n    reversible do |dir|\r\n      dir.up do\r\n        change_table(:payments, bulk: true) do |t|\r\n          # The default collation of utf32_general_ci\r\n          # will not be compatible with this ascii character set. \r\n          #\r\n          # when we build the column change now we automatically\r\n          # try to assign the previous collation to the column if no `collation:` is specified.\r\n          # \r\n          # https://github.com/rails/rails/pull/45744\r\n          #\r\n          # The workaround is to add `collation: 'ascii_bin'` or `collation: 'ascii_general_ci'` to the change.\r\n          #\r\n          # This isn't a huge deal and it has a workaround but it _will_ break\r\n          # anyone who has migrations that are written like this and upgrade to this version\r\n          # of Rails.\r\n          t.change :description, \"varchar(64) CHARACTER SET ascii\", null: false\r\n        end\r\n      end\r\n\r\n      dir.down do\r\n        change_table(:payments, bulk: true) do |t|\r\n          t.change :description, \"varchar(64)\", null: false\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_migration_up\r\n    ChangeAmountToAddScale.migrate(:up)\r\n    Payment.reset_column_information\r\n\r\n    assert_equal \"varchar\", Payment.columns.last.sql_type\r\n  end\r\n\r\n  def test_migration_down\r\n    ChangeAmountToAddScale.migrate(:down)\r\n    Payment.reset_column_information\r\n\r\n    assert_equal \"varchar\", Payment.columns.last.sql_type\r\n  end\r\nend\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nI would expect this to detect that the character set is being changed, and either \r\n\r\n1. change the collation to be compatible.\r\n2. At least give a clearer error that requires the `collation:` arg to be passed when the character set is being modified.\r\n\r\n### Actual behavior\r\n\r\nThis error:\r\n\r\n```\r\nError:\r\nBugTest#test_migration_up:\r\nActiveRecord::StatementInvalid: Mysql2::Error: COLLATION 'utf32_general_ci' is not valid for CHARACTER SET 'ascii'\r\n    test.rb:51:in `block (2 levels) in change'\r\n    test.rb:50:in `block in change'\r\n    test.rb:49:in `change'\r\n    test.rb:67:in `test_migration_up'\r\n```\r\n\r\n### System configuration\r\n**Rails version**: main\r\n**Ruby version**: ruby 3.1.1p18\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45823/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45823/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45822","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45822/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45822/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45822/events","html_url":"https://github.com/rails/rails/issues/45822","id":1337253221,"node_id":"I_kwDNIULOT7TdZQ","number":45822,"title":"ActiveRecord: Wrong results returned by ActiveRecord::Associations::Preloader when intermediate association is already preloaded.","user":{"login":"yopzer","id":6330271,"node_id":"MDQ6VXNlcjYzMzAyNzE=","avatar_url":"https://avatars.githubusercontent.com/u/6330271?v=4","gravatar_id":"","url":"https://api.github.com/users/yopzer","html_url":"https://github.com/yopzer","followers_url":"https://api.github.com/users/yopzer/followers","following_url":"https://api.github.com/users/yopzer/following{/other_user}","gists_url":"https://api.github.com/users/yopzer/gists{/gist_id}","starred_url":"https://api.github.com/users/yopzer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yopzer/subscriptions","organizations_url":"https://api.github.com/users/yopzer/orgs","repos_url":"https://api.github.com/users/yopzer/repos","events_url":"https://api.github.com/users/yopzer/events{/privacy}","received_events_url":"https://api.github.com/users/yopzer/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"jhawthorn","id":131752,"node_id":"MDQ6VXNlcjEzMTc1Mg==","avatar_url":"https://avatars.githubusercontent.com/u/131752?v=4","gravatar_id":"","url":"https://api.github.com/users/jhawthorn","html_url":"https://github.com/jhawthorn","followers_url":"https://api.github.com/users/jhawthorn/followers","following_url":"https://api.github.com/users/jhawthorn/following{/other_user}","gists_url":"https://api.github.com/users/jhawthorn/gists{/gist_id}","starred_url":"https://api.github.com/users/jhawthorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhawthorn/subscriptions","organizations_url":"https://api.github.com/users/jhawthorn/orgs","repos_url":"https://api.github.com/users/jhawthorn/repos","events_url":"https://api.github.com/users/jhawthorn/events{/privacy}","received_events_url":"https://api.github.com/users/jhawthorn/received_events","type":"User","site_admin":true},"assignees":[{"login":"jhawthorn","id":131752,"node_id":"MDQ6VXNlcjEzMTc1Mg==","avatar_url":"https://avatars.githubusercontent.com/u/131752?v=4","gravatar_id":"","url":"https://api.github.com/users/jhawthorn","html_url":"https://github.com/jhawthorn","followers_url":"https://api.github.com/users/jhawthorn/followers","following_url":"https://api.github.com/users/jhawthorn/following{/other_user}","gists_url":"https://api.github.com/users/jhawthorn/gists{/gist_id}","starred_url":"https://api.github.com/users/jhawthorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhawthorn/subscriptions","organizations_url":"https://api.github.com/users/jhawthorn/orgs","repos_url":"https://api.github.com/users/jhawthorn/repos","events_url":"https://api.github.com/users/jhawthorn/events{/privacy}","received_events_url":"https://api.github.com/users/jhawthorn/received_events","type":"User","site_admin":true}],"milestone":null,"comments":1,"created_at":"2022-08-12T14:06:55Z","updated_at":"2022-08-18T23:36:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"activerecord\", \"7.0.3.1\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :a_records, force: true\r\n\r\n  create_table :b_records, force: true do |t|\r\n    t.references :a_record\r\n    t.references :c_record\r\n  end\r\n\r\n  create_table :c_records, force: true\r\n\r\n  create_table :d_records, force: true do |t|\r\n    t.references :c_record\r\n  end\r\nend\r\n\r\nclass ARecord < ActiveRecord::Base\r\n  has_one :b_record\r\n  has_one :c_record, through: :b_record\r\n  has_many :d_records, through: :c_record\r\nend\r\n\r\nclass BRecord < ActiveRecord::Base\r\n  belongs_to :a_record\r\n  belongs_to :c_record\r\nend\r\n\r\nclass CRecord < ActiveRecord::Base\r\n  has_one :b_record\r\n  has_many :d_records\r\nend\r\n\r\nclass DRecord < ActiveRecord::Base\r\n  belongs_to :c_record\r\nend\r\n\r\na = ARecord.create!\r\nc = CRecord.create!\r\nBRecord.create!(a_record: a, c_record: c)\r\nDRecord.create!(c_record: c)\r\nDRecord.create!(c_record: c)\r\n\r\na.reload\r\na.c_record # NB: if removed this works\r\n\r\n::ActiveRecord::Associations::Preloader.new(records: [a], associations: :d_records).call\r\nputs({ record_ids: a.d_records.map(&:id), size: a.d_records.size })\r\n```\r\n\r\n### Expected behavior\r\nTwo records should be loaded:\r\n`{:record_ids=>[1, 2], :size=>2}`\r\n\r\n### Actual behavior\r\nNo records are loaded:\r\n`{:record_ids=>[], :size=>0}`\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 2.7.5\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45822/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45822/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45817","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45817/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45817/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45817/events","html_url":"https://github.com/rails/rails/issues/45817","id":1336797388,"node_id":"I_kwDNIULOT63ozA","number":45817,"title":"Value of attribute default proc is shared between instances after dup + dirty tracking","user":{"login":"quadule","id":15299,"node_id":"MDQ6VXNlcjE1Mjk5","avatar_url":"https://avatars.githubusercontent.com/u/15299?v=4","gravatar_id":"","url":"https://api.github.com/users/quadule","html_url":"https://github.com/quadule","followers_url":"https://api.github.com/users/quadule/followers","following_url":"https://api.github.com/users/quadule/following{/other_user}","gists_url":"https://api.github.com/users/quadule/gists{/gist_id}","starred_url":"https://api.github.com/users/quadule/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/quadule/subscriptions","organizations_url":"https://api.github.com/users/quadule/orgs","repos_url":"https://api.github.com/users/quadule/repos","events_url":"https://api.github.com/users/quadule/events{/privacy}","received_events_url":"https://api.github.com/users/quadule/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-12T06:16:00Z","updated_at":"2022-08-15T15:56:11Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWhen an attribute without a database column defines a default proc, `dup`ing a model in which the default wasn't accessed passes the unevaluated `UserProvidedDefault` attribute to the new instance as the attribute's original value. Checking the new attribute for changes will then memoize the value in the original attribute definition, making it the default value in every new model instance afterward.\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n  gem \"rails\", github: \"rails/rails\", ref: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Schema.define do\r\n  create_table :cats do |t|\r\n    t.string :name\r\n  end\r\nend\r\n\r\nclass Cat < ActiveRecord::Base\r\n  attribute :sounds, default: -> { [] }\r\nend\r\n\r\nclass VirtualAttributeTest < Minitest::Test\r\n  def test_virtual_attribute_defaults_are_independent\r\n    Cat.new.dup.save!\r\n    Cat.new.sounds << \"meow\"\r\n    refute_same Cat.new.sounds, Cat.new.sounds\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nEach new instance should get a new default value from the proc.\r\n\r\n### Actual behavior\r\nAfter using dirty tracking on a duplicated instance with an uncalled proc default, all new instances of a model receive the same default value and share any changes made to it.\r\n\r\n### Affected versions\r\nThis seems to date back quite a while; the test fails on the main branch back to 5-1-stable.\r\n\r\n### Credits\r\nThanks to @GBH for originally discovering this bug.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45817/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45817/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45794","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45794/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45794/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45794/events","html_url":"https://github.com/rails/rails/issues/45794","id":1332999733,"node_id":"I_kwDNIULOT3P2NQ","number":45794,"title":"Action Cable client goes in a connection loop if you subscribe multiple times to the same channel","user":{"login":"ProGM","id":5167659,"node_id":"MDQ6VXNlcjUxNjc2NTk=","avatar_url":"https://avatars.githubusercontent.com/u/5167659?v=4","gravatar_id":"","url":"https://api.github.com/users/ProGM","html_url":"https://github.com/ProGM","followers_url":"https://api.github.com/users/ProGM/followers","following_url":"https://api.github.com/users/ProGM/following{/other_user}","gists_url":"https://api.github.com/users/ProGM/gists{/gist_id}","starred_url":"https://api.github.com/users/ProGM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ProGM/subscriptions","organizations_url":"https://api.github.com/users/ProGM/orgs","repos_url":"https://api.github.com/users/ProGM/repos","events_url":"https://api.github.com/users/ProGM/events{/privacy}","received_events_url":"https://api.github.com/users/ProGM/received_events","type":"User","site_admin":false},"labels":[{"id":300028327,"node_id":"MDU6TGFiZWwzMDAwMjgzMjc=","url":"https://api.github.com/repos/rails/rails/labels/actioncable","name":"actioncable","color":"bfdadc","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-09T09:48:36Z","updated_at":"2022-08-17T17:57:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\nYou can just start from a fresh `rails new [project-name]` installation.\r\nChannel code:\r\n```ruby\r\nclass ArticleChannel < ApplicationCable::Channel\r\n  def subscribed\r\n    stream_from \"ArticleChannel\"\r\n  end\r\n\r\n  def unsubscribed\r\n    # Any cleanup needed when channel is unsubscribed\r\n  end\r\nend\r\n```\r\n\r\nJavascript code:\r\n```javascript\r\nimport consumer from \"channels/consumer\"\r\n\r\nfunction subscribe() {\r\n\treturn consumer.subscriptions.create('ArticleChannel', {\r\n\t\tconnected() {\r\n\t\t\tconsole.log('connected');\r\n\t\t\t// Called when the subscription is ready for use on the server\r\n\t\t},\r\n\r\n\t\tdisconnected() {\r\n\t\t\tconsole.log('disconnected');\r\n\t\t\t// Called when the subscription has been terminated by the server\r\n\t\t},\r\n\r\n\t\treceived(data) {\r\n\t\t\tconsole.log('received', data);\r\n\t\t\t// Called when there's incoming data on the websocket for this channel\r\n\t\t}\r\n\t});\r\n}\r\n\r\nsetTimeout(() => {\r\n\tsubscribe();\r\n}, 3000);\r\n\r\nsetTimeout(() => {\r\n\tsubscribe();\r\n}, 4000);\r\n```\r\n\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nAny of these options could be considered an expected behavior:\r\n* Everything just works™, both subscriptions receive notification from that channel and no error is raised\r\n* The second `subscription.create(...)` raises some kind of error, notifying that the channel is already connected\r\n* The second `subscription.create(...)` returns the same instance of Subscription and writes a `console.warning` in console\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nThe second subscriptions triggers a connection loop.\r\n\r\nExample logs with `ActionCable.logger.enabled = true`.\r\n\r\n```\r\n[ActionCable] Opening WebSocket, current state is null, subprotocols: actioncable-v1-json,actioncable-unsupported 1660037219747\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] ConnectionMonitor started. stale threshold = 6 s 1660037219748\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] WebSocket onopen event, using 'actioncable-v1-json' subprotocol 1660037219758\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] ConnectionMonitor recorded connect 1660037219759\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor guaranteeing {\"channel\":\"ArticleChannel\"} 1660037219760\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] Subscription confirmed {\"channel\":\"ArticleChannel\"} 1660037219762\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor forgetting {\"channel\":\"ArticleChannel\"} 1660037219762\r\narticle_channel-b29f3f7bf31169dfadd26c7747a46706d4992a1fd842de8268f206c5f0a0fe45.js:6 connected\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor guaranteeing {\"channel\":\"ArticleChannel\"} 1660037220744\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221248\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221248\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n... and so on, forever...\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 3.1\r\n\r\n### Possible solutions\r\nThis issue happens because the identifier of both subscriptions is the same. Since Rails (ActionCable) doesn't answer to any subsequential command \"subscribe\" from the same client (in this case: `{\"command\":\"subscribe\",\"identifier\":\"{\\\"channel\\\":\\\"ArticleChannel\\\"}\"}`), the `SubscriptionGuarantor` considers the connection failed and [retries to connect after 500ms](https://github.com/rails/rails/blob/8994f09dd2f6ae363e74d8ee3b24700d9db94a16/actioncable/app/assets/javascripts/actioncable.esm.js#L351).\r\n\r\nI see various options to fix this:\r\n* Raise an exception when trying to create a subscription with the same identifier\r\n* Add a random/uuid to the identifier when connecting, so two connection would not share the same identifier? (I've already tested it, and it seems to fix)\r\n\r\nWould you accept a PR from me regarding this?","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45794/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45794/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45791","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45791/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45791/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45791/events","html_url":"https://github.com/rails/rails/issues/45791","id":1332570977,"node_id":"I_kwDNIULOT21rYQ","number":45791,"title":"Google::Apis::ClientError raised when using ActiveStorage to generate signed URLs to access a file in a GCS bucket with GKE Workload Identity","user":{"login":"danielyazbek","id":18390164,"node_id":"MDQ6VXNlcjE4MzkwMTY0","avatar_url":"https://avatars.githubusercontent.com/u/18390164?v=4","gravatar_id":"","url":"https://api.github.com/users/danielyazbek","html_url":"https://github.com/danielyazbek","followers_url":"https://api.github.com/users/danielyazbek/followers","following_url":"https://api.github.com/users/danielyazbek/following{/other_user}","gists_url":"https://api.github.com/users/danielyazbek/gists{/gist_id}","starred_url":"https://api.github.com/users/danielyazbek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielyazbek/subscriptions","organizations_url":"https://api.github.com/users/danielyazbek/orgs","repos_url":"https://api.github.com/users/danielyazbek/repos","events_url":"https://api.github.com/users/danielyazbek/events{/privacy}","received_events_url":"https://api.github.com/users/danielyazbek/received_events","type":"User","site_admin":false},"labels":[{"id":664533972,"node_id":"MDU6TGFiZWw2NjQ1MzM5NzI=","url":"https://api.github.com/repos/rails/rails/labels/activestorage","name":"activestorage","color":"bfd4f2","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-09T01:05:08Z","updated_at":"2022-08-09T15:53:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nConfigure ActiveStorage with GKE Workload identity (as documented [here](https://edgeguides.rubyonrails.org/active_storage_overview.html#google-cloud-storage-service)):\r\n\r\n```ruby\r\ngoogle:\r\n  service: GCS\r\n  iam: true\r\n  project: <%= ENV['ACTIVE_STORAGE_PROJECT'] %>\r\n  bucket: <%= ENV['ACTIVE_STORAGE_BUCKET'] %>\r\n```\r\n\r\nDefine a class:\r\n```ruby\r\nclass Transaction < ApplicationRecord\r\n  has_one_attached :csv_report\r\nend\r\n```\r\n\r\nWrite something to ActiveStorage:\r\n```ruby\r\nt = Transaction.create\r\nt.csv_report.attach(io: StringIO.new(\"A,B,C\"), filename: 'test.csv')\r\n```\r\n\r\nGenerate a Signed URL\r\n```ruby\r\nRails.application.routes.url_helpers.rails_blob_url(Transaction.last.csv_report, disposition: 'attachment')\r\n```\r\n\r\nPaste the generated URL into a browser\r\n\r\n### Expected behavior\r\nActiveRecord provides the attachment\r\n\r\n### Actual behavior\r\nError is raised:\r\n\r\n```\r\nGoogle::Apis::ClientError (Invalid request):\r\ngems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:236:in `check_status': Invalid request (Google::Apis::ClientError)\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/api_command.rb:134:in `check_status'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:199:in `process_response'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:318:in `execute_once'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:118:in `block (2 levels) in execute'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:61:in `block in retriable'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `times'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `retriable'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:115:in `block in execute'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:61:in `block in retriable'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `times'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `retriable'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:105:in `execute'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/base_service.rb:397:in `execute_or_queue_command'\r\n    from gems/google-apis-iamcredentials_v1-0.13.0/lib/google/apis/iamcredentials_v1/service.rb:158:in `sign_service_account_blob'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service/gcs_service.rb:232:in `block in signer'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file/signer_v2.rb:135:in `generate_signature'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file/signer_v2.rb:128:in `signed_url'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file.rb:1801:in `signed_url'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service/gcs_service.rb:160:in `private_url'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:123:in `block in url'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications/instrumenter.rb:24:in `instrument'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications.rb:206:in `instrument'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:163:in `instrument'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:118:in `url'\r\n    from gems/activestorage-7.0.3.1models/active_storage/blob.rb:217:in `url'\r\n    from gems/activestorage-7.0.3.1controllers/active_storage/blobs/redirect_controller.rb:14:in `show'\r\n```\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 3.1.2\r\n\r\n**google-cloud-storage gem version:** 1.38.0\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45791/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45791/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45778","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45778/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45778/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45778/events","html_url":"https://github.com/rails/rails/issues/45778","id":1330360134,"node_id":"I_kwDNIULOT0uvRg","number":45778,"title":"ActiveStorage attachments are lost when casting using Becomes","user":{"login":"markedmondson","id":1653699,"node_id":"MDQ6VXNlcjE2NTM2OTk=","avatar_url":"https://avatars.githubusercontent.com/u/1653699?v=4","gravatar_id":"","url":"https://api.github.com/users/markedmondson","html_url":"https://github.com/markedmondson","followers_url":"https://api.github.com/users/markedmondson/followers","following_url":"https://api.github.com/users/markedmondson/following{/other_user}","gists_url":"https://api.github.com/users/markedmondson/gists{/gist_id}","starred_url":"https://api.github.com/users/markedmondson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markedmondson/subscriptions","organizations_url":"https://api.github.com/users/markedmondson/orgs","repos_url":"https://api.github.com/users/markedmondson/repos","events_url":"https://api.github.com/users/markedmondson/events{/privacy}","received_events_url":"https://api.github.com/users/markedmondson/received_events","type":"User","site_admin":false},"labels":[{"id":664533972,"node_id":"MDU6TGFiZWw2NjQ1MzM5NzI=","url":"https://api.github.com/repos/rails/rails/labels/activestorage","name":"activestorage","color":"bfd4f2","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-05T20:19:16Z","updated_at":"2022-08-09T18:05:34Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\nCreate an ActiveRecord model with an ActiveStorage relation. Initialize and add the associated attachment. Cast the object to another subclassed model, the associated attachment is lost.\r\n\r\n```ruby\r\nunless File.exist?('Gemfile')\r\n    File.write('Gemfile', <<-GEMFILE)\r\n    source 'https://rubygems.org'\r\n    gem 'rails', '~> 6.1'\r\n    gem 'sqlite3'\r\n    GEMFILE\r\n\r\n    system 'bundle'\r\nend\r\n\r\nrequire 'bundler'\r\nBundler.setup(:default)\r\n\r\nrequire 'active_record'\r\nrequire 'active_storage/engine'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  config.hosts << 'example.org'\r\n  config.eager_load = false\r\n  config.session_store :cookie_store, key: 'cookie_store_key'\r\n  secrets.secret_key_base = 'secret_key_base'\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  config.active_storage.service = :local\r\n  config.active_storage.service_configurations = {\r\n    local: {\r\n      root: Dir.tmpdir,\r\n      service: 'Disk'\r\n    }\r\n  }\r\nend\r\n\r\nENV['DATABASE_URL'] = 'sqlite3::memory:'\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\nRails.application.initialize!\r\n\r\nrequire ActiveStorage::Engine.root.join('db/migrate/20170806125915_create_active_storage_tables.rb').to_s\r\n\r\nActiveRecord::Schema.define do\r\n  CreateActiveStorageTables.new.change\r\n\r\n  create_table :posts do |t|\r\n    t.string :title\r\n    t.string :text\r\n  end\r\n\r\n  create_table :comments do |t|\r\n    t.belongs_to :post\r\n    t.string :text\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post\r\n  has_one_attached :image\r\nend\r\n\r\nclass ModeratedComment < Comment; end\r\n\r\nclass BugTest < Minitest::Test\r\n  def setup\r\n    @post = Post.create(title: 'Post', text: 'Welcome')\r\n  end\r\n\r\n  def test_association\r\n    comment = @post.comments.new(text: 'I do not like this')\r\n\r\n    moderated_comment = comment.becomes(ModeratedComment)\r\n\r\n    assert_equal @post, moderated_comment.post # Pass\r\n  end\r\n\r\n  def test_attachment\r\n    file = ActiveStorage::Blob.create_and_upload!(\r\n      content_type: \"image/png\",\r\n      filename: \"image.png\",\r\n      io: ::StringIO.new(\"png\"),\r\n    )\r\n    comment = @post.comments.new(text: 'I do not like this', image: file)\r\n\r\n    moderated_comment = comment.becomes(ModeratedComment)\r\n\r\n    assert moderated_comment.image.attached? # Fail\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nWhen casting an ActiveRecord to another model, I expect the associations to be copied thus I expect attached ActiveStorage association assets to be copied.\r\n\r\n### Actual behavior\r\nPreviously attached ActiveStorage associated objects are lost on the original object.\r\n\r\n### System configuration\r\n**Rails version**: 6.1.6.1\r\n\r\n**Ruby version**: 3.0.4\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45778/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45778/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45775","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45775/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45775/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45775/events","html_url":"https://github.com/rails/rails/issues/45775","id":1330225377,"node_id":"I_kwDNIULOT0mg4Q","number":45775,"title":"Uniqueness validation on association does not use the correct primary key","user":{"login":"mikeletscher","id":6666411,"node_id":"MDQ6VXNlcjY2NjY0MTE=","avatar_url":"https://avatars.githubusercontent.com/u/6666411?v=4","gravatar_id":"","url":"https://api.github.com/users/mikeletscher","html_url":"https://github.com/mikeletscher","followers_url":"https://api.github.com/users/mikeletscher/followers","following_url":"https://api.github.com/users/mikeletscher/following{/other_user}","gists_url":"https://api.github.com/users/mikeletscher/gists{/gist_id}","starred_url":"https://api.github.com/users/mikeletscher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikeletscher/subscriptions","organizations_url":"https://api.github.com/users/mikeletscher/orgs","repos_url":"https://api.github.com/users/mikeletscher/repos","events_url":"https://api.github.com/users/mikeletscher/events{/privacy}","received_events_url":"https://api.github.com/users/mikeletscher/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-05T18:10:22Z","updated_at":"2022-08-09T14:52:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nI'm not _entirely_ sure if this is considered a bug, or intended behavior that's not well-documented for `uniqueness` validations on associations.\r\n\r\nI'm happy to help improve the documentation on this if that would be the most helpful way forward, or if this _is_ considered a bug, I can take a stab at a PR. \r\n\r\nIt looks like the issue is that `build_relation` on the uniqueness validator calls [`bind_attribute` on `ActiveRecord::Relation`](https://github.com/rails/rails/blob/408d061a80a49878ad26b305616ed9ba88ee1411/activerecord/lib/active_record/relation.rb#L45), which properly takes into account the reflection's foreign_key, but not primary key if it's been overridden. \r\n\r\nHere's a test that reproduces the issue:\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire 'bundler/inline'\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem 'activerecord', '~> 7.0.3.1'\r\n  gem 'sqlite3'\r\nend\r\n\r\nrequire 'active_record'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(\r\n  adapter: 'sqlite3',\r\n  database: ':memory:'\r\n)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :prescriptions, force: true do |t|\r\n    t.string :rx_number\r\n  end\r\n\r\n  create_table :fills, force: true do |t|\r\n    t.string :rx_number\r\n  end\r\nend\r\n\r\nclass Prescription < ActiveRecord::Base\r\n  has_many :fills, foreign_key: :rx_number, primary_key: :rx_number\r\nend\r\n\r\nclass Fill < ActiveRecord::Base\r\n  belongs_to :prescription, foreign_key: :rx_number, primary_key: :rx_number\r\n\r\n  validates :prescription, uniqueness: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_fill_unique_by_rx_number\r\n    Fill.create!(rx_number: '1234')\r\n    prescription = Prescription.create!(rx_number: '1234')\r\n    new_fill = prescription.fills.new\r\n    refute new_fill.save\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe uniqueness validation query would use the `rx_number` value of the `Prescription` to query for an existing `Fill` since that is what is set as the associations `primary_key`. \r\n\r\n### Actual behavior\r\nThe uniqueness validation query uses the `id` value of the `Prescription` to query for existing fills, disregarding the association's overridden `primary_key`.\r\n\r\nThis test passes if I patch bind_attribute to read the primary key from the reflection instead of directly from the reflection's klass:\r\n\r\n```ruby\r\nmodule ActiveRecord\r\n  # = Active Record \\Relation\r\n  class Relation\r\n    def bind_attribute(name, value) # :nodoc:\r\n      if reflection = klass._reflect_on_association(name)\r\n        name = reflection.foreign_key\r\n        primary_key = reflection.association_primary_key || reflection.klass.primary_key\r\n        value = value.read_attribute(primary_key) unless value.nil?\r\n      end\r\n\r\n      attr = table[name]\r\n      bind = predicate_builder.build_bind_attribute(attr.name, value)\r\n      yield attr, bind\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nWe were able to work around this by adding the uniqueness validation to the `rx_number` attribute instead of the association. If this is the desired way to handle this, I can open a PR to add a note about this to the docs, as it took us by surprise that validation on the association wouldn't use the defined key to get the value to query.\r\n\r\n### System configuration\r\n**Rails version**: `7.0.3.1`\r\n\r\n**Ruby version**: `3.1.2`\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45775/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45775/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45766","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45766/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45766/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45766/events","html_url":"https://github.com/rails/rails/issues/45766","id":1329650798,"node_id":"I_kwDNIULOT0Dcbg","number":45766,"title":"Active Model Dirty: attribute_changed? options (from/to) do not accept symbol","user":{"login":"thomasvanholder","id":36309895,"node_id":"MDQ6VXNlcjM2MzA5ODk1","avatar_url":"https://avatars.githubusercontent.com/u/36309895?v=4","gravatar_id":"","url":"https://api.github.com/users/thomasvanholder","html_url":"https://github.com/thomasvanholder","followers_url":"https://api.github.com/users/thomasvanholder/followers","following_url":"https://api.github.com/users/thomasvanholder/following{/other_user}","gists_url":"https://api.github.com/users/thomasvanholder/gists{/gist_id}","starred_url":"https://api.github.com/users/thomasvanholder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomasvanholder/subscriptions","organizations_url":"https://api.github.com/users/thomasvanholder/orgs","repos_url":"https://api.github.com/users/thomasvanholder/repos","events_url":"https://api.github.com/users/thomasvanholder/events{/privacy}","received_events_url":"https://api.github.com/users/thomasvanholder/received_events","type":"User","site_admin":false},"labels":[{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-08-05T08:54:51Z","updated_at":"2022-08-07T20:25:55Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nThe `attribute_changed?` receives optional options, such as `from` and `to`. Each option key is passed a value. Only string values are accepted, and symbols are not recognized. This is inconsistent behavior as updating a column using the `update` method does accept both a string and a symbol.\r\n \r\n Source code: [attribute_changed?](https://github.com/rails/rails/blob/04972d9b9ef60796dc8f0917817b5392d61fcf09/activemodel/lib/active_model/dirty.rb#L178) \r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"debug\"\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.column :status, :integer, default: 0\r\n    t.date :review_date\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  enum :status, {draft: 0, published: 1}\r\n\r\n  before_update :set_review_date\r\n\r\n  def set_review_date\r\n    # when \"published\" is set as a string, the test correcty passes.\r\n    if status_changed?(to: :published)\r\n      self.review_date = Date.today\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_set_status\r\n    post = Post.create!\r\n    post.update(status: :published)\r\n\r\n    assert_equal \"published\", post.status\r\n  end\r\n\r\n  def test_sets_review_date\r\n    post = Post.create!\r\n    post.published!\r\n\r\n    assert_equal \"published\", post.status\r\n    assert_equal Date.today, post.review_date\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe value of the optional arguments `from` and `to` accepts both a string or symbol.\r\n\r\n### Actual behavior\r\nWhen options, such as `from` and `to` are passed to the [attribute_changed?](https://github.com/rails/rails/blob/04972d9b9ef60796dc8f0917817b5392d61fcf09/activemodel/lib/active_model/dirty.rb#L178) method the arguments are not recognized when passed as a symbol.\r\n\r\n### System configuration\r\n**Rails version**: `Rails 7.0.3`\r\n\r\n**Ruby version**: `ruby 3.1.2`\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45766/reactions","total_count":2,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45766/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45758","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45758/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45758/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45758/events","html_url":"https://github.com/rails/rails/issues/45758","id":1327892229,"node_id":"I_kwDNIULOTyYHBQ","number":45758,"title":"ActiveRecord 6.1 and JSONB: Incorrect results value/type when using both arrow operator and double arrow operator in the same SELECT statement","user":{"login":"shhavel","id":1169424,"node_id":"MDQ6VXNlcjExNjk0MjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1169424?v=4","gravatar_id":"","url":"https://api.github.com/users/shhavel","html_url":"https://github.com/shhavel","followers_url":"https://api.github.com/users/shhavel/followers","following_url":"https://api.github.com/users/shhavel/following{/other_user}","gists_url":"https://api.github.com/users/shhavel/gists{/gist_id}","starred_url":"https://api.github.com/users/shhavel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shhavel/subscriptions","organizations_url":"https://api.github.com/users/shhavel/orgs","repos_url":"https://api.github.com/users/shhavel/repos","events_url":"https://api.github.com/users/shhavel/events{/privacy}","received_events_url":"https://api.github.com/users/shhavel/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-08-03T23:42:39Z","updated_at":"2022-08-05T22:26:04Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Issue Description\r\n\r\nGenerally when using JSONB operators `->` (arrow operator) and `->>` (double arrow operator) in SELECT statement, \r\nActiveRecord returns correct result types: objects for `->` operator and string for `->>` operator.\r\nBut when using both operators in the same select statement, the returned results may have an unexpected type or be `nil`.\r\n\r\n### Steps to reproduce with Expected behaviour in tests and Actual behaviour in comments\r\n\r\n```ruby\r\n# file: activerecord_6_1_jsonb_test.rb\r\n# run: ruby activerecord_6_1_jsonb_test.rb\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"activerecord\", \"6.1.6.1\" # the same behaviour for version \"7.0.3.1\"\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\npg_opts = {adapter: \"postgresql\", database: \"jsonb_activerecord_issue\"}\r\nbegin\r\n  ActiveRecord::Base.establish_connection(pg_opts.except(:database))\r\n  ActiveRecord::Base.connection.create_database(pg_opts[:database])\r\n  puts \"Database #{pg_opts[:database]} was created.\"\r\nrescue => ActiveRecord::DatabaseAlreadyExists\r\n  puts \"Database #{pg_opts[:database]} alredy exists.\"\r\nend\r\nActiveRecord::Base.establish_connection(pg_opts)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :entries, force: true do |t|\r\n    t.jsonb :value\r\n  end\r\nend\r\n\r\nclass Entry < ActiveRecord::Base\r\nend\r\nEntry.create(value: {a: \"a\", b: \"b\", c: {}})\r\n\r\nclass BugTest < Minitest::Test\r\n  # passed\r\n  def test_jsonb_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->'a', value->'b'\"))\r\n    assert_equal [[{}, \"b\"]], Entry.pluck(Arel.sql(\"value->'c', value->'b'\"))\r\n  end\r\n\r\n  # passed\r\n  def test_jsonb_double_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'a', value->>'b'\"))\r\n    assert_equal [[\"{}\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'c', value->>'b'\"))\r\n  end\r\n\r\n  # failed (this test results are differ in activerecord 6.0)\r\n  def test_jsonb_arrow_operator_and_double_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->'a', value->>'b'\")) # Actual [[\"a\", nil]]\r\n    assert_equal [[{}, \"b\"]], Entry.pluck(Arel.sql(\"value->'c', value->>'b'\")) # Actual [[{}, nil]]\r\n  end\r\n\r\n  # failed\r\n  def test_jsonb_double_arrow_operator_and_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'a', value->'b'\")) # Actual [[nil, \"b\"]]\r\n    assert_equal [[\"{}\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'c', value->'b'\")) # Actual [[{}, \"b\"]]\r\n  end\r\nend\r\n```\r\n\r\n### PostgreSQL results \r\n\r\n```sql\r\nSELECT\r\n  pg_typeof(value->'a'), value->'a',\r\n  pg_typeof(value->'b'), value->'b',\r\n  pg_typeof(value->'c'), value->'c',\r\n  pg_typeof(value->>'a'), value->>'a',\r\n  pg_typeof(value->>'b'), value->>'b',\r\n  pg_typeof(value->>'c'), value->>'c'\r\nFROM \"entries\";\r\n\r\n pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column?\r\n-----------+----------+-----------+----------+-----------+----------+-----------+----------+-----------+----------+-----------+----------\r\n jsonb     | \"a\"      | jsonb     | \"b\"      | jsonb     | {}       | text      | a        | text      | b        | text      | {}\r\n(1 row)\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 6.1.6.1\r\n\r\n**Ruby version**: 3.1.0\r\n\r\n### Similar issue in different versions of ActiveRecord\r\n\r\nThere is a similar issue but with slightly different behaviour in AR 6.0. Created another issue: #45757\r\n\r\nPlease confirm or comment on the expected behaviour.\r\nThank you.\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45758/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45758/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45750","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45750/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45750/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45750/events","html_url":"https://github.com/rails/rails/issues/45750","id":1327484205,"node_id":"I_kwDNIULOTx_NLQ","number":45750,"title":"Running `rails test` doesn't automatically load any custom tasks under `lib/tasks`","user":{"login":"onlynone","id":833690,"node_id":"MDQ6VXNlcjgzMzY5MA==","avatar_url":"https://avatars.githubusercontent.com/u/833690?v=4","gravatar_id":"","url":"https://api.github.com/users/onlynone","html_url":"https://github.com/onlynone","followers_url":"https://api.github.com/users/onlynone/followers","following_url":"https://api.github.com/users/onlynone/following{/other_user}","gists_url":"https://api.github.com/users/onlynone/gists{/gist_id}","starred_url":"https://api.github.com/users/onlynone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/onlynone/subscriptions","organizations_url":"https://api.github.com/users/onlynone/orgs","repos_url":"https://api.github.com/users/onlynone/repos","events_url":"https://api.github.com/users/onlynone/events{/privacy}","received_events_url":"https://api.github.com/users/onlynone/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-03T16:16:38Z","updated_at":"2022-08-03T18:09:40Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n1. Create the file `lib/tasks/test.rake` with the content:\r\n```ruby\r\nENV[\"test.rake\"] = \"yes\"\r\ntask :custom_task do\r\n  ENV[\"custom_task\"] = \"yes\"\r\nend\r\n\r\ntask :test => [:custom_task]\r\n```\r\n2. Create a test file at `test/unit/rails_test_test.rb` with the content:\r\n```ruby\r\nclass RailsTestTest < ActiveSupport::TestCase\r\n  test \"test.rake is in the environment\" do\r\n    assert_equal('yes', ENV['test.rake'])\r\n  end\r\n\r\n  test \"custom_task is in the environment\" do\r\n    assert_equal('yes', ENV['custom_task'])\r\n  end\r\nend\r\n```\r\n3. Run `bin/rails test test/unit/rails_test_test.rb`\r\n4. Run `bin/rake test test/unit/rails_test_test.rb`\r\n\r\n### Expected behavior\r\nBoth `rails test` and `rake test` should succeed.\r\n\r\n### Actual behavior\r\nRunning the tests with `bin/rake` succeeds with the output:\r\n```\r\nbin/rake test test/unit/rails_test_test.rb\r\nRunning via Spring preloader in process 59092\r\nRun options: --seed 6948\r\n\r\n# Running:\r\n\r\n..\r\n\r\nFinished in 0.000943s, 2120.8907 runs/s, 2120.8907 assertions/s.\r\n2 runs, 2 assertions, 0 failures, 0 errors, 0 skips\r\n```\r\n\r\nWhile running with `bin/rails` fails with the output:\r\n\r\n```\r\nRunning via Spring preloader in process 58735\r\nRun options: --seed 33633\r\n\r\n# Running:\r\n\r\nF\r\n\r\nFailure:\r\nRailsTestTest#test_custom_task_is_in_the_environment [/Users/steven/projects/rails_test_tasks/test/unit/rails_test_test.rb:7]:\r\nExpected: \"yes\"\r\n  Actual: nil\r\n\r\n\r\nrails test test/unit/rails_test_test.rb:6\r\n\r\nF\r\n\r\nFailure:\r\nRailsTestTest#test_test.rake_is_in_the_environment [/Users/steven/projects/rails_test_tasks/test/unit/rails_test_test.rb:3]:\r\nExpected: \"yes\"\r\n  Actual: nil\r\n\r\n\r\nrails test test/unit/rails_test_test.rb:2\r\n\r\n\r\n\r\nFinished in 0.001378s, 1451.3788 runs/s, 1451.3788 assertions/s.\r\n2 runs, 2 assertions, 2 failures, 0 errors, 0 skips\r\n```\r\n\r\nBecause the file `lib/tasks/test.rake` is never loaded.\r\n\r\nIt seems like rails will only end up loading custom tasks if it can't find the command being run on the command line in its own list of built-in commands. When it can't find the command, it will load the local `Rakefile` via `find_by_namespace(\"rake\").perform(full_namespace, args, config)` in `Rails::Command.invoke`. And the local `Rakefile` usually has `Rails.application.load_tasks` and that loads any custom tasks under `lib/tasks`.\r\n\r\nFor example, this happens when the `ActiveRecord` migration exec's out to call: `bin/rails db:test:prepare`. That task is apparently not a built-in rails task, so the `Rakefile` and all custom tasks *do* end up getting loaded for that one.\r\n\r\n(As an aside here, I don't fully understand the difference between the built-in rails tasks and the ones that have to be searched for via rake. I also don't understand why the migration code needs to fork a separate process to do `db:test:prepare`. That task just ends up doing `db_namespace[\"test:load\"].invoke`. Why couldn't the `db:test:prepare` tasks simply be invoked the same way in the same process?)\r\n\r\n### System configuration\r\n**Rails version**: 6.0.5\r\n\r\n**Ruby version**: 2.6.5\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45750/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45750/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45736","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45736/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45736/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45736/events","html_url":"https://github.com/rails/rails/issues/45736","id":1326221102,"node_id":"I_kwDNIULOTwyHLg","number":45736,"title":"Virtual stored columns are always nil for newly created records","user":{"login":"camiloforero","id":6606686,"node_id":"MDQ6VXNlcjY2MDY2ODY=","avatar_url":"https://avatars.githubusercontent.com/u/6606686?v=4","gravatar_id":"","url":"https://api.github.com/users/camiloforero","html_url":"https://github.com/camiloforero","followers_url":"https://api.github.com/users/camiloforero/followers","following_url":"https://api.github.com/users/camiloforero/following{/other_user}","gists_url":"https://api.github.com/users/camiloforero/gists{/gist_id}","starred_url":"https://api.github.com/users/camiloforero/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/camiloforero/subscriptions","organizations_url":"https://api.github.com/users/camiloforero/orgs","repos_url":"https://api.github.com/users/camiloforero/repos","events_url":"https://api.github.com/users/camiloforero/events{/privacy}","received_events_url":"https://api.github.com/users/camiloforero/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-02T18:09:28Z","updated_at":"2022-08-02T19:28:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nUsing postgresql:\r\n\r\nGenerate a new model with one or more columns with default values, and a virtual stored column based on those other columns\r\nCreate a new record of that model\r\nAccess the value of the virtual stored column from the newly created ActiveRecord object\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem 'pg', '~> 1.4'\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection \"postgresql:///test\"\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.integer :counter1, null: false, default: 0\r\n    t.integer :counter2, null: false, default: 0\r\n    t.virtual :counter_sum, type: :integer, as: \"counter1 + counter2\", stored: true\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_virtual_column_value_populated\r\n    post = Post.create!\r\n\r\n    assert_equal 0, post.counter_sum\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe value of the virtual column should be *something*, in this particular case, 0\r\n\r\n### Actual behavior\r\nThe value of the virtual column is `nil`. The test fails with the following output\r\n```ruby\r\n# Running:\r\n\r\nD, [2022-08-02T13:05:17.402730 #13548] DEBUG -- :   TRANSACTION (0.1ms)  BEGIN\r\nD, [2022-08-02T13:05:17.403136 #13548] DEBUG -- :   Post Create (0.6ms)  INSERT INTO \"posts\" DEFAULT VALUES RETURNING \"id\"\r\nD, [2022-08-02T13:05:17.406144 #13548] DEBUG -- :   TRANSACTION (2.6ms)  COMMIT\r\nF\r\n\r\nFailure:\r\nBugTest#test_virtual_column_value_populated [stored_bug.rb:37]:\r\nExpected: 0\r\n  Actual: nil\r\n\r\n\r\nrails test stored_bug.rb:34\r\n\r\n\r\n\r\nFinished in 0.011047s, 90.5240 runs/s, 90.5240 assertions/s.\r\n1 runs, 1 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\n### System configuration\r\n**Rails version**: edge\r\n**Ruby version**: 3.1.2\r\n**PostgreSQL version**: 14.4\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45736/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45736/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45709","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45709/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45709/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45709/events","html_url":"https://github.com/rails/rails/issues/45709","id":1323303409,"node_id":"I_kwDNIULOTuAB8Q","number":45709,"title":"Rails & can't pin JS files from Unpkg","user":{"login":"septerr","id":1094216,"node_id":"MDQ6VXNlcjEwOTQyMTY=","avatar_url":"https://avatars.githubusercontent.com/u/1094216?v=4","gravatar_id":"","url":"https://api.github.com/users/septerr","html_url":"https://github.com/septerr","followers_url":"https://api.github.com/users/septerr/followers","following_url":"https://api.github.com/users/septerr/following{/other_user}","gists_url":"https://api.github.com/users/septerr/gists{/gist_id}","starred_url":"https://api.github.com/users/septerr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/septerr/subscriptions","organizations_url":"https://api.github.com/users/septerr/orgs","repos_url":"https://api.github.com/users/septerr/repos","events_url":"https://api.github.com/users/septerr/events{/privacy}","received_events_url":"https://api.github.com/users/septerr/received_events","type":"User","site_admin":false},"labels":[{"id":131864,"node_id":"MDU6TGFiZWwxMzE4NjQ=","url":"https://api.github.com/repos/rails/rails/labels/third%20party%20issue","name":"third party issue","color":"02d7e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-07-30T21:44:43Z","updated_at":"2022-08-02T18:08:34Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nIn a new Rails & app, try to pin a package from Unpkg CDN:\r\n\r\n```\r\n./bin/importmap pin @walletconnect/web3-provider@1.7.8 --from unpkg\r\n```\r\n\r\nYou get following response:\r\n\r\n```\r\nCouldn't find any packages in [\"@walletconnect/web3-provider@1.7.8\"] on unpkg\r\n```\r\nBut the file does exist on unpkg: https://unpkg.com/@walletconnect/web3-provider@1.7.8/dist/umd/index.min.js\r\n\r\nAfter adding some breakpoints in `.rbenv/versions/3.1.0/lib/ruby/gems/3.1.0/gems/importmap-rails-1.1.5/lib/importmap/packager.rb`, saw that the CDN post request and response are as follows:\r\n\r\nPost URL: \r\n```\r\n<URI::HTTPS https://api.jspm.io/generate>\r\n```\r\nPost Body:\r\n```\r\n \"{\\\"install\\\":[\\\"@walletconnect/web3-provider@1.7.8\\\"],\\\"flattenScope\\\":true,\\\"env\\\":[\\\"browser\\\",\\\"module\\\",\\\"production\\\"],\\\"provider\\\":\\\"unpkg\\\"}\"\r\n```\r\n\r\nPost Response:\r\n```\r\n<Net::HTTPUnauthorized 401 Unauthorized readbody=true>\r\n```\r\n\r\n### Expected behavior\r\nExpected the files from unpkg to be pinned.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nMisleading error that files don't exist on unpkg.\r\n\r\n### System configuration\r\n**Rails version**:\r\nRails 7.0.3.1\r\n\r\n**Ruby version**:\r\nruby 3.1.0p0 (2021-12-25 revision fb4df44d16) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45709/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45709/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45691","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45691/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45691/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45691/events","html_url":"https://github.com/rails/rails/issues/45691","id":1322122058,"node_id":"I_kwDNIULOTs37Sg","number":45691,"title":"ActionMailer fails to create correct multipart message with rfc822 attachment","user":{"login":"der-flo","id":35431,"node_id":"MDQ6VXNlcjM1NDMx","avatar_url":"https://avatars.githubusercontent.com/u/35431?v=4","gravatar_id":"","url":"https://api.github.com/users/der-flo","html_url":"https://github.com/der-flo","followers_url":"https://api.github.com/users/der-flo/followers","following_url":"https://api.github.com/users/der-flo/following{/other_user}","gists_url":"https://api.github.com/users/der-flo/gists{/gist_id}","starred_url":"https://api.github.com/users/der-flo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/der-flo/subscriptions","organizations_url":"https://api.github.com/users/der-flo/orgs","repos_url":"https://api.github.com/users/der-flo/repos","events_url":"https://api.github.com/users/der-flo/events{/privacy}","received_events_url":"https://api.github.com/users/der-flo/received_events","type":"User","site_admin":false},"labels":[{"id":107188,"node_id":"MDU6TGFiZWwxMDcxODg=","url":"https://api.github.com/repos/rails/rails/labels/actionmailer","name":"actionmailer","color":"8B00FC","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-29T11:19:00Z","updated_at":"2022-08-02T19:46:17Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I cannot re-open #42849 so I create a new issue…\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire 'bundler/inline'\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n  gem 'rails', github: 'rails/rails', branch: 'main'\r\nend\r\n\r\nrequire 'minitest/autorun'\r\nrequire 'action_mailer/railtie'\r\n\r\nclass TestMailer < ActionMailer::Base\r\n  def main\r\n    message_to_attach =  <<~MAIL.gsub(/\\n/, \"\\r\\n\")\r\n      Message-ID: <12345@foo.example>\r\n      Subject: Test\r\n      From: test1@foo.example\r\n      To: test2@foo.example\r\n      \r\n      hello world\r\n    MAIL\r\n    attachments['test.eml'] = {\r\n      mime_type: params[:mime_type],\r\n      content: message_to_attach\r\n    }\r\n\r\n    mail(from: 'test3@foo.example', to: 'test4@foo.example', subject: 'Test outer') do |format|\r\n      format.text { \"outer text - #{params[:mime_type]} attachment\" }\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_with_plain_mime_type\r\n    message = TestMailer.with(mime_type: 'text/plain').main\r\n    assert_equal message.mime_type, 'multipart/mixed'\r\n  end\r\n\r\n  def test_with_rfc822_mime_type\r\n    message = TestMailer.with(mime_type: 'message/rfc822').main\r\n    assert_equal message.mime_type, 'multipart/mixed'\r\n  end\r\nend\r\n```\r\n\r\nThe second test fails, the message object is rendered as follows:\r\n```\r\nDate: Fri, 23 Jul 2021 13:59:19 +0200\r\nFrom: test3@foo.example\r\nTo: test4@foo.example\r\nMessage-ID: <60faaf1738a02_14fbd98-3fb@flo.adigi.ai.mail>\r\nSubject: Test outer\r\nMime-Version: 1.0\r\nContent-Type: text/plain;\r\n boundary=\"--==_mimepart_60faaf1738008_14fbd98-484\";\r\n charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\n\r\n\r\n----==_mimepart_60faaf1738008_14fbd98-484\r\nContent-Type: text/plain;\r\n charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\n\r\nouter text - message/rfc822 attachment\r\n----==_mimepart_60faaf1738008_14fbd98-484\r\nContent-Type: message/rfc822\r\nContent-Transfer-Encoding: \r\nContent-Disposition: attachment;\r\n filename=test.eml\r\nContent-ID: <60faaf1739102_14fbd98-2b@flo.adigi.ai.mail>\r\n\r\nMessage-ID: <12345@foo.example>\r\nSubject: Test\r\nFrom: test1@foo.example\r\nTo: test2@foo.example\r\n\r\nhello world\r\n\r\n----==_mimepart_60faaf1738008_14fbd98-484--\r\n\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe `message.mime_type` is `multipart/mixed` in both test cases. ActionMailer handles attachments in the way it is described in https://guides.rubyonrails.org/action_mailer_basics.html#adding-attachments describes.\r\n\r\n### Actual behavior\r\n\r\nWhen attaching a `message/rfc822` - an email message - the generated mail parts are not nested correctly, the outer `multipart/mixed` is missing.\r\n\r\nPerhaps this behaviour is caused by the [special handling](https://github.com/mikel/mail/blob/master/lib/mail/attachments_list.rb#L9) of such attachments in the `mail` gem.\r\n\r\n\r\n### System configuration\r\n**Rails version**: main\r\n\r\n**Ruby version**: 3.0.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45691/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":1,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45691/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45640","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45640/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45640/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45640/events","html_url":"https://github.com/rails/rails/issues/45640","id":1315219867,"node_id":"I_kwDNIULOTmSpmw","number":45640,"title":"ActiveModel::Dirty changes not reset properly when using store_accessor (tested with postgres)","user":{"login":"vccoffey","id":59817868,"node_id":"MDQ6VXNlcjU5ODE3ODY4","avatar_url":"https://avatars.githubusercontent.com/u/59817868?v=4","gravatar_id":"","url":"https://api.github.com/users/vccoffey","html_url":"https://github.com/vccoffey","followers_url":"https://api.github.com/users/vccoffey/followers","following_url":"https://api.github.com/users/vccoffey/following{/other_user}","gists_url":"https://api.github.com/users/vccoffey/gists{/gist_id}","starred_url":"https://api.github.com/users/vccoffey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vccoffey/subscriptions","organizations_url":"https://api.github.com/users/vccoffey/orgs","repos_url":"https://api.github.com/users/vccoffey/repos","events_url":"https://api.github.com/users/vccoffey/events{/privacy}","received_events_url":"https://api.github.com/users/vccoffey/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-07-22T16:44:57Z","updated_at":"2022-07-23T17:51:49Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nUsing PostgreSQL (pg) database\r\nGiven a model with a jsonb column\r\n```\r\nclass CreateTestModels < ActiveRecord::Migration[6.1]\r\n  def change\r\n    create_table :test_models do |t|\r\n      t.jsonb :jsonb_hash_attr\r\n      t.timestamps\r\n    end\r\n  end\r\nend\r\n```\r\nusing store_accessor\r\n```\r\nclass TestModel < ApplicationRecord\r\n  store_accessor :jsonb_hash_attr, :key, prefix: true\r\nend\r\n```\r\n\r\n### Expected behavior\r\nBoth tests pass:\r\n```\r\nrequire \"test_helper\"\r\nclass TestModelTest < ActiveSupport::TestCase\r\n  test \"does not show changes for a jsonb attribute if changed back to original value\" do\r\n    tm = TestModel.create jsonb_hash_attr: { \"key\" => \"foo\" }\r\n    tm.jsonb_hash_attr = { \"key\" => \"bar\" }\r\n    assert_equal tm.jsonb_hash_attr_change, [{ \"key\" => \"foo\" }, { \"key\" => \"bar\" }]\r\n    tm.jsonb_hash_attr = { \"key\" => \"foo\" }\r\n    assert_equal tm.jsonb_hash_attr_change, nil\r\n  end\r\n\r\n  test \"does not show changes for a jsonb attribute if changed back to original value using store_accessor\" do\r\n    tm = TestModel.create jsonb_hash_attr: { \"key\" => \"foo\" }\r\n    tm.jsonb_hash_attr_key = \"bar\"\r\n    assert_equal tm.jsonb_hash_attr_change, [{ \"key\" => \"foo\" }, { \"key\" => \"bar\" }]\r\n    tm.jsonb_hash_attr_key = \"foo\"\r\n    assert_equal tm.jsonb_hash_attr_change, nil\r\n  end\r\nend\r\n```\r\n### Actual behavior\r\nThe second test fails\r\n```\r\n--- expected\r\n+++ actual\r\n-[{\"key\"=>\"foo\"}, {\"key\"=>\"foo\"}]\r\n+nil\r\n```\r\n### System configuration\r\n**Rails version**:\r\ntested with 6.1.6.1 and 7.0.3.1\r\n\r\n**Ruby version**: 3.1.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45640/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45640/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45639","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45639/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45639/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45639/events","html_url":"https://github.com/rails/rails/issues/45639","id":1314984267,"node_id":"I_kwDNIULOTmERSw","number":45639,"title":"Explicitly touch on save","user":{"login":"schmijos","id":245443,"node_id":"MDQ6VXNlcjI0NTQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/245443?v=4","gravatar_id":"","url":"https://api.github.com/users/schmijos","html_url":"https://github.com/schmijos","followers_url":"https://api.github.com/users/schmijos/followers","following_url":"https://api.github.com/users/schmijos/following{/other_user}","gists_url":"https://api.github.com/users/schmijos/gists{/gist_id}","starred_url":"https://api.github.com/users/schmijos/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/schmijos/subscriptions","organizations_url":"https://api.github.com/users/schmijos/orgs","repos_url":"https://api.github.com/users/schmijos/repos","events_url":"https://api.github.com/users/schmijos/events{/privacy}","received_events_url":"https://api.github.com/users/schmijos/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-22T13:05:14Z","updated_at":"2022-07-22T20:31:00Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  ruby \"3.1.0\"\r\n  gem \"rails\", \"7.0.3.1\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.timestamps\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_save_touch\r\n    Post.create!(updated_at: 3.days.ago)\r\n    Post.last.save!(touch: true)\r\n\r\n    assert_in_delta 0.seconds.ago.to_i, Post.last.updated_at.to_i, 5\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nIf I tell _ActiveRecord_ to explicitly \"touch\", then I would expect it to update the timestamps.\r\n\r\n### Actual behavior\r\n`save` never hits the database if no attribute changed.\r\n\r\n### System configuration\r\n**Rails version**: >= 3.0.0, < 8","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45639/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45639/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45638","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45638/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45638/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45638/events","html_url":"https://github.com/rails/rails/issues/45638","id":1314662755,"node_id":"I_kwDNIULOTlwpYw","number":45638,"title":"CSRF Token Expiry issue.","user":{"login":"MBM1607","id":47133639,"node_id":"MDQ6VXNlcjQ3MTMzNjM5","avatar_url":"https://avatars.githubusercontent.com/u/47133639?v=4","gravatar_id":"","url":"https://api.github.com/users/MBM1607","html_url":"https://github.com/MBM1607","followers_url":"https://api.github.com/users/MBM1607/followers","following_url":"https://api.github.com/users/MBM1607/following{/other_user}","gists_url":"https://api.github.com/users/MBM1607/gists{/gist_id}","starred_url":"https://api.github.com/users/MBM1607/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MBM1607/subscriptions","organizations_url":"https://api.github.com/users/MBM1607/orgs","repos_url":"https://api.github.com/users/MBM1607/repos","events_url":"https://api.github.com/users/MBM1607/events{/privacy}","received_events_url":"https://api.github.com/users/MBM1607/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-22T08:38:19Z","updated_at":"2022-07-22T08:40:22Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"We are encountering an issue with form submission in production environment.\r\nThe criteria seems to be exceptionally rare, I have been unable to replicate the issue. \r\n\r\nCSRF token is created and validated just fine.\r\n\r\n### Timing\r\n\r\nIssue seems to occur only when users wait more than 2 hours on a form before submitting, but doing this we have been unable to reproduce as well.\r\n\r\n### Logs\r\n```\r\nW, [2022-07-14T15:19:37.535241 #2433]  WARN -- : Can't verify CSRF token authenticity.\r\nI, [2022-07-14T15:19:37.535556 #2433]  INFO -- : Completed 422 Unprocessable Entity in 1ms (ActiveRecord: 0.0ms | Allocations: 291)\r\nF, [2022-07-14T15:19:37.536425 #2433] FATAL -- :   \r\nActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n```\r\n\r\n### System configuration\r\n**Rails version 6.1.6** \r\n**Ruby version 2.7.4**\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45638/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45638/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45636","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45636/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45636/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45636/events","html_url":"https://github.com/rails/rails/issues/45636","id":1314546104,"node_id":"I_kwDNIULOTlphuA","number":45636,"title":"Invalid template types should raise an exception","user":{"login":"axos88","id":1281218,"node_id":"MDQ6VXNlcjEyODEyMTg=","avatar_url":"https://avatars.githubusercontent.com/u/1281218?v=4","gravatar_id":"","url":"https://api.github.com/users/axos88","html_url":"https://github.com/axos88","followers_url":"https://api.github.com/users/axos88/followers","following_url":"https://api.github.com/users/axos88/following{/other_user}","gists_url":"https://api.github.com/users/axos88/gists{/gist_id}","starred_url":"https://api.github.com/users/axos88/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/axos88/subscriptions","organizations_url":"https://api.github.com/users/axos88/orgs","repos_url":"https://api.github.com/users/axos88/repos","events_url":"https://api.github.com/users/axos88/events{/privacy}","received_events_url":"https://api.github.com/users/axos88/received_events","type":"User","site_admin":false},"labels":[{"id":3666649,"node_id":"MDU6TGFiZWwzNjY2NjQ5","url":"https://api.github.com/repos/rails/rails/labels/actionview","name":"actionview","color":"d7e102","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-07-22T07:40:54Z","updated_at":"2022-08-17T18:02:14Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n  - Create a template in views/foo/bar.txt.erb # Note .txt, and not .text\r\n\r\n```ruby\r\ndetails = { locale: [:en], formats: [:txt], handlers: [:erb], variants: []}\r\nActionController::Base.view_paths.find(\"bar\", 'foo', false, details, nil, [])\r\n```\r\n\r\n### Expected behavior\r\n\r\nShould throw an exception that :txt is not a registered type in Template::Types\r\n\r\n### Actual behavior\r\n\r\nSilently fails to find the otherwise existing template, specifying the correct directory it the file resides in. \r\nConfustion intensifies.\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3\r\n**Ruby version**: 2.7.6","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45636/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45636/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45635","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45635/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45635/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45635/events","html_url":"https://github.com/rails/rails/issues/45635","id":1314015345,"node_id":"I_kwDNIULOTlJIcQ","number":45635,"title":"Recent security releases are missing from the Releases page","user":{"login":"georgeclaghorn","id":94129,"node_id":"MDQ6VXNlcjk0MTI5","avatar_url":"https://avatars.githubusercontent.com/u/94129?v=4","gravatar_id":"","url":"https://api.github.com/users/georgeclaghorn","html_url":"https://github.com/georgeclaghorn","followers_url":"https://api.github.com/users/georgeclaghorn/followers","following_url":"https://api.github.com/users/georgeclaghorn/following{/other_user}","gists_url":"https://api.github.com/users/georgeclaghorn/gists{/gist_id}","starred_url":"https://api.github.com/users/georgeclaghorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/georgeclaghorn/subscriptions","organizations_url":"https://api.github.com/users/georgeclaghorn/orgs","repos_url":"https://api.github.com/users/georgeclaghorn/repos","events_url":"https://api.github.com/users/georgeclaghorn/events{/privacy}","received_events_url":"https://api.github.com/users/georgeclaghorn/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false},"assignees":[{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2022-07-22T01:21:34Z","updated_at":"2022-08-19T18:08:06Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Rails versions 7.0.3.1, 6.1.6.1, 6.0.5.1, and 5.2.8.1 are not listed at this GitHub repository’s [Releases](https://github.com/rails/rails/releases) page. Past releases are listed there, including the most recent round of bugfix releases from May.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45635/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45635/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45632","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45632/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45632/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45632/events","html_url":"https://github.com/rails/rails/issues/45632","id":1312439669,"node_id":"I_kwDNIULOTjo9dQ","number":45632,"title":"`_read_attribute` method should also check whether an attribute is aliased or not","user":{"login":"khiav223577","id":4011729,"node_id":"MDQ6VXNlcjQwMTE3Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4011729?v=4","gravatar_id":"","url":"https://api.github.com/users/khiav223577","html_url":"https://github.com/khiav223577","followers_url":"https://api.github.com/users/khiav223577/followers","following_url":"https://api.github.com/users/khiav223577/following{/other_user}","gists_url":"https://api.github.com/users/khiav223577/gists{/gist_id}","starred_url":"https://api.github.com/users/khiav223577/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/khiav223577/subscriptions","organizations_url":"https://api.github.com/users/khiav223577/orgs","repos_url":"https://api.github.com/users/khiav223577/repos","events_url":"https://api.github.com/users/khiav223577/events{/privacy}","received_events_url":"https://api.github.com/users/khiav223577/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-07-21T03:14:22Z","updated_at":"2022-07-21T21:37:09Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n```rb\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  gem \"activerecord\", '7.0.3'\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table \"users\", force: :cascade do |t|\r\n    t.string :name\r\n  end\r\n\r\n  create_table \"posts\", force: :cascade do |t|\r\n    t.string :title\r\n    t.integer :userId\r\n  end\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\n  has_many :posts\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  belongs_to :user\r\n\r\n  alias_attribute :user_id, :userId\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def setup\r\n    user = User.create!(name: 'Tester')\r\n    post = Post.create!(user_id: user.id, title: 'Post A')\r\n  end\r\n\r\n  def test_has_many\r\n    assert_equal ['Post A'], User.first.posts.map(&:title)\r\n  end\r\n\r\n  def test_belongs_to\r\n    assert_equal 'Tester', Post.first.user&.name\r\n  end\r\nend\r\n```\r\n\r\nResult:\r\n```\r\nFinished in 0.059414s, 33.6619 runs/s, 33.6619 assertions/s.\r\n\r\n  1) Failure:\r\nBugTest#test_belongs_to [test.rb:53]:\r\nExpected: \"Tester\"\r\n  Actual: nil\r\n\r\n2 runs, 2 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\n### Expected behavior\r\n\r\nI run into this issue when I tried to add an association on an aliased attribute.\r\n\r\nThen I found `belongs_to_association` will use `_read_attribute` method to check if this `foreign_key` exists on this model or not.\r\nIt doesn't pass the condition, therefore `find_target` will not be triggered.\r\nhttps://github.com/rails/rails/blob/3272335f8f4739629283cdeff7c3db723f34a3f5/activerecord/lib/active_record/associations/association.rb#L172-L173\r\nhttps://github.com/rails/rails/blob/3272335f8f4739629283cdeff7c3db723f34a3f5/activerecord/lib/active_record/associations/association.rb#L274-L276\r\nhttps://github.com/rails/rails/blob/2ea5ff9e13b9c5d0d5d25b2441efa81a2de2a262/activerecord/lib/active_record/associations/belongs_to_association.rb#L133-L135\r\nhttps://github.com/rails/rails/blob/4ae0390c1051a39ec16a4a95451cd06172a1b260/activerecord/lib/active_record/attribute_methods/read.rb#L37-L39\r\n\r\nThe `read_attribute` method takes `attribute_alias` into consideration since https://github.com/rails/rails/pull/26529, while `_read_attribute` doesn't. I think it should, too.\r\n\r\n### Actual behavior\r\n\r\nSee the test script below.\r\n\r\n### System configuration\r\n**Rails version**: \r\n7.0.3.1\r\n\r\n**Ruby version**:\r\nruby 3.0.0p0 (2020-12-25 revision 95aff21468) [x86_64-linux]","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45632/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45632/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45609","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45609/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45609/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45609/events","html_url":"https://github.com/rails/rails/issues/45609","id":1306840730,"node_id":"I_kwDNIULOTeTOmg","number":45609,"title":"Cannot add ActiveModel::Attribute::FromDatabase to permitted YAML safe load classes","user":{"login":"stanhu","id":963826,"node_id":"MDQ6VXNlcjk2MzgyNg==","avatar_url":"https://avatars.githubusercontent.com/u/963826?v=4","gravatar_id":"","url":"https://api.github.com/users/stanhu","html_url":"https://github.com/stanhu","followers_url":"https://api.github.com/users/stanhu/followers","following_url":"https://api.github.com/users/stanhu/following{/other_user}","gists_url":"https://api.github.com/users/stanhu/gists{/gist_id}","starred_url":"https://api.github.com/users/stanhu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stanhu/subscriptions","organizations_url":"https://api.github.com/users/stanhu/orgs","repos_url":"https://api.github.com/users/stanhu/repos","events_url":"https://api.github.com/users/stanhu/events{/privacy}","received_events_url":"https://api.github.com/users/stanhu/received_events","type":"User","site_admin":false},"labels":[{"id":107186,"node_id":"MDU6TGFiZWwxMDcxODY=","url":"https://api.github.com/repos/rails/rails/labels/regression","name":"regression","color":"e10c02","default":false,"description":null},{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-07-16T15:51:30Z","updated_at":"2022-08-18T11:39:07Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWe have some database entries serialized to YAML. For example:\r\n\r\n```\r\n---\r\n:custom_message: Repository Download Started\r\n:author_name: !ruby/object:DeployToken\r\n  concise_attributes:\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: deploy_token_type\r\n    value_before_type_cast: 1\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: id\r\n    value_before_type_cast: 2\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: revoked\r\n    value_before_type_cast: false\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: read_repository\r\n    value_before_type_cast: true\r\n```\r\n\r\nHowever, since the security release announced in https://rubyonrails.org/2022/7/12/Rails-Versions-7-0-3-1-6-1-6-1-6-0-5-1-and-5-2-8-1-have-been-released to address CVE-2022-32224, we cannot simply add `ActiveModel::Attribute::FromDatabase` to the permitted class list:\r\n\r\n```ruby\r\n(byebug) YAML.safe_load(payload, permitted_classes: [ActiveModel::Attribute::FromDatabase, Symbol, DeployToken], aliases: true)\r\n*** NameError Exception: private constant ActiveModel::Attribute::FromDatabase referenced\r\n```\r\n\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\n### Expected behavior\r\n\r\nYAML loading should work. Should this constant no longer be private since it's been serialized to YAML?\r\n\r\n### Actual behavior\r\n\r\nYAML loading fails with:\r\n\r\n```\r\n*** NameError Exception: private constant ActiveModel::Attribute::FromDatabase referenced\r\n```\r\n\r\n### System configuration\r\n\r\n**Rails version**:\r\nv6.1.6.1\r\n\r\n**Ruby version**:\r\nv2.7.5","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45609/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45609/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45596","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45596/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45596/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45596/events","html_url":"https://github.com/rails/rails/issues/45596","id":1304247666,"node_id":"I_kwDNIULOTb09cg","number":45596,"title":"Setting `schema_dump` in database.yml does not change dump format","user":{"login":"leboshi","id":16550140,"node_id":"MDQ6VXNlcjE2NTUwMTQw","avatar_url":"https://avatars.githubusercontent.com/u/16550140?v=4","gravatar_id":"","url":"https://api.github.com/users/leboshi","html_url":"https://github.com/leboshi","followers_url":"https://api.github.com/users/leboshi/followers","following_url":"https://api.github.com/users/leboshi/following{/other_user}","gists_url":"https://api.github.com/users/leboshi/gists{/gist_id}","starred_url":"https://api.github.com/users/leboshi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leboshi/subscriptions","organizations_url":"https://api.github.com/users/leboshi/orgs","repos_url":"https://api.github.com/users/leboshi/repos","events_url":"https://api.github.com/users/leboshi/events{/privacy}","received_events_url":"https://api.github.com/users/leboshi/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-14T04:44:37Z","updated_at":"2022-07-14T14:34:25Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Originally brought up in #43173.  I opened PR #43240 to address it, but that was closed when it was decided #43530 did the same thing.  Unfortunately, I don't think any of us were really reading what the other was doing, because the two PRs actually each only addressed half the opened issue.\r\n\r\nPR incoming to fully address this and the second half of #43173!\r\n\r\n### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_schema_format_corresponds_with_schema_dump\r\n    Dir.mktmpdir do |dir|\r\n      ActiveRecord::Tasks::DatabaseTasks.stub(:db_dir, dir) do\r\n        old_configurations = ActiveRecord::Base.configurations\r\n        ActiveRecord::Base.configurations = {\r\n          \"development\" => {\r\n            \"primary\" => {\r\n              \"database\" => \"dev-db\",\r\n              \"schema_dump\" => \"primary_structure.sql\"\r\n            }\r\n          }\r\n        }\r\n\r\n        db_config = ActiveRecord::Base.configurations.configs_for(env_name: \"development\", name: \"primary\")\r\n        ActiveRecord::Tasks::DatabaseTasks.dump_schema(db_config)\r\n\r\n        dump_contents = File.read(File.join(dir, \"primary_structure.sql\"))\r\n        refute_match /ActiveRecord::Schema/, dump_contents\r\n        assert_match /CREATE TABLE/, dump_contents\r\n      ensure\r\n        ActiveRecord::Base.configurations = old_configurations\r\n        ActiveRecord::Base.clear_cache!\r\n      end\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nIf `schema_dump` is set to something like `primary_structure.sql`, I'd expect it to do a SQL structure dump rather than a Ruby schema dump.\r\n\r\n### Actual behavior\r\nThe filename in `schema_dump` has no bearing on the format of the dump Rails writes or expects to read.\r\n\r\n### System configuration\r\n**Rails version**: (main)\r\n\r\n**Ruby version**: 3.1.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45596/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45596/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45998","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45998/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45998/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45998/events","html_url":"https://github.com/rails/rails/issues/45998","id":1368868095,"node_id":"I_kwDNIULOUZdE_w","number":45998,"title":"CSRF getting different token","user":{"login":"Saleh-Salem","id":22606707,"node_id":"MDQ6VXNlcjIyNjA2NzA3","avatar_url":"https://avatars.githubusercontent.com/u/22606707?v=4","gravatar_id":"","url":"https://api.github.com/users/Saleh-Salem","html_url":"https://github.com/Saleh-Salem","followers_url":"https://api.github.com/users/Saleh-Salem/followers","following_url":"https://api.github.com/users/Saleh-Salem/following{/other_user}","gists_url":"https://api.github.com/users/Saleh-Salem/gists{/gist_id}","starred_url":"https://api.github.com/users/Saleh-Salem/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Saleh-Salem/subscriptions","organizations_url":"https://api.github.com/users/Saleh-Salem/orgs","repos_url":"https://api.github.com/users/Saleh-Salem/repos","events_url":"https://api.github.com/users/Saleh-Salem/events{/privacy}","received_events_url":"https://api.github.com/users/Saleh-Salem/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-11T08:08:17Z","updated_at":"2022-09-11T08:27:32Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When validating the CSRF token getting an exception in API\r\n \r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\nthe `session[:_csrf_token]` and  `request.x_csrf_token` is different and getting issue.\r\nwhen I need to skip the csrf, I add `verify_authenticity_token`, In this case, I don't need to skip it.\r\nI debug and found the issue in the method:\r\n\r\n```\r\n  def compare_with_global_token(token, session = nil) # :doc:\r\n    ActiveSupport::SecurityUtils.fixed_length_secure_compare(token, global_csrf_token(session))\r\n  end\r\n```\r\n\r\nwhat is `session[:_csrf_token]` and how can I implement it in API?\r\nIs there any missing from my side?\r\n### Steps to reproduce\r\n\r\n1. Add `protect_from_forgery with: :exception` .\r\n2. When logging in return token in response is generated by `form_authenticity_token`.\r\n3. When Trying to request any POST, PUT or DELETE API get an exception.\r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nReturn Response without exception.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\ngetting exception \r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\n### System configuration\r\n**Rails version**:\r\n6.0.3.5\r\n**Ruby version**:\r\n2.7.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45998/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45998/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45994","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45994/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45994/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45994/events","html_url":"https://github.com/rails/rails/issues/45994","id":1368555704,"node_id":"I_kwDNIULOUZKAuA","number":45994,"title":"LoadInterlockAwareMonitor deadlock when clearing cache (multiple databases, test)","user":{"login":"kuahyeow","id":16723,"node_id":"MDQ6VXNlcjE2NzIz","avatar_url":"https://avatars.githubusercontent.com/u/16723?v=4","gravatar_id":"","url":"https://api.github.com/users/kuahyeow","html_url":"https://github.com/kuahyeow","followers_url":"https://api.github.com/users/kuahyeow/followers","following_url":"https://api.github.com/users/kuahyeow/following{/other_user}","gists_url":"https://api.github.com/users/kuahyeow/gists{/gist_id}","starred_url":"https://api.github.com/users/kuahyeow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kuahyeow/subscriptions","organizations_url":"https://api.github.com/users/kuahyeow/orgs","repos_url":"https://api.github.com/users/kuahyeow/repos","events_url":"https://api.github.com/users/kuahyeow/events{/privacy}","received_events_url":"https://api.github.com/users/kuahyeow/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-10T08:52:46Z","updated_at":"2022-09-10T08:56:12Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"With multiple databases, we observe hangs within system tests.\r\n\r\nSee also https://gitlab.com/gitlab-org/gitlab/-/issues/371468 (GitLab is at Rails 6.1, Ruby 2.7.5)\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nHere's a minimal reproduction with Rails 7.0.3.1\r\n\r\n1. Checkout https://gitlab.com/tkuah/multi_database_system_test\r\n2. `bundle install`\r\n3. `bundle exec rails db:migrate`\r\n4. `bundle rails test test/system/home_pages_test.rb`\r\n\r\nThe conditions are:\r\n\r\n1. Multiple databases\r\n2. System test where there's an async request which overlaps with the main thread\r\n\r\n### Expected behavior\r\n\r\nIt does not hang, and the test completes\r\n\r\n### Actual behavior\r\n\r\nIt hangs. It looks like it's hanging when clearing query cache (see https://gitlab.com/gitlab-org/gitlab/-/issues/371468#note_1087203883, and https://gitlab.com/gitlab-org/gitlab/-/issues/371468#note_1088779499)\r\n\r\nA backtrace dump taken while the test is hanging [sigdump-68442.log](https://github.com/rails/rails/files/9539878/sigdump-68442.log)\r\n\r\nMy suspicion is that:\r\n\r\n1. `lock_thread` is true for system tests\r\n3. Therefore both the main thread, and the Puma thread attempt to clear query cache for the same set of connections\r\n\r\nSo we have two connections:\r\n\r\n1. Puma thread takes a `LoadInterlockAwareMonitor` lock for primary connection via `Post.transaction`\r\n2. Main thread takes a `LoadInterlockAwareMonitor` lock for animal connection via implicit transaction that `create` does\r\n3. Due to 2, main thread attempts to clear query cache for primary connection. **Waits for 1's lock**\r\n4. Due to 1, and because of `lock_thread`, puma thread clears query cache for primary connection. It takes a `LoadInterlockAwareMonitor` lock for primary connection which succeds\r\n5. Due to 1, puma thread now attempts clears query cache for animal connection. **Waits for 2's lock**\r\n\r\nSee [`clear_query_caches_for_current_thread` method](https://github.com/rails/rails/blob/e24fbf71fa0a10f63346b9b42604451958740844/activerecord/lib/active_record/connection_handling.rb#L244-L248)\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: ruby 2.7.5p203 (2021-11-24 revision f69aeb8314) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45994/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45994/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45984","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45984/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45984/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45984/events","html_url":"https://github.com/rails/rails/issues/45984","id":1368144421,"node_id":"I_kwDNIULOUYw6JQ","number":45984,"title":"Cannot Eager Load has_many :through Relationships with custom scope","user":{"login":"dcorrigan","id":2445528,"node_id":"MDQ6VXNlcjI0NDU1Mjg=","avatar_url":"https://avatars.githubusercontent.com/u/2445528?v=4","gravatar_id":"","url":"https://api.github.com/users/dcorrigan","html_url":"https://github.com/dcorrigan","followers_url":"https://api.github.com/users/dcorrigan/followers","following_url":"https://api.github.com/users/dcorrigan/following{/other_user}","gists_url":"https://api.github.com/users/dcorrigan/gists{/gist_id}","starred_url":"https://api.github.com/users/dcorrigan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dcorrigan/subscriptions","organizations_url":"https://api.github.com/users/dcorrigan/orgs","repos_url":"https://api.github.com/users/dcorrigan/repos","events_url":"https://api.github.com/users/dcorrigan/events{/privacy}","received_events_url":"https://api.github.com/users/dcorrigan/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-09T17:47:35Z","updated_at":"2022-09-09T17:47:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nThis seems like it's the same as #28324, but I'm still seeing the issue in Rails 7. \r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n  end\r\n\r\n  create_table :images, force: true do |t|\r\n    t.string :title\r\n    t.integer :post_id\r\n  end\r\n\r\n  create_table :captions, force: true do |t|\r\n    t.integer :image_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :images\r\n  has_many :captions, lambda { order('images.title DESC') }, through: :images\r\nend\r\n\r\nclass Image < ActiveRecord::Base\r\n  belongs_to :post\r\n  has_one :caption\r\nend\r\n\r\nclass Caption < ActiveRecord::Base\r\n  belongs_to :image\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_preload_has_many_through_association_with_scope\r\n    post = Post.create!\r\n    image = Image.create!\r\n    image.caption = Caption.create!\r\n    post.images << image\r\n    post.save!\r\n\r\n    # Access through the model works\r\n    assert_includes post.captions, Caption.first\r\n\r\n    # Query with association preloaded does not.\r\n    # When evaluated, it will apply the scope without the relevant JOIN table:\r\n    # SELECT \"captions\".* FROM \"captions\" WHERE \"captions\".\"image_id\" = ? ORDER BY images.title DESC\r\n    preloaded = Post.where(id: post.id).includes(:captions)\r\n\r\n    assert_includes preloaded.first.captions, Caption.first\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe test passes and we're able to eager load has_many :through associations with custom scopes in this way.\r\n\r\nI realize this can be fixed by adding a `references(:images)` to the query, but it seems reasonable to expect AR to infer that that the join is necessary here.\r\n\r\n### Actual behavior\r\n\r\nTest fails with an error: `ActiveRecord::StatementInvalid: SQLite3::SQLException: no such column: images.title`\r\n\r\n### System configuration\r\n**Rails version**: 7.0 \r\n\r\n**Ruby version**: 3.1.2p20\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45984/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45967","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45967/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45967/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45967/events","html_url":"https://github.com/rails/rails/issues/45967","id":1366038829,"node_id":"I_kwDNIULOUWwZLQ","number":45967,"title":"Inconsistent update of timestamps while updating associations with *_ids=","user":{"login":"matthee","id":547653,"node_id":"MDQ6VXNlcjU0NzY1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/547653?v=4","gravatar_id":"","url":"https://api.github.com/users/matthee","html_url":"https://github.com/matthee","followers_url":"https://api.github.com/users/matthee/followers","following_url":"https://api.github.com/users/matthee/following{/other_user}","gists_url":"https://api.github.com/users/matthee/gists{/gist_id}","starred_url":"https://api.github.com/users/matthee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matthee/subscriptions","organizations_url":"https://api.github.com/users/matthee/orgs","repos_url":"https://api.github.com/users/matthee/repos","events_url":"https://api.github.com/users/matthee/events{/privacy}","received_events_url":"https://api.github.com/users/matthee/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-08T10:51:09Z","updated_at":"2022-09-09T03:10:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"ActiveRecord inconsistently updates the `updated_at` column when changing `has_many through:` associations.\r\n\r\n### Steps to reproduce\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"activesupport\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"active_support/testing/time_helpers\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.timestamps\r\n  end\r\n  \r\n  create_table :tags, force: true do |t|\r\n  end\r\n\r\n  create_table :taggings, force: true do |t|\r\n    t.integer :post_id\r\n    t.integer :tag_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :taggings, dependent: :destroy\r\n  \r\n  has_many :tags, through: :taggings\r\nend\r\n\r\nclass Tagging < ActiveRecord::Base\r\n  belongs_to :post, touch: true\r\n  belongs_to :tag\r\nend\r\n\r\nclass Tag < ActiveRecord::Base\r\n  has_many :taggings\r\n  has_many :posts, through: :taggings\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  include ActiveSupport::Testing::TimeHelpers\r\n  \r\n  def test_updated_at_is_updated_when_setting_has_many_through_association\r\n    freeze_time\r\n        \r\n    tag_1 = Tag.create!\r\n    tag_2 = Tag.create!\r\n      \r\n    post = Post.create!\r\n    \r\n    travel_to(now = 1.hour.from_now)\r\n    \r\n    # Adding tags updates post.updated_at\r\n    post.update(tag_ids: [tag_1.id, tag_2.id])\r\n    assert_in_delta now, post.updated_at, 1.second, \"post#updated_at was not updated when adding tags\"\r\n    \r\n    # Removing tags does not update post.updated_at :(\r\n    travel_to(now = 2.hours.from_now)\r\n    post.update(tag_ids: [tag_1.id])\r\n    assert_in_delta now, post.updated_at, 1.second, \"post#updated_at was not updated when removing tags\"\r\n  end\r\n  \r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nIn the example above, both `.update` calls should update the `updated_at` column of the post record. (when adding and removing records)\r\n\r\n### Actual behavior\r\n\r\nWhen deleting a record, the `updated_at` timestamp is not updated.\r\n\r\n### System configuration\r\n**Rails version**:\r\n7.0.3.1\r\n**Ruby version**:\r\n3.0.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45967/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45967/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45959","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45959/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45959/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45959/events","html_url":"https://github.com/rails/rails/issues/45959","id":1364232810,"node_id":"I_kwDNIULOUVCKag","number":45959,"title":"JSON field not saving data with symbol : and it's saving with arrow =>","user":{"login":"sajjadmurtaza","id":8552702,"node_id":"MDQ6VXNlcjg1NTI3MDI=","avatar_url":"https://avatars.githubusercontent.com/u/8552702?v=4","gravatar_id":"","url":"https://api.github.com/users/sajjadmurtaza","html_url":"https://github.com/sajjadmurtaza","followers_url":"https://api.github.com/users/sajjadmurtaza/followers","following_url":"https://api.github.com/users/sajjadmurtaza/following{/other_user}","gists_url":"https://api.github.com/users/sajjadmurtaza/gists{/gist_id}","starred_url":"https://api.github.com/users/sajjadmurtaza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sajjadmurtaza/subscriptions","organizations_url":"https://api.github.com/users/sajjadmurtaza/orgs","repos_url":"https://api.github.com/users/sajjadmurtaza/repos","events_url":"https://api.github.com/users/sajjadmurtaza/events{/privacy}","received_events_url":"https://api.github.com/users/sajjadmurtaza/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":1071962662,"node_id":"MDU6TGFiZWwxMDcxOTYyNjYy","url":"https://api.github.com/repos/rails/rails/labels/more-information-needed","name":"more-information-needed","color":"bfdadc","default":false,"description":"When reporter needs to provide more information"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-09-07T07:40:12Z","updated_at":"2022-09-08T07:23:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nI have JSON field in my database `t.json \"theme\"`. When I try to save the field hash with : , it's overridden before save\r\ne.g.\r\n`object.theme = { color: 'red' }` it always change to `{ color => 'red' }`\r\n\r\ni also tried with jsonb and default value with empty hash {} but still having the same issue.\r\n\r\n\r\nI want to save the JSON data hash with symbol keys `{ color: 'red' }`\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.0\r\n\r\n**Ruby version**: 2.7.1\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45959/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45959/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45949","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45949/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45949/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45949/events","html_url":"https://github.com/rails/rails/issues/45949","id":1362899537,"node_id":"I_kwDNIULOUTwyUQ","number":45949,"title":"ActionText::Attachable#as_json override is breaking ActiveStorage::Blob#as_json when blob is not persisted","user":{"login":"balbesina","id":7312369,"node_id":"MDQ6VXNlcjczMTIzNjk=","avatar_url":"https://avatars.githubusercontent.com/u/7312369?v=4","gravatar_id":"","url":"https://api.github.com/users/balbesina","html_url":"https://github.com/balbesina","followers_url":"https://api.github.com/users/balbesina/followers","following_url":"https://api.github.com/users/balbesina/following{/other_user}","gists_url":"https://api.github.com/users/balbesina/gists{/gist_id}","starred_url":"https://api.github.com/users/balbesina/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/balbesina/subscriptions","organizations_url":"https://api.github.com/users/balbesina/orgs","repos_url":"https://api.github.com/users/balbesina/repos","events_url":"https://api.github.com/users/balbesina/events{/privacy}","received_events_url":"https://api.github.com/users/balbesina/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-06T08:26:39Z","updated_at":"2022-09-06T08:26:39Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nfrom rails console:\r\n```ruby\r\nActiveStorage::Blob.build_after_unfurling(io: StringIO.new('asd'), filename: 'asd.txt').as_json\r\n```\r\n\r\n[Reproduction script](https://gist.github.com/balbesina/30fbdafbfee4b71b06209d9e950f4128)\r\n\r\n### Expected behavior\r\nActiveStorage::Blob#as_json returns a Hash\r\n\r\n### Actual behavior\r\nActiveStorage::Blob#as_json raises exception\r\n```\r\n/Users/dhh/.rvm/gems/ruby-3.1.2/gems/globalid-1.0.0/lib/global_id/uri/gid.rb:167:in `validate_model_id': \r\nUnable to create a Global ID for ActiveStorage::Blob without a model id. (URI::GID::MissingModelIdError)\r\n```\r\n\r\n### System configuration\r\n**Rails version**: Rails 7.0.3.1\r\n**Ruby version**: ruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45949/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45949/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45939","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45939/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45939/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45939/events","html_url":"https://github.com/rails/rails/issues/45939","id":1360876688,"node_id":"I_kwDNIULOUR1UkA","number":45939,"title":"Validations aren't inherited from base model if child is called before validation declaration","user":{"login":"Exterm1nate","id":48535087,"node_id":"MDQ6VXNlcjQ4NTM1MDg3","avatar_url":"https://avatars.githubusercontent.com/u/48535087?v=4","gravatar_id":"","url":"https://api.github.com/users/Exterm1nate","html_url":"https://github.com/Exterm1nate","followers_url":"https://api.github.com/users/Exterm1nate/followers","following_url":"https://api.github.com/users/Exterm1nate/following{/other_user}","gists_url":"https://api.github.com/users/Exterm1nate/gists{/gist_id}","starred_url":"https://api.github.com/users/Exterm1nate/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Exterm1nate/subscriptions","organizations_url":"https://api.github.com/users/Exterm1nate/orgs","repos_url":"https://api.github.com/users/Exterm1nate/repos","events_url":"https://api.github.com/users/Exterm1nate/events{/privacy}","received_events_url":"https://api.github.com/users/Exterm1nate/received_events","type":"User","site_admin":false},"labels":[{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-09-03T14:46:42Z","updated_at":"2022-09-08T07:26:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nLet's create some STI models. Base `Vehicle` and two childs `Car` and `Motorcycle`.\r\n\r\n```ruby\r\n# models/vehicle.rb\r\nclass Vehicle < ApplicationRecord\r\n  TYPES = [Car, Motorcycle].freeze\r\n\r\n  validates :color, uniqueness: { scope: :model }\r\nend\r\n\r\n# models/car.rb\r\nclass Car < Vehicle\r\nend\r\n\r\n# models/motorcycle.rb\r\nclass Motorcycle < Vehicle\r\nend\r\n```\r\n\r\nAfter that we want to use `#validators_on` method to make sure the validation is present.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\nCar.validators_on(:color)\r\nMotorcycle.validators_on(:color)\r\n```\r\n\r\n### Expected behavior\r\n\r\nAll models must contain the validation.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nMotorcycle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\n```\r\n\r\n### Actual behavior\r\n\r\nBut for childs this method returns nothing.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> []\r\nMotorcycle.validators_on(:color)\r\n#=> []\r\n```\r\n\r\n### Notes\r\n\r\nIf we remove the `TYPES` constant (or just child classes calls from it) `validators_on` works as expected. Let's change original code a little bit:\r\n\r\n```ruby\r\n# models/vehicle.rb\r\nclass Vehicle < ApplicationRecord\r\n  TYPES = [Car].freeze # Motorcycle was removed from here!\r\n\r\n  validates :color, uniqueness: { scope: :model }\r\nend\r\n```\r\n\r\nAnd after that test again.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> []\r\nMotorcycle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\n```\r\n\r\n`Motorcycle` validation was returned correctly this time.\r\n\r\nIt seems to be a load error. `Car` was called before the `Vehicle`'s validation declaration, so it doesn't take this validation into account. It may also depend on loading order.\r\n\r\nNotice that validation itself is working well in all models.\r\n\r\n```ruby\r\nCar.create!(color: \"black\", model: \"Boomer\")\r\nCar.create!(color: \"black\", model: \"Boomer\") # raises ActiveRecord::RecordInvalid\r\n\r\nMotorcycle.create!(color: \"red\", model: \"Yamaha\")\r\nMotorcycle.create!(color: \"red\", model: \"Yamaha\") # raises ActiveRecord::RecordInvalid\r\n```\r\n\r\nExample project: https://github.com/Exterm1nate/rails-validation-issue\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3\r\n\r\n**Ruby version**: 3.1.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45939/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45939/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45937","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45937/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45937/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45937/events","html_url":"https://github.com/rails/rails/issues/45937","id":1360779604,"node_id":"I_kwDNIULOURvZVA","number":45937,"title":"Add strict table mode (by default) to sqlite adapter","user":{"login":"jrz","id":149668,"node_id":"MDQ6VXNlcjE0OTY2OA==","avatar_url":"https://avatars.githubusercontent.com/u/149668?v=4","gravatar_id":"","url":"https://api.github.com/users/jrz","html_url":"https://github.com/jrz","followers_url":"https://api.github.com/users/jrz/followers","following_url":"https://api.github.com/users/jrz/following{/other_user}","gists_url":"https://api.github.com/users/jrz/gists{/gist_id}","starred_url":"https://api.github.com/users/jrz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jrz/subscriptions","organizations_url":"https://api.github.com/users/jrz/orgs","repos_url":"https://api.github.com/users/jrz/repos","events_url":"https://api.github.com/users/jrz/events{/privacy}","received_events_url":"https://api.github.com/users/jrz/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-03T07:01:02Z","updated_at":"2022-09-08T07:30:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"SQLite supports 'strict tables' since 3.37.1 https://sqlite.org/stricttables.html\r\n\r\nThis forces a datatype to be specified when creating a table. This is the preferred method in any application created by developers. \r\n\r\nUnspecified/ANY datatypes are useful for quick tryouts as an enduser, similar to excel. But it's counterproductive when creating an application.\r\n\r\nIf this will become a configurable setting, the default should be set to strict.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45937/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45937/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45920","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45920/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45920/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45920/events","html_url":"https://github.com/rails/rails/issues/45920","id":1358179995,"node_id":"I_kwDNIULOUPQumw","number":45920,"title":"Replace has_one through create_association might create duplicated rows","user":{"login":"lazaronixon","id":2651240,"node_id":"MDQ6VXNlcjI2NTEyNDA=","avatar_url":"https://avatars.githubusercontent.com/u/2651240?v=4","gravatar_id":"","url":"https://api.github.com/users/lazaronixon","html_url":"https://github.com/lazaronixon","followers_url":"https://api.github.com/users/lazaronixon/followers","following_url":"https://api.github.com/users/lazaronixon/following{/other_user}","gists_url":"https://api.github.com/users/lazaronixon/gists{/gist_id}","starred_url":"https://api.github.com/users/lazaronixon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lazaronixon/subscriptions","organizations_url":"https://api.github.com/users/lazaronixon/orgs","repos_url":"https://api.github.com/users/lazaronixon/repos","events_url":"https://api.github.com/users/lazaronixon/events{/privacy}","received_events_url":"https://api.github.com/users/lazaronixon/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-09-01T03:05:07Z","updated_at":"2022-09-01T23:03:40Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# Ensure backward compatibility with minitest 4.\r\nMinitest::Test = MiniTest::Unit::TestCase unless defined?(Minitest::Test)\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts do |t|\r\n  end\r\n\r\n  create_table :comments do |t|\r\n    t.references :post\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_one :comment, dependent: :destroy\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  validates_presence_of :post_id\r\n  belongs_to :post\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    post = Post.create!\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    sleep 5.seconds\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n```\r\n# transaction begin\r\nselect previous_comment for update\r\n\r\ninsert new_comment\r\n\r\ndelete previous_comment\r\n# transaction commit\r\n```\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n```\r\n# transaction begin\r\ninsert new_comment\r\n# transaction commit\r\n\r\n# transaction begin\r\ndelete previous_comment\r\n# transaction commit\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45920/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45920/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45906","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45906/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45906/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45906/events","html_url":"https://github.com/rails/rails/issues/45906","id":1355732552,"node_id":"I_kwDNIULOUM7WSA","number":45906,"title":"High object allocation count from `ActiveRecord::ConnectionAdapters::PoolManager#pool_configs `","user":{"login":"amarchenkoshopify","id":101111422,"node_id":"U_kgDOBgbWfg","avatar_url":"https://avatars.githubusercontent.com/u/101111422?v=4","gravatar_id":"","url":"https://api.github.com/users/amarchenkoshopify","html_url":"https://github.com/amarchenkoshopify","followers_url":"https://api.github.com/users/amarchenkoshopify/followers","following_url":"https://api.github.com/users/amarchenkoshopify/following{/other_user}","gists_url":"https://api.github.com/users/amarchenkoshopify/gists{/gist_id}","starred_url":"https://api.github.com/users/amarchenkoshopify/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amarchenkoshopify/subscriptions","organizations_url":"https://api.github.com/users/amarchenkoshopify/orgs","repos_url":"https://api.github.com/users/amarchenkoshopify/repos","events_url":"https://api.github.com/users/amarchenkoshopify/events{/privacy}","received_events_url":"https://api.github.com/users/amarchenkoshopify/received_events","type":"User","site_admin":false},"labels":[{"id":107186,"node_id":"MDU6TGFiZWwxMDcxODY=","url":"https://api.github.com/repos/rails/rails/labels/regression","name":"regression","color":"e10c02","default":false,"description":null},{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"eileencodes","id":1080678,"node_id":"MDQ6VXNlcjEwODA2Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/1080678?v=4","gravatar_id":"","url":"https://api.github.com/users/eileencodes","html_url":"https://github.com/eileencodes","followers_url":"https://api.github.com/users/eileencodes/followers","following_url":"https://api.github.com/users/eileencodes/following{/other_user}","gists_url":"https://api.github.com/users/eileencodes/gists{/gist_id}","starred_url":"https://api.github.com/users/eileencodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eileencodes/subscriptions","organizations_url":"https://api.github.com/users/eileencodes/orgs","repos_url":"https://api.github.com/users/eileencodes/repos","events_url":"https://api.github.com/users/eileencodes/events{/privacy}","received_events_url":"https://api.github.com/users/eileencodes/received_events","type":"User","site_admin":false},"assignees":[{"login":"eileencodes","id":1080678,"node_id":"MDQ6VXNlcjEwODA2Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/1080678?v=4","gravatar_id":"","url":"https://api.github.com/users/eileencodes","html_url":"https://github.com/eileencodes","followers_url":"https://api.github.com/users/eileencodes/followers","following_url":"https://api.github.com/users/eileencodes/following{/other_user}","gists_url":"https://api.github.com/users/eileencodes/gists{/gist_id}","starred_url":"https://api.github.com/users/eileencodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eileencodes/subscriptions","organizations_url":"https://api.github.com/users/eileencodes/orgs","repos_url":"https://api.github.com/users/eileencodes/repos","events_url":"https://api.github.com/users/eileencodes/events{/privacy}","received_events_url":"https://api.github.com/users/eileencodes/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/rails/rails/milestones/81","html_url":"https://github.com/rails/rails/milestone/81","labels_url":"https://api.github.com/repos/rails/rails/milestones/81/labels","id":7591006,"node_id":"MI_kwDNIULOAHPUXg","number":81,"title":"7.0.4","description":"","creator":{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":3,"state":"open","created_at":"2022-01-20T01:51:07Z","updated_at":"2022-08-30T13:21:37Z","due_on":null,"closed_at":null},"comments":2,"created_at":"2022-08-30T12:58:42Z","updated_at":"2022-08-31T12:37:42Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWhile working on memory efficiency investigation I noticed that a very big bunch of object allocations comes from a single method `ActiveRecord::ConnectionAdapters::PoolManager#pool_configs`:\r\n\r\n```ruby\r\n      def pool_configs(role = nil)\r\n        if role\r\n          @role_to_shard_mapping[role].values\r\n        else\r\n          @role_to_shard_mapping.flat_map { |_, shard_map| shard_map.values }\r\n        end\r\n      end \r\n```\r\n\r\nThis method is called on every activerecord operation and does not cache its result: could we think about a way of caching its result?\r\n\r\ncc @eileencodes \r\n\r\n### Expected behavior\r\n\r\n`#pool_configs` allocates configs once\r\n\r\n### Actual behavior\r\n\r\n`#pool_configs` allocates configs every time it is executed\r\n\r\n### System configuration\r\n**Rails version**: main branch\r\n\r\n**Ruby version**: 3.1\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45906/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45901","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45901/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45901/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45901/events","html_url":"https://github.com/rails/rails/issues/45901","id":1354555667,"node_id":"I_kwDNIULOULzhEw","number":45901,"title":"bin/rails dbconsole should include_password by default","user":{"login":"wpeterson","id":178135,"node_id":"MDQ6VXNlcjE3ODEzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/178135?v=4","gravatar_id":"","url":"https://api.github.com/users/wpeterson","html_url":"https://github.com/wpeterson","followers_url":"https://api.github.com/users/wpeterson/followers","following_url":"https://api.github.com/users/wpeterson/following{/other_user}","gists_url":"https://api.github.com/users/wpeterson/gists{/gist_id}","starred_url":"https://api.github.com/users/wpeterson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wpeterson/subscriptions","organizations_url":"https://api.github.com/users/wpeterson/orgs","repos_url":"https://api.github.com/users/wpeterson/repos","events_url":"https://api.github.com/users/wpeterson/events{/privacy}","received_events_url":"https://api.github.com/users/wpeterson/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-29T16:19:45Z","updated_at":"2022-08-30T00:17:43Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n1. Configure a Rails `config/database.yml` with a `password` required to connect\r\n2. Run `rails dbconsole`\r\n3. See prompt for database password, despite password being configured/available\r\n4. Run `rails dbconsole -p`\r\n5. See dbconsole properly load and use credentials to connect to database for DB console session\r\n\r\n### Expected behavior\r\nWhenever a Rails app has credentials like a password configured for a database, the database console session should use those credentials vs. prompting the user to re-enter a password interactively.  When credentials are not configured and a password is required, we should prompt then.\r\n\r\nThis behavior is implemented since early Rails versions but is disabled by default.  I propose we enable the proper password behavior by default.\r\n\r\n### Actual behavior\r\n`bin/rails dbconsole` always prompts for a password, even when one is configured for the app.\r\n\r\n### System configuration\r\n**Rails version**: All (6.x, 7.x, head)\r\n\r\n**Ruby version**: All \r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45901/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45901/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45899","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45899/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45899/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45899/events","html_url":"https://github.com/rails/rails/issues/45899","id":1353676820,"node_id":"I_kwDNIULOUK94FA","number":45899,"title":"Active Job unit tests fail using que 2.2.0","user":{"login":"yahonda","id":73684,"node_id":"MDQ6VXNlcjczNjg0","avatar_url":"https://avatars.githubusercontent.com/u/73684?v=4","gravatar_id":"","url":"https://api.github.com/users/yahonda","html_url":"https://github.com/yahonda","followers_url":"https://api.github.com/users/yahonda/followers","following_url":"https://api.github.com/users/yahonda/following{/other_user}","gists_url":"https://api.github.com/users/yahonda/gists{/gist_id}","starred_url":"https://api.github.com/users/yahonda/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yahonda/subscriptions","organizations_url":"https://api.github.com/users/yahonda/orgs","repos_url":"https://api.github.com/users/yahonda/repos","events_url":"https://api.github.com/users/yahonda/events{/privacy}","received_events_url":"https://api.github.com/users/yahonda/received_events","type":"User","site_admin":false},"labels":[{"id":123812746,"node_id":"MDU6TGFiZWwxMjM4MTI3NDY=","url":"https://api.github.com/repos/rails/rails/labels/activejob","name":"activejob","color":"5319e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-29T04:24:06Z","updated_at":"2022-09-09T15:33:02Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"### Steps to reproduce\r\nActive Job CI has been failing since que 2.2.0 is installed. https://buildkite.com/rails/rails/builds/89068#0182e6b9-7c84-4b85-a651-8d640f5eb076\r\n\r\n```ruby\r\ngit clone https://github.com/rails/rails\r\ncd rails/activejob\r\nbundle update que\r\nAJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\n```\r\n\r\nAlthough there are 3 failures and 75 errors. This script just runs a single test because it looks the root cause is the same.\r\n\r\n\r\n### Expected behavior\r\nIt should pass.\r\n\r\n### Actual behavior\r\nIt raises `ArgumentError: wrong number of arguments (given 2, expected 1)`.\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 62302\r\n\r\n# Running:\r\n\r\nE\r\n\r\nError:\r\nQueuingTest#test_run_queued_job:\r\nArgumentError: wrong number of arguments (given 2, expected 1)\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:78:in `run'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job_methods.rb:51:in `_run'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:248:in `block (2 levels) in _run_attrs'\r\n    (eval):9:in `run_job_middleware'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:247:in `block in _run_attrs'\r\n    <internal:kernel>:90:in `tap'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:246:in `_run_attrs'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:223:in `run'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/support/que/inline.rb:15:in `enqueue'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:66:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:27:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:67:in `block in enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:118:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:28:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:27:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:9:in `block (2 levels) in <module:Instrumentation>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:27:in `tag_logger'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:14:in `block (2 levels) in <module:Logging>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:138:in `run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:63:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:30:in `perform_later'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/cases/queuing_test.rb:14:in `block in <class:QueuingTest>'\r\n\r\n\r\nbin/test test/cases/queuing_test.rb:13\r\n\r\n\r\n\r\nFinished in 0.008930s, 111.9768 runs/s, 0.0000 assertions/s.\r\n1 runs, 0 assertions, 0 failures, 1 errors, 0 skips\r\n$\r\n```\r\n\r\n### Additional information\r\n* `require_job_options_kwarg?` always returns `false` because `JobWrapper.method(:enqueue).parameters` does not have any `[:key, :job_options]` \r\nwhere it looks expected to return `true`.\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 32774\r\n\r\n# Running:\r\n\r\n[46, 55] in ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n    46|       end\r\n    47|\r\n    48|       private\r\n    49|         def require_job_options_kwarg?\r\n    50|           require 'debug'\r\n=>  51|           binding.break\r\n    52|           @require_job_options_kwarg ||=\r\n    53|             JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }\r\n    54|         end\r\n    55|\r\n=>#0\tActiveJob::QueueAdapters::QueAdapter#require_job_options_kwarg? at ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:51\r\n  #1\tActiveJob::QueueAdapters::QueAdapter#enqueue(job=#<HelloJob:0x00007fc861807740 @arguments...) at ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:24\r\n  # and 40 frames (use `bt' command for all frames)\r\n(rdbg) JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }    # ruby\r\nfalse\r\n(rdbg) JobWrapper.method(:enqueue).parameters    # ruby\r\n[[:req, :args], [:keyreq, :priority], [:keyreq, :queue], [:key, :run_at]]\r\n(rdbg) quit    # command\r\nReally quit? [Y/n] Y\r\n```\r\n\r\n* By changing `require_job_options_kwarg?` always returns `true`, it raises `ArgumentError: missing keywords: :priority, :queue`\r\n\r\n```ruby\r\n$ git diff\r\ndiff --git a/activejob/lib/active_job/queue_adapters/que_adapter.rb b/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\nindex 41b3633a07..54e8cbc39b 100644\r\n--- a/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n+++ b/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n@@ -47,6 +47,7 @@ def enqueue_at(job, timestamp) # :nodoc:\r\n\r\n       private\r\n         def require_job_options_kwarg?\r\n+          return true\r\n           @require_job_options_kwarg ||=\r\n             JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }\r\n         end\r\n$\r\n```\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 21508\r\n\r\n# Running:\r\n\r\nE\r\n\r\nError:\r\nQueuingTest#test_run_queued_job:\r\nArgumentError: missing keywords: :priority, :queue\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:65:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:25:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:67:in `block in enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:118:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:28:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:27:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:9:in `block (2 levels) in <module:Instrumentation>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:27:in `tag_logger'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:14:in `block (2 levels) in <module:Logging>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:138:in `run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:63:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:30:in `perform_later'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/cases/queuing_test.rb:14:in `block in <class:QueuingTest>'\r\n\r\n\r\nbin/test test/cases/queuing_test.rb:13\r\n\r\n\r\n\r\nFinished in 0.008724s, 114.6312 runs/s, 0.0000 assertions/s.\r\n1 runs, 0 assertions, 0 failures, 1 errors, 0 skips\r\n$\r\n```\r\n\r\n\r\n### System configuration\r\n**Rails version**: main branch\r\n\r\n**Ruby version**: $ ruby -v\r\nruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [x86_64-linux]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45899/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45893","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45893/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45893/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45893/events","html_url":"https://github.com/rails/rails/issues/45893","id":1352793907,"node_id":"I_kwDNIULOUKH_Mw","number":45893,"title":"ActiveRecord: HMT with conditions does not update the in-memory collection when pushing new objects","user":{"login":"joanniclaborde","id":411925,"node_id":"MDQ6VXNlcjQxMTkyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/411925?v=4","gravatar_id":"","url":"https://api.github.com/users/joanniclaborde","html_url":"https://github.com/joanniclaborde","followers_url":"https://api.github.com/users/joanniclaborde/followers","following_url":"https://api.github.com/users/joanniclaborde/following{/other_user}","gists_url":"https://api.github.com/users/joanniclaborde/gists{/gist_id}","starred_url":"https://api.github.com/users/joanniclaborde/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joanniclaborde/subscriptions","organizations_url":"https://api.github.com/users/joanniclaborde/orgs","repos_url":"https://api.github.com/users/joanniclaborde/repos","events_url":"https://api.github.com/users/joanniclaborde/events{/privacy}","received_events_url":"https://api.github.com/users/joanniclaborde/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-26T22:40:12Z","updated_at":"2022-08-30T15:33:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi! When using a `has_many :a, through: :b` relation, and the `:b` relation has a condition, adding new objects doesn't update the in-memory collection properly (stops after the first object).\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :packages, force: true do |t|\r\n  end\r\n\r\n  create_table :package_items, force: true do |t|\r\n    t.integer :package_id\r\n    t.integer :item_id\r\n  end\r\n\r\n  create_table :items, force: true do |t|\r\n    t.boolean \"deleted\", default: false\r\n  end\r\nend\r\n\r\nclass Package < ActiveRecord::Base\r\n  has_many :package_items, ->{ where(item_id: Item.active.pluck(:id)) }\r\n  has_many :items, through: :package_items\r\nend\r\n\r\nclass PackageItem < ActiveRecord::Base\r\n  belongs_to :package\r\n  belongs_to :item\r\nend\r\n\r\nclass Item < ActiveRecord::Base\r\n  has_many :package_items\r\n  has_many :packages, through: :package_items\r\n\r\n  scope :active, -> { where(deleted: false) }\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    package = Package.create!\r\n    package.items << Item.create!\r\n    package.items << Item.create!\r\n    package.items << Item.create!\r\n\r\n    # This should be [3, 3, 3] but we get [3, 1, 3]\r\n    assert_equal [3, 3, 3], [Item.count, package.items.count, package.reload.items.count]\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n`package.items.count` is equal to 3.\r\n\r\n### Actual behavior\r\n`package.items.count` is equal to 1, even though all the items and relations are created properly (see assertion).\r\n\r\n### System configuration\r\n**Rails version**: tested on `7.1.0.alpha` and `6.1.6.1`.\r\n\r\n**Ruby version**: tested on `2.7.5`.\r\n\r\n### Workaround\r\nI was able to fix this issue by changing the weird condition to a proper scope:\r\n\r\n```ruby\r\nclass Package < ActiveRecord::Base\r\n  has_many :package_items, ->{ includes(:item).merge(Item.active) }\r\n  has_many :items, through: :package_items\r\nend\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45893/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45893/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45880","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45880/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45880/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45880/events","html_url":"https://github.com/rails/rails/issues/45880","id":1349546108,"node_id":"I_kwDNIULOUHBwfA","number":45880,"title":"Google search links to old API docs","user":{"login":"abraham","id":3341,"node_id":"MDQ6VXNlcjMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/3341?v=4","gravatar_id":"","url":"https://api.github.com/users/abraham","html_url":"https://github.com/abraham","followers_url":"https://api.github.com/users/abraham/followers","following_url":"https://api.github.com/users/abraham/following{/other_user}","gists_url":"https://api.github.com/users/abraham/gists{/gist_id}","starred_url":"https://api.github.com/users/abraham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abraham/subscriptions","organizations_url":"https://api.github.com/users/abraham/orgs","repos_url":"https://api.github.com/users/abraham/repos","events_url":"https://api.github.com/users/abraham/events{/privacy}","received_events_url":"https://api.github.com/users/abraham/received_events","type":"User","site_admin":true},"labels":[{"id":150377,"node_id":"MDU6TGFiZWwxNTAzNzc=","url":"https://api.github.com/repos/rails/rails/labels/docs","name":"docs","color":"02d7e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-24T14:33:55Z","updated_at":"2022-08-25T23:48:01Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n1. Search Google for a Rails API https://www.google.com/search?q=rails+update_all\r\n2. Follow link for \"ActiveRecord::Relation - Rails API\"\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n\r\nFind documentation for the latest version of Rails. Currently `7.0.3.1`.\r\n\r\n`https://api.rubyonrails.org/classes/ActiveRecord/Relation.html`\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n\r\nFind documentation for the the very old version of `3.2.3`.\r\n\r\n`https://api.rubyonrails.org/v3.2.3/classes/ActiveRecord/Relation.html`\r\n\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45880/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45880/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45832","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45832/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45832/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45832/events","html_url":"https://github.com/rails/rails/issues/45832","id":1339487378,"node_id":"I_kwDNIULOT9b0kg","number":45832,"title":"MySQL 8.0 VARBINARY default value is hexadecimal","user":{"login":"HParker","id":4482399,"node_id":"MDQ6VXNlcjQ0ODIzOTk=","avatar_url":"https://avatars.githubusercontent.com/u/4482399?v=4","gravatar_id":"","url":"https://api.github.com/users/HParker","html_url":"https://github.com/HParker","followers_url":"https://api.github.com/users/HParker/followers","following_url":"https://api.github.com/users/HParker/following{/other_user}","gists_url":"https://api.github.com/users/HParker/gists{/gist_id}","starred_url":"https://api.github.com/users/HParker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HParker/subscriptions","organizations_url":"https://api.github.com/users/HParker/orgs","repos_url":"https://api.github.com/users/HParker/repos","events_url":"https://api.github.com/users/HParker/events{/privacy}","received_events_url":"https://api.github.com/users/HParker/received_events","type":"User","site_admin":true},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":309390193,"node_id":"MDU6TGFiZWwzMDkzOTAxOTM=","url":"https://api.github.com/repos/rails/rails/labels/MySQL","name":"MySQL","color":"fef2c0","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-08-15T20:42:09Z","updated_at":"2022-08-16T10:23:16Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Default values on VARBINARY columns changed behavior between MySQL 5.7 and 8.0\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"mysql2\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"mysql2\", database: \"adam_test\", prepared_statements: false, host: '127.0.0.1', port: 3307, user: \"root\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.binary :some_binary, null: false, limit: 1024, default: \"hello-world\"\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_mysql_defaults\r\n    post = Post.create!\r\n\r\n    mysql_vars = ActiveRecord::Base.connection.select_rows(\"SHOW VARIABLES LIKE '%version%'\")\r\n    puts mysql_vars.inspect\r\n    puts Post.column_defaults\r\n\r\n    # assert_equal \"0x68656C6C6F2D776F726C64\", post.some_binary # This passes\r\n    assert_equal \"hello-world\", post.some_binary # This fails\r\n\r\n    reloaded_post = Post.first\r\n    assert_equal \"hello-world\", reloaded_post.some_binary # this passes\r\n  end\r\nend\r\n```\r\n\r\nOn MySQL 5.7:\r\n\r\n```ruby\r\nPost.column_defaults # => {\"id\"=>nil, \"some_binary\"=>\"hello-world\"}\r\n```\r\n\r\nOn MySQL 8.0:\r\n\r\n```ruby\r\nPost.column_defaults # => {\"id\"=>nil, \"some_binary\"=>\"0x68656C6C6F2D776F726C64\"}\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe default value on binary columns should be Ruby strings, not ruby strings of hexadecimal.\r\n\r\n### Actual behavior\r\n\r\nThe column default in MySQL 8.0 is a hexadecimal string representing the binary data.\r\n\r\n### System configuration\r\n**Rails version**: main\r\n\r\n**Ruby version**: 3.1.0\r\n\r\nSome interesting MySQL forum posts about this behavior change:\r\n\r\n- https://forums.mysql.com/read.php?24,685577,685577\r\n- https://forums.mysql.com/read.php?20,698061,698061#msg-698061\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45832/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45832/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45830","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45830/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45830/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45830/events","html_url":"https://github.com/rails/rails/issues/45830","id":1338922250,"node_id":"I_kwDNIULOT85VCg","number":45830,"title":"ActiveRecord Rollbacks on errors which happen on commit","user":{"login":"Baxxx","id":17880055,"node_id":"MDQ6VXNlcjE3ODgwMDU1","avatar_url":"https://avatars.githubusercontent.com/u/17880055?v=4","gravatar_id":"","url":"https://api.github.com/users/Baxxx","html_url":"https://github.com/Baxxx","followers_url":"https://api.github.com/users/Baxxx/followers","following_url":"https://api.github.com/users/Baxxx/following{/other_user}","gists_url":"https://api.github.com/users/Baxxx/gists{/gist_id}","starred_url":"https://api.github.com/users/Baxxx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baxxx/subscriptions","organizations_url":"https://api.github.com/users/Baxxx/orgs","repos_url":"https://api.github.com/users/Baxxx/repos","events_url":"https://api.github.com/users/Baxxx/events{/privacy}","received_events_url":"https://api.github.com/users/Baxxx/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":126910270,"node_id":"MDU6TGFiZWwxMjY5MTAyNzA=","url":"https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps","name":"With reproduction steps","color":"009800","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2022-08-15T12:09:14Z","updated_at":"2022-08-25T13:32:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nIn some of our projects we use Postgres as database, and for some cases we deferred trigger constraints. These triggers fire up when `COMMIT` is called. Trigger can raise an error, which kills the transaction. ActiveRecord catches the error, and bubbles it up to developer, but it also sends `ROLLBACK` to Postgres, to which Postgres gives a warning that there is no transaction in progress.\r\n\r\nI didn't test this with sqlite3 or mysql.\r\n\r\nYou can see the reproduction script, and screenshot with the current behavior.\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", \"~> 7\"\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"logger\"\r\n\r\nlogger = Logger.new(STDOUT)\r\n\r\n# This connection will do for database-independent bug reports.\r\npg_opts = {adapter: \"postgresql\", database: \"ar_rollback_after_failed_commit_issue\"}\r\n\r\nActiveRecord::Base.establish_connection(pg_opts.except(:database))\r\nActiveRecord::Base.connection.drop_database(pg_opts[:database])\r\nActiveRecord::Base.connection.create_database(pg_opts[:database])\r\nlogger.info \"Database #{pg_opts[:database]} was (re)created.\"\r\n\r\nActiveRecord::Base.establish_connection(pg_opts)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  execute <<~SQL\r\n    CREATE FUNCTION perform_custom_validation()\r\n      RETURNS TRIGGER\r\n      LANGUAGE plpgsql\r\n      AS $$\r\n        DECLARE\r\n          total_invalid INTEGER;\r\n        BEGIN\r\n          SELECT COUNT(*) INTO total_invalid\r\n          FROM things\r\n          WHERE name = 'bad';\r\n\r\n          IF (total_invalid > 0) THEN\r\n            RAISE EXCEPTION 'There are bad things';\r\n          END IF;\r\n          RETURN NULL;\r\n        END;\r\n      $$;\r\n\r\n    CREATE TABLE \"things\" (\r\n      \"id\" bigserial primary key,\r\n      \"name\" character varying NOT NULL\r\n    );\r\n\r\n    CREATE CONSTRAINT\r\n      TRIGGER bank_transaction_rl_payment_date_validation\r\n      AFTER INSERT OR UPDATE ON things\r\n      DEFERRABLE INITIALLY DEFERRED\r\n      FOR EACH ROW EXECUTE FUNCTION perform_custom_validation();\r\n  SQL\r\nend\r\n\r\nclass Thing < ActiveRecord::Base\r\n  validates :name, presence: true\r\nend\r\n\r\n# All good\r\nlogger.info \"First transaction\"\r\nThing.create!(name: \"good\")\r\n\r\n# AR tries to commit, DB raises an error, AR tries to ROLLBACK, and PG gives a warning\r\nbegin\r\n  logger.info \"Second transaction\"\r\n  Thing.create!(name: \"bad\")\r\nrescue StandardError\r\n  # Doesn't matter\r\nend\r\n```\r\n\r\n### Expected behavior\r\nActiveRecord should not `ROLLBACK`, as there is no transaction in progress.\r\n\r\n### Actual behavior\r\nActiveRecord tries to `ROLLBACK`.\r\n\r\n![Screenshot from 2022-08-15 14-07-11](https://user-images.githubusercontent.com/17880055/184632335-0277cd27-4c7b-4b98-94a8-373be34a87ee.png)\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 2.7.5p203\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45830/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45830/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45823","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45823/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45823/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45823/events","html_url":"https://github.com/rails/rails/issues/45823","id":1337409694,"node_id":"I_kwDNIULOT7dAng","number":45823,"title":"Change Column with Raw Character Set Failure","user":{"login":"ahoglund","id":3407303,"node_id":"MDQ6VXNlcjM0MDczMDM=","avatar_url":"https://avatars.githubusercontent.com/u/3407303?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoglund","html_url":"https://github.com/ahoglund","followers_url":"https://api.github.com/users/ahoglund/followers","following_url":"https://api.github.com/users/ahoglund/following{/other_user}","gists_url":"https://api.github.com/users/ahoglund/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoglund/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoglund/subscriptions","organizations_url":"https://api.github.com/users/ahoglund/orgs","repos_url":"https://api.github.com/users/ahoglund/repos","events_url":"https://api.github.com/users/ahoglund/events{/privacy}","received_events_url":"https://api.github.com/users/ahoglund/received_events","type":"User","site_admin":true},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":126910270,"node_id":"MDU6TGFiZWwxMjY5MTAyNzA=","url":"https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps","name":"With reproduction steps","color":"009800","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-12T16:21:50Z","updated_at":"2022-08-12T20:47:38Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"With [this recent change to how collation is handled for column changes](https://github.com/rails/rails/pull/45744/files), there is now a potential for older migrations written in a specific manner to break if the `collation:` argument is not specific.\r\n\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\n# you need to install mysql locally for this to work.\r\n# on Mac:\r\n# brew install mysql\r\n# brew services start mysql\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"mysql2\"\r\n\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nclient = Mysql2::Client.new(host: 'localhost', username: \"root\")\r\nclient.query(\"DROP DATABASE test\")\r\nclient.query(\"CREATE DATABASE test\")\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"mysql2\", database: \"test\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :payments, force: true do |t|\r\n    t.string :description, \"varchar(64)\", null: false\r\n  end\r\nend\r\n\r\nclass Payment < ActiveRecord::Base\r\nend\r\n\r\nclass ChangeAmountToAddScale < ActiveRecord::Migration[7.1]\r\n  # This sets the default character set for the payments\r\n  # table to utf32 with a default COLLATION of utf32_general_ci.\r\n  # This can be verified by running the following query:\r\n  #\r\n  # SHOW CHARACTER SET;\r\n  #\r\n  connection.execute(<<~SQL)\r\n    ALTER TABLE payments CONVERT TO CHARACTER SET utf32\r\n  SQL\r\n\r\n  def change\r\n    reversible do |dir|\r\n      dir.up do\r\n        change_table(:payments, bulk: true) do |t|\r\n          # The default collation of utf32_general_ci\r\n          # will not be compatible with this ascii character set. \r\n          #\r\n          # when we build the column change now we automatically\r\n          # try to assign the previous collation to the column if no `collation:` is specified.\r\n          # \r\n          # https://github.com/rails/rails/pull/45744\r\n          #\r\n          # The workaround is to add `collation: 'ascii_bin'` or `collation: 'ascii_general_ci'` to the change.\r\n          #\r\n          # This isn't a huge deal and it has a workaround but it _will_ break\r\n          # anyone who has migrations that are written like this and upgrade to this version\r\n          # of Rails.\r\n          t.change :description, \"varchar(64) CHARACTER SET ascii\", null: false\r\n        end\r\n      end\r\n\r\n      dir.down do\r\n        change_table(:payments, bulk: true) do |t|\r\n          t.change :description, \"varchar(64)\", null: false\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_migration_up\r\n    ChangeAmountToAddScale.migrate(:up)\r\n    Payment.reset_column_information\r\n\r\n    assert_equal \"varchar\", Payment.columns.last.sql_type\r\n  end\r\n\r\n  def test_migration_down\r\n    ChangeAmountToAddScale.migrate(:down)\r\n    Payment.reset_column_information\r\n\r\n    assert_equal \"varchar\", Payment.columns.last.sql_type\r\n  end\r\nend\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nI would expect this to detect that the character set is being changed, and either \r\n\r\n1. change the collation to be compatible.\r\n2. At least give a clearer error that requires the `collation:` arg to be passed when the character set is being modified.\r\n\r\n### Actual behavior\r\n\r\nThis error:\r\n\r\n```\r\nError:\r\nBugTest#test_migration_up:\r\nActiveRecord::StatementInvalid: Mysql2::Error: COLLATION 'utf32_general_ci' is not valid for CHARACTER SET 'ascii'\r\n    test.rb:51:in `block (2 levels) in change'\r\n    test.rb:50:in `block in change'\r\n    test.rb:49:in `change'\r\n    test.rb:67:in `test_migration_up'\r\n```\r\n\r\n### System configuration\r\n**Rails version**: main\r\n**Ruby version**: ruby 3.1.1p18\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45823/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45823/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45822","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45822/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45822/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45822/events","html_url":"https://github.com/rails/rails/issues/45822","id":1337253221,"node_id":"I_kwDNIULOT7TdZQ","number":45822,"title":"ActiveRecord: Wrong results returned by ActiveRecord::Associations::Preloader when intermediate association is already preloaded.","user":{"login":"yopzer","id":6330271,"node_id":"MDQ6VXNlcjYzMzAyNzE=","avatar_url":"https://avatars.githubusercontent.com/u/6330271?v=4","gravatar_id":"","url":"https://api.github.com/users/yopzer","html_url":"https://github.com/yopzer","followers_url":"https://api.github.com/users/yopzer/followers","following_url":"https://api.github.com/users/yopzer/following{/other_user}","gists_url":"https://api.github.com/users/yopzer/gists{/gist_id}","starred_url":"https://api.github.com/users/yopzer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yopzer/subscriptions","organizations_url":"https://api.github.com/users/yopzer/orgs","repos_url":"https://api.github.com/users/yopzer/repos","events_url":"https://api.github.com/users/yopzer/events{/privacy}","received_events_url":"https://api.github.com/users/yopzer/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"jhawthorn","id":131752,"node_id":"MDQ6VXNlcjEzMTc1Mg==","avatar_url":"https://avatars.githubusercontent.com/u/131752?v=4","gravatar_id":"","url":"https://api.github.com/users/jhawthorn","html_url":"https://github.com/jhawthorn","followers_url":"https://api.github.com/users/jhawthorn/followers","following_url":"https://api.github.com/users/jhawthorn/following{/other_user}","gists_url":"https://api.github.com/users/jhawthorn/gists{/gist_id}","starred_url":"https://api.github.com/users/jhawthorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhawthorn/subscriptions","organizations_url":"https://api.github.com/users/jhawthorn/orgs","repos_url":"https://api.github.com/users/jhawthorn/repos","events_url":"https://api.github.com/users/jhawthorn/events{/privacy}","received_events_url":"https://api.github.com/users/jhawthorn/received_events","type":"User","site_admin":true},"assignees":[{"login":"jhawthorn","id":131752,"node_id":"MDQ6VXNlcjEzMTc1Mg==","avatar_url":"https://avatars.githubusercontent.com/u/131752?v=4","gravatar_id":"","url":"https://api.github.com/users/jhawthorn","html_url":"https://github.com/jhawthorn","followers_url":"https://api.github.com/users/jhawthorn/followers","following_url":"https://api.github.com/users/jhawthorn/following{/other_user}","gists_url":"https://api.github.com/users/jhawthorn/gists{/gist_id}","starred_url":"https://api.github.com/users/jhawthorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhawthorn/subscriptions","organizations_url":"https://api.github.com/users/jhawthorn/orgs","repos_url":"https://api.github.com/users/jhawthorn/repos","events_url":"https://api.github.com/users/jhawthorn/events{/privacy}","received_events_url":"https://api.github.com/users/jhawthorn/received_events","type":"User","site_admin":true}],"milestone":null,"comments":1,"created_at":"2022-08-12T14:06:55Z","updated_at":"2022-08-18T23:36:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"activerecord\", \"7.0.3.1\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :a_records, force: true\r\n\r\n  create_table :b_records, force: true do |t|\r\n    t.references :a_record\r\n    t.references :c_record\r\n  end\r\n\r\n  create_table :c_records, force: true\r\n\r\n  create_table :d_records, force: true do |t|\r\n    t.references :c_record\r\n  end\r\nend\r\n\r\nclass ARecord < ActiveRecord::Base\r\n  has_one :b_record\r\n  has_one :c_record, through: :b_record\r\n  has_many :d_records, through: :c_record\r\nend\r\n\r\nclass BRecord < ActiveRecord::Base\r\n  belongs_to :a_record\r\n  belongs_to :c_record\r\nend\r\n\r\nclass CRecord < ActiveRecord::Base\r\n  has_one :b_record\r\n  has_many :d_records\r\nend\r\n\r\nclass DRecord < ActiveRecord::Base\r\n  belongs_to :c_record\r\nend\r\n\r\na = ARecord.create!\r\nc = CRecord.create!\r\nBRecord.create!(a_record: a, c_record: c)\r\nDRecord.create!(c_record: c)\r\nDRecord.create!(c_record: c)\r\n\r\na.reload\r\na.c_record # NB: if removed this works\r\n\r\n::ActiveRecord::Associations::Preloader.new(records: [a], associations: :d_records).call\r\nputs({ record_ids: a.d_records.map(&:id), size: a.d_records.size })\r\n```\r\n\r\n### Expected behavior\r\nTwo records should be loaded:\r\n`{:record_ids=>[1, 2], :size=>2}`\r\n\r\n### Actual behavior\r\nNo records are loaded:\r\n`{:record_ids=>[], :size=>0}`\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 2.7.5\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45822/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45822/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45817","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45817/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45817/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45817/events","html_url":"https://github.com/rails/rails/issues/45817","id":1336797388,"node_id":"I_kwDNIULOT63ozA","number":45817,"title":"Value of attribute default proc is shared between instances after dup + dirty tracking","user":{"login":"quadule","id":15299,"node_id":"MDQ6VXNlcjE1Mjk5","avatar_url":"https://avatars.githubusercontent.com/u/15299?v=4","gravatar_id":"","url":"https://api.github.com/users/quadule","html_url":"https://github.com/quadule","followers_url":"https://api.github.com/users/quadule/followers","following_url":"https://api.github.com/users/quadule/following{/other_user}","gists_url":"https://api.github.com/users/quadule/gists{/gist_id}","starred_url":"https://api.github.com/users/quadule/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/quadule/subscriptions","organizations_url":"https://api.github.com/users/quadule/orgs","repos_url":"https://api.github.com/users/quadule/repos","events_url":"https://api.github.com/users/quadule/events{/privacy}","received_events_url":"https://api.github.com/users/quadule/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-12T06:16:00Z","updated_at":"2022-08-15T15:56:11Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWhen an attribute without a database column defines a default proc, `dup`ing a model in which the default wasn't accessed passes the unevaluated `UserProvidedDefault` attribute to the new instance as the attribute's original value. Checking the new attribute for changes will then memoize the value in the original attribute definition, making it the default value in every new model instance afterward.\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n  gem \"rails\", github: \"rails/rails\", ref: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Schema.define do\r\n  create_table :cats do |t|\r\n    t.string :name\r\n  end\r\nend\r\n\r\nclass Cat < ActiveRecord::Base\r\n  attribute :sounds, default: -> { [] }\r\nend\r\n\r\nclass VirtualAttributeTest < Minitest::Test\r\n  def test_virtual_attribute_defaults_are_independent\r\n    Cat.new.dup.save!\r\n    Cat.new.sounds << \"meow\"\r\n    refute_same Cat.new.sounds, Cat.new.sounds\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nEach new instance should get a new default value from the proc.\r\n\r\n### Actual behavior\r\nAfter using dirty tracking on a duplicated instance with an uncalled proc default, all new instances of a model receive the same default value and share any changes made to it.\r\n\r\n### Affected versions\r\nThis seems to date back quite a while; the test fails on the main branch back to 5-1-stable.\r\n\r\n### Credits\r\nThanks to @GBH for originally discovering this bug.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45817/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45817/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45794","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45794/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45794/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45794/events","html_url":"https://github.com/rails/rails/issues/45794","id":1332999733,"node_id":"I_kwDNIULOT3P2NQ","number":45794,"title":"Action Cable client goes in a connection loop if you subscribe multiple times to the same channel","user":{"login":"ProGM","id":5167659,"node_id":"MDQ6VXNlcjUxNjc2NTk=","avatar_url":"https://avatars.githubusercontent.com/u/5167659?v=4","gravatar_id":"","url":"https://api.github.com/users/ProGM","html_url":"https://github.com/ProGM","followers_url":"https://api.github.com/users/ProGM/followers","following_url":"https://api.github.com/users/ProGM/following{/other_user}","gists_url":"https://api.github.com/users/ProGM/gists{/gist_id}","starred_url":"https://api.github.com/users/ProGM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ProGM/subscriptions","organizations_url":"https://api.github.com/users/ProGM/orgs","repos_url":"https://api.github.com/users/ProGM/repos","events_url":"https://api.github.com/users/ProGM/events{/privacy}","received_events_url":"https://api.github.com/users/ProGM/received_events","type":"User","site_admin":false},"labels":[{"id":300028327,"node_id":"MDU6TGFiZWwzMDAwMjgzMjc=","url":"https://api.github.com/repos/rails/rails/labels/actioncable","name":"actioncable","color":"bfdadc","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-09T09:48:36Z","updated_at":"2022-08-17T17:57:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\nYou can just start from a fresh `rails new [project-name]` installation.\r\nChannel code:\r\n```ruby\r\nclass ArticleChannel < ApplicationCable::Channel\r\n  def subscribed\r\n    stream_from \"ArticleChannel\"\r\n  end\r\n\r\n  def unsubscribed\r\n    # Any cleanup needed when channel is unsubscribed\r\n  end\r\nend\r\n```\r\n\r\nJavascript code:\r\n```javascript\r\nimport consumer from \"channels/consumer\"\r\n\r\nfunction subscribe() {\r\n\treturn consumer.subscriptions.create('ArticleChannel', {\r\n\t\tconnected() {\r\n\t\t\tconsole.log('connected');\r\n\t\t\t// Called when the subscription is ready for use on the server\r\n\t\t},\r\n\r\n\t\tdisconnected() {\r\n\t\t\tconsole.log('disconnected');\r\n\t\t\t// Called when the subscription has been terminated by the server\r\n\t\t},\r\n\r\n\t\treceived(data) {\r\n\t\t\tconsole.log('received', data);\r\n\t\t\t// Called when there's incoming data on the websocket for this channel\r\n\t\t}\r\n\t});\r\n}\r\n\r\nsetTimeout(() => {\r\n\tsubscribe();\r\n}, 3000);\r\n\r\nsetTimeout(() => {\r\n\tsubscribe();\r\n}, 4000);\r\n```\r\n\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nAny of these options could be considered an expected behavior:\r\n* Everything just works™, both subscriptions receive notification from that channel and no error is raised\r\n* The second `subscription.create(...)` raises some kind of error, notifying that the channel is already connected\r\n* The second `subscription.create(...)` returns the same instance of Subscription and writes a `console.warning` in console\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nThe second subscriptions triggers a connection loop.\r\n\r\nExample logs with `ActionCable.logger.enabled = true`.\r\n\r\n```\r\n[ActionCable] Opening WebSocket, current state is null, subprotocols: actioncable-v1-json,actioncable-unsupported 1660037219747\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] ConnectionMonitor started. stale threshold = 6 s 1660037219748\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] WebSocket onopen event, using 'actioncable-v1-json' subprotocol 1660037219758\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] ConnectionMonitor recorded connect 1660037219759\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor guaranteeing {\"channel\":\"ArticleChannel\"} 1660037219760\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] Subscription confirmed {\"channel\":\"ArticleChannel\"} 1660037219762\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor forgetting {\"channel\":\"ArticleChannel\"} 1660037219762\r\narticle_channel-b29f3f7bf31169dfadd26c7747a46706d4992a1fd842de8268f206c5f0a0fe45.js:6 connected\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor guaranteeing {\"channel\":\"ArticleChannel\"} 1660037220744\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221248\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221248\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n... and so on, forever...\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 3.1\r\n\r\n### Possible solutions\r\nThis issue happens because the identifier of both subscriptions is the same. Since Rails (ActionCable) doesn't answer to any subsequential command \"subscribe\" from the same client (in this case: `{\"command\":\"subscribe\",\"identifier\":\"{\\\"channel\\\":\\\"ArticleChannel\\\"}\"}`), the `SubscriptionGuarantor` considers the connection failed and [retries to connect after 500ms](https://github.com/rails/rails/blob/8994f09dd2f6ae363e74d8ee3b24700d9db94a16/actioncable/app/assets/javascripts/actioncable.esm.js#L351).\r\n\r\nI see various options to fix this:\r\n* Raise an exception when trying to create a subscription with the same identifier\r\n* Add a random/uuid to the identifier when connecting, so two connection would not share the same identifier? (I've already tested it, and it seems to fix)\r\n\r\nWould you accept a PR from me regarding this?","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45794/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45794/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45791","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45791/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45791/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45791/events","html_url":"https://github.com/rails/rails/issues/45791","id":1332570977,"node_id":"I_kwDNIULOT21rYQ","number":45791,"title":"Google::Apis::ClientError raised when using ActiveStorage to generate signed URLs to access a file in a GCS bucket with GKE Workload Identity","user":{"login":"danielyazbek","id":18390164,"node_id":"MDQ6VXNlcjE4MzkwMTY0","avatar_url":"https://avatars.githubusercontent.com/u/18390164?v=4","gravatar_id":"","url":"https://api.github.com/users/danielyazbek","html_url":"https://github.com/danielyazbek","followers_url":"https://api.github.com/users/danielyazbek/followers","following_url":"https://api.github.com/users/danielyazbek/following{/other_user}","gists_url":"https://api.github.com/users/danielyazbek/gists{/gist_id}","starred_url":"https://api.github.com/users/danielyazbek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielyazbek/subscriptions","organizations_url":"https://api.github.com/users/danielyazbek/orgs","repos_url":"https://api.github.com/users/danielyazbek/repos","events_url":"https://api.github.com/users/danielyazbek/events{/privacy}","received_events_url":"https://api.github.com/users/danielyazbek/received_events","type":"User","site_admin":false},"labels":[{"id":664533972,"node_id":"MDU6TGFiZWw2NjQ1MzM5NzI=","url":"https://api.github.com/repos/rails/rails/labels/activestorage","name":"activestorage","color":"bfd4f2","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-09T01:05:08Z","updated_at":"2022-08-09T15:53:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nConfigure ActiveStorage with GKE Workload identity (as documented [here](https://edgeguides.rubyonrails.org/active_storage_overview.html#google-cloud-storage-service)):\r\n\r\n```ruby\r\ngoogle:\r\n  service: GCS\r\n  iam: true\r\n  project: <%= ENV['ACTIVE_STORAGE_PROJECT'] %>\r\n  bucket: <%= ENV['ACTIVE_STORAGE_BUCKET'] %>\r\n```\r\n\r\nDefine a class:\r\n```ruby\r\nclass Transaction < ApplicationRecord\r\n  has_one_attached :csv_report\r\nend\r\n```\r\n\r\nWrite something to ActiveStorage:\r\n```ruby\r\nt = Transaction.create\r\nt.csv_report.attach(io: StringIO.new(\"A,B,C\"), filename: 'test.csv')\r\n```\r\n\r\nGenerate a Signed URL\r\n```ruby\r\nRails.application.routes.url_helpers.rails_blob_url(Transaction.last.csv_report, disposition: 'attachment')\r\n```\r\n\r\nPaste the generated URL into a browser\r\n\r\n### Expected behavior\r\nActiveRecord provides the attachment\r\n\r\n### Actual behavior\r\nError is raised:\r\n\r\n```\r\nGoogle::Apis::ClientError (Invalid request):\r\ngems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:236:in `check_status': Invalid request (Google::Apis::ClientError)\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/api_command.rb:134:in `check_status'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:199:in `process_response'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:318:in `execute_once'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:118:in `block (2 levels) in execute'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:61:in `block in retriable'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `times'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `retriable'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:115:in `block in execute'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:61:in `block in retriable'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `times'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `retriable'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:105:in `execute'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/base_service.rb:397:in `execute_or_queue_command'\r\n    from gems/google-apis-iamcredentials_v1-0.13.0/lib/google/apis/iamcredentials_v1/service.rb:158:in `sign_service_account_blob'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service/gcs_service.rb:232:in `block in signer'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file/signer_v2.rb:135:in `generate_signature'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file/signer_v2.rb:128:in `signed_url'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file.rb:1801:in `signed_url'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service/gcs_service.rb:160:in `private_url'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:123:in `block in url'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications/instrumenter.rb:24:in `instrument'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications.rb:206:in `instrument'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:163:in `instrument'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:118:in `url'\r\n    from gems/activestorage-7.0.3.1models/active_storage/blob.rb:217:in `url'\r\n    from gems/activestorage-7.0.3.1controllers/active_storage/blobs/redirect_controller.rb:14:in `show'\r\n```\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 3.1.2\r\n\r\n**google-cloud-storage gem version:** 1.38.0\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45791/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45791/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45778","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45778/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45778/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45778/events","html_url":"https://github.com/rails/rails/issues/45778","id":1330360134,"node_id":"I_kwDNIULOT0uvRg","number":45778,"title":"ActiveStorage attachments are lost when casting using Becomes","user":{"login":"markedmondson","id":1653699,"node_id":"MDQ6VXNlcjE2NTM2OTk=","avatar_url":"https://avatars.githubusercontent.com/u/1653699?v=4","gravatar_id":"","url":"https://api.github.com/users/markedmondson","html_url":"https://github.com/markedmondson","followers_url":"https://api.github.com/users/markedmondson/followers","following_url":"https://api.github.com/users/markedmondson/following{/other_user}","gists_url":"https://api.github.com/users/markedmondson/gists{/gist_id}","starred_url":"https://api.github.com/users/markedmondson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markedmondson/subscriptions","organizations_url":"https://api.github.com/users/markedmondson/orgs","repos_url":"https://api.github.com/users/markedmondson/repos","events_url":"https://api.github.com/users/markedmondson/events{/privacy}","received_events_url":"https://api.github.com/users/markedmondson/received_events","type":"User","site_admin":false},"labels":[{"id":664533972,"node_id":"MDU6TGFiZWw2NjQ1MzM5NzI=","url":"https://api.github.com/repos/rails/rails/labels/activestorage","name":"activestorage","color":"bfd4f2","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-05T20:19:16Z","updated_at":"2022-08-09T18:05:34Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\nCreate an ActiveRecord model with an ActiveStorage relation. Initialize and add the associated attachment. Cast the object to another subclassed model, the associated attachment is lost.\r\n\r\n```ruby\r\nunless File.exist?('Gemfile')\r\n    File.write('Gemfile', <<-GEMFILE)\r\n    source 'https://rubygems.org'\r\n    gem 'rails', '~> 6.1'\r\n    gem 'sqlite3'\r\n    GEMFILE\r\n\r\n    system 'bundle'\r\nend\r\n\r\nrequire 'bundler'\r\nBundler.setup(:default)\r\n\r\nrequire 'active_record'\r\nrequire 'active_storage/engine'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  config.hosts << 'example.org'\r\n  config.eager_load = false\r\n  config.session_store :cookie_store, key: 'cookie_store_key'\r\n  secrets.secret_key_base = 'secret_key_base'\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  config.active_storage.service = :local\r\n  config.active_storage.service_configurations = {\r\n    local: {\r\n      root: Dir.tmpdir,\r\n      service: 'Disk'\r\n    }\r\n  }\r\nend\r\n\r\nENV['DATABASE_URL'] = 'sqlite3::memory:'\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\nRails.application.initialize!\r\n\r\nrequire ActiveStorage::Engine.root.join('db/migrate/20170806125915_create_active_storage_tables.rb').to_s\r\n\r\nActiveRecord::Schema.define do\r\n  CreateActiveStorageTables.new.change\r\n\r\n  create_table :posts do |t|\r\n    t.string :title\r\n    t.string :text\r\n  end\r\n\r\n  create_table :comments do |t|\r\n    t.belongs_to :post\r\n    t.string :text\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post\r\n  has_one_attached :image\r\nend\r\n\r\nclass ModeratedComment < Comment; end\r\n\r\nclass BugTest < Minitest::Test\r\n  def setup\r\n    @post = Post.create(title: 'Post', text: 'Welcome')\r\n  end\r\n\r\n  def test_association\r\n    comment = @post.comments.new(text: 'I do not like this')\r\n\r\n    moderated_comment = comment.becomes(ModeratedComment)\r\n\r\n    assert_equal @post, moderated_comment.post # Pass\r\n  end\r\n\r\n  def test_attachment\r\n    file = ActiveStorage::Blob.create_and_upload!(\r\n      content_type: \"image/png\",\r\n      filename: \"image.png\",\r\n      io: ::StringIO.new(\"png\"),\r\n    )\r\n    comment = @post.comments.new(text: 'I do not like this', image: file)\r\n\r\n    moderated_comment = comment.becomes(ModeratedComment)\r\n\r\n    assert moderated_comment.image.attached? # Fail\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nWhen casting an ActiveRecord to another model, I expect the associations to be copied thus I expect attached ActiveStorage association assets to be copied.\r\n\r\n### Actual behavior\r\nPreviously attached ActiveStorage associated objects are lost on the original object.\r\n\r\n### System configuration\r\n**Rails version**: 6.1.6.1\r\n\r\n**Ruby version**: 3.0.4\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45778/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45778/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45775","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45775/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45775/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45775/events","html_url":"https://github.com/rails/rails/issues/45775","id":1330225377,"node_id":"I_kwDNIULOT0mg4Q","number":45775,"title":"Uniqueness validation on association does not use the correct primary key","user":{"login":"mikeletscher","id":6666411,"node_id":"MDQ6VXNlcjY2NjY0MTE=","avatar_url":"https://avatars.githubusercontent.com/u/6666411?v=4","gravatar_id":"","url":"https://api.github.com/users/mikeletscher","html_url":"https://github.com/mikeletscher","followers_url":"https://api.github.com/users/mikeletscher/followers","following_url":"https://api.github.com/users/mikeletscher/following{/other_user}","gists_url":"https://api.github.com/users/mikeletscher/gists{/gist_id}","starred_url":"https://api.github.com/users/mikeletscher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikeletscher/subscriptions","organizations_url":"https://api.github.com/users/mikeletscher/orgs","repos_url":"https://api.github.com/users/mikeletscher/repos","events_url":"https://api.github.com/users/mikeletscher/events{/privacy}","received_events_url":"https://api.github.com/users/mikeletscher/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-05T18:10:22Z","updated_at":"2022-08-09T14:52:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nI'm not _entirely_ sure if this is considered a bug, or intended behavior that's not well-documented for `uniqueness` validations on associations.\r\n\r\nI'm happy to help improve the documentation on this if that would be the most helpful way forward, or if this _is_ considered a bug, I can take a stab at a PR. \r\n\r\nIt looks like the issue is that `build_relation` on the uniqueness validator calls [`bind_attribute` on `ActiveRecord::Relation`](https://github.com/rails/rails/blob/408d061a80a49878ad26b305616ed9ba88ee1411/activerecord/lib/active_record/relation.rb#L45), which properly takes into account the reflection's foreign_key, but not primary key if it's been overridden. \r\n\r\nHere's a test that reproduces the issue:\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire 'bundler/inline'\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem 'activerecord', '~> 7.0.3.1'\r\n  gem 'sqlite3'\r\nend\r\n\r\nrequire 'active_record'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(\r\n  adapter: 'sqlite3',\r\n  database: ':memory:'\r\n)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :prescriptions, force: true do |t|\r\n    t.string :rx_number\r\n  end\r\n\r\n  create_table :fills, force: true do |t|\r\n    t.string :rx_number\r\n  end\r\nend\r\n\r\nclass Prescription < ActiveRecord::Base\r\n  has_many :fills, foreign_key: :rx_number, primary_key: :rx_number\r\nend\r\n\r\nclass Fill < ActiveRecord::Base\r\n  belongs_to :prescription, foreign_key: :rx_number, primary_key: :rx_number\r\n\r\n  validates :prescription, uniqueness: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_fill_unique_by_rx_number\r\n    Fill.create!(rx_number: '1234')\r\n    prescription = Prescription.create!(rx_number: '1234')\r\n    new_fill = prescription.fills.new\r\n    refute new_fill.save\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe uniqueness validation query would use the `rx_number` value of the `Prescription` to query for an existing `Fill` since that is what is set as the associations `primary_key`. \r\n\r\n### Actual behavior\r\nThe uniqueness validation query uses the `id` value of the `Prescription` to query for existing fills, disregarding the association's overridden `primary_key`.\r\n\r\nThis test passes if I patch bind_attribute to read the primary key from the reflection instead of directly from the reflection's klass:\r\n\r\n```ruby\r\nmodule ActiveRecord\r\n  # = Active Record \\Relation\r\n  class Relation\r\n    def bind_attribute(name, value) # :nodoc:\r\n      if reflection = klass._reflect_on_association(name)\r\n        name = reflection.foreign_key\r\n        primary_key = reflection.association_primary_key || reflection.klass.primary_key\r\n        value = value.read_attribute(primary_key) unless value.nil?\r\n      end\r\n\r\n      attr = table[name]\r\n      bind = predicate_builder.build_bind_attribute(attr.name, value)\r\n      yield attr, bind\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nWe were able to work around this by adding the uniqueness validation to the `rx_number` attribute instead of the association. If this is the desired way to handle this, I can open a PR to add a note about this to the docs, as it took us by surprise that validation on the association wouldn't use the defined key to get the value to query.\r\n\r\n### System configuration\r\n**Rails version**: `7.0.3.1`\r\n\r\n**Ruby version**: `3.1.2`\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45775/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45775/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45766","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45766/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45766/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45766/events","html_url":"https://github.com/rails/rails/issues/45766","id":1329650798,"node_id":"I_kwDNIULOT0Dcbg","number":45766,"title":"Active Model Dirty: attribute_changed? options (from/to) do not accept symbol","user":{"login":"thomasvanholder","id":36309895,"node_id":"MDQ6VXNlcjM2MzA5ODk1","avatar_url":"https://avatars.githubusercontent.com/u/36309895?v=4","gravatar_id":"","url":"https://api.github.com/users/thomasvanholder","html_url":"https://github.com/thomasvanholder","followers_url":"https://api.github.com/users/thomasvanholder/followers","following_url":"https://api.github.com/users/thomasvanholder/following{/other_user}","gists_url":"https://api.github.com/users/thomasvanholder/gists{/gist_id}","starred_url":"https://api.github.com/users/thomasvanholder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomasvanholder/subscriptions","organizations_url":"https://api.github.com/users/thomasvanholder/orgs","repos_url":"https://api.github.com/users/thomasvanholder/repos","events_url":"https://api.github.com/users/thomasvanholder/events{/privacy}","received_events_url":"https://api.github.com/users/thomasvanholder/received_events","type":"User","site_admin":false},"labels":[{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-08-05T08:54:51Z","updated_at":"2022-08-07T20:25:55Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nThe `attribute_changed?` receives optional options, such as `from` and `to`. Each option key is passed a value. Only string values are accepted, and symbols are not recognized. This is inconsistent behavior as updating a column using the `update` method does accept both a string and a symbol.\r\n \r\n Source code: [attribute_changed?](https://github.com/rails/rails/blob/04972d9b9ef60796dc8f0917817b5392d61fcf09/activemodel/lib/active_model/dirty.rb#L178) \r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"debug\"\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.column :status, :integer, default: 0\r\n    t.date :review_date\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  enum :status, {draft: 0, published: 1}\r\n\r\n  before_update :set_review_date\r\n\r\n  def set_review_date\r\n    # when \"published\" is set as a string, the test correcty passes.\r\n    if status_changed?(to: :published)\r\n      self.review_date = Date.today\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_set_status\r\n    post = Post.create!\r\n    post.update(status: :published)\r\n\r\n    assert_equal \"published\", post.status\r\n  end\r\n\r\n  def test_sets_review_date\r\n    post = Post.create!\r\n    post.published!\r\n\r\n    assert_equal \"published\", post.status\r\n    assert_equal Date.today, post.review_date\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe value of the optional arguments `from` and `to` accepts both a string or symbol.\r\n\r\n### Actual behavior\r\nWhen options, such as `from` and `to` are passed to the [attribute_changed?](https://github.com/rails/rails/blob/04972d9b9ef60796dc8f0917817b5392d61fcf09/activemodel/lib/active_model/dirty.rb#L178) method the arguments are not recognized when passed as a symbol.\r\n\r\n### System configuration\r\n**Rails version**: `Rails 7.0.3`\r\n\r\n**Ruby version**: `ruby 3.1.2`\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45766/reactions","total_count":2,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45766/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45758","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45758/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45758/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45758/events","html_url":"https://github.com/rails/rails/issues/45758","id":1327892229,"node_id":"I_kwDNIULOTyYHBQ","number":45758,"title":"ActiveRecord 6.1 and JSONB: Incorrect results value/type when using both arrow operator and double arrow operator in the same SELECT statement","user":{"login":"shhavel","id":1169424,"node_id":"MDQ6VXNlcjExNjk0MjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1169424?v=4","gravatar_id":"","url":"https://api.github.com/users/shhavel","html_url":"https://github.com/shhavel","followers_url":"https://api.github.com/users/shhavel/followers","following_url":"https://api.github.com/users/shhavel/following{/other_user}","gists_url":"https://api.github.com/users/shhavel/gists{/gist_id}","starred_url":"https://api.github.com/users/shhavel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shhavel/subscriptions","organizations_url":"https://api.github.com/users/shhavel/orgs","repos_url":"https://api.github.com/users/shhavel/repos","events_url":"https://api.github.com/users/shhavel/events{/privacy}","received_events_url":"https://api.github.com/users/shhavel/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-08-03T23:42:39Z","updated_at":"2022-08-05T22:26:04Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Issue Description\r\n\r\nGenerally when using JSONB operators `->` (arrow operator) and `->>` (double arrow operator) in SELECT statement, \r\nActiveRecord returns correct result types: objects for `->` operator and string for `->>` operator.\r\nBut when using both operators in the same select statement, the returned results may have an unexpected type or be `nil`.\r\n\r\n### Steps to reproduce with Expected behaviour in tests and Actual behaviour in comments\r\n\r\n```ruby\r\n# file: activerecord_6_1_jsonb_test.rb\r\n# run: ruby activerecord_6_1_jsonb_test.rb\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"activerecord\", \"6.1.6.1\" # the same behaviour for version \"7.0.3.1\"\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\npg_opts = {adapter: \"postgresql\", database: \"jsonb_activerecord_issue\"}\r\nbegin\r\n  ActiveRecord::Base.establish_connection(pg_opts.except(:database))\r\n  ActiveRecord::Base.connection.create_database(pg_opts[:database])\r\n  puts \"Database #{pg_opts[:database]} was created.\"\r\nrescue => ActiveRecord::DatabaseAlreadyExists\r\n  puts \"Database #{pg_opts[:database]} alredy exists.\"\r\nend\r\nActiveRecord::Base.establish_connection(pg_opts)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :entries, force: true do |t|\r\n    t.jsonb :value\r\n  end\r\nend\r\n\r\nclass Entry < ActiveRecord::Base\r\nend\r\nEntry.create(value: {a: \"a\", b: \"b\", c: {}})\r\n\r\nclass BugTest < Minitest::Test\r\n  # passed\r\n  def test_jsonb_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->'a', value->'b'\"))\r\n    assert_equal [[{}, \"b\"]], Entry.pluck(Arel.sql(\"value->'c', value->'b'\"))\r\n  end\r\n\r\n  # passed\r\n  def test_jsonb_double_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'a', value->>'b'\"))\r\n    assert_equal [[\"{}\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'c', value->>'b'\"))\r\n  end\r\n\r\n  # failed (this test results are differ in activerecord 6.0)\r\n  def test_jsonb_arrow_operator_and_double_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->'a', value->>'b'\")) # Actual [[\"a\", nil]]\r\n    assert_equal [[{}, \"b\"]], Entry.pluck(Arel.sql(\"value->'c', value->>'b'\")) # Actual [[{}, nil]]\r\n  end\r\n\r\n  # failed\r\n  def test_jsonb_double_arrow_operator_and_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'a', value->'b'\")) # Actual [[nil, \"b\"]]\r\n    assert_equal [[\"{}\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'c', value->'b'\")) # Actual [[{}, \"b\"]]\r\n  end\r\nend\r\n```\r\n\r\n### PostgreSQL results \r\n\r\n```sql\r\nSELECT\r\n  pg_typeof(value->'a'), value->'a',\r\n  pg_typeof(value->'b'), value->'b',\r\n  pg_typeof(value->'c'), value->'c',\r\n  pg_typeof(value->>'a'), value->>'a',\r\n  pg_typeof(value->>'b'), value->>'b',\r\n  pg_typeof(value->>'c'), value->>'c'\r\nFROM \"entries\";\r\n\r\n pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column?\r\n-----------+----------+-----------+----------+-----------+----------+-----------+----------+-----------+----------+-----------+----------\r\n jsonb     | \"a\"      | jsonb     | \"b\"      | jsonb     | {}       | text      | a        | text      | b        | text      | {}\r\n(1 row)\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 6.1.6.1\r\n\r\n**Ruby version**: 3.1.0\r\n\r\n### Similar issue in different versions of ActiveRecord\r\n\r\nThere is a similar issue but with slightly different behaviour in AR 6.0. Created another issue: #45757\r\n\r\nPlease confirm or comment on the expected behaviour.\r\nThank you.\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45758/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45758/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45750","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45750/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45750/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45750/events","html_url":"https://github.com/rails/rails/issues/45750","id":1327484205,"node_id":"I_kwDNIULOTx_NLQ","number":45750,"title":"Running `rails test` doesn't automatically load any custom tasks under `lib/tasks`","user":{"login":"onlynone","id":833690,"node_id":"MDQ6VXNlcjgzMzY5MA==","avatar_url":"https://avatars.githubusercontent.com/u/833690?v=4","gravatar_id":"","url":"https://api.github.com/users/onlynone","html_url":"https://github.com/onlynone","followers_url":"https://api.github.com/users/onlynone/followers","following_url":"https://api.github.com/users/onlynone/following{/other_user}","gists_url":"https://api.github.com/users/onlynone/gists{/gist_id}","starred_url":"https://api.github.com/users/onlynone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/onlynone/subscriptions","organizations_url":"https://api.github.com/users/onlynone/orgs","repos_url":"https://api.github.com/users/onlynone/repos","events_url":"https://api.github.com/users/onlynone/events{/privacy}","received_events_url":"https://api.github.com/users/onlynone/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-03T16:16:38Z","updated_at":"2022-08-03T18:09:40Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n1. Create the file `lib/tasks/test.rake` with the content:\r\n```ruby\r\nENV[\"test.rake\"] = \"yes\"\r\ntask :custom_task do\r\n  ENV[\"custom_task\"] = \"yes\"\r\nend\r\n\r\ntask :test => [:custom_task]\r\n```\r\n2. Create a test file at `test/unit/rails_test_test.rb` with the content:\r\n```ruby\r\nclass RailsTestTest < ActiveSupport::TestCase\r\n  test \"test.rake is in the environment\" do\r\n    assert_equal('yes', ENV['test.rake'])\r\n  end\r\n\r\n  test \"custom_task is in the environment\" do\r\n    assert_equal('yes', ENV['custom_task'])\r\n  end\r\nend\r\n```\r\n3. Run `bin/rails test test/unit/rails_test_test.rb`\r\n4. Run `bin/rake test test/unit/rails_test_test.rb`\r\n\r\n### Expected behavior\r\nBoth `rails test` and `rake test` should succeed.\r\n\r\n### Actual behavior\r\nRunning the tests with `bin/rake` succeeds with the output:\r\n```\r\nbin/rake test test/unit/rails_test_test.rb\r\nRunning via Spring preloader in process 59092\r\nRun options: --seed 6948\r\n\r\n# Running:\r\n\r\n..\r\n\r\nFinished in 0.000943s, 2120.8907 runs/s, 2120.8907 assertions/s.\r\n2 runs, 2 assertions, 0 failures, 0 errors, 0 skips\r\n```\r\n\r\nWhile running with `bin/rails` fails with the output:\r\n\r\n```\r\nRunning via Spring preloader in process 58735\r\nRun options: --seed 33633\r\n\r\n# Running:\r\n\r\nF\r\n\r\nFailure:\r\nRailsTestTest#test_custom_task_is_in_the_environment [/Users/steven/projects/rails_test_tasks/test/unit/rails_test_test.rb:7]:\r\nExpected: \"yes\"\r\n  Actual: nil\r\n\r\n\r\nrails test test/unit/rails_test_test.rb:6\r\n\r\nF\r\n\r\nFailure:\r\nRailsTestTest#test_test.rake_is_in_the_environment [/Users/steven/projects/rails_test_tasks/test/unit/rails_test_test.rb:3]:\r\nExpected: \"yes\"\r\n  Actual: nil\r\n\r\n\r\nrails test test/unit/rails_test_test.rb:2\r\n\r\n\r\n\r\nFinished in 0.001378s, 1451.3788 runs/s, 1451.3788 assertions/s.\r\n2 runs, 2 assertions, 2 failures, 0 errors, 0 skips\r\n```\r\n\r\nBecause the file `lib/tasks/test.rake` is never loaded.\r\n\r\nIt seems like rails will only end up loading custom tasks if it can't find the command being run on the command line in its own list of built-in commands. When it can't find the command, it will load the local `Rakefile` via `find_by_namespace(\"rake\").perform(full_namespace, args, config)` in `Rails::Command.invoke`. And the local `Rakefile` usually has `Rails.application.load_tasks` and that loads any custom tasks under `lib/tasks`.\r\n\r\nFor example, this happens when the `ActiveRecord` migration exec's out to call: `bin/rails db:test:prepare`. That task is apparently not a built-in rails task, so the `Rakefile` and all custom tasks *do* end up getting loaded for that one.\r\n\r\n(As an aside here, I don't fully understand the difference between the built-in rails tasks and the ones that have to be searched for via rake. I also don't understand why the migration code needs to fork a separate process to do `db:test:prepare`. That task just ends up doing `db_namespace[\"test:load\"].invoke`. Why couldn't the `db:test:prepare` tasks simply be invoked the same way in the same process?)\r\n\r\n### System configuration\r\n**Rails version**: 6.0.5\r\n\r\n**Ruby version**: 2.6.5\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45750/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45750/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45736","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45736/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45736/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45736/events","html_url":"https://github.com/rails/rails/issues/45736","id":1326221102,"node_id":"I_kwDNIULOTwyHLg","number":45736,"title":"Virtual stored columns are always nil for newly created records","user":{"login":"camiloforero","id":6606686,"node_id":"MDQ6VXNlcjY2MDY2ODY=","avatar_url":"https://avatars.githubusercontent.com/u/6606686?v=4","gravatar_id":"","url":"https://api.github.com/users/camiloforero","html_url":"https://github.com/camiloforero","followers_url":"https://api.github.com/users/camiloforero/followers","following_url":"https://api.github.com/users/camiloforero/following{/other_user}","gists_url":"https://api.github.com/users/camiloforero/gists{/gist_id}","starred_url":"https://api.github.com/users/camiloforero/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/camiloforero/subscriptions","organizations_url":"https://api.github.com/users/camiloforero/orgs","repos_url":"https://api.github.com/users/camiloforero/repos","events_url":"https://api.github.com/users/camiloforero/events{/privacy}","received_events_url":"https://api.github.com/users/camiloforero/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-02T18:09:28Z","updated_at":"2022-08-02T19:28:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nUsing postgresql:\r\n\r\nGenerate a new model with one or more columns with default values, and a virtual stored column based on those other columns\r\nCreate a new record of that model\r\nAccess the value of the virtual stored column from the newly created ActiveRecord object\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem 'pg', '~> 1.4'\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection \"postgresql:///test\"\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.integer :counter1, null: false, default: 0\r\n    t.integer :counter2, null: false, default: 0\r\n    t.virtual :counter_sum, type: :integer, as: \"counter1 + counter2\", stored: true\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_virtual_column_value_populated\r\n    post = Post.create!\r\n\r\n    assert_equal 0, post.counter_sum\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe value of the virtual column should be *something*, in this particular case, 0\r\n\r\n### Actual behavior\r\nThe value of the virtual column is `nil`. The test fails with the following output\r\n```ruby\r\n# Running:\r\n\r\nD, [2022-08-02T13:05:17.402730 #13548] DEBUG -- :   TRANSACTION (0.1ms)  BEGIN\r\nD, [2022-08-02T13:05:17.403136 #13548] DEBUG -- :   Post Create (0.6ms)  INSERT INTO \"posts\" DEFAULT VALUES RETURNING \"id\"\r\nD, [2022-08-02T13:05:17.406144 #13548] DEBUG -- :   TRANSACTION (2.6ms)  COMMIT\r\nF\r\n\r\nFailure:\r\nBugTest#test_virtual_column_value_populated [stored_bug.rb:37]:\r\nExpected: 0\r\n  Actual: nil\r\n\r\n\r\nrails test stored_bug.rb:34\r\n\r\n\r\n\r\nFinished in 0.011047s, 90.5240 runs/s, 90.5240 assertions/s.\r\n1 runs, 1 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\n### System configuration\r\n**Rails version**: edge\r\n**Ruby version**: 3.1.2\r\n**PostgreSQL version**: 14.4\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45736/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45736/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45709","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45709/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45709/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45709/events","html_url":"https://github.com/rails/rails/issues/45709","id":1323303409,"node_id":"I_kwDNIULOTuAB8Q","number":45709,"title":"Rails & can't pin JS files from Unpkg","user":{"login":"septerr","id":1094216,"node_id":"MDQ6VXNlcjEwOTQyMTY=","avatar_url":"https://avatars.githubusercontent.com/u/1094216?v=4","gravatar_id":"","url":"https://api.github.com/users/septerr","html_url":"https://github.com/septerr","followers_url":"https://api.github.com/users/septerr/followers","following_url":"https://api.github.com/users/septerr/following{/other_user}","gists_url":"https://api.github.com/users/septerr/gists{/gist_id}","starred_url":"https://api.github.com/users/septerr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/septerr/subscriptions","organizations_url":"https://api.github.com/users/septerr/orgs","repos_url":"https://api.github.com/users/septerr/repos","events_url":"https://api.github.com/users/septerr/events{/privacy}","received_events_url":"https://api.github.com/users/septerr/received_events","type":"User","site_admin":false},"labels":[{"id":131864,"node_id":"MDU6TGFiZWwxMzE4NjQ=","url":"https://api.github.com/repos/rails/rails/labels/third%20party%20issue","name":"third party issue","color":"02d7e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-07-30T21:44:43Z","updated_at":"2022-08-02T18:08:34Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nIn a new Rails & app, try to pin a package from Unpkg CDN:\r\n\r\n```\r\n./bin/importmap pin @walletconnect/web3-provider@1.7.8 --from unpkg\r\n```\r\n\r\nYou get following response:\r\n\r\n```\r\nCouldn't find any packages in [\"@walletconnect/web3-provider@1.7.8\"] on unpkg\r\n```\r\nBut the file does exist on unpkg: https://unpkg.com/@walletconnect/web3-provider@1.7.8/dist/umd/index.min.js\r\n\r\nAfter adding some breakpoints in `.rbenv/versions/3.1.0/lib/ruby/gems/3.1.0/gems/importmap-rails-1.1.5/lib/importmap/packager.rb`, saw that the CDN post request and response are as follows:\r\n\r\nPost URL: \r\n```\r\n<URI::HTTPS https://api.jspm.io/generate>\r\n```\r\nPost Body:\r\n```\r\n \"{\\\"install\\\":[\\\"@walletconnect/web3-provider@1.7.8\\\"],\\\"flattenScope\\\":true,\\\"env\\\":[\\\"browser\\\",\\\"module\\\",\\\"production\\\"],\\\"provider\\\":\\\"unpkg\\\"}\"\r\n```\r\n\r\nPost Response:\r\n```\r\n<Net::HTTPUnauthorized 401 Unauthorized readbody=true>\r\n```\r\n\r\n### Expected behavior\r\nExpected the files from unpkg to be pinned.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nMisleading error that files don't exist on unpkg.\r\n\r\n### System configuration\r\n**Rails version**:\r\nRails 7.0.3.1\r\n\r\n**Ruby version**:\r\nruby 3.1.0p0 (2021-12-25 revision fb4df44d16) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45709/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45709/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45691","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45691/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45691/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45691/events","html_url":"https://github.com/rails/rails/issues/45691","id":1322122058,"node_id":"I_kwDNIULOTs37Sg","number":45691,"title":"ActionMailer fails to create correct multipart message with rfc822 attachment","user":{"login":"der-flo","id":35431,"node_id":"MDQ6VXNlcjM1NDMx","avatar_url":"https://avatars.githubusercontent.com/u/35431?v=4","gravatar_id":"","url":"https://api.github.com/users/der-flo","html_url":"https://github.com/der-flo","followers_url":"https://api.github.com/users/der-flo/followers","following_url":"https://api.github.com/users/der-flo/following{/other_user}","gists_url":"https://api.github.com/users/der-flo/gists{/gist_id}","starred_url":"https://api.github.com/users/der-flo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/der-flo/subscriptions","organizations_url":"https://api.github.com/users/der-flo/orgs","repos_url":"https://api.github.com/users/der-flo/repos","events_url":"https://api.github.com/users/der-flo/events{/privacy}","received_events_url":"https://api.github.com/users/der-flo/received_events","type":"User","site_admin":false},"labels":[{"id":107188,"node_id":"MDU6TGFiZWwxMDcxODg=","url":"https://api.github.com/repos/rails/rails/labels/actionmailer","name":"actionmailer","color":"8B00FC","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-29T11:19:00Z","updated_at":"2022-08-02T19:46:17Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I cannot re-open #42849 so I create a new issue…\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire 'bundler/inline'\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n  gem 'rails', github: 'rails/rails', branch: 'main'\r\nend\r\n\r\nrequire 'minitest/autorun'\r\nrequire 'action_mailer/railtie'\r\n\r\nclass TestMailer < ActionMailer::Base\r\n  def main\r\n    message_to_attach =  <<~MAIL.gsub(/\\n/, \"\\r\\n\")\r\n      Message-ID: <12345@foo.example>\r\n      Subject: Test\r\n      From: test1@foo.example\r\n      To: test2@foo.example\r\n      \r\n      hello world\r\n    MAIL\r\n    attachments['test.eml'] = {\r\n      mime_type: params[:mime_type],\r\n      content: message_to_attach\r\n    }\r\n\r\n    mail(from: 'test3@foo.example', to: 'test4@foo.example', subject: 'Test outer') do |format|\r\n      format.text { \"outer text - #{params[:mime_type]} attachment\" }\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_with_plain_mime_type\r\n    message = TestMailer.with(mime_type: 'text/plain').main\r\n    assert_equal message.mime_type, 'multipart/mixed'\r\n  end\r\n\r\n  def test_with_rfc822_mime_type\r\n    message = TestMailer.with(mime_type: 'message/rfc822').main\r\n    assert_equal message.mime_type, 'multipart/mixed'\r\n  end\r\nend\r\n```\r\n\r\nThe second test fails, the message object is rendered as follows:\r\n```\r\nDate: Fri, 23 Jul 2021 13:59:19 +0200\r\nFrom: test3@foo.example\r\nTo: test4@foo.example\r\nMessage-ID: <60faaf1738a02_14fbd98-3fb@flo.adigi.ai.mail>\r\nSubject: Test outer\r\nMime-Version: 1.0\r\nContent-Type: text/plain;\r\n boundary=\"--==_mimepart_60faaf1738008_14fbd98-484\";\r\n charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\n\r\n\r\n----==_mimepart_60faaf1738008_14fbd98-484\r\nContent-Type: text/plain;\r\n charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\n\r\nouter text - message/rfc822 attachment\r\n----==_mimepart_60faaf1738008_14fbd98-484\r\nContent-Type: message/rfc822\r\nContent-Transfer-Encoding: \r\nContent-Disposition: attachment;\r\n filename=test.eml\r\nContent-ID: <60faaf1739102_14fbd98-2b@flo.adigi.ai.mail>\r\n\r\nMessage-ID: <12345@foo.example>\r\nSubject: Test\r\nFrom: test1@foo.example\r\nTo: test2@foo.example\r\n\r\nhello world\r\n\r\n----==_mimepart_60faaf1738008_14fbd98-484--\r\n\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe `message.mime_type` is `multipart/mixed` in both test cases. ActionMailer handles attachments in the way it is described in https://guides.rubyonrails.org/action_mailer_basics.html#adding-attachments describes.\r\n\r\n### Actual behavior\r\n\r\nWhen attaching a `message/rfc822` - an email message - the generated mail parts are not nested correctly, the outer `multipart/mixed` is missing.\r\n\r\nPerhaps this behaviour is caused by the [special handling](https://github.com/mikel/mail/blob/master/lib/mail/attachments_list.rb#L9) of such attachments in the `mail` gem.\r\n\r\n\r\n### System configuration\r\n**Rails version**: main\r\n\r\n**Ruby version**: 3.0.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45691/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":1,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45691/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45640","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45640/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45640/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45640/events","html_url":"https://github.com/rails/rails/issues/45640","id":1315219867,"node_id":"I_kwDNIULOTmSpmw","number":45640,"title":"ActiveModel::Dirty changes not reset properly when using store_accessor (tested with postgres)","user":{"login":"vccoffey","id":59817868,"node_id":"MDQ6VXNlcjU5ODE3ODY4","avatar_url":"https://avatars.githubusercontent.com/u/59817868?v=4","gravatar_id":"","url":"https://api.github.com/users/vccoffey","html_url":"https://github.com/vccoffey","followers_url":"https://api.github.com/users/vccoffey/followers","following_url":"https://api.github.com/users/vccoffey/following{/other_user}","gists_url":"https://api.github.com/users/vccoffey/gists{/gist_id}","starred_url":"https://api.github.com/users/vccoffey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vccoffey/subscriptions","organizations_url":"https://api.github.com/users/vccoffey/orgs","repos_url":"https://api.github.com/users/vccoffey/repos","events_url":"https://api.github.com/users/vccoffey/events{/privacy}","received_events_url":"https://api.github.com/users/vccoffey/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-07-22T16:44:57Z","updated_at":"2022-07-23T17:51:49Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nUsing PostgreSQL (pg) database\r\nGiven a model with a jsonb column\r\n```\r\nclass CreateTestModels < ActiveRecord::Migration[6.1]\r\n  def change\r\n    create_table :test_models do |t|\r\n      t.jsonb :jsonb_hash_attr\r\n      t.timestamps\r\n    end\r\n  end\r\nend\r\n```\r\nusing store_accessor\r\n```\r\nclass TestModel < ApplicationRecord\r\n  store_accessor :jsonb_hash_attr, :key, prefix: true\r\nend\r\n```\r\n\r\n### Expected behavior\r\nBoth tests pass:\r\n```\r\nrequire \"test_helper\"\r\nclass TestModelTest < ActiveSupport::TestCase\r\n  test \"does not show changes for a jsonb attribute if changed back to original value\" do\r\n    tm = TestModel.create jsonb_hash_attr: { \"key\" => \"foo\" }\r\n    tm.jsonb_hash_attr = { \"key\" => \"bar\" }\r\n    assert_equal tm.jsonb_hash_attr_change, [{ \"key\" => \"foo\" }, { \"key\" => \"bar\" }]\r\n    tm.jsonb_hash_attr = { \"key\" => \"foo\" }\r\n    assert_equal tm.jsonb_hash_attr_change, nil\r\n  end\r\n\r\n  test \"does not show changes for a jsonb attribute if changed back to original value using store_accessor\" do\r\n    tm = TestModel.create jsonb_hash_attr: { \"key\" => \"foo\" }\r\n    tm.jsonb_hash_attr_key = \"bar\"\r\n    assert_equal tm.jsonb_hash_attr_change, [{ \"key\" => \"foo\" }, { \"key\" => \"bar\" }]\r\n    tm.jsonb_hash_attr_key = \"foo\"\r\n    assert_equal tm.jsonb_hash_attr_change, nil\r\n  end\r\nend\r\n```\r\n### Actual behavior\r\nThe second test fails\r\n```\r\n--- expected\r\n+++ actual\r\n-[{\"key\"=>\"foo\"}, {\"key\"=>\"foo\"}]\r\n+nil\r\n```\r\n### System configuration\r\n**Rails version**:\r\ntested with 6.1.6.1 and 7.0.3.1\r\n\r\n**Ruby version**: 3.1.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45640/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45640/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45639","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45639/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45639/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45639/events","html_url":"https://github.com/rails/rails/issues/45639","id":1314984267,"node_id":"I_kwDNIULOTmERSw","number":45639,"title":"Explicitly touch on save","user":{"login":"schmijos","id":245443,"node_id":"MDQ6VXNlcjI0NTQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/245443?v=4","gravatar_id":"","url":"https://api.github.com/users/schmijos","html_url":"https://github.com/schmijos","followers_url":"https://api.github.com/users/schmijos/followers","following_url":"https://api.github.com/users/schmijos/following{/other_user}","gists_url":"https://api.github.com/users/schmijos/gists{/gist_id}","starred_url":"https://api.github.com/users/schmijos/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/schmijos/subscriptions","organizations_url":"https://api.github.com/users/schmijos/orgs","repos_url":"https://api.github.com/users/schmijos/repos","events_url":"https://api.github.com/users/schmijos/events{/privacy}","received_events_url":"https://api.github.com/users/schmijos/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-22T13:05:14Z","updated_at":"2022-07-22T20:31:00Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  ruby \"3.1.0\"\r\n  gem \"rails\", \"7.0.3.1\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.timestamps\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_save_touch\r\n    Post.create!(updated_at: 3.days.ago)\r\n    Post.last.save!(touch: true)\r\n\r\n    assert_in_delta 0.seconds.ago.to_i, Post.last.updated_at.to_i, 5\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nIf I tell _ActiveRecord_ to explicitly \"touch\", then I would expect it to update the timestamps.\r\n\r\n### Actual behavior\r\n`save` never hits the database if no attribute changed.\r\n\r\n### System configuration\r\n**Rails version**: >= 3.0.0, < 8","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45639/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45639/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45638","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45638/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45638/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45638/events","html_url":"https://github.com/rails/rails/issues/45638","id":1314662755,"node_id":"I_kwDNIULOTlwpYw","number":45638,"title":"CSRF Token Expiry issue.","user":{"login":"MBM1607","id":47133639,"node_id":"MDQ6VXNlcjQ3MTMzNjM5","avatar_url":"https://avatars.githubusercontent.com/u/47133639?v=4","gravatar_id":"","url":"https://api.github.com/users/MBM1607","html_url":"https://github.com/MBM1607","followers_url":"https://api.github.com/users/MBM1607/followers","following_url":"https://api.github.com/users/MBM1607/following{/other_user}","gists_url":"https://api.github.com/users/MBM1607/gists{/gist_id}","starred_url":"https://api.github.com/users/MBM1607/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MBM1607/subscriptions","organizations_url":"https://api.github.com/users/MBM1607/orgs","repos_url":"https://api.github.com/users/MBM1607/repos","events_url":"https://api.github.com/users/MBM1607/events{/privacy}","received_events_url":"https://api.github.com/users/MBM1607/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-22T08:38:19Z","updated_at":"2022-07-22T08:40:22Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"We are encountering an issue with form submission in production environment.\r\nThe criteria seems to be exceptionally rare, I have been unable to replicate the issue. \r\n\r\nCSRF token is created and validated just fine.\r\n\r\n### Timing\r\n\r\nIssue seems to occur only when users wait more than 2 hours on a form before submitting, but doing this we have been unable to reproduce as well.\r\n\r\n### Logs\r\n```\r\nW, [2022-07-14T15:19:37.535241 #2433]  WARN -- : Can't verify CSRF token authenticity.\r\nI, [2022-07-14T15:19:37.535556 #2433]  INFO -- : Completed 422 Unprocessable Entity in 1ms (ActiveRecord: 0.0ms | Allocations: 291)\r\nF, [2022-07-14T15:19:37.536425 #2433] FATAL -- :   \r\nActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n```\r\n\r\n### System configuration\r\n**Rails version 6.1.6** \r\n**Ruby version 2.7.4**\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45638/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45638/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45636","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45636/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45636/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45636/events","html_url":"https://github.com/rails/rails/issues/45636","id":1314546104,"node_id":"I_kwDNIULOTlphuA","number":45636,"title":"Invalid template types should raise an exception","user":{"login":"axos88","id":1281218,"node_id":"MDQ6VXNlcjEyODEyMTg=","avatar_url":"https://avatars.githubusercontent.com/u/1281218?v=4","gravatar_id":"","url":"https://api.github.com/users/axos88","html_url":"https://github.com/axos88","followers_url":"https://api.github.com/users/axos88/followers","following_url":"https://api.github.com/users/axos88/following{/other_user}","gists_url":"https://api.github.com/users/axos88/gists{/gist_id}","starred_url":"https://api.github.com/users/axos88/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/axos88/subscriptions","organizations_url":"https://api.github.com/users/axos88/orgs","repos_url":"https://api.github.com/users/axos88/repos","events_url":"https://api.github.com/users/axos88/events{/privacy}","received_events_url":"https://api.github.com/users/axos88/received_events","type":"User","site_admin":false},"labels":[{"id":3666649,"node_id":"MDU6TGFiZWwzNjY2NjQ5","url":"https://api.github.com/repos/rails/rails/labels/actionview","name":"actionview","color":"d7e102","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-07-22T07:40:54Z","updated_at":"2022-08-17T18:02:14Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n  - Create a template in views/foo/bar.txt.erb # Note .txt, and not .text\r\n\r\n```ruby\r\ndetails = { locale: [:en], formats: [:txt], handlers: [:erb], variants: []}\r\nActionController::Base.view_paths.find(\"bar\", 'foo', false, details, nil, [])\r\n```\r\n\r\n### Expected behavior\r\n\r\nShould throw an exception that :txt is not a registered type in Template::Types\r\n\r\n### Actual behavior\r\n\r\nSilently fails to find the otherwise existing template, specifying the correct directory it the file resides in. \r\nConfustion intensifies.\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3\r\n**Ruby version**: 2.7.6","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45636/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45636/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45635","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45635/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45635/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45635/events","html_url":"https://github.com/rails/rails/issues/45635","id":1314015345,"node_id":"I_kwDNIULOTlJIcQ","number":45635,"title":"Recent security releases are missing from the Releases page","user":{"login":"georgeclaghorn","id":94129,"node_id":"MDQ6VXNlcjk0MTI5","avatar_url":"https://avatars.githubusercontent.com/u/94129?v=4","gravatar_id":"","url":"https://api.github.com/users/georgeclaghorn","html_url":"https://github.com/georgeclaghorn","followers_url":"https://api.github.com/users/georgeclaghorn/followers","following_url":"https://api.github.com/users/georgeclaghorn/following{/other_user}","gists_url":"https://api.github.com/users/georgeclaghorn/gists{/gist_id}","starred_url":"https://api.github.com/users/georgeclaghorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/georgeclaghorn/subscriptions","organizations_url":"https://api.github.com/users/georgeclaghorn/orgs","repos_url":"https://api.github.com/users/georgeclaghorn/repos","events_url":"https://api.github.com/users/georgeclaghorn/events{/privacy}","received_events_url":"https://api.github.com/users/georgeclaghorn/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false},"assignees":[{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2022-07-22T01:21:34Z","updated_at":"2022-08-19T18:08:06Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Rails versions 7.0.3.1, 6.1.6.1, 6.0.5.1, and 5.2.8.1 are not listed at this GitHub repository’s [Releases](https://github.com/rails/rails/releases) page. Past releases are listed there, including the most recent round of bugfix releases from May.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45635/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45635/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45632","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45632/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45632/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45632/events","html_url":"https://github.com/rails/rails/issues/45632","id":1312439669,"node_id":"I_kwDNIULOTjo9dQ","number":45632,"title":"`_read_attribute` method should also check whether an attribute is aliased or not","user":{"login":"khiav223577","id":4011729,"node_id":"MDQ6VXNlcjQwMTE3Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4011729?v=4","gravatar_id":"","url":"https://api.github.com/users/khiav223577","html_url":"https://github.com/khiav223577","followers_url":"https://api.github.com/users/khiav223577/followers","following_url":"https://api.github.com/users/khiav223577/following{/other_user}","gists_url":"https://api.github.com/users/khiav223577/gists{/gist_id}","starred_url":"https://api.github.com/users/khiav223577/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/khiav223577/subscriptions","organizations_url":"https://api.github.com/users/khiav223577/orgs","repos_url":"https://api.github.com/users/khiav223577/repos","events_url":"https://api.github.com/users/khiav223577/events{/privacy}","received_events_url":"https://api.github.com/users/khiav223577/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-07-21T03:14:22Z","updated_at":"2022-07-21T21:37:09Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n```rb\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  gem \"activerecord\", '7.0.3'\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table \"users\", force: :cascade do |t|\r\n    t.string :name\r\n  end\r\n\r\n  create_table \"posts\", force: :cascade do |t|\r\n    t.string :title\r\n    t.integer :userId\r\n  end\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\n  has_many :posts\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  belongs_to :user\r\n\r\n  alias_attribute :user_id, :userId\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def setup\r\n    user = User.create!(name: 'Tester')\r\n    post = Post.create!(user_id: user.id, title: 'Post A')\r\n  end\r\n\r\n  def test_has_many\r\n    assert_equal ['Post A'], User.first.posts.map(&:title)\r\n  end\r\n\r\n  def test_belongs_to\r\n    assert_equal 'Tester', Post.first.user&.name\r\n  end\r\nend\r\n```\r\n\r\nResult:\r\n```\r\nFinished in 0.059414s, 33.6619 runs/s, 33.6619 assertions/s.\r\n\r\n  1) Failure:\r\nBugTest#test_belongs_to [test.rb:53]:\r\nExpected: \"Tester\"\r\n  Actual: nil\r\n\r\n2 runs, 2 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\n### Expected behavior\r\n\r\nI run into this issue when I tried to add an association on an aliased attribute.\r\n\r\nThen I found `belongs_to_association` will use `_read_attribute` method to check if this `foreign_key` exists on this model or not.\r\nIt doesn't pass the condition, therefore `find_target` will not be triggered.\r\nhttps://github.com/rails/rails/blob/3272335f8f4739629283cdeff7c3db723f34a3f5/activerecord/lib/active_record/associations/association.rb#L172-L173\r\nhttps://github.com/rails/rails/blob/3272335f8f4739629283cdeff7c3db723f34a3f5/activerecord/lib/active_record/associations/association.rb#L274-L276\r\nhttps://github.com/rails/rails/blob/2ea5ff9e13b9c5d0d5d25b2441efa81a2de2a262/activerecord/lib/active_record/associations/belongs_to_association.rb#L133-L135\r\nhttps://github.com/rails/rails/blob/4ae0390c1051a39ec16a4a95451cd06172a1b260/activerecord/lib/active_record/attribute_methods/read.rb#L37-L39\r\n\r\nThe `read_attribute` method takes `attribute_alias` into consideration since https://github.com/rails/rails/pull/26529, while `_read_attribute` doesn't. I think it should, too.\r\n\r\n### Actual behavior\r\n\r\nSee the test script below.\r\n\r\n### System configuration\r\n**Rails version**: \r\n7.0.3.1\r\n\r\n**Ruby version**:\r\nruby 3.0.0p0 (2020-12-25 revision 95aff21468) [x86_64-linux]","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45632/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45632/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45609","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45609/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45609/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45609/events","html_url":"https://github.com/rails/rails/issues/45609","id":1306840730,"node_id":"I_kwDNIULOTeTOmg","number":45609,"title":"Cannot add ActiveModel::Attribute::FromDatabase to permitted YAML safe load classes","user":{"login":"stanhu","id":963826,"node_id":"MDQ6VXNlcjk2MzgyNg==","avatar_url":"https://avatars.githubusercontent.com/u/963826?v=4","gravatar_id":"","url":"https://api.github.com/users/stanhu","html_url":"https://github.com/stanhu","followers_url":"https://api.github.com/users/stanhu/followers","following_url":"https://api.github.com/users/stanhu/following{/other_user}","gists_url":"https://api.github.com/users/stanhu/gists{/gist_id}","starred_url":"https://api.github.com/users/stanhu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stanhu/subscriptions","organizations_url":"https://api.github.com/users/stanhu/orgs","repos_url":"https://api.github.com/users/stanhu/repos","events_url":"https://api.github.com/users/stanhu/events{/privacy}","received_events_url":"https://api.github.com/users/stanhu/received_events","type":"User","site_admin":false},"labels":[{"id":107186,"node_id":"MDU6TGFiZWwxMDcxODY=","url":"https://api.github.com/repos/rails/rails/labels/regression","name":"regression","color":"e10c02","default":false,"description":null},{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-07-16T15:51:30Z","updated_at":"2022-08-18T11:39:07Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWe have some database entries serialized to YAML. For example:\r\n\r\n```\r\n---\r\n:custom_message: Repository Download Started\r\n:author_name: !ruby/object:DeployToken\r\n  concise_attributes:\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: deploy_token_type\r\n    value_before_type_cast: 1\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: id\r\n    value_before_type_cast: 2\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: revoked\r\n    value_before_type_cast: false\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: read_repository\r\n    value_before_type_cast: true\r\n```\r\n\r\nHowever, since the security release announced in https://rubyonrails.org/2022/7/12/Rails-Versions-7-0-3-1-6-1-6-1-6-0-5-1-and-5-2-8-1-have-been-released to address CVE-2022-32224, we cannot simply add `ActiveModel::Attribute::FromDatabase` to the permitted class list:\r\n\r\n```ruby\r\n(byebug) YAML.safe_load(payload, permitted_classes: [ActiveModel::Attribute::FromDatabase, Symbol, DeployToken], aliases: true)\r\n*** NameError Exception: private constant ActiveModel::Attribute::FromDatabase referenced\r\n```\r\n\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\n### Expected behavior\r\n\r\nYAML loading should work. Should this constant no longer be private since it's been serialized to YAML?\r\n\r\n### Actual behavior\r\n\r\nYAML loading fails with:\r\n\r\n```\r\n*** NameError Exception: private constant ActiveModel::Attribute::FromDatabase referenced\r\n```\r\n\r\n### System configuration\r\n\r\n**Rails version**:\r\nv6.1.6.1\r\n\r\n**Ruby version**:\r\nv2.7.5","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45609/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45609/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45596","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45596/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45596/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45596/events","html_url":"https://github.com/rails/rails/issues/45596","id":1304247666,"node_id":"I_kwDNIULOTb09cg","number":45596,"title":"Setting `schema_dump` in database.yml does not change dump format","user":{"login":"leboshi","id":16550140,"node_id":"MDQ6VXNlcjE2NTUwMTQw","avatar_url":"https://avatars.githubusercontent.com/u/16550140?v=4","gravatar_id":"","url":"https://api.github.com/users/leboshi","html_url":"https://github.com/leboshi","followers_url":"https://api.github.com/users/leboshi/followers","following_url":"https://api.github.com/users/leboshi/following{/other_user}","gists_url":"https://api.github.com/users/leboshi/gists{/gist_id}","starred_url":"https://api.github.com/users/leboshi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leboshi/subscriptions","organizations_url":"https://api.github.com/users/leboshi/orgs","repos_url":"https://api.github.com/users/leboshi/repos","events_url":"https://api.github.com/users/leboshi/events{/privacy}","received_events_url":"https://api.github.com/users/leboshi/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-14T04:44:37Z","updated_at":"2022-07-14T14:34:25Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Originally brought up in #43173.  I opened PR #43240 to address it, but that was closed when it was decided #43530 did the same thing.  Unfortunately, I don't think any of us were really reading what the other was doing, because the two PRs actually each only addressed half the opened issue.\r\n\r\nPR incoming to fully address this and the second half of #43173!\r\n\r\n### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_schema_format_corresponds_with_schema_dump\r\n    Dir.mktmpdir do |dir|\r\n      ActiveRecord::Tasks::DatabaseTasks.stub(:db_dir, dir) do\r\n        old_configurations = ActiveRecord::Base.configurations\r\n        ActiveRecord::Base.configurations = {\r\n          \"development\" => {\r\n            \"primary\" => {\r\n              \"database\" => \"dev-db\",\r\n              \"schema_dump\" => \"primary_structure.sql\"\r\n            }\r\n          }\r\n        }\r\n\r\n        db_config = ActiveRecord::Base.configurations.configs_for(env_name: \"development\", name: \"primary\")\r\n        ActiveRecord::Tasks::DatabaseTasks.dump_schema(db_config)\r\n\r\n        dump_contents = File.read(File.join(dir, \"primary_structure.sql\"))\r\n        refute_match /ActiveRecord::Schema/, dump_contents\r\n        assert_match /CREATE TABLE/, dump_contents\r\n      ensure\r\n        ActiveRecord::Base.configurations = old_configurations\r\n        ActiveRecord::Base.clear_cache!\r\n      end\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nIf `schema_dump` is set to something like `primary_structure.sql`, I'd expect it to do a SQL structure dump rather than a Ruby schema dump.\r\n\r\n### Actual behavior\r\nThe filename in `schema_dump` has no bearing on the format of the dump Rails writes or expects to read.\r\n\r\n### System configuration\r\n**Rails version**: (main)\r\n\r\n**Ruby version**: 3.1.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45596/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45596/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45998","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45998/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45998/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45998/events","html_url":"https://github.com/rails/rails/issues/45998","id":1368868095,"node_id":"I_kwDNIULOUZdE_w","number":45998,"title":"CSRF getting different token","user":{"login":"Saleh-Salem","id":22606707,"node_id":"MDQ6VXNlcjIyNjA2NzA3","avatar_url":"https://avatars.githubusercontent.com/u/22606707?v=4","gravatar_id":"","url":"https://api.github.com/users/Saleh-Salem","html_url":"https://github.com/Saleh-Salem","followers_url":"https://api.github.com/users/Saleh-Salem/followers","following_url":"https://api.github.com/users/Saleh-Salem/following{/other_user}","gists_url":"https://api.github.com/users/Saleh-Salem/gists{/gist_id}","starred_url":"https://api.github.com/users/Saleh-Salem/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Saleh-Salem/subscriptions","organizations_url":"https://api.github.com/users/Saleh-Salem/orgs","repos_url":"https://api.github.com/users/Saleh-Salem/repos","events_url":"https://api.github.com/users/Saleh-Salem/events{/privacy}","received_events_url":"https://api.github.com/users/Saleh-Salem/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-11T08:08:17Z","updated_at":"2022-09-11T08:27:32Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When validating the CSRF token getting an exception in API\r\n \r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\nthe `session[:_csrf_token]` and  `request.x_csrf_token` is different and getting issue.\r\nwhen I need to skip the csrf, I add `verify_authenticity_token`, In this case, I don't need to skip it.\r\nI debug and found the issue in the method:\r\n\r\n```\r\n  def compare_with_global_token(token, session = nil) # :doc:\r\n    ActiveSupport::SecurityUtils.fixed_length_secure_compare(token, global_csrf_token(session))\r\n  end\r\n```\r\n\r\nwhat is `session[:_csrf_token]` and how can I implement it in API?\r\nIs there any missing from my side?\r\n### Steps to reproduce\r\n\r\n1. Add `protect_from_forgery with: :exception` .\r\n2. When logging in return token in response is generated by `form_authenticity_token`.\r\n3. When Trying to request any POST, PUT or DELETE API get an exception.\r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nReturn Response without exception.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\ngetting exception \r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\n### System configuration\r\n**Rails version**:\r\n6.0.3.5\r\n**Ruby version**:\r\n2.7.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45998/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45998/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45994","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45994/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45994/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45994/events","html_url":"https://github.com/rails/rails/issues/45994","id":1368555704,"node_id":"I_kwDNIULOUZKAuA","number":45994,"title":"LoadInterlockAwareMonitor deadlock when clearing cache (multiple databases, test)","user":{"login":"kuahyeow","id":16723,"node_id":"MDQ6VXNlcjE2NzIz","avatar_url":"https://avatars.githubusercontent.com/u/16723?v=4","gravatar_id":"","url":"https://api.github.com/users/kuahyeow","html_url":"https://github.com/kuahyeow","followers_url":"https://api.github.com/users/kuahyeow/followers","following_url":"https://api.github.com/users/kuahyeow/following{/other_user}","gists_url":"https://api.github.com/users/kuahyeow/gists{/gist_id}","starred_url":"https://api.github.com/users/kuahyeow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kuahyeow/subscriptions","organizations_url":"https://api.github.com/users/kuahyeow/orgs","repos_url":"https://api.github.com/users/kuahyeow/repos","events_url":"https://api.github.com/users/kuahyeow/events{/privacy}","received_events_url":"https://api.github.com/users/kuahyeow/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-10T08:52:46Z","updated_at":"2022-09-10T08:56:12Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"With multiple databases, we observe hangs within system tests.\r\n\r\nSee also https://gitlab.com/gitlab-org/gitlab/-/issues/371468 (GitLab is at Rails 6.1, Ruby 2.7.5)\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nHere's a minimal reproduction with Rails 7.0.3.1\r\n\r\n1. Checkout https://gitlab.com/tkuah/multi_database_system_test\r\n2. `bundle install`\r\n3. `bundle exec rails db:migrate`\r\n4. `bundle rails test test/system/home_pages_test.rb`\r\n\r\nThe conditions are:\r\n\r\n1. Multiple databases\r\n2. System test where there's an async request which overlaps with the main thread\r\n\r\n### Expected behavior\r\n\r\nIt does not hang, and the test completes\r\n\r\n### Actual behavior\r\n\r\nIt hangs. It looks like it's hanging when clearing query cache (see https://gitlab.com/gitlab-org/gitlab/-/issues/371468#note_1087203883, and https://gitlab.com/gitlab-org/gitlab/-/issues/371468#note_1088779499)\r\n\r\nA backtrace dump taken while the test is hanging [sigdump-68442.log](https://github.com/rails/rails/files/9539878/sigdump-68442.log)\r\n\r\nMy suspicion is that:\r\n\r\n1. `lock_thread` is true for system tests\r\n3. Therefore both the main thread, and the Puma thread attempt to clear query cache for the same set of connections\r\n\r\nSo we have two connections:\r\n\r\n1. Puma thread takes a `LoadInterlockAwareMonitor` lock for primary connection via `Post.transaction`\r\n2. Main thread takes a `LoadInterlockAwareMonitor` lock for animal connection via implicit transaction that `create` does\r\n3. Due to 2, main thread attempts to clear query cache for primary connection. **Waits for 1's lock**\r\n4. Due to 1, and because of `lock_thread`, puma thread clears query cache for primary connection. It takes a `LoadInterlockAwareMonitor` lock for primary connection which succeds\r\n5. Due to 1, puma thread now attempts clears query cache for animal connection. **Waits for 2's lock**\r\n\r\nSee [`clear_query_caches_for_current_thread` method](https://github.com/rails/rails/blob/e24fbf71fa0a10f63346b9b42604451958740844/activerecord/lib/active_record/connection_handling.rb#L244-L248)\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: ruby 2.7.5p203 (2021-11-24 revision f69aeb8314) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45994/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45994/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45984","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45984/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45984/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45984/events","html_url":"https://github.com/rails/rails/issues/45984","id":1368144421,"node_id":"I_kwDNIULOUYw6JQ","number":45984,"title":"Cannot Eager Load has_many :through Relationships with custom scope","user":{"login":"dcorrigan","id":2445528,"node_id":"MDQ6VXNlcjI0NDU1Mjg=","avatar_url":"https://avatars.githubusercontent.com/u/2445528?v=4","gravatar_id":"","url":"https://api.github.com/users/dcorrigan","html_url":"https://github.com/dcorrigan","followers_url":"https://api.github.com/users/dcorrigan/followers","following_url":"https://api.github.com/users/dcorrigan/following{/other_user}","gists_url":"https://api.github.com/users/dcorrigan/gists{/gist_id}","starred_url":"https://api.github.com/users/dcorrigan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dcorrigan/subscriptions","organizations_url":"https://api.github.com/users/dcorrigan/orgs","repos_url":"https://api.github.com/users/dcorrigan/repos","events_url":"https://api.github.com/users/dcorrigan/events{/privacy}","received_events_url":"https://api.github.com/users/dcorrigan/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-09T17:47:35Z","updated_at":"2022-09-09T17:47:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nThis seems like it's the same as #28324, but I'm still seeing the issue in Rails 7. \r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n  end\r\n\r\n  create_table :images, force: true do |t|\r\n    t.string :title\r\n    t.integer :post_id\r\n  end\r\n\r\n  create_table :captions, force: true do |t|\r\n    t.integer :image_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :images\r\n  has_many :captions, lambda { order('images.title DESC') }, through: :images\r\nend\r\n\r\nclass Image < ActiveRecord::Base\r\n  belongs_to :post\r\n  has_one :caption\r\nend\r\n\r\nclass Caption < ActiveRecord::Base\r\n  belongs_to :image\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_preload_has_many_through_association_with_scope\r\n    post = Post.create!\r\n    image = Image.create!\r\n    image.caption = Caption.create!\r\n    post.images << image\r\n    post.save!\r\n\r\n    # Access through the model works\r\n    assert_includes post.captions, Caption.first\r\n\r\n    # Query with association preloaded does not.\r\n    # When evaluated, it will apply the scope without the relevant JOIN table:\r\n    # SELECT \"captions\".* FROM \"captions\" WHERE \"captions\".\"image_id\" = ? ORDER BY images.title DESC\r\n    preloaded = Post.where(id: post.id).includes(:captions)\r\n\r\n    assert_includes preloaded.first.captions, Caption.first\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe test passes and we're able to eager load has_many :through associations with custom scopes in this way.\r\n\r\nI realize this can be fixed by adding a `references(:images)` to the query, but it seems reasonable to expect AR to infer that that the join is necessary here.\r\n\r\n### Actual behavior\r\n\r\nTest fails with an error: `ActiveRecord::StatementInvalid: SQLite3::SQLException: no such column: images.title`\r\n\r\n### System configuration\r\n**Rails version**: 7.0 \r\n\r\n**Ruby version**: 3.1.2p20\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45984/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45967","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45967/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45967/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45967/events","html_url":"https://github.com/rails/rails/issues/45967","id":1366038829,"node_id":"I_kwDNIULOUWwZLQ","number":45967,"title":"Inconsistent update of timestamps while updating associations with *_ids=","user":{"login":"matthee","id":547653,"node_id":"MDQ6VXNlcjU0NzY1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/547653?v=4","gravatar_id":"","url":"https://api.github.com/users/matthee","html_url":"https://github.com/matthee","followers_url":"https://api.github.com/users/matthee/followers","following_url":"https://api.github.com/users/matthee/following{/other_user}","gists_url":"https://api.github.com/users/matthee/gists{/gist_id}","starred_url":"https://api.github.com/users/matthee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matthee/subscriptions","organizations_url":"https://api.github.com/users/matthee/orgs","repos_url":"https://api.github.com/users/matthee/repos","events_url":"https://api.github.com/users/matthee/events{/privacy}","received_events_url":"https://api.github.com/users/matthee/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-08T10:51:09Z","updated_at":"2022-09-09T03:10:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"ActiveRecord inconsistently updates the `updated_at` column when changing `has_many through:` associations.\r\n\r\n### Steps to reproduce\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"activesupport\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"active_support/testing/time_helpers\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.timestamps\r\n  end\r\n  \r\n  create_table :tags, force: true do |t|\r\n  end\r\n\r\n  create_table :taggings, force: true do |t|\r\n    t.integer :post_id\r\n    t.integer :tag_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :taggings, dependent: :destroy\r\n  \r\n  has_many :tags, through: :taggings\r\nend\r\n\r\nclass Tagging < ActiveRecord::Base\r\n  belongs_to :post, touch: true\r\n  belongs_to :tag\r\nend\r\n\r\nclass Tag < ActiveRecord::Base\r\n  has_many :taggings\r\n  has_many :posts, through: :taggings\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  include ActiveSupport::Testing::TimeHelpers\r\n  \r\n  def test_updated_at_is_updated_when_setting_has_many_through_association\r\n    freeze_time\r\n        \r\n    tag_1 = Tag.create!\r\n    tag_2 = Tag.create!\r\n      \r\n    post = Post.create!\r\n    \r\n    travel_to(now = 1.hour.from_now)\r\n    \r\n    # Adding tags updates post.updated_at\r\n    post.update(tag_ids: [tag_1.id, tag_2.id])\r\n    assert_in_delta now, post.updated_at, 1.second, \"post#updated_at was not updated when adding tags\"\r\n    \r\n    # Removing tags does not update post.updated_at :(\r\n    travel_to(now = 2.hours.from_now)\r\n    post.update(tag_ids: [tag_1.id])\r\n    assert_in_delta now, post.updated_at, 1.second, \"post#updated_at was not updated when removing tags\"\r\n  end\r\n  \r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nIn the example above, both `.update` calls should update the `updated_at` column of the post record. (when adding and removing records)\r\n\r\n### Actual behavior\r\n\r\nWhen deleting a record, the `updated_at` timestamp is not updated.\r\n\r\n### System configuration\r\n**Rails version**:\r\n7.0.3.1\r\n**Ruby version**:\r\n3.0.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45967/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45967/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45959","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45959/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45959/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45959/events","html_url":"https://github.com/rails/rails/issues/45959","id":1364232810,"node_id":"I_kwDNIULOUVCKag","number":45959,"title":"JSON field not saving data with symbol : and it's saving with arrow =>","user":{"login":"sajjadmurtaza","id":8552702,"node_id":"MDQ6VXNlcjg1NTI3MDI=","avatar_url":"https://avatars.githubusercontent.com/u/8552702?v=4","gravatar_id":"","url":"https://api.github.com/users/sajjadmurtaza","html_url":"https://github.com/sajjadmurtaza","followers_url":"https://api.github.com/users/sajjadmurtaza/followers","following_url":"https://api.github.com/users/sajjadmurtaza/following{/other_user}","gists_url":"https://api.github.com/users/sajjadmurtaza/gists{/gist_id}","starred_url":"https://api.github.com/users/sajjadmurtaza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sajjadmurtaza/subscriptions","organizations_url":"https://api.github.com/users/sajjadmurtaza/orgs","repos_url":"https://api.github.com/users/sajjadmurtaza/repos","events_url":"https://api.github.com/users/sajjadmurtaza/events{/privacy}","received_events_url":"https://api.github.com/users/sajjadmurtaza/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":1071962662,"node_id":"MDU6TGFiZWwxMDcxOTYyNjYy","url":"https://api.github.com/repos/rails/rails/labels/more-information-needed","name":"more-information-needed","color":"bfdadc","default":false,"description":"When reporter needs to provide more information"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-09-07T07:40:12Z","updated_at":"2022-09-08T07:23:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nI have JSON field in my database `t.json \"theme\"`. When I try to save the field hash with : , it's overridden before save\r\ne.g.\r\n`object.theme = { color: 'red' }` it always change to `{ color => 'red' }`\r\n\r\ni also tried with jsonb and default value with empty hash {} but still having the same issue.\r\n\r\n\r\nI want to save the JSON data hash with symbol keys `{ color: 'red' }`\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.0\r\n\r\n**Ruby version**: 2.7.1\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45959/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45959/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45949","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45949/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45949/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45949/events","html_url":"https://github.com/rails/rails/issues/45949","id":1362899537,"node_id":"I_kwDNIULOUTwyUQ","number":45949,"title":"ActionText::Attachable#as_json override is breaking ActiveStorage::Blob#as_json when blob is not persisted","user":{"login":"balbesina","id":7312369,"node_id":"MDQ6VXNlcjczMTIzNjk=","avatar_url":"https://avatars.githubusercontent.com/u/7312369?v=4","gravatar_id":"","url":"https://api.github.com/users/balbesina","html_url":"https://github.com/balbesina","followers_url":"https://api.github.com/users/balbesina/followers","following_url":"https://api.github.com/users/balbesina/following{/other_user}","gists_url":"https://api.github.com/users/balbesina/gists{/gist_id}","starred_url":"https://api.github.com/users/balbesina/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/balbesina/subscriptions","organizations_url":"https://api.github.com/users/balbesina/orgs","repos_url":"https://api.github.com/users/balbesina/repos","events_url":"https://api.github.com/users/balbesina/events{/privacy}","received_events_url":"https://api.github.com/users/balbesina/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-06T08:26:39Z","updated_at":"2022-09-06T08:26:39Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nfrom rails console:\r\n```ruby\r\nActiveStorage::Blob.build_after_unfurling(io: StringIO.new('asd'), filename: 'asd.txt').as_json\r\n```\r\n\r\n[Reproduction script](https://gist.github.com/balbesina/30fbdafbfee4b71b06209d9e950f4128)\r\n\r\n### Expected behavior\r\nActiveStorage::Blob#as_json returns a Hash\r\n\r\n### Actual behavior\r\nActiveStorage::Blob#as_json raises exception\r\n```\r\n/Users/dhh/.rvm/gems/ruby-3.1.2/gems/globalid-1.0.0/lib/global_id/uri/gid.rb:167:in `validate_model_id': \r\nUnable to create a Global ID for ActiveStorage::Blob without a model id. (URI::GID::MissingModelIdError)\r\n```\r\n\r\n### System configuration\r\n**Rails version**: Rails 7.0.3.1\r\n**Ruby version**: ruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45949/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45949/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45939","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45939/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45939/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45939/events","html_url":"https://github.com/rails/rails/issues/45939","id":1360876688,"node_id":"I_kwDNIULOUR1UkA","number":45939,"title":"Validations aren't inherited from base model if child is called before validation declaration","user":{"login":"Exterm1nate","id":48535087,"node_id":"MDQ6VXNlcjQ4NTM1MDg3","avatar_url":"https://avatars.githubusercontent.com/u/48535087?v=4","gravatar_id":"","url":"https://api.github.com/users/Exterm1nate","html_url":"https://github.com/Exterm1nate","followers_url":"https://api.github.com/users/Exterm1nate/followers","following_url":"https://api.github.com/users/Exterm1nate/following{/other_user}","gists_url":"https://api.github.com/users/Exterm1nate/gists{/gist_id}","starred_url":"https://api.github.com/users/Exterm1nate/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Exterm1nate/subscriptions","organizations_url":"https://api.github.com/users/Exterm1nate/orgs","repos_url":"https://api.github.com/users/Exterm1nate/repos","events_url":"https://api.github.com/users/Exterm1nate/events{/privacy}","received_events_url":"https://api.github.com/users/Exterm1nate/received_events","type":"User","site_admin":false},"labels":[{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-09-03T14:46:42Z","updated_at":"2022-09-08T07:26:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nLet's create some STI models. Base `Vehicle` and two childs `Car` and `Motorcycle`.\r\n\r\n```ruby\r\n# models/vehicle.rb\r\nclass Vehicle < ApplicationRecord\r\n  TYPES = [Car, Motorcycle].freeze\r\n\r\n  validates :color, uniqueness: { scope: :model }\r\nend\r\n\r\n# models/car.rb\r\nclass Car < Vehicle\r\nend\r\n\r\n# models/motorcycle.rb\r\nclass Motorcycle < Vehicle\r\nend\r\n```\r\n\r\nAfter that we want to use `#validators_on` method to make sure the validation is present.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\nCar.validators_on(:color)\r\nMotorcycle.validators_on(:color)\r\n```\r\n\r\n### Expected behavior\r\n\r\nAll models must contain the validation.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nMotorcycle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\n```\r\n\r\n### Actual behavior\r\n\r\nBut for childs this method returns nothing.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> []\r\nMotorcycle.validators_on(:color)\r\n#=> []\r\n```\r\n\r\n### Notes\r\n\r\nIf we remove the `TYPES` constant (or just child classes calls from it) `validators_on` works as expected. Let's change original code a little bit:\r\n\r\n```ruby\r\n# models/vehicle.rb\r\nclass Vehicle < ApplicationRecord\r\n  TYPES = [Car].freeze # Motorcycle was removed from here!\r\n\r\n  validates :color, uniqueness: { scope: :model }\r\nend\r\n```\r\n\r\nAnd after that test again.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> []\r\nMotorcycle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\n```\r\n\r\n`Motorcycle` validation was returned correctly this time.\r\n\r\nIt seems to be a load error. `Car` was called before the `Vehicle`'s validation declaration, so it doesn't take this validation into account. It may also depend on loading order.\r\n\r\nNotice that validation itself is working well in all models.\r\n\r\n```ruby\r\nCar.create!(color: \"black\", model: \"Boomer\")\r\nCar.create!(color: \"black\", model: \"Boomer\") # raises ActiveRecord::RecordInvalid\r\n\r\nMotorcycle.create!(color: \"red\", model: \"Yamaha\")\r\nMotorcycle.create!(color: \"red\", model: \"Yamaha\") # raises ActiveRecord::RecordInvalid\r\n```\r\n\r\nExample project: https://github.com/Exterm1nate/rails-validation-issue\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3\r\n\r\n**Ruby version**: 3.1.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45939/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45939/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45937","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45937/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45937/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45937/events","html_url":"https://github.com/rails/rails/issues/45937","id":1360779604,"node_id":"I_kwDNIULOURvZVA","number":45937,"title":"Add strict table mode (by default) to sqlite adapter","user":{"login":"jrz","id":149668,"node_id":"MDQ6VXNlcjE0OTY2OA==","avatar_url":"https://avatars.githubusercontent.com/u/149668?v=4","gravatar_id":"","url":"https://api.github.com/users/jrz","html_url":"https://github.com/jrz","followers_url":"https://api.github.com/users/jrz/followers","following_url":"https://api.github.com/users/jrz/following{/other_user}","gists_url":"https://api.github.com/users/jrz/gists{/gist_id}","starred_url":"https://api.github.com/users/jrz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jrz/subscriptions","organizations_url":"https://api.github.com/users/jrz/orgs","repos_url":"https://api.github.com/users/jrz/repos","events_url":"https://api.github.com/users/jrz/events{/privacy}","received_events_url":"https://api.github.com/users/jrz/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-03T07:01:02Z","updated_at":"2022-09-08T07:30:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"SQLite supports 'strict tables' since 3.37.1 https://sqlite.org/stricttables.html\r\n\r\nThis forces a datatype to be specified when creating a table. This is the preferred method in any application created by developers. \r\n\r\nUnspecified/ANY datatypes are useful for quick tryouts as an enduser, similar to excel. But it's counterproductive when creating an application.\r\n\r\nIf this will become a configurable setting, the default should be set to strict.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45937/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45937/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45920","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45920/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45920/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45920/events","html_url":"https://github.com/rails/rails/issues/45920","id":1358179995,"node_id":"I_kwDNIULOUPQumw","number":45920,"title":"Replace has_one through create_association might create duplicated rows","user":{"login":"lazaronixon","id":2651240,"node_id":"MDQ6VXNlcjI2NTEyNDA=","avatar_url":"https://avatars.githubusercontent.com/u/2651240?v=4","gravatar_id":"","url":"https://api.github.com/users/lazaronixon","html_url":"https://github.com/lazaronixon","followers_url":"https://api.github.com/users/lazaronixon/followers","following_url":"https://api.github.com/users/lazaronixon/following{/other_user}","gists_url":"https://api.github.com/users/lazaronixon/gists{/gist_id}","starred_url":"https://api.github.com/users/lazaronixon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lazaronixon/subscriptions","organizations_url":"https://api.github.com/users/lazaronixon/orgs","repos_url":"https://api.github.com/users/lazaronixon/repos","events_url":"https://api.github.com/users/lazaronixon/events{/privacy}","received_events_url":"https://api.github.com/users/lazaronixon/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-09-01T03:05:07Z","updated_at":"2022-09-01T23:03:40Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# Ensure backward compatibility with minitest 4.\r\nMinitest::Test = MiniTest::Unit::TestCase unless defined?(Minitest::Test)\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts do |t|\r\n  end\r\n\r\n  create_table :comments do |t|\r\n    t.references :post\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_one :comment, dependent: :destroy\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  validates_presence_of :post_id\r\n  belongs_to :post\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    post = Post.create!\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    sleep 5.seconds\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n```\r\n# transaction begin\r\nselect previous_comment for update\r\n\r\ninsert new_comment\r\n\r\ndelete previous_comment\r\n# transaction commit\r\n```\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n```\r\n# transaction begin\r\ninsert new_comment\r\n# transaction commit\r\n\r\n# transaction begin\r\ndelete previous_comment\r\n# transaction commit\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45920/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45920/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45906","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45906/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45906/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45906/events","html_url":"https://github.com/rails/rails/issues/45906","id":1355732552,"node_id":"I_kwDNIULOUM7WSA","number":45906,"title":"High object allocation count from `ActiveRecord::ConnectionAdapters::PoolManager#pool_configs `","user":{"login":"amarchenkoshopify","id":101111422,"node_id":"U_kgDOBgbWfg","avatar_url":"https://avatars.githubusercontent.com/u/101111422?v=4","gravatar_id":"","url":"https://api.github.com/users/amarchenkoshopify","html_url":"https://github.com/amarchenkoshopify","followers_url":"https://api.github.com/users/amarchenkoshopify/followers","following_url":"https://api.github.com/users/amarchenkoshopify/following{/other_user}","gists_url":"https://api.github.com/users/amarchenkoshopify/gists{/gist_id}","starred_url":"https://api.github.com/users/amarchenkoshopify/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amarchenkoshopify/subscriptions","organizations_url":"https://api.github.com/users/amarchenkoshopify/orgs","repos_url":"https://api.github.com/users/amarchenkoshopify/repos","events_url":"https://api.github.com/users/amarchenkoshopify/events{/privacy}","received_events_url":"https://api.github.com/users/amarchenkoshopify/received_events","type":"User","site_admin":false},"labels":[{"id":107186,"node_id":"MDU6TGFiZWwxMDcxODY=","url":"https://api.github.com/repos/rails/rails/labels/regression","name":"regression","color":"e10c02","default":false,"description":null},{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"eileencodes","id":1080678,"node_id":"MDQ6VXNlcjEwODA2Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/1080678?v=4","gravatar_id":"","url":"https://api.github.com/users/eileencodes","html_url":"https://github.com/eileencodes","followers_url":"https://api.github.com/users/eileencodes/followers","following_url":"https://api.github.com/users/eileencodes/following{/other_user}","gists_url":"https://api.github.com/users/eileencodes/gists{/gist_id}","starred_url":"https://api.github.com/users/eileencodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eileencodes/subscriptions","organizations_url":"https://api.github.com/users/eileencodes/orgs","repos_url":"https://api.github.com/users/eileencodes/repos","events_url":"https://api.github.com/users/eileencodes/events{/privacy}","received_events_url":"https://api.github.com/users/eileencodes/received_events","type":"User","site_admin":false},"assignees":[{"login":"eileencodes","id":1080678,"node_id":"MDQ6VXNlcjEwODA2Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/1080678?v=4","gravatar_id":"","url":"https://api.github.com/users/eileencodes","html_url":"https://github.com/eileencodes","followers_url":"https://api.github.com/users/eileencodes/followers","following_url":"https://api.github.com/users/eileencodes/following{/other_user}","gists_url":"https://api.github.com/users/eileencodes/gists{/gist_id}","starred_url":"https://api.github.com/users/eileencodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eileencodes/subscriptions","organizations_url":"https://api.github.com/users/eileencodes/orgs","repos_url":"https://api.github.com/users/eileencodes/repos","events_url":"https://api.github.com/users/eileencodes/events{/privacy}","received_events_url":"https://api.github.com/users/eileencodes/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/rails/rails/milestones/81","html_url":"https://github.com/rails/rails/milestone/81","labels_url":"https://api.github.com/repos/rails/rails/milestones/81/labels","id":7591006,"node_id":"MI_kwDNIULOAHPUXg","number":81,"title":"7.0.4","description":"","creator":{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":3,"state":"open","created_at":"2022-01-20T01:51:07Z","updated_at":"2022-08-30T13:21:37Z","due_on":null,"closed_at":null},"comments":2,"created_at":"2022-08-30T12:58:42Z","updated_at":"2022-08-31T12:37:42Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWhile working on memory efficiency investigation I noticed that a very big bunch of object allocations comes from a single method `ActiveRecord::ConnectionAdapters::PoolManager#pool_configs`:\r\n\r\n```ruby\r\n      def pool_configs(role = nil)\r\n        if role\r\n          @role_to_shard_mapping[role].values\r\n        else\r\n          @role_to_shard_mapping.flat_map { |_, shard_map| shard_map.values }\r\n        end\r\n      end \r\n```\r\n\r\nThis method is called on every activerecord operation and does not cache its result: could we think about a way of caching its result?\r\n\r\ncc @eileencodes \r\n\r\n### Expected behavior\r\n\r\n`#pool_configs` allocates configs once\r\n\r\n### Actual behavior\r\n\r\n`#pool_configs` allocates configs every time it is executed\r\n\r\n### System configuration\r\n**Rails version**: main branch\r\n\r\n**Ruby version**: 3.1\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45906/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45901","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45901/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45901/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45901/events","html_url":"https://github.com/rails/rails/issues/45901","id":1354555667,"node_id":"I_kwDNIULOULzhEw","number":45901,"title":"bin/rails dbconsole should include_password by default","user":{"login":"wpeterson","id":178135,"node_id":"MDQ6VXNlcjE3ODEzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/178135?v=4","gravatar_id":"","url":"https://api.github.com/users/wpeterson","html_url":"https://github.com/wpeterson","followers_url":"https://api.github.com/users/wpeterson/followers","following_url":"https://api.github.com/users/wpeterson/following{/other_user}","gists_url":"https://api.github.com/users/wpeterson/gists{/gist_id}","starred_url":"https://api.github.com/users/wpeterson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wpeterson/subscriptions","organizations_url":"https://api.github.com/users/wpeterson/orgs","repos_url":"https://api.github.com/users/wpeterson/repos","events_url":"https://api.github.com/users/wpeterson/events{/privacy}","received_events_url":"https://api.github.com/users/wpeterson/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-29T16:19:45Z","updated_at":"2022-08-30T00:17:43Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n1. Configure a Rails `config/database.yml` with a `password` required to connect\r\n2. Run `rails dbconsole`\r\n3. See prompt for database password, despite password being configured/available\r\n4. Run `rails dbconsole -p`\r\n5. See dbconsole properly load and use credentials to connect to database for DB console session\r\n\r\n### Expected behavior\r\nWhenever a Rails app has credentials like a password configured for a database, the database console session should use those credentials vs. prompting the user to re-enter a password interactively.  When credentials are not configured and a password is required, we should prompt then.\r\n\r\nThis behavior is implemented since early Rails versions but is disabled by default.  I propose we enable the proper password behavior by default.\r\n\r\n### Actual behavior\r\n`bin/rails dbconsole` always prompts for a password, even when one is configured for the app.\r\n\r\n### System configuration\r\n**Rails version**: All (6.x, 7.x, head)\r\n\r\n**Ruby version**: All \r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45901/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45901/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45899","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45899/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45899/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45899/events","html_url":"https://github.com/rails/rails/issues/45899","id":1353676820,"node_id":"I_kwDNIULOUK94FA","number":45899,"title":"Active Job unit tests fail using que 2.2.0","user":{"login":"yahonda","id":73684,"node_id":"MDQ6VXNlcjczNjg0","avatar_url":"https://avatars.githubusercontent.com/u/73684?v=4","gravatar_id":"","url":"https://api.github.com/users/yahonda","html_url":"https://github.com/yahonda","followers_url":"https://api.github.com/users/yahonda/followers","following_url":"https://api.github.com/users/yahonda/following{/other_user}","gists_url":"https://api.github.com/users/yahonda/gists{/gist_id}","starred_url":"https://api.github.com/users/yahonda/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yahonda/subscriptions","organizations_url":"https://api.github.com/users/yahonda/orgs","repos_url":"https://api.github.com/users/yahonda/repos","events_url":"https://api.github.com/users/yahonda/events{/privacy}","received_events_url":"https://api.github.com/users/yahonda/received_events","type":"User","site_admin":false},"labels":[{"id":123812746,"node_id":"MDU6TGFiZWwxMjM4MTI3NDY=","url":"https://api.github.com/repos/rails/rails/labels/activejob","name":"activejob","color":"5319e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-29T04:24:06Z","updated_at":"2022-09-09T15:33:02Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"### Steps to reproduce\r\nActive Job CI has been failing since que 2.2.0 is installed. https://buildkite.com/rails/rails/builds/89068#0182e6b9-7c84-4b85-a651-8d640f5eb076\r\n\r\n```ruby\r\ngit clone https://github.com/rails/rails\r\ncd rails/activejob\r\nbundle update que\r\nAJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\n```\r\n\r\nAlthough there are 3 failures and 75 errors. This script just runs a single test because it looks the root cause is the same.\r\n\r\n\r\n### Expected behavior\r\nIt should pass.\r\n\r\n### Actual behavior\r\nIt raises `ArgumentError: wrong number of arguments (given 2, expected 1)`.\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 62302\r\n\r\n# Running:\r\n\r\nE\r\n\r\nError:\r\nQueuingTest#test_run_queued_job:\r\nArgumentError: wrong number of arguments (given 2, expected 1)\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:78:in `run'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job_methods.rb:51:in `_run'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:248:in `block (2 levels) in _run_attrs'\r\n    (eval):9:in `run_job_middleware'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:247:in `block in _run_attrs'\r\n    <internal:kernel>:90:in `tap'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:246:in `_run_attrs'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:223:in `run'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/support/que/inline.rb:15:in `enqueue'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:66:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:27:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:67:in `block in enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:118:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:28:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:27:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:9:in `block (2 levels) in <module:Instrumentation>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:27:in `tag_logger'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:14:in `block (2 levels) in <module:Logging>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:138:in `run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:63:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:30:in `perform_later'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/cases/queuing_test.rb:14:in `block in <class:QueuingTest>'\r\n\r\n\r\nbin/test test/cases/queuing_test.rb:13\r\n\r\n\r\n\r\nFinished in 0.008930s, 111.9768 runs/s, 0.0000 assertions/s.\r\n1 runs, 0 assertions, 0 failures, 1 errors, 0 skips\r\n$\r\n```\r\n\r\n### Additional information\r\n* `require_job_options_kwarg?` always returns `false` because `JobWrapper.method(:enqueue).parameters` does not have any `[:key, :job_options]` \r\nwhere it looks expected to return `true`.\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 32774\r\n\r\n# Running:\r\n\r\n[46, 55] in ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n    46|       end\r\n    47|\r\n    48|       private\r\n    49|         def require_job_options_kwarg?\r\n    50|           require 'debug'\r\n=>  51|           binding.break\r\n    52|           @require_job_options_kwarg ||=\r\n    53|             JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }\r\n    54|         end\r\n    55|\r\n=>#0\tActiveJob::QueueAdapters::QueAdapter#require_job_options_kwarg? at ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:51\r\n  #1\tActiveJob::QueueAdapters::QueAdapter#enqueue(job=#<HelloJob:0x00007fc861807740 @arguments...) at ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:24\r\n  # and 40 frames (use `bt' command for all frames)\r\n(rdbg) JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }    # ruby\r\nfalse\r\n(rdbg) JobWrapper.method(:enqueue).parameters    # ruby\r\n[[:req, :args], [:keyreq, :priority], [:keyreq, :queue], [:key, :run_at]]\r\n(rdbg) quit    # command\r\nReally quit? [Y/n] Y\r\n```\r\n\r\n* By changing `require_job_options_kwarg?` always returns `true`, it raises `ArgumentError: missing keywords: :priority, :queue`\r\n\r\n```ruby\r\n$ git diff\r\ndiff --git a/activejob/lib/active_job/queue_adapters/que_adapter.rb b/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\nindex 41b3633a07..54e8cbc39b 100644\r\n--- a/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n+++ b/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n@@ -47,6 +47,7 @@ def enqueue_at(job, timestamp) # :nodoc:\r\n\r\n       private\r\n         def require_job_options_kwarg?\r\n+          return true\r\n           @require_job_options_kwarg ||=\r\n             JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }\r\n         end\r\n$\r\n```\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 21508\r\n\r\n# Running:\r\n\r\nE\r\n\r\nError:\r\nQueuingTest#test_run_queued_job:\r\nArgumentError: missing keywords: :priority, :queue\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:65:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:25:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:67:in `block in enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:118:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:28:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:27:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:9:in `block (2 levels) in <module:Instrumentation>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:27:in `tag_logger'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:14:in `block (2 levels) in <module:Logging>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:138:in `run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:63:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:30:in `perform_later'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/cases/queuing_test.rb:14:in `block in <class:QueuingTest>'\r\n\r\n\r\nbin/test test/cases/queuing_test.rb:13\r\n\r\n\r\n\r\nFinished in 0.008724s, 114.6312 runs/s, 0.0000 assertions/s.\r\n1 runs, 0 assertions, 0 failures, 1 errors, 0 skips\r\n$\r\n```\r\n\r\n\r\n### System configuration\r\n**Rails version**: main branch\r\n\r\n**Ruby version**: $ ruby -v\r\nruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [x86_64-linux]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45899/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45893","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45893/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45893/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45893/events","html_url":"https://github.com/rails/rails/issues/45893","id":1352793907,"node_id":"I_kwDNIULOUKH_Mw","number":45893,"title":"ActiveRecord: HMT with conditions does not update the in-memory collection when pushing new objects","user":{"login":"joanniclaborde","id":411925,"node_id":"MDQ6VXNlcjQxMTkyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/411925?v=4","gravatar_id":"","url":"https://api.github.com/users/joanniclaborde","html_url":"https://github.com/joanniclaborde","followers_url":"https://api.github.com/users/joanniclaborde/followers","following_url":"https://api.github.com/users/joanniclaborde/following{/other_user}","gists_url":"https://api.github.com/users/joanniclaborde/gists{/gist_id}","starred_url":"https://api.github.com/users/joanniclaborde/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joanniclaborde/subscriptions","organizations_url":"https://api.github.com/users/joanniclaborde/orgs","repos_url":"https://api.github.com/users/joanniclaborde/repos","events_url":"https://api.github.com/users/joanniclaborde/events{/privacy}","received_events_url":"https://api.github.com/users/joanniclaborde/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-26T22:40:12Z","updated_at":"2022-08-30T15:33:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi! When using a `has_many :a, through: :b` relation, and the `:b` relation has a condition, adding new objects doesn't update the in-memory collection properly (stops after the first object).\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :packages, force: true do |t|\r\n  end\r\n\r\n  create_table :package_items, force: true do |t|\r\n    t.integer :package_id\r\n    t.integer :item_id\r\n  end\r\n\r\n  create_table :items, force: true do |t|\r\n    t.boolean \"deleted\", default: false\r\n  end\r\nend\r\n\r\nclass Package < ActiveRecord::Base\r\n  has_many :package_items, ->{ where(item_id: Item.active.pluck(:id)) }\r\n  has_many :items, through: :package_items\r\nend\r\n\r\nclass PackageItem < ActiveRecord::Base\r\n  belongs_to :package\r\n  belongs_to :item\r\nend\r\n\r\nclass Item < ActiveRecord::Base\r\n  has_many :package_items\r\n  has_many :packages, through: :package_items\r\n\r\n  scope :active, -> { where(deleted: false) }\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    package = Package.create!\r\n    package.items << Item.create!\r\n    package.items << Item.create!\r\n    package.items << Item.create!\r\n\r\n    # This should be [3, 3, 3] but we get [3, 1, 3]\r\n    assert_equal [3, 3, 3], [Item.count, package.items.count, package.reload.items.count]\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n`package.items.count` is equal to 3.\r\n\r\n### Actual behavior\r\n`package.items.count` is equal to 1, even though all the items and relations are created properly (see assertion).\r\n\r\n### System configuration\r\n**Rails version**: tested on `7.1.0.alpha` and `6.1.6.1`.\r\n\r\n**Ruby version**: tested on `2.7.5`.\r\n\r\n### Workaround\r\nI was able to fix this issue by changing the weird condition to a proper scope:\r\n\r\n```ruby\r\nclass Package < ActiveRecord::Base\r\n  has_many :package_items, ->{ includes(:item).merge(Item.active) }\r\n  has_many :items, through: :package_items\r\nend\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45893/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45893/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45880","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45880/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45880/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45880/events","html_url":"https://github.com/rails/rails/issues/45880","id":1349546108,"node_id":"I_kwDNIULOUHBwfA","number":45880,"title":"Google search links to old API docs","user":{"login":"abraham","id":3341,"node_id":"MDQ6VXNlcjMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/3341?v=4","gravatar_id":"","url":"https://api.github.com/users/abraham","html_url":"https://github.com/abraham","followers_url":"https://api.github.com/users/abraham/followers","following_url":"https://api.github.com/users/abraham/following{/other_user}","gists_url":"https://api.github.com/users/abraham/gists{/gist_id}","starred_url":"https://api.github.com/users/abraham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abraham/subscriptions","organizations_url":"https://api.github.com/users/abraham/orgs","repos_url":"https://api.github.com/users/abraham/repos","events_url":"https://api.github.com/users/abraham/events{/privacy}","received_events_url":"https://api.github.com/users/abraham/received_events","type":"User","site_admin":true},"labels":[{"id":150377,"node_id":"MDU6TGFiZWwxNTAzNzc=","url":"https://api.github.com/repos/rails/rails/labels/docs","name":"docs","color":"02d7e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-24T14:33:55Z","updated_at":"2022-08-25T23:48:01Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n1. Search Google for a Rails API https://www.google.com/search?q=rails+update_all\r\n2. Follow link for \"ActiveRecord::Relation - Rails API\"\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n\r\nFind documentation for the latest version of Rails. Currently `7.0.3.1`.\r\n\r\n`https://api.rubyonrails.org/classes/ActiveRecord/Relation.html`\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n\r\nFind documentation for the the very old version of `3.2.3`.\r\n\r\n`https://api.rubyonrails.org/v3.2.3/classes/ActiveRecord/Relation.html`\r\n\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45880/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45880/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45832","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45832/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45832/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45832/events","html_url":"https://github.com/rails/rails/issues/45832","id":1339487378,"node_id":"I_kwDNIULOT9b0kg","number":45832,"title":"MySQL 8.0 VARBINARY default value is hexadecimal","user":{"login":"HParker","id":4482399,"node_id":"MDQ6VXNlcjQ0ODIzOTk=","avatar_url":"https://avatars.githubusercontent.com/u/4482399?v=4","gravatar_id":"","url":"https://api.github.com/users/HParker","html_url":"https://github.com/HParker","followers_url":"https://api.github.com/users/HParker/followers","following_url":"https://api.github.com/users/HParker/following{/other_user}","gists_url":"https://api.github.com/users/HParker/gists{/gist_id}","starred_url":"https://api.github.com/users/HParker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HParker/subscriptions","organizations_url":"https://api.github.com/users/HParker/orgs","repos_url":"https://api.github.com/users/HParker/repos","events_url":"https://api.github.com/users/HParker/events{/privacy}","received_events_url":"https://api.github.com/users/HParker/received_events","type":"User","site_admin":true},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":309390193,"node_id":"MDU6TGFiZWwzMDkzOTAxOTM=","url":"https://api.github.com/repos/rails/rails/labels/MySQL","name":"MySQL","color":"fef2c0","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-08-15T20:42:09Z","updated_at":"2022-08-16T10:23:16Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Default values on VARBINARY columns changed behavior between MySQL 5.7 and 8.0\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"mysql2\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"mysql2\", database: \"adam_test\", prepared_statements: false, host: '127.0.0.1', port: 3307, user: \"root\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.binary :some_binary, null: false, limit: 1024, default: \"hello-world\"\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_mysql_defaults\r\n    post = Post.create!\r\n\r\n    mysql_vars = ActiveRecord::Base.connection.select_rows(\"SHOW VARIABLES LIKE '%version%'\")\r\n    puts mysql_vars.inspect\r\n    puts Post.column_defaults\r\n\r\n    # assert_equal \"0x68656C6C6F2D776F726C64\", post.some_binary # This passes\r\n    assert_equal \"hello-world\", post.some_binary # This fails\r\n\r\n    reloaded_post = Post.first\r\n    assert_equal \"hello-world\", reloaded_post.some_binary # this passes\r\n  end\r\nend\r\n```\r\n\r\nOn MySQL 5.7:\r\n\r\n```ruby\r\nPost.column_defaults # => {\"id\"=>nil, \"some_binary\"=>\"hello-world\"}\r\n```\r\n\r\nOn MySQL 8.0:\r\n\r\n```ruby\r\nPost.column_defaults # => {\"id\"=>nil, \"some_binary\"=>\"0x68656C6C6F2D776F726C64\"}\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe default value on binary columns should be Ruby strings, not ruby strings of hexadecimal.\r\n\r\n### Actual behavior\r\n\r\nThe column default in MySQL 8.0 is a hexadecimal string representing the binary data.\r\n\r\n### System configuration\r\n**Rails version**: main\r\n\r\n**Ruby version**: 3.1.0\r\n\r\nSome interesting MySQL forum posts about this behavior change:\r\n\r\n- https://forums.mysql.com/read.php?24,685577,685577\r\n- https://forums.mysql.com/read.php?20,698061,698061#msg-698061\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45832/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45832/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45830","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45830/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45830/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45830/events","html_url":"https://github.com/rails/rails/issues/45830","id":1338922250,"node_id":"I_kwDNIULOT85VCg","number":45830,"title":"ActiveRecord Rollbacks on errors which happen on commit","user":{"login":"Baxxx","id":17880055,"node_id":"MDQ6VXNlcjE3ODgwMDU1","avatar_url":"https://avatars.githubusercontent.com/u/17880055?v=4","gravatar_id":"","url":"https://api.github.com/users/Baxxx","html_url":"https://github.com/Baxxx","followers_url":"https://api.github.com/users/Baxxx/followers","following_url":"https://api.github.com/users/Baxxx/following{/other_user}","gists_url":"https://api.github.com/users/Baxxx/gists{/gist_id}","starred_url":"https://api.github.com/users/Baxxx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baxxx/subscriptions","organizations_url":"https://api.github.com/users/Baxxx/orgs","repos_url":"https://api.github.com/users/Baxxx/repos","events_url":"https://api.github.com/users/Baxxx/events{/privacy}","received_events_url":"https://api.github.com/users/Baxxx/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":126910270,"node_id":"MDU6TGFiZWwxMjY5MTAyNzA=","url":"https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps","name":"With reproduction steps","color":"009800","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2022-08-15T12:09:14Z","updated_at":"2022-08-25T13:32:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nIn some of our projects we use Postgres as database, and for some cases we deferred trigger constraints. These triggers fire up when `COMMIT` is called. Trigger can raise an error, which kills the transaction. ActiveRecord catches the error, and bubbles it up to developer, but it also sends `ROLLBACK` to Postgres, to which Postgres gives a warning that there is no transaction in progress.\r\n\r\nI didn't test this with sqlite3 or mysql.\r\n\r\nYou can see the reproduction script, and screenshot with the current behavior.\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", \"~> 7\"\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"logger\"\r\n\r\nlogger = Logger.new(STDOUT)\r\n\r\n# This connection will do for database-independent bug reports.\r\npg_opts = {adapter: \"postgresql\", database: \"ar_rollback_after_failed_commit_issue\"}\r\n\r\nActiveRecord::Base.establish_connection(pg_opts.except(:database))\r\nActiveRecord::Base.connection.drop_database(pg_opts[:database])\r\nActiveRecord::Base.connection.create_database(pg_opts[:database])\r\nlogger.info \"Database #{pg_opts[:database]} was (re)created.\"\r\n\r\nActiveRecord::Base.establish_connection(pg_opts)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  execute <<~SQL\r\n    CREATE FUNCTION perform_custom_validation()\r\n      RETURNS TRIGGER\r\n      LANGUAGE plpgsql\r\n      AS $$\r\n        DECLARE\r\n          total_invalid INTEGER;\r\n        BEGIN\r\n          SELECT COUNT(*) INTO total_invalid\r\n          FROM things\r\n          WHERE name = 'bad';\r\n\r\n          IF (total_invalid > 0) THEN\r\n            RAISE EXCEPTION 'There are bad things';\r\n          END IF;\r\n          RETURN NULL;\r\n        END;\r\n      $$;\r\n\r\n    CREATE TABLE \"things\" (\r\n      \"id\" bigserial primary key,\r\n      \"name\" character varying NOT NULL\r\n    );\r\n\r\n    CREATE CONSTRAINT\r\n      TRIGGER bank_transaction_rl_payment_date_validation\r\n      AFTER INSERT OR UPDATE ON things\r\n      DEFERRABLE INITIALLY DEFERRED\r\n      FOR EACH ROW EXECUTE FUNCTION perform_custom_validation();\r\n  SQL\r\nend\r\n\r\nclass Thing < ActiveRecord::Base\r\n  validates :name, presence: true\r\nend\r\n\r\n# All good\r\nlogger.info \"First transaction\"\r\nThing.create!(name: \"good\")\r\n\r\n# AR tries to commit, DB raises an error, AR tries to ROLLBACK, and PG gives a warning\r\nbegin\r\n  logger.info \"Second transaction\"\r\n  Thing.create!(name: \"bad\")\r\nrescue StandardError\r\n  # Doesn't matter\r\nend\r\n```\r\n\r\n### Expected behavior\r\nActiveRecord should not `ROLLBACK`, as there is no transaction in progress.\r\n\r\n### Actual behavior\r\nActiveRecord tries to `ROLLBACK`.\r\n\r\n![Screenshot from 2022-08-15 14-07-11](https://user-images.githubusercontent.com/17880055/184632335-0277cd27-4c7b-4b98-94a8-373be34a87ee.png)\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 2.7.5p203\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45830/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45830/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45823","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45823/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45823/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45823/events","html_url":"https://github.com/rails/rails/issues/45823","id":1337409694,"node_id":"I_kwDNIULOT7dAng","number":45823,"title":"Change Column with Raw Character Set Failure","user":{"login":"ahoglund","id":3407303,"node_id":"MDQ6VXNlcjM0MDczMDM=","avatar_url":"https://avatars.githubusercontent.com/u/3407303?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoglund","html_url":"https://github.com/ahoglund","followers_url":"https://api.github.com/users/ahoglund/followers","following_url":"https://api.github.com/users/ahoglund/following{/other_user}","gists_url":"https://api.github.com/users/ahoglund/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoglund/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoglund/subscriptions","organizations_url":"https://api.github.com/users/ahoglund/orgs","repos_url":"https://api.github.com/users/ahoglund/repos","events_url":"https://api.github.com/users/ahoglund/events{/privacy}","received_events_url":"https://api.github.com/users/ahoglund/received_events","type":"User","site_admin":true},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":126910270,"node_id":"MDU6TGFiZWwxMjY5MTAyNzA=","url":"https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps","name":"With reproduction steps","color":"009800","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-12T16:21:50Z","updated_at":"2022-08-12T20:47:38Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"With [this recent change to how collation is handled for column changes](https://github.com/rails/rails/pull/45744/files), there is now a potential for older migrations written in a specific manner to break if the `collation:` argument is not specific.\r\n\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\n# you need to install mysql locally for this to work.\r\n# on Mac:\r\n# brew install mysql\r\n# brew services start mysql\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"mysql2\"\r\n\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nclient = Mysql2::Client.new(host: 'localhost', username: \"root\")\r\nclient.query(\"DROP DATABASE test\")\r\nclient.query(\"CREATE DATABASE test\")\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"mysql2\", database: \"test\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :payments, force: true do |t|\r\n    t.string :description, \"varchar(64)\", null: false\r\n  end\r\nend\r\n\r\nclass Payment < ActiveRecord::Base\r\nend\r\n\r\nclass ChangeAmountToAddScale < ActiveRecord::Migration[7.1]\r\n  # This sets the default character set for the payments\r\n  # table to utf32 with a default COLLATION of utf32_general_ci.\r\n  # This can be verified by running the following query:\r\n  #\r\n  # SHOW CHARACTER SET;\r\n  #\r\n  connection.execute(<<~SQL)\r\n    ALTER TABLE payments CONVERT TO CHARACTER SET utf32\r\n  SQL\r\n\r\n  def change\r\n    reversible do |dir|\r\n      dir.up do\r\n        change_table(:payments, bulk: true) do |t|\r\n          # The default collation of utf32_general_ci\r\n          # will not be compatible with this ascii character set. \r\n          #\r\n          # when we build the column change now we automatically\r\n          # try to assign the previous collation to the column if no `collation:` is specified.\r\n          # \r\n          # https://github.com/rails/rails/pull/45744\r\n          #\r\n          # The workaround is to add `collation: 'ascii_bin'` or `collation: 'ascii_general_ci'` to the change.\r\n          #\r\n          # This isn't a huge deal and it has a workaround but it _will_ break\r\n          # anyone who has migrations that are written like this and upgrade to this version\r\n          # of Rails.\r\n          t.change :description, \"varchar(64) CHARACTER SET ascii\", null: false\r\n        end\r\n      end\r\n\r\n      dir.down do\r\n        change_table(:payments, bulk: true) do |t|\r\n          t.change :description, \"varchar(64)\", null: false\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_migration_up\r\n    ChangeAmountToAddScale.migrate(:up)\r\n    Payment.reset_column_information\r\n\r\n    assert_equal \"varchar\", Payment.columns.last.sql_type\r\n  end\r\n\r\n  def test_migration_down\r\n    ChangeAmountToAddScale.migrate(:down)\r\n    Payment.reset_column_information\r\n\r\n    assert_equal \"varchar\", Payment.columns.last.sql_type\r\n  end\r\nend\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nI would expect this to detect that the character set is being changed, and either \r\n\r\n1. change the collation to be compatible.\r\n2. At least give a clearer error that requires the `collation:` arg to be passed when the character set is being modified.\r\n\r\n### Actual behavior\r\n\r\nThis error:\r\n\r\n```\r\nError:\r\nBugTest#test_migration_up:\r\nActiveRecord::StatementInvalid: Mysql2::Error: COLLATION 'utf32_general_ci' is not valid for CHARACTER SET 'ascii'\r\n    test.rb:51:in `block (2 levels) in change'\r\n    test.rb:50:in `block in change'\r\n    test.rb:49:in `change'\r\n    test.rb:67:in `test_migration_up'\r\n```\r\n\r\n### System configuration\r\n**Rails version**: main\r\n**Ruby version**: ruby 3.1.1p18\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45823/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45823/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45822","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45822/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45822/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45822/events","html_url":"https://github.com/rails/rails/issues/45822","id":1337253221,"node_id":"I_kwDNIULOT7TdZQ","number":45822,"title":"ActiveRecord: Wrong results returned by ActiveRecord::Associations::Preloader when intermediate association is already preloaded.","user":{"login":"yopzer","id":6330271,"node_id":"MDQ6VXNlcjYzMzAyNzE=","avatar_url":"https://avatars.githubusercontent.com/u/6330271?v=4","gravatar_id":"","url":"https://api.github.com/users/yopzer","html_url":"https://github.com/yopzer","followers_url":"https://api.github.com/users/yopzer/followers","following_url":"https://api.github.com/users/yopzer/following{/other_user}","gists_url":"https://api.github.com/users/yopzer/gists{/gist_id}","starred_url":"https://api.github.com/users/yopzer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yopzer/subscriptions","organizations_url":"https://api.github.com/users/yopzer/orgs","repos_url":"https://api.github.com/users/yopzer/repos","events_url":"https://api.github.com/users/yopzer/events{/privacy}","received_events_url":"https://api.github.com/users/yopzer/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"jhawthorn","id":131752,"node_id":"MDQ6VXNlcjEzMTc1Mg==","avatar_url":"https://avatars.githubusercontent.com/u/131752?v=4","gravatar_id":"","url":"https://api.github.com/users/jhawthorn","html_url":"https://github.com/jhawthorn","followers_url":"https://api.github.com/users/jhawthorn/followers","following_url":"https://api.github.com/users/jhawthorn/following{/other_user}","gists_url":"https://api.github.com/users/jhawthorn/gists{/gist_id}","starred_url":"https://api.github.com/users/jhawthorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhawthorn/subscriptions","organizations_url":"https://api.github.com/users/jhawthorn/orgs","repos_url":"https://api.github.com/users/jhawthorn/repos","events_url":"https://api.github.com/users/jhawthorn/events{/privacy}","received_events_url":"https://api.github.com/users/jhawthorn/received_events","type":"User","site_admin":true},"assignees":[{"login":"jhawthorn","id":131752,"node_id":"MDQ6VXNlcjEzMTc1Mg==","avatar_url":"https://avatars.githubusercontent.com/u/131752?v=4","gravatar_id":"","url":"https://api.github.com/users/jhawthorn","html_url":"https://github.com/jhawthorn","followers_url":"https://api.github.com/users/jhawthorn/followers","following_url":"https://api.github.com/users/jhawthorn/following{/other_user}","gists_url":"https://api.github.com/users/jhawthorn/gists{/gist_id}","starred_url":"https://api.github.com/users/jhawthorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhawthorn/subscriptions","organizations_url":"https://api.github.com/users/jhawthorn/orgs","repos_url":"https://api.github.com/users/jhawthorn/repos","events_url":"https://api.github.com/users/jhawthorn/events{/privacy}","received_events_url":"https://api.github.com/users/jhawthorn/received_events","type":"User","site_admin":true}],"milestone":null,"comments":1,"created_at":"2022-08-12T14:06:55Z","updated_at":"2022-08-18T23:36:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"activerecord\", \"7.0.3.1\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :a_records, force: true\r\n\r\n  create_table :b_records, force: true do |t|\r\n    t.references :a_record\r\n    t.references :c_record\r\n  end\r\n\r\n  create_table :c_records, force: true\r\n\r\n  create_table :d_records, force: true do |t|\r\n    t.references :c_record\r\n  end\r\nend\r\n\r\nclass ARecord < ActiveRecord::Base\r\n  has_one :b_record\r\n  has_one :c_record, through: :b_record\r\n  has_many :d_records, through: :c_record\r\nend\r\n\r\nclass BRecord < ActiveRecord::Base\r\n  belongs_to :a_record\r\n  belongs_to :c_record\r\nend\r\n\r\nclass CRecord < ActiveRecord::Base\r\n  has_one :b_record\r\n  has_many :d_records\r\nend\r\n\r\nclass DRecord < ActiveRecord::Base\r\n  belongs_to :c_record\r\nend\r\n\r\na = ARecord.create!\r\nc = CRecord.create!\r\nBRecord.create!(a_record: a, c_record: c)\r\nDRecord.create!(c_record: c)\r\nDRecord.create!(c_record: c)\r\n\r\na.reload\r\na.c_record # NB: if removed this works\r\n\r\n::ActiveRecord::Associations::Preloader.new(records: [a], associations: :d_records).call\r\nputs({ record_ids: a.d_records.map(&:id), size: a.d_records.size })\r\n```\r\n\r\n### Expected behavior\r\nTwo records should be loaded:\r\n`{:record_ids=>[1, 2], :size=>2}`\r\n\r\n### Actual behavior\r\nNo records are loaded:\r\n`{:record_ids=>[], :size=>0}`\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 2.7.5\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45822/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45822/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45817","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45817/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45817/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45817/events","html_url":"https://github.com/rails/rails/issues/45817","id":1336797388,"node_id":"I_kwDNIULOT63ozA","number":45817,"title":"Value of attribute default proc is shared between instances after dup + dirty tracking","user":{"login":"quadule","id":15299,"node_id":"MDQ6VXNlcjE1Mjk5","avatar_url":"https://avatars.githubusercontent.com/u/15299?v=4","gravatar_id":"","url":"https://api.github.com/users/quadule","html_url":"https://github.com/quadule","followers_url":"https://api.github.com/users/quadule/followers","following_url":"https://api.github.com/users/quadule/following{/other_user}","gists_url":"https://api.github.com/users/quadule/gists{/gist_id}","starred_url":"https://api.github.com/users/quadule/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/quadule/subscriptions","organizations_url":"https://api.github.com/users/quadule/orgs","repos_url":"https://api.github.com/users/quadule/repos","events_url":"https://api.github.com/users/quadule/events{/privacy}","received_events_url":"https://api.github.com/users/quadule/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-12T06:16:00Z","updated_at":"2022-08-15T15:56:11Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWhen an attribute without a database column defines a default proc, `dup`ing a model in which the default wasn't accessed passes the unevaluated `UserProvidedDefault` attribute to the new instance as the attribute's original value. Checking the new attribute for changes will then memoize the value in the original attribute definition, making it the default value in every new model instance afterward.\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n  gem \"rails\", github: \"rails/rails\", ref: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Schema.define do\r\n  create_table :cats do |t|\r\n    t.string :name\r\n  end\r\nend\r\n\r\nclass Cat < ActiveRecord::Base\r\n  attribute :sounds, default: -> { [] }\r\nend\r\n\r\nclass VirtualAttributeTest < Minitest::Test\r\n  def test_virtual_attribute_defaults_are_independent\r\n    Cat.new.dup.save!\r\n    Cat.new.sounds << \"meow\"\r\n    refute_same Cat.new.sounds, Cat.new.sounds\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nEach new instance should get a new default value from the proc.\r\n\r\n### Actual behavior\r\nAfter using dirty tracking on a duplicated instance with an uncalled proc default, all new instances of a model receive the same default value and share any changes made to it.\r\n\r\n### Affected versions\r\nThis seems to date back quite a while; the test fails on the main branch back to 5-1-stable.\r\n\r\n### Credits\r\nThanks to @GBH for originally discovering this bug.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45817/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45817/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45794","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45794/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45794/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45794/events","html_url":"https://github.com/rails/rails/issues/45794","id":1332999733,"node_id":"I_kwDNIULOT3P2NQ","number":45794,"title":"Action Cable client goes in a connection loop if you subscribe multiple times to the same channel","user":{"login":"ProGM","id":5167659,"node_id":"MDQ6VXNlcjUxNjc2NTk=","avatar_url":"https://avatars.githubusercontent.com/u/5167659?v=4","gravatar_id":"","url":"https://api.github.com/users/ProGM","html_url":"https://github.com/ProGM","followers_url":"https://api.github.com/users/ProGM/followers","following_url":"https://api.github.com/users/ProGM/following{/other_user}","gists_url":"https://api.github.com/users/ProGM/gists{/gist_id}","starred_url":"https://api.github.com/users/ProGM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ProGM/subscriptions","organizations_url":"https://api.github.com/users/ProGM/orgs","repos_url":"https://api.github.com/users/ProGM/repos","events_url":"https://api.github.com/users/ProGM/events{/privacy}","received_events_url":"https://api.github.com/users/ProGM/received_events","type":"User","site_admin":false},"labels":[{"id":300028327,"node_id":"MDU6TGFiZWwzMDAwMjgzMjc=","url":"https://api.github.com/repos/rails/rails/labels/actioncable","name":"actioncable","color":"bfdadc","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-09T09:48:36Z","updated_at":"2022-08-17T17:57:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\nYou can just start from a fresh `rails new [project-name]` installation.\r\nChannel code:\r\n```ruby\r\nclass ArticleChannel < ApplicationCable::Channel\r\n  def subscribed\r\n    stream_from \"ArticleChannel\"\r\n  end\r\n\r\n  def unsubscribed\r\n    # Any cleanup needed when channel is unsubscribed\r\n  end\r\nend\r\n```\r\n\r\nJavascript code:\r\n```javascript\r\nimport consumer from \"channels/consumer\"\r\n\r\nfunction subscribe() {\r\n\treturn consumer.subscriptions.create('ArticleChannel', {\r\n\t\tconnected() {\r\n\t\t\tconsole.log('connected');\r\n\t\t\t// Called when the subscription is ready for use on the server\r\n\t\t},\r\n\r\n\t\tdisconnected() {\r\n\t\t\tconsole.log('disconnected');\r\n\t\t\t// Called when the subscription has been terminated by the server\r\n\t\t},\r\n\r\n\t\treceived(data) {\r\n\t\t\tconsole.log('received', data);\r\n\t\t\t// Called when there's incoming data on the websocket for this channel\r\n\t\t}\r\n\t});\r\n}\r\n\r\nsetTimeout(() => {\r\n\tsubscribe();\r\n}, 3000);\r\n\r\nsetTimeout(() => {\r\n\tsubscribe();\r\n}, 4000);\r\n```\r\n\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nAny of these options could be considered an expected behavior:\r\n* Everything just works™, both subscriptions receive notification from that channel and no error is raised\r\n* The second `subscription.create(...)` raises some kind of error, notifying that the channel is already connected\r\n* The second `subscription.create(...)` returns the same instance of Subscription and writes a `console.warning` in console\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nThe second subscriptions triggers a connection loop.\r\n\r\nExample logs with `ActionCable.logger.enabled = true`.\r\n\r\n```\r\n[ActionCable] Opening WebSocket, current state is null, subprotocols: actioncable-v1-json,actioncable-unsupported 1660037219747\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] ConnectionMonitor started. stale threshold = 6 s 1660037219748\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] WebSocket onopen event, using 'actioncable-v1-json' subprotocol 1660037219758\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] ConnectionMonitor recorded connect 1660037219759\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor guaranteeing {\"channel\":\"ArticleChannel\"} 1660037219760\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] Subscription confirmed {\"channel\":\"ArticleChannel\"} 1660037219762\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor forgetting {\"channel\":\"ArticleChannel\"} 1660037219762\r\narticle_channel-b29f3f7bf31169dfadd26c7747a46706d4992a1fd842de8268f206c5f0a0fe45.js:6 connected\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor guaranteeing {\"channel\":\"ArticleChannel\"} 1660037220744\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221248\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221248\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n... and so on, forever...\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 3.1\r\n\r\n### Possible solutions\r\nThis issue happens because the identifier of both subscriptions is the same. Since Rails (ActionCable) doesn't answer to any subsequential command \"subscribe\" from the same client (in this case: `{\"command\":\"subscribe\",\"identifier\":\"{\\\"channel\\\":\\\"ArticleChannel\\\"}\"}`), the `SubscriptionGuarantor` considers the connection failed and [retries to connect after 500ms](https://github.com/rails/rails/blob/8994f09dd2f6ae363e74d8ee3b24700d9db94a16/actioncable/app/assets/javascripts/actioncable.esm.js#L351).\r\n\r\nI see various options to fix this:\r\n* Raise an exception when trying to create a subscription with the same identifier\r\n* Add a random/uuid to the identifier when connecting, so two connection would not share the same identifier? (I've already tested it, and it seems to fix)\r\n\r\nWould you accept a PR from me regarding this?","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45794/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45794/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45791","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45791/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45791/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45791/events","html_url":"https://github.com/rails/rails/issues/45791","id":1332570977,"node_id":"I_kwDNIULOT21rYQ","number":45791,"title":"Google::Apis::ClientError raised when using ActiveStorage to generate signed URLs to access a file in a GCS bucket with GKE Workload Identity","user":{"login":"danielyazbek","id":18390164,"node_id":"MDQ6VXNlcjE4MzkwMTY0","avatar_url":"https://avatars.githubusercontent.com/u/18390164?v=4","gravatar_id":"","url":"https://api.github.com/users/danielyazbek","html_url":"https://github.com/danielyazbek","followers_url":"https://api.github.com/users/danielyazbek/followers","following_url":"https://api.github.com/users/danielyazbek/following{/other_user}","gists_url":"https://api.github.com/users/danielyazbek/gists{/gist_id}","starred_url":"https://api.github.com/users/danielyazbek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielyazbek/subscriptions","organizations_url":"https://api.github.com/users/danielyazbek/orgs","repos_url":"https://api.github.com/users/danielyazbek/repos","events_url":"https://api.github.com/users/danielyazbek/events{/privacy}","received_events_url":"https://api.github.com/users/danielyazbek/received_events","type":"User","site_admin":false},"labels":[{"id":664533972,"node_id":"MDU6TGFiZWw2NjQ1MzM5NzI=","url":"https://api.github.com/repos/rails/rails/labels/activestorage","name":"activestorage","color":"bfd4f2","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-09T01:05:08Z","updated_at":"2022-08-09T15:53:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nConfigure ActiveStorage with GKE Workload identity (as documented [here](https://edgeguides.rubyonrails.org/active_storage_overview.html#google-cloud-storage-service)):\r\n\r\n```ruby\r\ngoogle:\r\n  service: GCS\r\n  iam: true\r\n  project: <%= ENV['ACTIVE_STORAGE_PROJECT'] %>\r\n  bucket: <%= ENV['ACTIVE_STORAGE_BUCKET'] %>\r\n```\r\n\r\nDefine a class:\r\n```ruby\r\nclass Transaction < ApplicationRecord\r\n  has_one_attached :csv_report\r\nend\r\n```\r\n\r\nWrite something to ActiveStorage:\r\n```ruby\r\nt = Transaction.create\r\nt.csv_report.attach(io: StringIO.new(\"A,B,C\"), filename: 'test.csv')\r\n```\r\n\r\nGenerate a Signed URL\r\n```ruby\r\nRails.application.routes.url_helpers.rails_blob_url(Transaction.last.csv_report, disposition: 'attachment')\r\n```\r\n\r\nPaste the generated URL into a browser\r\n\r\n### Expected behavior\r\nActiveRecord provides the attachment\r\n\r\n### Actual behavior\r\nError is raised:\r\n\r\n```\r\nGoogle::Apis::ClientError (Invalid request):\r\ngems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:236:in `check_status': Invalid request (Google::Apis::ClientError)\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/api_command.rb:134:in `check_status'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:199:in `process_response'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:318:in `execute_once'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:118:in `block (2 levels) in execute'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:61:in `block in retriable'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `times'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `retriable'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:115:in `block in execute'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:61:in `block in retriable'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `times'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `retriable'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:105:in `execute'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/base_service.rb:397:in `execute_or_queue_command'\r\n    from gems/google-apis-iamcredentials_v1-0.13.0/lib/google/apis/iamcredentials_v1/service.rb:158:in `sign_service_account_blob'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service/gcs_service.rb:232:in `block in signer'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file/signer_v2.rb:135:in `generate_signature'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file/signer_v2.rb:128:in `signed_url'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file.rb:1801:in `signed_url'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service/gcs_service.rb:160:in `private_url'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:123:in `block in url'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications/instrumenter.rb:24:in `instrument'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications.rb:206:in `instrument'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:163:in `instrument'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:118:in `url'\r\n    from gems/activestorage-7.0.3.1models/active_storage/blob.rb:217:in `url'\r\n    from gems/activestorage-7.0.3.1controllers/active_storage/blobs/redirect_controller.rb:14:in `show'\r\n```\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 3.1.2\r\n\r\n**google-cloud-storage gem version:** 1.38.0\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45791/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45791/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45778","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45778/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45778/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45778/events","html_url":"https://github.com/rails/rails/issues/45778","id":1330360134,"node_id":"I_kwDNIULOT0uvRg","number":45778,"title":"ActiveStorage attachments are lost when casting using Becomes","user":{"login":"markedmondson","id":1653699,"node_id":"MDQ6VXNlcjE2NTM2OTk=","avatar_url":"https://avatars.githubusercontent.com/u/1653699?v=4","gravatar_id":"","url":"https://api.github.com/users/markedmondson","html_url":"https://github.com/markedmondson","followers_url":"https://api.github.com/users/markedmondson/followers","following_url":"https://api.github.com/users/markedmondson/following{/other_user}","gists_url":"https://api.github.com/users/markedmondson/gists{/gist_id}","starred_url":"https://api.github.com/users/markedmondson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markedmondson/subscriptions","organizations_url":"https://api.github.com/users/markedmondson/orgs","repos_url":"https://api.github.com/users/markedmondson/repos","events_url":"https://api.github.com/users/markedmondson/events{/privacy}","received_events_url":"https://api.github.com/users/markedmondson/received_events","type":"User","site_admin":false},"labels":[{"id":664533972,"node_id":"MDU6TGFiZWw2NjQ1MzM5NzI=","url":"https://api.github.com/repos/rails/rails/labels/activestorage","name":"activestorage","color":"bfd4f2","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-05T20:19:16Z","updated_at":"2022-08-09T18:05:34Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\nCreate an ActiveRecord model with an ActiveStorage relation. Initialize and add the associated attachment. Cast the object to another subclassed model, the associated attachment is lost.\r\n\r\n```ruby\r\nunless File.exist?('Gemfile')\r\n    File.write('Gemfile', <<-GEMFILE)\r\n    source 'https://rubygems.org'\r\n    gem 'rails', '~> 6.1'\r\n    gem 'sqlite3'\r\n    GEMFILE\r\n\r\n    system 'bundle'\r\nend\r\n\r\nrequire 'bundler'\r\nBundler.setup(:default)\r\n\r\nrequire 'active_record'\r\nrequire 'active_storage/engine'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  config.hosts << 'example.org'\r\n  config.eager_load = false\r\n  config.session_store :cookie_store, key: 'cookie_store_key'\r\n  secrets.secret_key_base = 'secret_key_base'\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  config.active_storage.service = :local\r\n  config.active_storage.service_configurations = {\r\n    local: {\r\n      root: Dir.tmpdir,\r\n      service: 'Disk'\r\n    }\r\n  }\r\nend\r\n\r\nENV['DATABASE_URL'] = 'sqlite3::memory:'\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\nRails.application.initialize!\r\n\r\nrequire ActiveStorage::Engine.root.join('db/migrate/20170806125915_create_active_storage_tables.rb').to_s\r\n\r\nActiveRecord::Schema.define do\r\n  CreateActiveStorageTables.new.change\r\n\r\n  create_table :posts do |t|\r\n    t.string :title\r\n    t.string :text\r\n  end\r\n\r\n  create_table :comments do |t|\r\n    t.belongs_to :post\r\n    t.string :text\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post\r\n  has_one_attached :image\r\nend\r\n\r\nclass ModeratedComment < Comment; end\r\n\r\nclass BugTest < Minitest::Test\r\n  def setup\r\n    @post = Post.create(title: 'Post', text: 'Welcome')\r\n  end\r\n\r\n  def test_association\r\n    comment = @post.comments.new(text: 'I do not like this')\r\n\r\n    moderated_comment = comment.becomes(ModeratedComment)\r\n\r\n    assert_equal @post, moderated_comment.post # Pass\r\n  end\r\n\r\n  def test_attachment\r\n    file = ActiveStorage::Blob.create_and_upload!(\r\n      content_type: \"image/png\",\r\n      filename: \"image.png\",\r\n      io: ::StringIO.new(\"png\"),\r\n    )\r\n    comment = @post.comments.new(text: 'I do not like this', image: file)\r\n\r\n    moderated_comment = comment.becomes(ModeratedComment)\r\n\r\n    assert moderated_comment.image.attached? # Fail\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nWhen casting an ActiveRecord to another model, I expect the associations to be copied thus I expect attached ActiveStorage association assets to be copied.\r\n\r\n### Actual behavior\r\nPreviously attached ActiveStorage associated objects are lost on the original object.\r\n\r\n### System configuration\r\n**Rails version**: 6.1.6.1\r\n\r\n**Ruby version**: 3.0.4\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45778/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45778/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45775","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45775/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45775/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45775/events","html_url":"https://github.com/rails/rails/issues/45775","id":1330225377,"node_id":"I_kwDNIULOT0mg4Q","number":45775,"title":"Uniqueness validation on association does not use the correct primary key","user":{"login":"mikeletscher","id":6666411,"node_id":"MDQ6VXNlcjY2NjY0MTE=","avatar_url":"https://avatars.githubusercontent.com/u/6666411?v=4","gravatar_id":"","url":"https://api.github.com/users/mikeletscher","html_url":"https://github.com/mikeletscher","followers_url":"https://api.github.com/users/mikeletscher/followers","following_url":"https://api.github.com/users/mikeletscher/following{/other_user}","gists_url":"https://api.github.com/users/mikeletscher/gists{/gist_id}","starred_url":"https://api.github.com/users/mikeletscher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikeletscher/subscriptions","organizations_url":"https://api.github.com/users/mikeletscher/orgs","repos_url":"https://api.github.com/users/mikeletscher/repos","events_url":"https://api.github.com/users/mikeletscher/events{/privacy}","received_events_url":"https://api.github.com/users/mikeletscher/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-05T18:10:22Z","updated_at":"2022-08-09T14:52:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nI'm not _entirely_ sure if this is considered a bug, or intended behavior that's not well-documented for `uniqueness` validations on associations.\r\n\r\nI'm happy to help improve the documentation on this if that would be the most helpful way forward, or if this _is_ considered a bug, I can take a stab at a PR. \r\n\r\nIt looks like the issue is that `build_relation` on the uniqueness validator calls [`bind_attribute` on `ActiveRecord::Relation`](https://github.com/rails/rails/blob/408d061a80a49878ad26b305616ed9ba88ee1411/activerecord/lib/active_record/relation.rb#L45), which properly takes into account the reflection's foreign_key, but not primary key if it's been overridden. \r\n\r\nHere's a test that reproduces the issue:\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire 'bundler/inline'\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem 'activerecord', '~> 7.0.3.1'\r\n  gem 'sqlite3'\r\nend\r\n\r\nrequire 'active_record'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(\r\n  adapter: 'sqlite3',\r\n  database: ':memory:'\r\n)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :prescriptions, force: true do |t|\r\n    t.string :rx_number\r\n  end\r\n\r\n  create_table :fills, force: true do |t|\r\n    t.string :rx_number\r\n  end\r\nend\r\n\r\nclass Prescription < ActiveRecord::Base\r\n  has_many :fills, foreign_key: :rx_number, primary_key: :rx_number\r\nend\r\n\r\nclass Fill < ActiveRecord::Base\r\n  belongs_to :prescription, foreign_key: :rx_number, primary_key: :rx_number\r\n\r\n  validates :prescription, uniqueness: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_fill_unique_by_rx_number\r\n    Fill.create!(rx_number: '1234')\r\n    prescription = Prescription.create!(rx_number: '1234')\r\n    new_fill = prescription.fills.new\r\n    refute new_fill.save\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe uniqueness validation query would use the `rx_number` value of the `Prescription` to query for an existing `Fill` since that is what is set as the associations `primary_key`. \r\n\r\n### Actual behavior\r\nThe uniqueness validation query uses the `id` value of the `Prescription` to query for existing fills, disregarding the association's overridden `primary_key`.\r\n\r\nThis test passes if I patch bind_attribute to read the primary key from the reflection instead of directly from the reflection's klass:\r\n\r\n```ruby\r\nmodule ActiveRecord\r\n  # = Active Record \\Relation\r\n  class Relation\r\n    def bind_attribute(name, value) # :nodoc:\r\n      if reflection = klass._reflect_on_association(name)\r\n        name = reflection.foreign_key\r\n        primary_key = reflection.association_primary_key || reflection.klass.primary_key\r\n        value = value.read_attribute(primary_key) unless value.nil?\r\n      end\r\n\r\n      attr = table[name]\r\n      bind = predicate_builder.build_bind_attribute(attr.name, value)\r\n      yield attr, bind\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nWe were able to work around this by adding the uniqueness validation to the `rx_number` attribute instead of the association. If this is the desired way to handle this, I can open a PR to add a note about this to the docs, as it took us by surprise that validation on the association wouldn't use the defined key to get the value to query.\r\n\r\n### System configuration\r\n**Rails version**: `7.0.3.1`\r\n\r\n**Ruby version**: `3.1.2`\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45775/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45775/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45766","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45766/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45766/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45766/events","html_url":"https://github.com/rails/rails/issues/45766","id":1329650798,"node_id":"I_kwDNIULOT0Dcbg","number":45766,"title":"Active Model Dirty: attribute_changed? options (from/to) do not accept symbol","user":{"login":"thomasvanholder","id":36309895,"node_id":"MDQ6VXNlcjM2MzA5ODk1","avatar_url":"https://avatars.githubusercontent.com/u/36309895?v=4","gravatar_id":"","url":"https://api.github.com/users/thomasvanholder","html_url":"https://github.com/thomasvanholder","followers_url":"https://api.github.com/users/thomasvanholder/followers","following_url":"https://api.github.com/users/thomasvanholder/following{/other_user}","gists_url":"https://api.github.com/users/thomasvanholder/gists{/gist_id}","starred_url":"https://api.github.com/users/thomasvanholder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomasvanholder/subscriptions","organizations_url":"https://api.github.com/users/thomasvanholder/orgs","repos_url":"https://api.github.com/users/thomasvanholder/repos","events_url":"https://api.github.com/users/thomasvanholder/events{/privacy}","received_events_url":"https://api.github.com/users/thomasvanholder/received_events","type":"User","site_admin":false},"labels":[{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-08-05T08:54:51Z","updated_at":"2022-08-07T20:25:55Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nThe `attribute_changed?` receives optional options, such as `from` and `to`. Each option key is passed a value. Only string values are accepted, and symbols are not recognized. This is inconsistent behavior as updating a column using the `update` method does accept both a string and a symbol.\r\n \r\n Source code: [attribute_changed?](https://github.com/rails/rails/blob/04972d9b9ef60796dc8f0917817b5392d61fcf09/activemodel/lib/active_model/dirty.rb#L178) \r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"debug\"\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.column :status, :integer, default: 0\r\n    t.date :review_date\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  enum :status, {draft: 0, published: 1}\r\n\r\n  before_update :set_review_date\r\n\r\n  def set_review_date\r\n    # when \"published\" is set as a string, the test correcty passes.\r\n    if status_changed?(to: :published)\r\n      self.review_date = Date.today\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_set_status\r\n    post = Post.create!\r\n    post.update(status: :published)\r\n\r\n    assert_equal \"published\", post.status\r\n  end\r\n\r\n  def test_sets_review_date\r\n    post = Post.create!\r\n    post.published!\r\n\r\n    assert_equal \"published\", post.status\r\n    assert_equal Date.today, post.review_date\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe value of the optional arguments `from` and `to` accepts both a string or symbol.\r\n\r\n### Actual behavior\r\nWhen options, such as `from` and `to` are passed to the [attribute_changed?](https://github.com/rails/rails/blob/04972d9b9ef60796dc8f0917817b5392d61fcf09/activemodel/lib/active_model/dirty.rb#L178) method the arguments are not recognized when passed as a symbol.\r\n\r\n### System configuration\r\n**Rails version**: `Rails 7.0.3`\r\n\r\n**Ruby version**: `ruby 3.1.2`\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45766/reactions","total_count":2,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45766/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45758","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45758/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45758/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45758/events","html_url":"https://github.com/rails/rails/issues/45758","id":1327892229,"node_id":"I_kwDNIULOTyYHBQ","number":45758,"title":"ActiveRecord 6.1 and JSONB: Incorrect results value/type when using both arrow operator and double arrow operator in the same SELECT statement","user":{"login":"shhavel","id":1169424,"node_id":"MDQ6VXNlcjExNjk0MjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1169424?v=4","gravatar_id":"","url":"https://api.github.com/users/shhavel","html_url":"https://github.com/shhavel","followers_url":"https://api.github.com/users/shhavel/followers","following_url":"https://api.github.com/users/shhavel/following{/other_user}","gists_url":"https://api.github.com/users/shhavel/gists{/gist_id}","starred_url":"https://api.github.com/users/shhavel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shhavel/subscriptions","organizations_url":"https://api.github.com/users/shhavel/orgs","repos_url":"https://api.github.com/users/shhavel/repos","events_url":"https://api.github.com/users/shhavel/events{/privacy}","received_events_url":"https://api.github.com/users/shhavel/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-08-03T23:42:39Z","updated_at":"2022-08-05T22:26:04Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Issue Description\r\n\r\nGenerally when using JSONB operators `->` (arrow operator) and `->>` (double arrow operator) in SELECT statement, \r\nActiveRecord returns correct result types: objects for `->` operator and string for `->>` operator.\r\nBut when using both operators in the same select statement, the returned results may have an unexpected type or be `nil`.\r\n\r\n### Steps to reproduce with Expected behaviour in tests and Actual behaviour in comments\r\n\r\n```ruby\r\n# file: activerecord_6_1_jsonb_test.rb\r\n# run: ruby activerecord_6_1_jsonb_test.rb\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"activerecord\", \"6.1.6.1\" # the same behaviour for version \"7.0.3.1\"\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\npg_opts = {adapter: \"postgresql\", database: \"jsonb_activerecord_issue\"}\r\nbegin\r\n  ActiveRecord::Base.establish_connection(pg_opts.except(:database))\r\n  ActiveRecord::Base.connection.create_database(pg_opts[:database])\r\n  puts \"Database #{pg_opts[:database]} was created.\"\r\nrescue => ActiveRecord::DatabaseAlreadyExists\r\n  puts \"Database #{pg_opts[:database]} alredy exists.\"\r\nend\r\nActiveRecord::Base.establish_connection(pg_opts)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :entries, force: true do |t|\r\n    t.jsonb :value\r\n  end\r\nend\r\n\r\nclass Entry < ActiveRecord::Base\r\nend\r\nEntry.create(value: {a: \"a\", b: \"b\", c: {}})\r\n\r\nclass BugTest < Minitest::Test\r\n  # passed\r\n  def test_jsonb_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->'a', value->'b'\"))\r\n    assert_equal [[{}, \"b\"]], Entry.pluck(Arel.sql(\"value->'c', value->'b'\"))\r\n  end\r\n\r\n  # passed\r\n  def test_jsonb_double_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'a', value->>'b'\"))\r\n    assert_equal [[\"{}\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'c', value->>'b'\"))\r\n  end\r\n\r\n  # failed (this test results are differ in activerecord 6.0)\r\n  def test_jsonb_arrow_operator_and_double_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->'a', value->>'b'\")) # Actual [[\"a\", nil]]\r\n    assert_equal [[{}, \"b\"]], Entry.pluck(Arel.sql(\"value->'c', value->>'b'\")) # Actual [[{}, nil]]\r\n  end\r\n\r\n  # failed\r\n  def test_jsonb_double_arrow_operator_and_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'a', value->'b'\")) # Actual [[nil, \"b\"]]\r\n    assert_equal [[\"{}\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'c', value->'b'\")) # Actual [[{}, \"b\"]]\r\n  end\r\nend\r\n```\r\n\r\n### PostgreSQL results \r\n\r\n```sql\r\nSELECT\r\n  pg_typeof(value->'a'), value->'a',\r\n  pg_typeof(value->'b'), value->'b',\r\n  pg_typeof(value->'c'), value->'c',\r\n  pg_typeof(value->>'a'), value->>'a',\r\n  pg_typeof(value->>'b'), value->>'b',\r\n  pg_typeof(value->>'c'), value->>'c'\r\nFROM \"entries\";\r\n\r\n pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column?\r\n-----------+----------+-----------+----------+-----------+----------+-----------+----------+-----------+----------+-----------+----------\r\n jsonb     | \"a\"      | jsonb     | \"b\"      | jsonb     | {}       | text      | a        | text      | b        | text      | {}\r\n(1 row)\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 6.1.6.1\r\n\r\n**Ruby version**: 3.1.0\r\n\r\n### Similar issue in different versions of ActiveRecord\r\n\r\nThere is a similar issue but with slightly different behaviour in AR 6.0. Created another issue: #45757\r\n\r\nPlease confirm or comment on the expected behaviour.\r\nThank you.\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45758/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45758/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45750","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45750/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45750/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45750/events","html_url":"https://github.com/rails/rails/issues/45750","id":1327484205,"node_id":"I_kwDNIULOTx_NLQ","number":45750,"title":"Running `rails test` doesn't automatically load any custom tasks under `lib/tasks`","user":{"login":"onlynone","id":833690,"node_id":"MDQ6VXNlcjgzMzY5MA==","avatar_url":"https://avatars.githubusercontent.com/u/833690?v=4","gravatar_id":"","url":"https://api.github.com/users/onlynone","html_url":"https://github.com/onlynone","followers_url":"https://api.github.com/users/onlynone/followers","following_url":"https://api.github.com/users/onlynone/following{/other_user}","gists_url":"https://api.github.com/users/onlynone/gists{/gist_id}","starred_url":"https://api.github.com/users/onlynone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/onlynone/subscriptions","organizations_url":"https://api.github.com/users/onlynone/orgs","repos_url":"https://api.github.com/users/onlynone/repos","events_url":"https://api.github.com/users/onlynone/events{/privacy}","received_events_url":"https://api.github.com/users/onlynone/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-03T16:16:38Z","updated_at":"2022-08-03T18:09:40Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n1. Create the file `lib/tasks/test.rake` with the content:\r\n```ruby\r\nENV[\"test.rake\"] = \"yes\"\r\ntask :custom_task do\r\n  ENV[\"custom_task\"] = \"yes\"\r\nend\r\n\r\ntask :test => [:custom_task]\r\n```\r\n2. Create a test file at `test/unit/rails_test_test.rb` with the content:\r\n```ruby\r\nclass RailsTestTest < ActiveSupport::TestCase\r\n  test \"test.rake is in the environment\" do\r\n    assert_equal('yes', ENV['test.rake'])\r\n  end\r\n\r\n  test \"custom_task is in the environment\" do\r\n    assert_equal('yes', ENV['custom_task'])\r\n  end\r\nend\r\n```\r\n3. Run `bin/rails test test/unit/rails_test_test.rb`\r\n4. Run `bin/rake test test/unit/rails_test_test.rb`\r\n\r\n### Expected behavior\r\nBoth `rails test` and `rake test` should succeed.\r\n\r\n### Actual behavior\r\nRunning the tests with `bin/rake` succeeds with the output:\r\n```\r\nbin/rake test test/unit/rails_test_test.rb\r\nRunning via Spring preloader in process 59092\r\nRun options: --seed 6948\r\n\r\n# Running:\r\n\r\n..\r\n\r\nFinished in 0.000943s, 2120.8907 runs/s, 2120.8907 assertions/s.\r\n2 runs, 2 assertions, 0 failures, 0 errors, 0 skips\r\n```\r\n\r\nWhile running with `bin/rails` fails with the output:\r\n\r\n```\r\nRunning via Spring preloader in process 58735\r\nRun options: --seed 33633\r\n\r\n# Running:\r\n\r\nF\r\n\r\nFailure:\r\nRailsTestTest#test_custom_task_is_in_the_environment [/Users/steven/projects/rails_test_tasks/test/unit/rails_test_test.rb:7]:\r\nExpected: \"yes\"\r\n  Actual: nil\r\n\r\n\r\nrails test test/unit/rails_test_test.rb:6\r\n\r\nF\r\n\r\nFailure:\r\nRailsTestTest#test_test.rake_is_in_the_environment [/Users/steven/projects/rails_test_tasks/test/unit/rails_test_test.rb:3]:\r\nExpected: \"yes\"\r\n  Actual: nil\r\n\r\n\r\nrails test test/unit/rails_test_test.rb:2\r\n\r\n\r\n\r\nFinished in 0.001378s, 1451.3788 runs/s, 1451.3788 assertions/s.\r\n2 runs, 2 assertions, 2 failures, 0 errors, 0 skips\r\n```\r\n\r\nBecause the file `lib/tasks/test.rake` is never loaded.\r\n\r\nIt seems like rails will only end up loading custom tasks if it can't find the command being run on the command line in its own list of built-in commands. When it can't find the command, it will load the local `Rakefile` via `find_by_namespace(\"rake\").perform(full_namespace, args, config)` in `Rails::Command.invoke`. And the local `Rakefile` usually has `Rails.application.load_tasks` and that loads any custom tasks under `lib/tasks`.\r\n\r\nFor example, this happens when the `ActiveRecord` migration exec's out to call: `bin/rails db:test:prepare`. That task is apparently not a built-in rails task, so the `Rakefile` and all custom tasks *do* end up getting loaded for that one.\r\n\r\n(As an aside here, I don't fully understand the difference between the built-in rails tasks and the ones that have to be searched for via rake. I also don't understand why the migration code needs to fork a separate process to do `db:test:prepare`. That task just ends up doing `db_namespace[\"test:load\"].invoke`. Why couldn't the `db:test:prepare` tasks simply be invoked the same way in the same process?)\r\n\r\n### System configuration\r\n**Rails version**: 6.0.5\r\n\r\n**Ruby version**: 2.6.5\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45750/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45750/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45736","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45736/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45736/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45736/events","html_url":"https://github.com/rails/rails/issues/45736","id":1326221102,"node_id":"I_kwDNIULOTwyHLg","number":45736,"title":"Virtual stored columns are always nil for newly created records","user":{"login":"camiloforero","id":6606686,"node_id":"MDQ6VXNlcjY2MDY2ODY=","avatar_url":"https://avatars.githubusercontent.com/u/6606686?v=4","gravatar_id":"","url":"https://api.github.com/users/camiloforero","html_url":"https://github.com/camiloforero","followers_url":"https://api.github.com/users/camiloforero/followers","following_url":"https://api.github.com/users/camiloforero/following{/other_user}","gists_url":"https://api.github.com/users/camiloforero/gists{/gist_id}","starred_url":"https://api.github.com/users/camiloforero/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/camiloforero/subscriptions","organizations_url":"https://api.github.com/users/camiloforero/orgs","repos_url":"https://api.github.com/users/camiloforero/repos","events_url":"https://api.github.com/users/camiloforero/events{/privacy}","received_events_url":"https://api.github.com/users/camiloforero/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-02T18:09:28Z","updated_at":"2022-08-02T19:28:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nUsing postgresql:\r\n\r\nGenerate a new model with one or more columns with default values, and a virtual stored column based on those other columns\r\nCreate a new record of that model\r\nAccess the value of the virtual stored column from the newly created ActiveRecord object\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem 'pg', '~> 1.4'\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection \"postgresql:///test\"\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.integer :counter1, null: false, default: 0\r\n    t.integer :counter2, null: false, default: 0\r\n    t.virtual :counter_sum, type: :integer, as: \"counter1 + counter2\", stored: true\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_virtual_column_value_populated\r\n    post = Post.create!\r\n\r\n    assert_equal 0, post.counter_sum\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe value of the virtual column should be *something*, in this particular case, 0\r\n\r\n### Actual behavior\r\nThe value of the virtual column is `nil`. The test fails with the following output\r\n```ruby\r\n# Running:\r\n\r\nD, [2022-08-02T13:05:17.402730 #13548] DEBUG -- :   TRANSACTION (0.1ms)  BEGIN\r\nD, [2022-08-02T13:05:17.403136 #13548] DEBUG -- :   Post Create (0.6ms)  INSERT INTO \"posts\" DEFAULT VALUES RETURNING \"id\"\r\nD, [2022-08-02T13:05:17.406144 #13548] DEBUG -- :   TRANSACTION (2.6ms)  COMMIT\r\nF\r\n\r\nFailure:\r\nBugTest#test_virtual_column_value_populated [stored_bug.rb:37]:\r\nExpected: 0\r\n  Actual: nil\r\n\r\n\r\nrails test stored_bug.rb:34\r\n\r\n\r\n\r\nFinished in 0.011047s, 90.5240 runs/s, 90.5240 assertions/s.\r\n1 runs, 1 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\n### System configuration\r\n**Rails version**: edge\r\n**Ruby version**: 3.1.2\r\n**PostgreSQL version**: 14.4\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45736/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45736/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45709","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45709/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45709/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45709/events","html_url":"https://github.com/rails/rails/issues/45709","id":1323303409,"node_id":"I_kwDNIULOTuAB8Q","number":45709,"title":"Rails & can't pin JS files from Unpkg","user":{"login":"septerr","id":1094216,"node_id":"MDQ6VXNlcjEwOTQyMTY=","avatar_url":"https://avatars.githubusercontent.com/u/1094216?v=4","gravatar_id":"","url":"https://api.github.com/users/septerr","html_url":"https://github.com/septerr","followers_url":"https://api.github.com/users/septerr/followers","following_url":"https://api.github.com/users/septerr/following{/other_user}","gists_url":"https://api.github.com/users/septerr/gists{/gist_id}","starred_url":"https://api.github.com/users/septerr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/septerr/subscriptions","organizations_url":"https://api.github.com/users/septerr/orgs","repos_url":"https://api.github.com/users/septerr/repos","events_url":"https://api.github.com/users/septerr/events{/privacy}","received_events_url":"https://api.github.com/users/septerr/received_events","type":"User","site_admin":false},"labels":[{"id":131864,"node_id":"MDU6TGFiZWwxMzE4NjQ=","url":"https://api.github.com/repos/rails/rails/labels/third%20party%20issue","name":"third party issue","color":"02d7e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-07-30T21:44:43Z","updated_at":"2022-08-02T18:08:34Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nIn a new Rails & app, try to pin a package from Unpkg CDN:\r\n\r\n```\r\n./bin/importmap pin @walletconnect/web3-provider@1.7.8 --from unpkg\r\n```\r\n\r\nYou get following response:\r\n\r\n```\r\nCouldn't find any packages in [\"@walletconnect/web3-provider@1.7.8\"] on unpkg\r\n```\r\nBut the file does exist on unpkg: https://unpkg.com/@walletconnect/web3-provider@1.7.8/dist/umd/index.min.js\r\n\r\nAfter adding some breakpoints in `.rbenv/versions/3.1.0/lib/ruby/gems/3.1.0/gems/importmap-rails-1.1.5/lib/importmap/packager.rb`, saw that the CDN post request and response are as follows:\r\n\r\nPost URL: \r\n```\r\n<URI::HTTPS https://api.jspm.io/generate>\r\n```\r\nPost Body:\r\n```\r\n \"{\\\"install\\\":[\\\"@walletconnect/web3-provider@1.7.8\\\"],\\\"flattenScope\\\":true,\\\"env\\\":[\\\"browser\\\",\\\"module\\\",\\\"production\\\"],\\\"provider\\\":\\\"unpkg\\\"}\"\r\n```\r\n\r\nPost Response:\r\n```\r\n<Net::HTTPUnauthorized 401 Unauthorized readbody=true>\r\n```\r\n\r\n### Expected behavior\r\nExpected the files from unpkg to be pinned.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nMisleading error that files don't exist on unpkg.\r\n\r\n### System configuration\r\n**Rails version**:\r\nRails 7.0.3.1\r\n\r\n**Ruby version**:\r\nruby 3.1.0p0 (2021-12-25 revision fb4df44d16) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45709/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45709/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45691","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45691/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45691/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45691/events","html_url":"https://github.com/rails/rails/issues/45691","id":1322122058,"node_id":"I_kwDNIULOTs37Sg","number":45691,"title":"ActionMailer fails to create correct multipart message with rfc822 attachment","user":{"login":"der-flo","id":35431,"node_id":"MDQ6VXNlcjM1NDMx","avatar_url":"https://avatars.githubusercontent.com/u/35431?v=4","gravatar_id":"","url":"https://api.github.com/users/der-flo","html_url":"https://github.com/der-flo","followers_url":"https://api.github.com/users/der-flo/followers","following_url":"https://api.github.com/users/der-flo/following{/other_user}","gists_url":"https://api.github.com/users/der-flo/gists{/gist_id}","starred_url":"https://api.github.com/users/der-flo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/der-flo/subscriptions","organizations_url":"https://api.github.com/users/der-flo/orgs","repos_url":"https://api.github.com/users/der-flo/repos","events_url":"https://api.github.com/users/der-flo/events{/privacy}","received_events_url":"https://api.github.com/users/der-flo/received_events","type":"User","site_admin":false},"labels":[{"id":107188,"node_id":"MDU6TGFiZWwxMDcxODg=","url":"https://api.github.com/repos/rails/rails/labels/actionmailer","name":"actionmailer","color":"8B00FC","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-29T11:19:00Z","updated_at":"2022-08-02T19:46:17Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I cannot re-open #42849 so I create a new issue…\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire 'bundler/inline'\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n  gem 'rails', github: 'rails/rails', branch: 'main'\r\nend\r\n\r\nrequire 'minitest/autorun'\r\nrequire 'action_mailer/railtie'\r\n\r\nclass TestMailer < ActionMailer::Base\r\n  def main\r\n    message_to_attach =  <<~MAIL.gsub(/\\n/, \"\\r\\n\")\r\n      Message-ID: <12345@foo.example>\r\n      Subject: Test\r\n      From: test1@foo.example\r\n      To: test2@foo.example\r\n      \r\n      hello world\r\n    MAIL\r\n    attachments['test.eml'] = {\r\n      mime_type: params[:mime_type],\r\n      content: message_to_attach\r\n    }\r\n\r\n    mail(from: 'test3@foo.example', to: 'test4@foo.example', subject: 'Test outer') do |format|\r\n      format.text { \"outer text - #{params[:mime_type]} attachment\" }\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_with_plain_mime_type\r\n    message = TestMailer.with(mime_type: 'text/plain').main\r\n    assert_equal message.mime_type, 'multipart/mixed'\r\n  end\r\n\r\n  def test_with_rfc822_mime_type\r\n    message = TestMailer.with(mime_type: 'message/rfc822').main\r\n    assert_equal message.mime_type, 'multipart/mixed'\r\n  end\r\nend\r\n```\r\n\r\nThe second test fails, the message object is rendered as follows:\r\n```\r\nDate: Fri, 23 Jul 2021 13:59:19 +0200\r\nFrom: test3@foo.example\r\nTo: test4@foo.example\r\nMessage-ID: <60faaf1738a02_14fbd98-3fb@flo.adigi.ai.mail>\r\nSubject: Test outer\r\nMime-Version: 1.0\r\nContent-Type: text/plain;\r\n boundary=\"--==_mimepart_60faaf1738008_14fbd98-484\";\r\n charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\n\r\n\r\n----==_mimepart_60faaf1738008_14fbd98-484\r\nContent-Type: text/plain;\r\n charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\n\r\nouter text - message/rfc822 attachment\r\n----==_mimepart_60faaf1738008_14fbd98-484\r\nContent-Type: message/rfc822\r\nContent-Transfer-Encoding: \r\nContent-Disposition: attachment;\r\n filename=test.eml\r\nContent-ID: <60faaf1739102_14fbd98-2b@flo.adigi.ai.mail>\r\n\r\nMessage-ID: <12345@foo.example>\r\nSubject: Test\r\nFrom: test1@foo.example\r\nTo: test2@foo.example\r\n\r\nhello world\r\n\r\n----==_mimepart_60faaf1738008_14fbd98-484--\r\n\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe `message.mime_type` is `multipart/mixed` in both test cases. ActionMailer handles attachments in the way it is described in https://guides.rubyonrails.org/action_mailer_basics.html#adding-attachments describes.\r\n\r\n### Actual behavior\r\n\r\nWhen attaching a `message/rfc822` - an email message - the generated mail parts are not nested correctly, the outer `multipart/mixed` is missing.\r\n\r\nPerhaps this behaviour is caused by the [special handling](https://github.com/mikel/mail/blob/master/lib/mail/attachments_list.rb#L9) of such attachments in the `mail` gem.\r\n\r\n\r\n### System configuration\r\n**Rails version**: main\r\n\r\n**Ruby version**: 3.0.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45691/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":1,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45691/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45640","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45640/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45640/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45640/events","html_url":"https://github.com/rails/rails/issues/45640","id":1315219867,"node_id":"I_kwDNIULOTmSpmw","number":45640,"title":"ActiveModel::Dirty changes not reset properly when using store_accessor (tested with postgres)","user":{"login":"vccoffey","id":59817868,"node_id":"MDQ6VXNlcjU5ODE3ODY4","avatar_url":"https://avatars.githubusercontent.com/u/59817868?v=4","gravatar_id":"","url":"https://api.github.com/users/vccoffey","html_url":"https://github.com/vccoffey","followers_url":"https://api.github.com/users/vccoffey/followers","following_url":"https://api.github.com/users/vccoffey/following{/other_user}","gists_url":"https://api.github.com/users/vccoffey/gists{/gist_id}","starred_url":"https://api.github.com/users/vccoffey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vccoffey/subscriptions","organizations_url":"https://api.github.com/users/vccoffey/orgs","repos_url":"https://api.github.com/users/vccoffey/repos","events_url":"https://api.github.com/users/vccoffey/events{/privacy}","received_events_url":"https://api.github.com/users/vccoffey/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-07-22T16:44:57Z","updated_at":"2022-07-23T17:51:49Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nUsing PostgreSQL (pg) database\r\nGiven a model with a jsonb column\r\n```\r\nclass CreateTestModels < ActiveRecord::Migration[6.1]\r\n  def change\r\n    create_table :test_models do |t|\r\n      t.jsonb :jsonb_hash_attr\r\n      t.timestamps\r\n    end\r\n  end\r\nend\r\n```\r\nusing store_accessor\r\n```\r\nclass TestModel < ApplicationRecord\r\n  store_accessor :jsonb_hash_attr, :key, prefix: true\r\nend\r\n```\r\n\r\n### Expected behavior\r\nBoth tests pass:\r\n```\r\nrequire \"test_helper\"\r\nclass TestModelTest < ActiveSupport::TestCase\r\n  test \"does not show changes for a jsonb attribute if changed back to original value\" do\r\n    tm = TestModel.create jsonb_hash_attr: { \"key\" => \"foo\" }\r\n    tm.jsonb_hash_attr = { \"key\" => \"bar\" }\r\n    assert_equal tm.jsonb_hash_attr_change, [{ \"key\" => \"foo\" }, { \"key\" => \"bar\" }]\r\n    tm.jsonb_hash_attr = { \"key\" => \"foo\" }\r\n    assert_equal tm.jsonb_hash_attr_change, nil\r\n  end\r\n\r\n  test \"does not show changes for a jsonb attribute if changed back to original value using store_accessor\" do\r\n    tm = TestModel.create jsonb_hash_attr: { \"key\" => \"foo\" }\r\n    tm.jsonb_hash_attr_key = \"bar\"\r\n    assert_equal tm.jsonb_hash_attr_change, [{ \"key\" => \"foo\" }, { \"key\" => \"bar\" }]\r\n    tm.jsonb_hash_attr_key = \"foo\"\r\n    assert_equal tm.jsonb_hash_attr_change, nil\r\n  end\r\nend\r\n```\r\n### Actual behavior\r\nThe second test fails\r\n```\r\n--- expected\r\n+++ actual\r\n-[{\"key\"=>\"foo\"}, {\"key\"=>\"foo\"}]\r\n+nil\r\n```\r\n### System configuration\r\n**Rails version**:\r\ntested with 6.1.6.1 and 7.0.3.1\r\n\r\n**Ruby version**: 3.1.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45640/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45640/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45639","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45639/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45639/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45639/events","html_url":"https://github.com/rails/rails/issues/45639","id":1314984267,"node_id":"I_kwDNIULOTmERSw","number":45639,"title":"Explicitly touch on save","user":{"login":"schmijos","id":245443,"node_id":"MDQ6VXNlcjI0NTQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/245443?v=4","gravatar_id":"","url":"https://api.github.com/users/schmijos","html_url":"https://github.com/schmijos","followers_url":"https://api.github.com/users/schmijos/followers","following_url":"https://api.github.com/users/schmijos/following{/other_user}","gists_url":"https://api.github.com/users/schmijos/gists{/gist_id}","starred_url":"https://api.github.com/users/schmijos/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/schmijos/subscriptions","organizations_url":"https://api.github.com/users/schmijos/orgs","repos_url":"https://api.github.com/users/schmijos/repos","events_url":"https://api.github.com/users/schmijos/events{/privacy}","received_events_url":"https://api.github.com/users/schmijos/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-22T13:05:14Z","updated_at":"2022-07-22T20:31:00Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  ruby \"3.1.0\"\r\n  gem \"rails\", \"7.0.3.1\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.timestamps\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_save_touch\r\n    Post.create!(updated_at: 3.days.ago)\r\n    Post.last.save!(touch: true)\r\n\r\n    assert_in_delta 0.seconds.ago.to_i, Post.last.updated_at.to_i, 5\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nIf I tell _ActiveRecord_ to explicitly \"touch\", then I would expect it to update the timestamps.\r\n\r\n### Actual behavior\r\n`save` never hits the database if no attribute changed.\r\n\r\n### System configuration\r\n**Rails version**: >= 3.0.0, < 8","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45639/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45639/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45638","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45638/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45638/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45638/events","html_url":"https://github.com/rails/rails/issues/45638","id":1314662755,"node_id":"I_kwDNIULOTlwpYw","number":45638,"title":"CSRF Token Expiry issue.","user":{"login":"MBM1607","id":47133639,"node_id":"MDQ6VXNlcjQ3MTMzNjM5","avatar_url":"https://avatars.githubusercontent.com/u/47133639?v=4","gravatar_id":"","url":"https://api.github.com/users/MBM1607","html_url":"https://github.com/MBM1607","followers_url":"https://api.github.com/users/MBM1607/followers","following_url":"https://api.github.com/users/MBM1607/following{/other_user}","gists_url":"https://api.github.com/users/MBM1607/gists{/gist_id}","starred_url":"https://api.github.com/users/MBM1607/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MBM1607/subscriptions","organizations_url":"https://api.github.com/users/MBM1607/orgs","repos_url":"https://api.github.com/users/MBM1607/repos","events_url":"https://api.github.com/users/MBM1607/events{/privacy}","received_events_url":"https://api.github.com/users/MBM1607/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-22T08:38:19Z","updated_at":"2022-07-22T08:40:22Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"We are encountering an issue with form submission in production environment.\r\nThe criteria seems to be exceptionally rare, I have been unable to replicate the issue. \r\n\r\nCSRF token is created and validated just fine.\r\n\r\n### Timing\r\n\r\nIssue seems to occur only when users wait more than 2 hours on a form before submitting, but doing this we have been unable to reproduce as well.\r\n\r\n### Logs\r\n```\r\nW, [2022-07-14T15:19:37.535241 #2433]  WARN -- : Can't verify CSRF token authenticity.\r\nI, [2022-07-14T15:19:37.535556 #2433]  INFO -- : Completed 422 Unprocessable Entity in 1ms (ActiveRecord: 0.0ms | Allocations: 291)\r\nF, [2022-07-14T15:19:37.536425 #2433] FATAL -- :   \r\nActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n```\r\n\r\n### System configuration\r\n**Rails version 6.1.6** \r\n**Ruby version 2.7.4**\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45638/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45638/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45636","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45636/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45636/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45636/events","html_url":"https://github.com/rails/rails/issues/45636","id":1314546104,"node_id":"I_kwDNIULOTlphuA","number":45636,"title":"Invalid template types should raise an exception","user":{"login":"axos88","id":1281218,"node_id":"MDQ6VXNlcjEyODEyMTg=","avatar_url":"https://avatars.githubusercontent.com/u/1281218?v=4","gravatar_id":"","url":"https://api.github.com/users/axos88","html_url":"https://github.com/axos88","followers_url":"https://api.github.com/users/axos88/followers","following_url":"https://api.github.com/users/axos88/following{/other_user}","gists_url":"https://api.github.com/users/axos88/gists{/gist_id}","starred_url":"https://api.github.com/users/axos88/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/axos88/subscriptions","organizations_url":"https://api.github.com/users/axos88/orgs","repos_url":"https://api.github.com/users/axos88/repos","events_url":"https://api.github.com/users/axos88/events{/privacy}","received_events_url":"https://api.github.com/users/axos88/received_events","type":"User","site_admin":false},"labels":[{"id":3666649,"node_id":"MDU6TGFiZWwzNjY2NjQ5","url":"https://api.github.com/repos/rails/rails/labels/actionview","name":"actionview","color":"d7e102","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-07-22T07:40:54Z","updated_at":"2022-08-17T18:02:14Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n  - Create a template in views/foo/bar.txt.erb # Note .txt, and not .text\r\n\r\n```ruby\r\ndetails = { locale: [:en], formats: [:txt], handlers: [:erb], variants: []}\r\nActionController::Base.view_paths.find(\"bar\", 'foo', false, details, nil, [])\r\n```\r\n\r\n### Expected behavior\r\n\r\nShould throw an exception that :txt is not a registered type in Template::Types\r\n\r\n### Actual behavior\r\n\r\nSilently fails to find the otherwise existing template, specifying the correct directory it the file resides in. \r\nConfustion intensifies.\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3\r\n**Ruby version**: 2.7.6","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45636/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45636/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45635","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45635/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45635/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45635/events","html_url":"https://github.com/rails/rails/issues/45635","id":1314015345,"node_id":"I_kwDNIULOTlJIcQ","number":45635,"title":"Recent security releases are missing from the Releases page","user":{"login":"georgeclaghorn","id":94129,"node_id":"MDQ6VXNlcjk0MTI5","avatar_url":"https://avatars.githubusercontent.com/u/94129?v=4","gravatar_id":"","url":"https://api.github.com/users/georgeclaghorn","html_url":"https://github.com/georgeclaghorn","followers_url":"https://api.github.com/users/georgeclaghorn/followers","following_url":"https://api.github.com/users/georgeclaghorn/following{/other_user}","gists_url":"https://api.github.com/users/georgeclaghorn/gists{/gist_id}","starred_url":"https://api.github.com/users/georgeclaghorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/georgeclaghorn/subscriptions","organizations_url":"https://api.github.com/users/georgeclaghorn/orgs","repos_url":"https://api.github.com/users/georgeclaghorn/repos","events_url":"https://api.github.com/users/georgeclaghorn/events{/privacy}","received_events_url":"https://api.github.com/users/georgeclaghorn/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false},"assignees":[{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2022-07-22T01:21:34Z","updated_at":"2022-08-19T18:08:06Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Rails versions 7.0.3.1, 6.1.6.1, 6.0.5.1, and 5.2.8.1 are not listed at this GitHub repository’s [Releases](https://github.com/rails/rails/releases) page. Past releases are listed there, including the most recent round of bugfix releases from May.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45635/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45635/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45632","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45632/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45632/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45632/events","html_url":"https://github.com/rails/rails/issues/45632","id":1312439669,"node_id":"I_kwDNIULOTjo9dQ","number":45632,"title":"`_read_attribute` method should also check whether an attribute is aliased or not","user":{"login":"khiav223577","id":4011729,"node_id":"MDQ6VXNlcjQwMTE3Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4011729?v=4","gravatar_id":"","url":"https://api.github.com/users/khiav223577","html_url":"https://github.com/khiav223577","followers_url":"https://api.github.com/users/khiav223577/followers","following_url":"https://api.github.com/users/khiav223577/following{/other_user}","gists_url":"https://api.github.com/users/khiav223577/gists{/gist_id}","starred_url":"https://api.github.com/users/khiav223577/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/khiav223577/subscriptions","organizations_url":"https://api.github.com/users/khiav223577/orgs","repos_url":"https://api.github.com/users/khiav223577/repos","events_url":"https://api.github.com/users/khiav223577/events{/privacy}","received_events_url":"https://api.github.com/users/khiav223577/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-07-21T03:14:22Z","updated_at":"2022-07-21T21:37:09Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n```rb\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  gem \"activerecord\", '7.0.3'\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table \"users\", force: :cascade do |t|\r\n    t.string :name\r\n  end\r\n\r\n  create_table \"posts\", force: :cascade do |t|\r\n    t.string :title\r\n    t.integer :userId\r\n  end\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\n  has_many :posts\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  belongs_to :user\r\n\r\n  alias_attribute :user_id, :userId\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def setup\r\n    user = User.create!(name: 'Tester')\r\n    post = Post.create!(user_id: user.id, title: 'Post A')\r\n  end\r\n\r\n  def test_has_many\r\n    assert_equal ['Post A'], User.first.posts.map(&:title)\r\n  end\r\n\r\n  def test_belongs_to\r\n    assert_equal 'Tester', Post.first.user&.name\r\n  end\r\nend\r\n```\r\n\r\nResult:\r\n```\r\nFinished in 0.059414s, 33.6619 runs/s, 33.6619 assertions/s.\r\n\r\n  1) Failure:\r\nBugTest#test_belongs_to [test.rb:53]:\r\nExpected: \"Tester\"\r\n  Actual: nil\r\n\r\n2 runs, 2 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\n### Expected behavior\r\n\r\nI run into this issue when I tried to add an association on an aliased attribute.\r\n\r\nThen I found `belongs_to_association` will use `_read_attribute` method to check if this `foreign_key` exists on this model or not.\r\nIt doesn't pass the condition, therefore `find_target` will not be triggered.\r\nhttps://github.com/rails/rails/blob/3272335f8f4739629283cdeff7c3db723f34a3f5/activerecord/lib/active_record/associations/association.rb#L172-L173\r\nhttps://github.com/rails/rails/blob/3272335f8f4739629283cdeff7c3db723f34a3f5/activerecord/lib/active_record/associations/association.rb#L274-L276\r\nhttps://github.com/rails/rails/blob/2ea5ff9e13b9c5d0d5d25b2441efa81a2de2a262/activerecord/lib/active_record/associations/belongs_to_association.rb#L133-L135\r\nhttps://github.com/rails/rails/blob/4ae0390c1051a39ec16a4a95451cd06172a1b260/activerecord/lib/active_record/attribute_methods/read.rb#L37-L39\r\n\r\nThe `read_attribute` method takes `attribute_alias` into consideration since https://github.com/rails/rails/pull/26529, while `_read_attribute` doesn't. I think it should, too.\r\n\r\n### Actual behavior\r\n\r\nSee the test script below.\r\n\r\n### System configuration\r\n**Rails version**: \r\n7.0.3.1\r\n\r\n**Ruby version**:\r\nruby 3.0.0p0 (2020-12-25 revision 95aff21468) [x86_64-linux]","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45632/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45632/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45609","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45609/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45609/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45609/events","html_url":"https://github.com/rails/rails/issues/45609","id":1306840730,"node_id":"I_kwDNIULOTeTOmg","number":45609,"title":"Cannot add ActiveModel::Attribute::FromDatabase to permitted YAML safe load classes","user":{"login":"stanhu","id":963826,"node_id":"MDQ6VXNlcjk2MzgyNg==","avatar_url":"https://avatars.githubusercontent.com/u/963826?v=4","gravatar_id":"","url":"https://api.github.com/users/stanhu","html_url":"https://github.com/stanhu","followers_url":"https://api.github.com/users/stanhu/followers","following_url":"https://api.github.com/users/stanhu/following{/other_user}","gists_url":"https://api.github.com/users/stanhu/gists{/gist_id}","starred_url":"https://api.github.com/users/stanhu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stanhu/subscriptions","organizations_url":"https://api.github.com/users/stanhu/orgs","repos_url":"https://api.github.com/users/stanhu/repos","events_url":"https://api.github.com/users/stanhu/events{/privacy}","received_events_url":"https://api.github.com/users/stanhu/received_events","type":"User","site_admin":false},"labels":[{"id":107186,"node_id":"MDU6TGFiZWwxMDcxODY=","url":"https://api.github.com/repos/rails/rails/labels/regression","name":"regression","color":"e10c02","default":false,"description":null},{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-07-16T15:51:30Z","updated_at":"2022-08-18T11:39:07Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWe have some database entries serialized to YAML. For example:\r\n\r\n```\r\n---\r\n:custom_message: Repository Download Started\r\n:author_name: !ruby/object:DeployToken\r\n  concise_attributes:\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: deploy_token_type\r\n    value_before_type_cast: 1\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: id\r\n    value_before_type_cast: 2\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: revoked\r\n    value_before_type_cast: false\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: read_repository\r\n    value_before_type_cast: true\r\n```\r\n\r\nHowever, since the security release announced in https://rubyonrails.org/2022/7/12/Rails-Versions-7-0-3-1-6-1-6-1-6-0-5-1-and-5-2-8-1-have-been-released to address CVE-2022-32224, we cannot simply add `ActiveModel::Attribute::FromDatabase` to the permitted class list:\r\n\r\n```ruby\r\n(byebug) YAML.safe_load(payload, permitted_classes: [ActiveModel::Attribute::FromDatabase, Symbol, DeployToken], aliases: true)\r\n*** NameError Exception: private constant ActiveModel::Attribute::FromDatabase referenced\r\n```\r\n\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\n### Expected behavior\r\n\r\nYAML loading should work. Should this constant no longer be private since it's been serialized to YAML?\r\n\r\n### Actual behavior\r\n\r\nYAML loading fails with:\r\n\r\n```\r\n*** NameError Exception: private constant ActiveModel::Attribute::FromDatabase referenced\r\n```\r\n\r\n### System configuration\r\n\r\n**Rails version**:\r\nv6.1.6.1\r\n\r\n**Ruby version**:\r\nv2.7.5","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45609/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45609/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45596","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45596/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45596/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45596/events","html_url":"https://github.com/rails/rails/issues/45596","id":1304247666,"node_id":"I_kwDNIULOTb09cg","number":45596,"title":"Setting `schema_dump` in database.yml does not change dump format","user":{"login":"leboshi","id":16550140,"node_id":"MDQ6VXNlcjE2NTUwMTQw","avatar_url":"https://avatars.githubusercontent.com/u/16550140?v=4","gravatar_id":"","url":"https://api.github.com/users/leboshi","html_url":"https://github.com/leboshi","followers_url":"https://api.github.com/users/leboshi/followers","following_url":"https://api.github.com/users/leboshi/following{/other_user}","gists_url":"https://api.github.com/users/leboshi/gists{/gist_id}","starred_url":"https://api.github.com/users/leboshi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leboshi/subscriptions","organizations_url":"https://api.github.com/users/leboshi/orgs","repos_url":"https://api.github.com/users/leboshi/repos","events_url":"https://api.github.com/users/leboshi/events{/privacy}","received_events_url":"https://api.github.com/users/leboshi/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-14T04:44:37Z","updated_at":"2022-07-14T14:34:25Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Originally brought up in #43173.  I opened PR #43240 to address it, but that was closed when it was decided #43530 did the same thing.  Unfortunately, I don't think any of us were really reading what the other was doing, because the two PRs actually each only addressed half the opened issue.\r\n\r\nPR incoming to fully address this and the second half of #43173!\r\n\r\n### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_schema_format_corresponds_with_schema_dump\r\n    Dir.mktmpdir do |dir|\r\n      ActiveRecord::Tasks::DatabaseTasks.stub(:db_dir, dir) do\r\n        old_configurations = ActiveRecord::Base.configurations\r\n        ActiveRecord::Base.configurations = {\r\n          \"development\" => {\r\n            \"primary\" => {\r\n              \"database\" => \"dev-db\",\r\n              \"schema_dump\" => \"primary_structure.sql\"\r\n            }\r\n          }\r\n        }\r\n\r\n        db_config = ActiveRecord::Base.configurations.configs_for(env_name: \"development\", name: \"primary\")\r\n        ActiveRecord::Tasks::DatabaseTasks.dump_schema(db_config)\r\n\r\n        dump_contents = File.read(File.join(dir, \"primary_structure.sql\"))\r\n        refute_match /ActiveRecord::Schema/, dump_contents\r\n        assert_match /CREATE TABLE/, dump_contents\r\n      ensure\r\n        ActiveRecord::Base.configurations = old_configurations\r\n        ActiveRecord::Base.clear_cache!\r\n      end\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nIf `schema_dump` is set to something like `primary_structure.sql`, I'd expect it to do a SQL structure dump rather than a Ruby schema dump.\r\n\r\n### Actual behavior\r\nThe filename in `schema_dump` has no bearing on the format of the dump Rails writes or expects to read.\r\n\r\n### System configuration\r\n**Rails version**: (main)\r\n\r\n**Ruby version**: 3.1.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45596/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45596/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45998","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45998/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45998/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45998/events","html_url":"https://github.com/rails/rails/issues/45998","id":1368868095,"node_id":"I_kwDNIULOUZdE_w","number":45998,"title":"CSRF getting different token","user":{"login":"Saleh-Salem","id":22606707,"node_id":"MDQ6VXNlcjIyNjA2NzA3","avatar_url":"https://avatars.githubusercontent.com/u/22606707?v=4","gravatar_id":"","url":"https://api.github.com/users/Saleh-Salem","html_url":"https://github.com/Saleh-Salem","followers_url":"https://api.github.com/users/Saleh-Salem/followers","following_url":"https://api.github.com/users/Saleh-Salem/following{/other_user}","gists_url":"https://api.github.com/users/Saleh-Salem/gists{/gist_id}","starred_url":"https://api.github.com/users/Saleh-Salem/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Saleh-Salem/subscriptions","organizations_url":"https://api.github.com/users/Saleh-Salem/orgs","repos_url":"https://api.github.com/users/Saleh-Salem/repos","events_url":"https://api.github.com/users/Saleh-Salem/events{/privacy}","received_events_url":"https://api.github.com/users/Saleh-Salem/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-11T08:08:17Z","updated_at":"2022-09-11T08:27:32Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When validating the CSRF token getting an exception in API\r\n \r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\nthe `session[:_csrf_token]` and  `request.x_csrf_token` is different and getting issue.\r\nwhen I need to skip the csrf, I add `verify_authenticity_token`, In this case, I don't need to skip it.\r\nI debug and found the issue in the method:\r\n\r\n```\r\n  def compare_with_global_token(token, session = nil) # :doc:\r\n    ActiveSupport::SecurityUtils.fixed_length_secure_compare(token, global_csrf_token(session))\r\n  end\r\n```\r\n\r\nwhat is `session[:_csrf_token]` and how can I implement it in API?\r\nIs there any missing from my side?\r\n### Steps to reproduce\r\n\r\n1. Add `protect_from_forgery with: :exception` .\r\n2. When logging in return token in response is generated by `form_authenticity_token`.\r\n3. When Trying to request any POST, PUT or DELETE API get an exception.\r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nReturn Response without exception.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\ngetting exception \r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\n### System configuration\r\n**Rails version**:\r\n6.0.3.5\r\n**Ruby version**:\r\n2.7.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45998/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45998/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45994","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45994/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45994/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45994/events","html_url":"https://github.com/rails/rails/issues/45994","id":1368555704,"node_id":"I_kwDNIULOUZKAuA","number":45994,"title":"LoadInterlockAwareMonitor deadlock when clearing cache (multiple databases, test)","user":{"login":"kuahyeow","id":16723,"node_id":"MDQ6VXNlcjE2NzIz","avatar_url":"https://avatars.githubusercontent.com/u/16723?v=4","gravatar_id":"","url":"https://api.github.com/users/kuahyeow","html_url":"https://github.com/kuahyeow","followers_url":"https://api.github.com/users/kuahyeow/followers","following_url":"https://api.github.com/users/kuahyeow/following{/other_user}","gists_url":"https://api.github.com/users/kuahyeow/gists{/gist_id}","starred_url":"https://api.github.com/users/kuahyeow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kuahyeow/subscriptions","organizations_url":"https://api.github.com/users/kuahyeow/orgs","repos_url":"https://api.github.com/users/kuahyeow/repos","events_url":"https://api.github.com/users/kuahyeow/events{/privacy}","received_events_url":"https://api.github.com/users/kuahyeow/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-10T08:52:46Z","updated_at":"2022-09-10T08:56:12Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"With multiple databases, we observe hangs within system tests.\r\n\r\nSee also https://gitlab.com/gitlab-org/gitlab/-/issues/371468 (GitLab is at Rails 6.1, Ruby 2.7.5)\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nHere's a minimal reproduction with Rails 7.0.3.1\r\n\r\n1. Checkout https://gitlab.com/tkuah/multi_database_system_test\r\n2. `bundle install`\r\n3. `bundle exec rails db:migrate`\r\n4. `bundle rails test test/system/home_pages_test.rb`\r\n\r\nThe conditions are:\r\n\r\n1. Multiple databases\r\n2. System test where there's an async request which overlaps with the main thread\r\n\r\n### Expected behavior\r\n\r\nIt does not hang, and the test completes\r\n\r\n### Actual behavior\r\n\r\nIt hangs. It looks like it's hanging when clearing query cache (see https://gitlab.com/gitlab-org/gitlab/-/issues/371468#note_1087203883, and https://gitlab.com/gitlab-org/gitlab/-/issues/371468#note_1088779499)\r\n\r\nA backtrace dump taken while the test is hanging [sigdump-68442.log](https://github.com/rails/rails/files/9539878/sigdump-68442.log)\r\n\r\nMy suspicion is that:\r\n\r\n1. `lock_thread` is true for system tests\r\n3. Therefore both the main thread, and the Puma thread attempt to clear query cache for the same set of connections\r\n\r\nSo we have two connections:\r\n\r\n1. Puma thread takes a `LoadInterlockAwareMonitor` lock for primary connection via `Post.transaction`\r\n2. Main thread takes a `LoadInterlockAwareMonitor` lock for animal connection via implicit transaction that `create` does\r\n3. Due to 2, main thread attempts to clear query cache for primary connection. **Waits for 1's lock**\r\n4. Due to 1, and because of `lock_thread`, puma thread clears query cache for primary connection. It takes a `LoadInterlockAwareMonitor` lock for primary connection which succeds\r\n5. Due to 1, puma thread now attempts clears query cache for animal connection. **Waits for 2's lock**\r\n\r\nSee [`clear_query_caches_for_current_thread` method](https://github.com/rails/rails/blob/e24fbf71fa0a10f63346b9b42604451958740844/activerecord/lib/active_record/connection_handling.rb#L244-L248)\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: ruby 2.7.5p203 (2021-11-24 revision f69aeb8314) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45994/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45994/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45984","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45984/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45984/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45984/events","html_url":"https://github.com/rails/rails/issues/45984","id":1368144421,"node_id":"I_kwDNIULOUYw6JQ","number":45984,"title":"Cannot Eager Load has_many :through Relationships with custom scope","user":{"login":"dcorrigan","id":2445528,"node_id":"MDQ6VXNlcjI0NDU1Mjg=","avatar_url":"https://avatars.githubusercontent.com/u/2445528?v=4","gravatar_id":"","url":"https://api.github.com/users/dcorrigan","html_url":"https://github.com/dcorrigan","followers_url":"https://api.github.com/users/dcorrigan/followers","following_url":"https://api.github.com/users/dcorrigan/following{/other_user}","gists_url":"https://api.github.com/users/dcorrigan/gists{/gist_id}","starred_url":"https://api.github.com/users/dcorrigan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dcorrigan/subscriptions","organizations_url":"https://api.github.com/users/dcorrigan/orgs","repos_url":"https://api.github.com/users/dcorrigan/repos","events_url":"https://api.github.com/users/dcorrigan/events{/privacy}","received_events_url":"https://api.github.com/users/dcorrigan/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-09T17:47:35Z","updated_at":"2022-09-09T17:47:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nThis seems like it's the same as #28324, but I'm still seeing the issue in Rails 7. \r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n  end\r\n\r\n  create_table :images, force: true do |t|\r\n    t.string :title\r\n    t.integer :post_id\r\n  end\r\n\r\n  create_table :captions, force: true do |t|\r\n    t.integer :image_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :images\r\n  has_many :captions, lambda { order('images.title DESC') }, through: :images\r\nend\r\n\r\nclass Image < ActiveRecord::Base\r\n  belongs_to :post\r\n  has_one :caption\r\nend\r\n\r\nclass Caption < ActiveRecord::Base\r\n  belongs_to :image\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_preload_has_many_through_association_with_scope\r\n    post = Post.create!\r\n    image = Image.create!\r\n    image.caption = Caption.create!\r\n    post.images << image\r\n    post.save!\r\n\r\n    # Access through the model works\r\n    assert_includes post.captions, Caption.first\r\n\r\n    # Query with association preloaded does not.\r\n    # When evaluated, it will apply the scope without the relevant JOIN table:\r\n    # SELECT \"captions\".* FROM \"captions\" WHERE \"captions\".\"image_id\" = ? ORDER BY images.title DESC\r\n    preloaded = Post.where(id: post.id).includes(:captions)\r\n\r\n    assert_includes preloaded.first.captions, Caption.first\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe test passes and we're able to eager load has_many :through associations with custom scopes in this way.\r\n\r\nI realize this can be fixed by adding a `references(:images)` to the query, but it seems reasonable to expect AR to infer that that the join is necessary here.\r\n\r\n### Actual behavior\r\n\r\nTest fails with an error: `ActiveRecord::StatementInvalid: SQLite3::SQLException: no such column: images.title`\r\n\r\n### System configuration\r\n**Rails version**: 7.0 \r\n\r\n**Ruby version**: 3.1.2p20\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45984/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45967","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45967/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45967/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45967/events","html_url":"https://github.com/rails/rails/issues/45967","id":1366038829,"node_id":"I_kwDNIULOUWwZLQ","number":45967,"title":"Inconsistent update of timestamps while updating associations with *_ids=","user":{"login":"matthee","id":547653,"node_id":"MDQ6VXNlcjU0NzY1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/547653?v=4","gravatar_id":"","url":"https://api.github.com/users/matthee","html_url":"https://github.com/matthee","followers_url":"https://api.github.com/users/matthee/followers","following_url":"https://api.github.com/users/matthee/following{/other_user}","gists_url":"https://api.github.com/users/matthee/gists{/gist_id}","starred_url":"https://api.github.com/users/matthee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matthee/subscriptions","organizations_url":"https://api.github.com/users/matthee/orgs","repos_url":"https://api.github.com/users/matthee/repos","events_url":"https://api.github.com/users/matthee/events{/privacy}","received_events_url":"https://api.github.com/users/matthee/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-08T10:51:09Z","updated_at":"2022-09-09T03:10:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"ActiveRecord inconsistently updates the `updated_at` column when changing `has_many through:` associations.\r\n\r\n### Steps to reproduce\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"activesupport\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"active_support/testing/time_helpers\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.timestamps\r\n  end\r\n  \r\n  create_table :tags, force: true do |t|\r\n  end\r\n\r\n  create_table :taggings, force: true do |t|\r\n    t.integer :post_id\r\n    t.integer :tag_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :taggings, dependent: :destroy\r\n  \r\n  has_many :tags, through: :taggings\r\nend\r\n\r\nclass Tagging < ActiveRecord::Base\r\n  belongs_to :post, touch: true\r\n  belongs_to :tag\r\nend\r\n\r\nclass Tag < ActiveRecord::Base\r\n  has_many :taggings\r\n  has_many :posts, through: :taggings\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  include ActiveSupport::Testing::TimeHelpers\r\n  \r\n  def test_updated_at_is_updated_when_setting_has_many_through_association\r\n    freeze_time\r\n        \r\n    tag_1 = Tag.create!\r\n    tag_2 = Tag.create!\r\n      \r\n    post = Post.create!\r\n    \r\n    travel_to(now = 1.hour.from_now)\r\n    \r\n    # Adding tags updates post.updated_at\r\n    post.update(tag_ids: [tag_1.id, tag_2.id])\r\n    assert_in_delta now, post.updated_at, 1.second, \"post#updated_at was not updated when adding tags\"\r\n    \r\n    # Removing tags does not update post.updated_at :(\r\n    travel_to(now = 2.hours.from_now)\r\n    post.update(tag_ids: [tag_1.id])\r\n    assert_in_delta now, post.updated_at, 1.second, \"post#updated_at was not updated when removing tags\"\r\n  end\r\n  \r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nIn the example above, both `.update` calls should update the `updated_at` column of the post record. (when adding and removing records)\r\n\r\n### Actual behavior\r\n\r\nWhen deleting a record, the `updated_at` timestamp is not updated.\r\n\r\n### System configuration\r\n**Rails version**:\r\n7.0.3.1\r\n**Ruby version**:\r\n3.0.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45967/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45967/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45959","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45959/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45959/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45959/events","html_url":"https://github.com/rails/rails/issues/45959","id":1364232810,"node_id":"I_kwDNIULOUVCKag","number":45959,"title":"JSON field not saving data with symbol : and it's saving with arrow =>","user":{"login":"sajjadmurtaza","id":8552702,"node_id":"MDQ6VXNlcjg1NTI3MDI=","avatar_url":"https://avatars.githubusercontent.com/u/8552702?v=4","gravatar_id":"","url":"https://api.github.com/users/sajjadmurtaza","html_url":"https://github.com/sajjadmurtaza","followers_url":"https://api.github.com/users/sajjadmurtaza/followers","following_url":"https://api.github.com/users/sajjadmurtaza/following{/other_user}","gists_url":"https://api.github.com/users/sajjadmurtaza/gists{/gist_id}","starred_url":"https://api.github.com/users/sajjadmurtaza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sajjadmurtaza/subscriptions","organizations_url":"https://api.github.com/users/sajjadmurtaza/orgs","repos_url":"https://api.github.com/users/sajjadmurtaza/repos","events_url":"https://api.github.com/users/sajjadmurtaza/events{/privacy}","received_events_url":"https://api.github.com/users/sajjadmurtaza/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":1071962662,"node_id":"MDU6TGFiZWwxMDcxOTYyNjYy","url":"https://api.github.com/repos/rails/rails/labels/more-information-needed","name":"more-information-needed","color":"bfdadc","default":false,"description":"When reporter needs to provide more information"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-09-07T07:40:12Z","updated_at":"2022-09-08T07:23:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nI have JSON field in my database `t.json \"theme\"`. When I try to save the field hash with : , it's overridden before save\r\ne.g.\r\n`object.theme = { color: 'red' }` it always change to `{ color => 'red' }`\r\n\r\ni also tried with jsonb and default value with empty hash {} but still having the same issue.\r\n\r\n\r\nI want to save the JSON data hash with symbol keys `{ color: 'red' }`\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.0\r\n\r\n**Ruby version**: 2.7.1\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45959/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45959/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45949","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45949/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45949/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45949/events","html_url":"https://github.com/rails/rails/issues/45949","id":1362899537,"node_id":"I_kwDNIULOUTwyUQ","number":45949,"title":"ActionText::Attachable#as_json override is breaking ActiveStorage::Blob#as_json when blob is not persisted","user":{"login":"balbesina","id":7312369,"node_id":"MDQ6VXNlcjczMTIzNjk=","avatar_url":"https://avatars.githubusercontent.com/u/7312369?v=4","gravatar_id":"","url":"https://api.github.com/users/balbesina","html_url":"https://github.com/balbesina","followers_url":"https://api.github.com/users/balbesina/followers","following_url":"https://api.github.com/users/balbesina/following{/other_user}","gists_url":"https://api.github.com/users/balbesina/gists{/gist_id}","starred_url":"https://api.github.com/users/balbesina/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/balbesina/subscriptions","organizations_url":"https://api.github.com/users/balbesina/orgs","repos_url":"https://api.github.com/users/balbesina/repos","events_url":"https://api.github.com/users/balbesina/events{/privacy}","received_events_url":"https://api.github.com/users/balbesina/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-06T08:26:39Z","updated_at":"2022-09-06T08:26:39Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nfrom rails console:\r\n```ruby\r\nActiveStorage::Blob.build_after_unfurling(io: StringIO.new('asd'), filename: 'asd.txt').as_json\r\n```\r\n\r\n[Reproduction script](https://gist.github.com/balbesina/30fbdafbfee4b71b06209d9e950f4128)\r\n\r\n### Expected behavior\r\nActiveStorage::Blob#as_json returns a Hash\r\n\r\n### Actual behavior\r\nActiveStorage::Blob#as_json raises exception\r\n```\r\n/Users/dhh/.rvm/gems/ruby-3.1.2/gems/globalid-1.0.0/lib/global_id/uri/gid.rb:167:in `validate_model_id': \r\nUnable to create a Global ID for ActiveStorage::Blob without a model id. (URI::GID::MissingModelIdError)\r\n```\r\n\r\n### System configuration\r\n**Rails version**: Rails 7.0.3.1\r\n**Ruby version**: ruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45949/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45949/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45939","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45939/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45939/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45939/events","html_url":"https://github.com/rails/rails/issues/45939","id":1360876688,"node_id":"I_kwDNIULOUR1UkA","number":45939,"title":"Validations aren't inherited from base model if child is called before validation declaration","user":{"login":"Exterm1nate","id":48535087,"node_id":"MDQ6VXNlcjQ4NTM1MDg3","avatar_url":"https://avatars.githubusercontent.com/u/48535087?v=4","gravatar_id":"","url":"https://api.github.com/users/Exterm1nate","html_url":"https://github.com/Exterm1nate","followers_url":"https://api.github.com/users/Exterm1nate/followers","following_url":"https://api.github.com/users/Exterm1nate/following{/other_user}","gists_url":"https://api.github.com/users/Exterm1nate/gists{/gist_id}","starred_url":"https://api.github.com/users/Exterm1nate/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Exterm1nate/subscriptions","organizations_url":"https://api.github.com/users/Exterm1nate/orgs","repos_url":"https://api.github.com/users/Exterm1nate/repos","events_url":"https://api.github.com/users/Exterm1nate/events{/privacy}","received_events_url":"https://api.github.com/users/Exterm1nate/received_events","type":"User","site_admin":false},"labels":[{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-09-03T14:46:42Z","updated_at":"2022-09-08T07:26:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nLet's create some STI models. Base `Vehicle` and two childs `Car` and `Motorcycle`.\r\n\r\n```ruby\r\n# models/vehicle.rb\r\nclass Vehicle < ApplicationRecord\r\n  TYPES = [Car, Motorcycle].freeze\r\n\r\n  validates :color, uniqueness: { scope: :model }\r\nend\r\n\r\n# models/car.rb\r\nclass Car < Vehicle\r\nend\r\n\r\n# models/motorcycle.rb\r\nclass Motorcycle < Vehicle\r\nend\r\n```\r\n\r\nAfter that we want to use `#validators_on` method to make sure the validation is present.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\nCar.validators_on(:color)\r\nMotorcycle.validators_on(:color)\r\n```\r\n\r\n### Expected behavior\r\n\r\nAll models must contain the validation.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nMotorcycle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\n```\r\n\r\n### Actual behavior\r\n\r\nBut for childs this method returns nothing.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> []\r\nMotorcycle.validators_on(:color)\r\n#=> []\r\n```\r\n\r\n### Notes\r\n\r\nIf we remove the `TYPES` constant (or just child classes calls from it) `validators_on` works as expected. Let's change original code a little bit:\r\n\r\n```ruby\r\n# models/vehicle.rb\r\nclass Vehicle < ApplicationRecord\r\n  TYPES = [Car].freeze # Motorcycle was removed from here!\r\n\r\n  validates :color, uniqueness: { scope: :model }\r\nend\r\n```\r\n\r\nAnd after that test again.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> []\r\nMotorcycle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\n```\r\n\r\n`Motorcycle` validation was returned correctly this time.\r\n\r\nIt seems to be a load error. `Car` was called before the `Vehicle`'s validation declaration, so it doesn't take this validation into account. It may also depend on loading order.\r\n\r\nNotice that validation itself is working well in all models.\r\n\r\n```ruby\r\nCar.create!(color: \"black\", model: \"Boomer\")\r\nCar.create!(color: \"black\", model: \"Boomer\") # raises ActiveRecord::RecordInvalid\r\n\r\nMotorcycle.create!(color: \"red\", model: \"Yamaha\")\r\nMotorcycle.create!(color: \"red\", model: \"Yamaha\") # raises ActiveRecord::RecordInvalid\r\n```\r\n\r\nExample project: https://github.com/Exterm1nate/rails-validation-issue\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3\r\n\r\n**Ruby version**: 3.1.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45939/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45939/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45937","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45937/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45937/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45937/events","html_url":"https://github.com/rails/rails/issues/45937","id":1360779604,"node_id":"I_kwDNIULOURvZVA","number":45937,"title":"Add strict table mode (by default) to sqlite adapter","user":{"login":"jrz","id":149668,"node_id":"MDQ6VXNlcjE0OTY2OA==","avatar_url":"https://avatars.githubusercontent.com/u/149668?v=4","gravatar_id":"","url":"https://api.github.com/users/jrz","html_url":"https://github.com/jrz","followers_url":"https://api.github.com/users/jrz/followers","following_url":"https://api.github.com/users/jrz/following{/other_user}","gists_url":"https://api.github.com/users/jrz/gists{/gist_id}","starred_url":"https://api.github.com/users/jrz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jrz/subscriptions","organizations_url":"https://api.github.com/users/jrz/orgs","repos_url":"https://api.github.com/users/jrz/repos","events_url":"https://api.github.com/users/jrz/events{/privacy}","received_events_url":"https://api.github.com/users/jrz/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-03T07:01:02Z","updated_at":"2022-09-08T07:30:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"SQLite supports 'strict tables' since 3.37.1 https://sqlite.org/stricttables.html\r\n\r\nThis forces a datatype to be specified when creating a table. This is the preferred method in any application created by developers. \r\n\r\nUnspecified/ANY datatypes are useful for quick tryouts as an enduser, similar to excel. But it's counterproductive when creating an application.\r\n\r\nIf this will become a configurable setting, the default should be set to strict.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45937/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45937/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45920","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45920/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45920/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45920/events","html_url":"https://github.com/rails/rails/issues/45920","id":1358179995,"node_id":"I_kwDNIULOUPQumw","number":45920,"title":"Replace has_one through create_association might create duplicated rows","user":{"login":"lazaronixon","id":2651240,"node_id":"MDQ6VXNlcjI2NTEyNDA=","avatar_url":"https://avatars.githubusercontent.com/u/2651240?v=4","gravatar_id":"","url":"https://api.github.com/users/lazaronixon","html_url":"https://github.com/lazaronixon","followers_url":"https://api.github.com/users/lazaronixon/followers","following_url":"https://api.github.com/users/lazaronixon/following{/other_user}","gists_url":"https://api.github.com/users/lazaronixon/gists{/gist_id}","starred_url":"https://api.github.com/users/lazaronixon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lazaronixon/subscriptions","organizations_url":"https://api.github.com/users/lazaronixon/orgs","repos_url":"https://api.github.com/users/lazaronixon/repos","events_url":"https://api.github.com/users/lazaronixon/events{/privacy}","received_events_url":"https://api.github.com/users/lazaronixon/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-09-01T03:05:07Z","updated_at":"2022-09-01T23:03:40Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# Ensure backward compatibility with minitest 4.\r\nMinitest::Test = MiniTest::Unit::TestCase unless defined?(Minitest::Test)\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts do |t|\r\n  end\r\n\r\n  create_table :comments do |t|\r\n    t.references :post\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_one :comment, dependent: :destroy\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  validates_presence_of :post_id\r\n  belongs_to :post\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    post = Post.create!\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    sleep 5.seconds\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n```\r\n# transaction begin\r\nselect previous_comment for update\r\n\r\ninsert new_comment\r\n\r\ndelete previous_comment\r\n# transaction commit\r\n```\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n```\r\n# transaction begin\r\ninsert new_comment\r\n# transaction commit\r\n\r\n# transaction begin\r\ndelete previous_comment\r\n# transaction commit\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45920/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45920/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45906","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45906/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45906/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45906/events","html_url":"https://github.com/rails/rails/issues/45906","id":1355732552,"node_id":"I_kwDNIULOUM7WSA","number":45906,"title":"High object allocation count from `ActiveRecord::ConnectionAdapters::PoolManager#pool_configs `","user":{"login":"amarchenkoshopify","id":101111422,"node_id":"U_kgDOBgbWfg","avatar_url":"https://avatars.githubusercontent.com/u/101111422?v=4","gravatar_id":"","url":"https://api.github.com/users/amarchenkoshopify","html_url":"https://github.com/amarchenkoshopify","followers_url":"https://api.github.com/users/amarchenkoshopify/followers","following_url":"https://api.github.com/users/amarchenkoshopify/following{/other_user}","gists_url":"https://api.github.com/users/amarchenkoshopify/gists{/gist_id}","starred_url":"https://api.github.com/users/amarchenkoshopify/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amarchenkoshopify/subscriptions","organizations_url":"https://api.github.com/users/amarchenkoshopify/orgs","repos_url":"https://api.github.com/users/amarchenkoshopify/repos","events_url":"https://api.github.com/users/amarchenkoshopify/events{/privacy}","received_events_url":"https://api.github.com/users/amarchenkoshopify/received_events","type":"User","site_admin":false},"labels":[{"id":107186,"node_id":"MDU6TGFiZWwxMDcxODY=","url":"https://api.github.com/repos/rails/rails/labels/regression","name":"regression","color":"e10c02","default":false,"description":null},{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"eileencodes","id":1080678,"node_id":"MDQ6VXNlcjEwODA2Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/1080678?v=4","gravatar_id":"","url":"https://api.github.com/users/eileencodes","html_url":"https://github.com/eileencodes","followers_url":"https://api.github.com/users/eileencodes/followers","following_url":"https://api.github.com/users/eileencodes/following{/other_user}","gists_url":"https://api.github.com/users/eileencodes/gists{/gist_id}","starred_url":"https://api.github.com/users/eileencodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eileencodes/subscriptions","organizations_url":"https://api.github.com/users/eileencodes/orgs","repos_url":"https://api.github.com/users/eileencodes/repos","events_url":"https://api.github.com/users/eileencodes/events{/privacy}","received_events_url":"https://api.github.com/users/eileencodes/received_events","type":"User","site_admin":false},"assignees":[{"login":"eileencodes","id":1080678,"node_id":"MDQ6VXNlcjEwODA2Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/1080678?v=4","gravatar_id":"","url":"https://api.github.com/users/eileencodes","html_url":"https://github.com/eileencodes","followers_url":"https://api.github.com/users/eileencodes/followers","following_url":"https://api.github.com/users/eileencodes/following{/other_user}","gists_url":"https://api.github.com/users/eileencodes/gists{/gist_id}","starred_url":"https://api.github.com/users/eileencodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eileencodes/subscriptions","organizations_url":"https://api.github.com/users/eileencodes/orgs","repos_url":"https://api.github.com/users/eileencodes/repos","events_url":"https://api.github.com/users/eileencodes/events{/privacy}","received_events_url":"https://api.github.com/users/eileencodes/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/rails/rails/milestones/81","html_url":"https://github.com/rails/rails/milestone/81","labels_url":"https://api.github.com/repos/rails/rails/milestones/81/labels","id":7591006,"node_id":"MI_kwDNIULOAHPUXg","number":81,"title":"7.0.4","description":"","creator":{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":3,"state":"open","created_at":"2022-01-20T01:51:07Z","updated_at":"2022-08-30T13:21:37Z","due_on":null,"closed_at":null},"comments":2,"created_at":"2022-08-30T12:58:42Z","updated_at":"2022-08-31T12:37:42Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWhile working on memory efficiency investigation I noticed that a very big bunch of object allocations comes from a single method `ActiveRecord::ConnectionAdapters::PoolManager#pool_configs`:\r\n\r\n```ruby\r\n      def pool_configs(role = nil)\r\n        if role\r\n          @role_to_shard_mapping[role].values\r\n        else\r\n          @role_to_shard_mapping.flat_map { |_, shard_map| shard_map.values }\r\n        end\r\n      end \r\n```\r\n\r\nThis method is called on every activerecord operation and does not cache its result: could we think about a way of caching its result?\r\n\r\ncc @eileencodes \r\n\r\n### Expected behavior\r\n\r\n`#pool_configs` allocates configs once\r\n\r\n### Actual behavior\r\n\r\n`#pool_configs` allocates configs every time it is executed\r\n\r\n### System configuration\r\n**Rails version**: main branch\r\n\r\n**Ruby version**: 3.1\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45906/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45901","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45901/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45901/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45901/events","html_url":"https://github.com/rails/rails/issues/45901","id":1354555667,"node_id":"I_kwDNIULOULzhEw","number":45901,"title":"bin/rails dbconsole should include_password by default","user":{"login":"wpeterson","id":178135,"node_id":"MDQ6VXNlcjE3ODEzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/178135?v=4","gravatar_id":"","url":"https://api.github.com/users/wpeterson","html_url":"https://github.com/wpeterson","followers_url":"https://api.github.com/users/wpeterson/followers","following_url":"https://api.github.com/users/wpeterson/following{/other_user}","gists_url":"https://api.github.com/users/wpeterson/gists{/gist_id}","starred_url":"https://api.github.com/users/wpeterson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wpeterson/subscriptions","organizations_url":"https://api.github.com/users/wpeterson/orgs","repos_url":"https://api.github.com/users/wpeterson/repos","events_url":"https://api.github.com/users/wpeterson/events{/privacy}","received_events_url":"https://api.github.com/users/wpeterson/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-29T16:19:45Z","updated_at":"2022-08-30T00:17:43Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n1. Configure a Rails `config/database.yml` with a `password` required to connect\r\n2. Run `rails dbconsole`\r\n3. See prompt for database password, despite password being configured/available\r\n4. Run `rails dbconsole -p`\r\n5. See dbconsole properly load and use credentials to connect to database for DB console session\r\n\r\n### Expected behavior\r\nWhenever a Rails app has credentials like a password configured for a database, the database console session should use those credentials vs. prompting the user to re-enter a password interactively.  When credentials are not configured and a password is required, we should prompt then.\r\n\r\nThis behavior is implemented since early Rails versions but is disabled by default.  I propose we enable the proper password behavior by default.\r\n\r\n### Actual behavior\r\n`bin/rails dbconsole` always prompts for a password, even when one is configured for the app.\r\n\r\n### System configuration\r\n**Rails version**: All (6.x, 7.x, head)\r\n\r\n**Ruby version**: All \r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45901/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45901/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45899","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45899/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45899/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45899/events","html_url":"https://github.com/rails/rails/issues/45899","id":1353676820,"node_id":"I_kwDNIULOUK94FA","number":45899,"title":"Active Job unit tests fail using que 2.2.0","user":{"login":"yahonda","id":73684,"node_id":"MDQ6VXNlcjczNjg0","avatar_url":"https://avatars.githubusercontent.com/u/73684?v=4","gravatar_id":"","url":"https://api.github.com/users/yahonda","html_url":"https://github.com/yahonda","followers_url":"https://api.github.com/users/yahonda/followers","following_url":"https://api.github.com/users/yahonda/following{/other_user}","gists_url":"https://api.github.com/users/yahonda/gists{/gist_id}","starred_url":"https://api.github.com/users/yahonda/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yahonda/subscriptions","organizations_url":"https://api.github.com/users/yahonda/orgs","repos_url":"https://api.github.com/users/yahonda/repos","events_url":"https://api.github.com/users/yahonda/events{/privacy}","received_events_url":"https://api.github.com/users/yahonda/received_events","type":"User","site_admin":false},"labels":[{"id":123812746,"node_id":"MDU6TGFiZWwxMjM4MTI3NDY=","url":"https://api.github.com/repos/rails/rails/labels/activejob","name":"activejob","color":"5319e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-29T04:24:06Z","updated_at":"2022-09-09T15:33:02Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"### Steps to reproduce\r\nActive Job CI has been failing since que 2.2.0 is installed. https://buildkite.com/rails/rails/builds/89068#0182e6b9-7c84-4b85-a651-8d640f5eb076\r\n\r\n```ruby\r\ngit clone https://github.com/rails/rails\r\ncd rails/activejob\r\nbundle update que\r\nAJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\n```\r\n\r\nAlthough there are 3 failures and 75 errors. This script just runs a single test because it looks the root cause is the same.\r\n\r\n\r\n### Expected behavior\r\nIt should pass.\r\n\r\n### Actual behavior\r\nIt raises `ArgumentError: wrong number of arguments (given 2, expected 1)`.\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 62302\r\n\r\n# Running:\r\n\r\nE\r\n\r\nError:\r\nQueuingTest#test_run_queued_job:\r\nArgumentError: wrong number of arguments (given 2, expected 1)\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:78:in `run'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job_methods.rb:51:in `_run'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:248:in `block (2 levels) in _run_attrs'\r\n    (eval):9:in `run_job_middleware'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:247:in `block in _run_attrs'\r\n    <internal:kernel>:90:in `tap'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:246:in `_run_attrs'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:223:in `run'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/support/que/inline.rb:15:in `enqueue'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:66:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:27:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:67:in `block in enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:118:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:28:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:27:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:9:in `block (2 levels) in <module:Instrumentation>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:27:in `tag_logger'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:14:in `block (2 levels) in <module:Logging>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:138:in `run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:63:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:30:in `perform_later'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/cases/queuing_test.rb:14:in `block in <class:QueuingTest>'\r\n\r\n\r\nbin/test test/cases/queuing_test.rb:13\r\n\r\n\r\n\r\nFinished in 0.008930s, 111.9768 runs/s, 0.0000 assertions/s.\r\n1 runs, 0 assertions, 0 failures, 1 errors, 0 skips\r\n$\r\n```\r\n\r\n### Additional information\r\n* `require_job_options_kwarg?` always returns `false` because `JobWrapper.method(:enqueue).parameters` does not have any `[:key, :job_options]` \r\nwhere it looks expected to return `true`.\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 32774\r\n\r\n# Running:\r\n\r\n[46, 55] in ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n    46|       end\r\n    47|\r\n    48|       private\r\n    49|         def require_job_options_kwarg?\r\n    50|           require 'debug'\r\n=>  51|           binding.break\r\n    52|           @require_job_options_kwarg ||=\r\n    53|             JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }\r\n    54|         end\r\n    55|\r\n=>#0\tActiveJob::QueueAdapters::QueAdapter#require_job_options_kwarg? at ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:51\r\n  #1\tActiveJob::QueueAdapters::QueAdapter#enqueue(job=#<HelloJob:0x00007fc861807740 @arguments...) at ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:24\r\n  # and 40 frames (use `bt' command for all frames)\r\n(rdbg) JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }    # ruby\r\nfalse\r\n(rdbg) JobWrapper.method(:enqueue).parameters    # ruby\r\n[[:req, :args], [:keyreq, :priority], [:keyreq, :queue], [:key, :run_at]]\r\n(rdbg) quit    # command\r\nReally quit? [Y/n] Y\r\n```\r\n\r\n* By changing `require_job_options_kwarg?` always returns `true`, it raises `ArgumentError: missing keywords: :priority, :queue`\r\n\r\n```ruby\r\n$ git diff\r\ndiff --git a/activejob/lib/active_job/queue_adapters/que_adapter.rb b/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\nindex 41b3633a07..54e8cbc39b 100644\r\n--- a/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n+++ b/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n@@ -47,6 +47,7 @@ def enqueue_at(job, timestamp) # :nodoc:\r\n\r\n       private\r\n         def require_job_options_kwarg?\r\n+          return true\r\n           @require_job_options_kwarg ||=\r\n             JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }\r\n         end\r\n$\r\n```\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 21508\r\n\r\n# Running:\r\n\r\nE\r\n\r\nError:\r\nQueuingTest#test_run_queued_job:\r\nArgumentError: missing keywords: :priority, :queue\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:65:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:25:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:67:in `block in enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:118:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:28:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:27:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:9:in `block (2 levels) in <module:Instrumentation>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:27:in `tag_logger'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:14:in `block (2 levels) in <module:Logging>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:138:in `run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:63:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:30:in `perform_later'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/cases/queuing_test.rb:14:in `block in <class:QueuingTest>'\r\n\r\n\r\nbin/test test/cases/queuing_test.rb:13\r\n\r\n\r\n\r\nFinished in 0.008724s, 114.6312 runs/s, 0.0000 assertions/s.\r\n1 runs, 0 assertions, 0 failures, 1 errors, 0 skips\r\n$\r\n```\r\n\r\n\r\n### System configuration\r\n**Rails version**: main branch\r\n\r\n**Ruby version**: $ ruby -v\r\nruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [x86_64-linux]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45899/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45893","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45893/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45893/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45893/events","html_url":"https://github.com/rails/rails/issues/45893","id":1352793907,"node_id":"I_kwDNIULOUKH_Mw","number":45893,"title":"ActiveRecord: HMT with conditions does not update the in-memory collection when pushing new objects","user":{"login":"joanniclaborde","id":411925,"node_id":"MDQ6VXNlcjQxMTkyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/411925?v=4","gravatar_id":"","url":"https://api.github.com/users/joanniclaborde","html_url":"https://github.com/joanniclaborde","followers_url":"https://api.github.com/users/joanniclaborde/followers","following_url":"https://api.github.com/users/joanniclaborde/following{/other_user}","gists_url":"https://api.github.com/users/joanniclaborde/gists{/gist_id}","starred_url":"https://api.github.com/users/joanniclaborde/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joanniclaborde/subscriptions","organizations_url":"https://api.github.com/users/joanniclaborde/orgs","repos_url":"https://api.github.com/users/joanniclaborde/repos","events_url":"https://api.github.com/users/joanniclaborde/events{/privacy}","received_events_url":"https://api.github.com/users/joanniclaborde/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-26T22:40:12Z","updated_at":"2022-08-30T15:33:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi! When using a `has_many :a, through: :b` relation, and the `:b` relation has a condition, adding new objects doesn't update the in-memory collection properly (stops after the first object).\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :packages, force: true do |t|\r\n  end\r\n\r\n  create_table :package_items, force: true do |t|\r\n    t.integer :package_id\r\n    t.integer :item_id\r\n  end\r\n\r\n  create_table :items, force: true do |t|\r\n    t.boolean \"deleted\", default: false\r\n  end\r\nend\r\n\r\nclass Package < ActiveRecord::Base\r\n  has_many :package_items, ->{ where(item_id: Item.active.pluck(:id)) }\r\n  has_many :items, through: :package_items\r\nend\r\n\r\nclass PackageItem < ActiveRecord::Base\r\n  belongs_to :package\r\n  belongs_to :item\r\nend\r\n\r\nclass Item < ActiveRecord::Base\r\n  has_many :package_items\r\n  has_many :packages, through: :package_items\r\n\r\n  scope :active, -> { where(deleted: false) }\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    package = Package.create!\r\n    package.items << Item.create!\r\n    package.items << Item.create!\r\n    package.items << Item.create!\r\n\r\n    # This should be [3, 3, 3] but we get [3, 1, 3]\r\n    assert_equal [3, 3, 3], [Item.count, package.items.count, package.reload.items.count]\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n`package.items.count` is equal to 3.\r\n\r\n### Actual behavior\r\n`package.items.count` is equal to 1, even though all the items and relations are created properly (see assertion).\r\n\r\n### System configuration\r\n**Rails version**: tested on `7.1.0.alpha` and `6.1.6.1`.\r\n\r\n**Ruby version**: tested on `2.7.5`.\r\n\r\n### Workaround\r\nI was able to fix this issue by changing the weird condition to a proper scope:\r\n\r\n```ruby\r\nclass Package < ActiveRecord::Base\r\n  has_many :package_items, ->{ includes(:item).merge(Item.active) }\r\n  has_many :items, through: :package_items\r\nend\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45893/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45893/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45880","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45880/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45880/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45880/events","html_url":"https://github.com/rails/rails/issues/45880","id":1349546108,"node_id":"I_kwDNIULOUHBwfA","number":45880,"title":"Google search links to old API docs","user":{"login":"abraham","id":3341,"node_id":"MDQ6VXNlcjMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/3341?v=4","gravatar_id":"","url":"https://api.github.com/users/abraham","html_url":"https://github.com/abraham","followers_url":"https://api.github.com/users/abraham/followers","following_url":"https://api.github.com/users/abraham/following{/other_user}","gists_url":"https://api.github.com/users/abraham/gists{/gist_id}","starred_url":"https://api.github.com/users/abraham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abraham/subscriptions","organizations_url":"https://api.github.com/users/abraham/orgs","repos_url":"https://api.github.com/users/abraham/repos","events_url":"https://api.github.com/users/abraham/events{/privacy}","received_events_url":"https://api.github.com/users/abraham/received_events","type":"User","site_admin":true},"labels":[{"id":150377,"node_id":"MDU6TGFiZWwxNTAzNzc=","url":"https://api.github.com/repos/rails/rails/labels/docs","name":"docs","color":"02d7e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-24T14:33:55Z","updated_at":"2022-08-25T23:48:01Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n1. Search Google for a Rails API https://www.google.com/search?q=rails+update_all\r\n2. Follow link for \"ActiveRecord::Relation - Rails API\"\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n\r\nFind documentation for the latest version of Rails. Currently `7.0.3.1`.\r\n\r\n`https://api.rubyonrails.org/classes/ActiveRecord/Relation.html`\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n\r\nFind documentation for the the very old version of `3.2.3`.\r\n\r\n`https://api.rubyonrails.org/v3.2.3/classes/ActiveRecord/Relation.html`\r\n\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45880/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45880/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45832","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45832/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45832/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45832/events","html_url":"https://github.com/rails/rails/issues/45832","id":1339487378,"node_id":"I_kwDNIULOT9b0kg","number":45832,"title":"MySQL 8.0 VARBINARY default value is hexadecimal","user":{"login":"HParker","id":4482399,"node_id":"MDQ6VXNlcjQ0ODIzOTk=","avatar_url":"https://avatars.githubusercontent.com/u/4482399?v=4","gravatar_id":"","url":"https://api.github.com/users/HParker","html_url":"https://github.com/HParker","followers_url":"https://api.github.com/users/HParker/followers","following_url":"https://api.github.com/users/HParker/following{/other_user}","gists_url":"https://api.github.com/users/HParker/gists{/gist_id}","starred_url":"https://api.github.com/users/HParker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HParker/subscriptions","organizations_url":"https://api.github.com/users/HParker/orgs","repos_url":"https://api.github.com/users/HParker/repos","events_url":"https://api.github.com/users/HParker/events{/privacy}","received_events_url":"https://api.github.com/users/HParker/received_events","type":"User","site_admin":true},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":309390193,"node_id":"MDU6TGFiZWwzMDkzOTAxOTM=","url":"https://api.github.com/repos/rails/rails/labels/MySQL","name":"MySQL","color":"fef2c0","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-08-15T20:42:09Z","updated_at":"2022-08-16T10:23:16Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Default values on VARBINARY columns changed behavior between MySQL 5.7 and 8.0\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"mysql2\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"mysql2\", database: \"adam_test\", prepared_statements: false, host: '127.0.0.1', port: 3307, user: \"root\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.binary :some_binary, null: false, limit: 1024, default: \"hello-world\"\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_mysql_defaults\r\n    post = Post.create!\r\n\r\n    mysql_vars = ActiveRecord::Base.connection.select_rows(\"SHOW VARIABLES LIKE '%version%'\")\r\n    puts mysql_vars.inspect\r\n    puts Post.column_defaults\r\n\r\n    # assert_equal \"0x68656C6C6F2D776F726C64\", post.some_binary # This passes\r\n    assert_equal \"hello-world\", post.some_binary # This fails\r\n\r\n    reloaded_post = Post.first\r\n    assert_equal \"hello-world\", reloaded_post.some_binary # this passes\r\n  end\r\nend\r\n```\r\n\r\nOn MySQL 5.7:\r\n\r\n```ruby\r\nPost.column_defaults # => {\"id\"=>nil, \"some_binary\"=>\"hello-world\"}\r\n```\r\n\r\nOn MySQL 8.0:\r\n\r\n```ruby\r\nPost.column_defaults # => {\"id\"=>nil, \"some_binary\"=>\"0x68656C6C6F2D776F726C64\"}\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe default value on binary columns should be Ruby strings, not ruby strings of hexadecimal.\r\n\r\n### Actual behavior\r\n\r\nThe column default in MySQL 8.0 is a hexadecimal string representing the binary data.\r\n\r\n### System configuration\r\n**Rails version**: main\r\n\r\n**Ruby version**: 3.1.0\r\n\r\nSome interesting MySQL forum posts about this behavior change:\r\n\r\n- https://forums.mysql.com/read.php?24,685577,685577\r\n- https://forums.mysql.com/read.php?20,698061,698061#msg-698061\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45832/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45832/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45830","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45830/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45830/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45830/events","html_url":"https://github.com/rails/rails/issues/45830","id":1338922250,"node_id":"I_kwDNIULOT85VCg","number":45830,"title":"ActiveRecord Rollbacks on errors which happen on commit","user":{"login":"Baxxx","id":17880055,"node_id":"MDQ6VXNlcjE3ODgwMDU1","avatar_url":"https://avatars.githubusercontent.com/u/17880055?v=4","gravatar_id":"","url":"https://api.github.com/users/Baxxx","html_url":"https://github.com/Baxxx","followers_url":"https://api.github.com/users/Baxxx/followers","following_url":"https://api.github.com/users/Baxxx/following{/other_user}","gists_url":"https://api.github.com/users/Baxxx/gists{/gist_id}","starred_url":"https://api.github.com/users/Baxxx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baxxx/subscriptions","organizations_url":"https://api.github.com/users/Baxxx/orgs","repos_url":"https://api.github.com/users/Baxxx/repos","events_url":"https://api.github.com/users/Baxxx/events{/privacy}","received_events_url":"https://api.github.com/users/Baxxx/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":126910270,"node_id":"MDU6TGFiZWwxMjY5MTAyNzA=","url":"https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps","name":"With reproduction steps","color":"009800","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2022-08-15T12:09:14Z","updated_at":"2022-08-25T13:32:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nIn some of our projects we use Postgres as database, and for some cases we deferred trigger constraints. These triggers fire up when `COMMIT` is called. Trigger can raise an error, which kills the transaction. ActiveRecord catches the error, and bubbles it up to developer, but it also sends `ROLLBACK` to Postgres, to which Postgres gives a warning that there is no transaction in progress.\r\n\r\nI didn't test this with sqlite3 or mysql.\r\n\r\nYou can see the reproduction script, and screenshot with the current behavior.\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", \"~> 7\"\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"logger\"\r\n\r\nlogger = Logger.new(STDOUT)\r\n\r\n# This connection will do for database-independent bug reports.\r\npg_opts = {adapter: \"postgresql\", database: \"ar_rollback_after_failed_commit_issue\"}\r\n\r\nActiveRecord::Base.establish_connection(pg_opts.except(:database))\r\nActiveRecord::Base.connection.drop_database(pg_opts[:database])\r\nActiveRecord::Base.connection.create_database(pg_opts[:database])\r\nlogger.info \"Database #{pg_opts[:database]} was (re)created.\"\r\n\r\nActiveRecord::Base.establish_connection(pg_opts)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  execute <<~SQL\r\n    CREATE FUNCTION perform_custom_validation()\r\n      RETURNS TRIGGER\r\n      LANGUAGE plpgsql\r\n      AS $$\r\n        DECLARE\r\n          total_invalid INTEGER;\r\n        BEGIN\r\n          SELECT COUNT(*) INTO total_invalid\r\n          FROM things\r\n          WHERE name = 'bad';\r\n\r\n          IF (total_invalid > 0) THEN\r\n            RAISE EXCEPTION 'There are bad things';\r\n          END IF;\r\n          RETURN NULL;\r\n        END;\r\n      $$;\r\n\r\n    CREATE TABLE \"things\" (\r\n      \"id\" bigserial primary key,\r\n      \"name\" character varying NOT NULL\r\n    );\r\n\r\n    CREATE CONSTRAINT\r\n      TRIGGER bank_transaction_rl_payment_date_validation\r\n      AFTER INSERT OR UPDATE ON things\r\n      DEFERRABLE INITIALLY DEFERRED\r\n      FOR EACH ROW EXECUTE FUNCTION perform_custom_validation();\r\n  SQL\r\nend\r\n\r\nclass Thing < ActiveRecord::Base\r\n  validates :name, presence: true\r\nend\r\n\r\n# All good\r\nlogger.info \"First transaction\"\r\nThing.create!(name: \"good\")\r\n\r\n# AR tries to commit, DB raises an error, AR tries to ROLLBACK, and PG gives a warning\r\nbegin\r\n  logger.info \"Second transaction\"\r\n  Thing.create!(name: \"bad\")\r\nrescue StandardError\r\n  # Doesn't matter\r\nend\r\n```\r\n\r\n### Expected behavior\r\nActiveRecord should not `ROLLBACK`, as there is no transaction in progress.\r\n\r\n### Actual behavior\r\nActiveRecord tries to `ROLLBACK`.\r\n\r\n![Screenshot from 2022-08-15 14-07-11](https://user-images.githubusercontent.com/17880055/184632335-0277cd27-4c7b-4b98-94a8-373be34a87ee.png)\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 2.7.5p203\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45830/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45830/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45823","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45823/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45823/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45823/events","html_url":"https://github.com/rails/rails/issues/45823","id":1337409694,"node_id":"I_kwDNIULOT7dAng","number":45823,"title":"Change Column with Raw Character Set Failure","user":{"login":"ahoglund","id":3407303,"node_id":"MDQ6VXNlcjM0MDczMDM=","avatar_url":"https://avatars.githubusercontent.com/u/3407303?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoglund","html_url":"https://github.com/ahoglund","followers_url":"https://api.github.com/users/ahoglund/followers","following_url":"https://api.github.com/users/ahoglund/following{/other_user}","gists_url":"https://api.github.com/users/ahoglund/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoglund/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoglund/subscriptions","organizations_url":"https://api.github.com/users/ahoglund/orgs","repos_url":"https://api.github.com/users/ahoglund/repos","events_url":"https://api.github.com/users/ahoglund/events{/privacy}","received_events_url":"https://api.github.com/users/ahoglund/received_events","type":"User","site_admin":true},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":126910270,"node_id":"MDU6TGFiZWwxMjY5MTAyNzA=","url":"https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps","name":"With reproduction steps","color":"009800","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-12T16:21:50Z","updated_at":"2022-08-12T20:47:38Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"With [this recent change to how collation is handled for column changes](https://github.com/rails/rails/pull/45744/files), there is now a potential for older migrations written in a specific manner to break if the `collation:` argument is not specific.\r\n\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\n# you need to install mysql locally for this to work.\r\n# on Mac:\r\n# brew install mysql\r\n# brew services start mysql\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"mysql2\"\r\n\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nclient = Mysql2::Client.new(host: 'localhost', username: \"root\")\r\nclient.query(\"DROP DATABASE test\")\r\nclient.query(\"CREATE DATABASE test\")\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"mysql2\", database: \"test\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :payments, force: true do |t|\r\n    t.string :description, \"varchar(64)\", null: false\r\n  end\r\nend\r\n\r\nclass Payment < ActiveRecord::Base\r\nend\r\n\r\nclass ChangeAmountToAddScale < ActiveRecord::Migration[7.1]\r\n  # This sets the default character set for the payments\r\n  # table to utf32 with a default COLLATION of utf32_general_ci.\r\n  # This can be verified by running the following query:\r\n  #\r\n  # SHOW CHARACTER SET;\r\n  #\r\n  connection.execute(<<~SQL)\r\n    ALTER TABLE payments CONVERT TO CHARACTER SET utf32\r\n  SQL\r\n\r\n  def change\r\n    reversible do |dir|\r\n      dir.up do\r\n        change_table(:payments, bulk: true) do |t|\r\n          # The default collation of utf32_general_ci\r\n          # will not be compatible with this ascii character set. \r\n          #\r\n          # when we build the column change now we automatically\r\n          # try to assign the previous collation to the column if no `collation:` is specified.\r\n          # \r\n          # https://github.com/rails/rails/pull/45744\r\n          #\r\n          # The workaround is to add `collation: 'ascii_bin'` or `collation: 'ascii_general_ci'` to the change.\r\n          #\r\n          # This isn't a huge deal and it has a workaround but it _will_ break\r\n          # anyone who has migrations that are written like this and upgrade to this version\r\n          # of Rails.\r\n          t.change :description, \"varchar(64) CHARACTER SET ascii\", null: false\r\n        end\r\n      end\r\n\r\n      dir.down do\r\n        change_table(:payments, bulk: true) do |t|\r\n          t.change :description, \"varchar(64)\", null: false\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_migration_up\r\n    ChangeAmountToAddScale.migrate(:up)\r\n    Payment.reset_column_information\r\n\r\n    assert_equal \"varchar\", Payment.columns.last.sql_type\r\n  end\r\n\r\n  def test_migration_down\r\n    ChangeAmountToAddScale.migrate(:down)\r\n    Payment.reset_column_information\r\n\r\n    assert_equal \"varchar\", Payment.columns.last.sql_type\r\n  end\r\nend\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nI would expect this to detect that the character set is being changed, and either \r\n\r\n1. change the collation to be compatible.\r\n2. At least give a clearer error that requires the `collation:` arg to be passed when the character set is being modified.\r\n\r\n### Actual behavior\r\n\r\nThis error:\r\n\r\n```\r\nError:\r\nBugTest#test_migration_up:\r\nActiveRecord::StatementInvalid: Mysql2::Error: COLLATION 'utf32_general_ci' is not valid for CHARACTER SET 'ascii'\r\n    test.rb:51:in `block (2 levels) in change'\r\n    test.rb:50:in `block in change'\r\n    test.rb:49:in `change'\r\n    test.rb:67:in `test_migration_up'\r\n```\r\n\r\n### System configuration\r\n**Rails version**: main\r\n**Ruby version**: ruby 3.1.1p18\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45823/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45823/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45822","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45822/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45822/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45822/events","html_url":"https://github.com/rails/rails/issues/45822","id":1337253221,"node_id":"I_kwDNIULOT7TdZQ","number":45822,"title":"ActiveRecord: Wrong results returned by ActiveRecord::Associations::Preloader when intermediate association is already preloaded.","user":{"login":"yopzer","id":6330271,"node_id":"MDQ6VXNlcjYzMzAyNzE=","avatar_url":"https://avatars.githubusercontent.com/u/6330271?v=4","gravatar_id":"","url":"https://api.github.com/users/yopzer","html_url":"https://github.com/yopzer","followers_url":"https://api.github.com/users/yopzer/followers","following_url":"https://api.github.com/users/yopzer/following{/other_user}","gists_url":"https://api.github.com/users/yopzer/gists{/gist_id}","starred_url":"https://api.github.com/users/yopzer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yopzer/subscriptions","organizations_url":"https://api.github.com/users/yopzer/orgs","repos_url":"https://api.github.com/users/yopzer/repos","events_url":"https://api.github.com/users/yopzer/events{/privacy}","received_events_url":"https://api.github.com/users/yopzer/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"jhawthorn","id":131752,"node_id":"MDQ6VXNlcjEzMTc1Mg==","avatar_url":"https://avatars.githubusercontent.com/u/131752?v=4","gravatar_id":"","url":"https://api.github.com/users/jhawthorn","html_url":"https://github.com/jhawthorn","followers_url":"https://api.github.com/users/jhawthorn/followers","following_url":"https://api.github.com/users/jhawthorn/following{/other_user}","gists_url":"https://api.github.com/users/jhawthorn/gists{/gist_id}","starred_url":"https://api.github.com/users/jhawthorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhawthorn/subscriptions","organizations_url":"https://api.github.com/users/jhawthorn/orgs","repos_url":"https://api.github.com/users/jhawthorn/repos","events_url":"https://api.github.com/users/jhawthorn/events{/privacy}","received_events_url":"https://api.github.com/users/jhawthorn/received_events","type":"User","site_admin":true},"assignees":[{"login":"jhawthorn","id":131752,"node_id":"MDQ6VXNlcjEzMTc1Mg==","avatar_url":"https://avatars.githubusercontent.com/u/131752?v=4","gravatar_id":"","url":"https://api.github.com/users/jhawthorn","html_url":"https://github.com/jhawthorn","followers_url":"https://api.github.com/users/jhawthorn/followers","following_url":"https://api.github.com/users/jhawthorn/following{/other_user}","gists_url":"https://api.github.com/users/jhawthorn/gists{/gist_id}","starred_url":"https://api.github.com/users/jhawthorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhawthorn/subscriptions","organizations_url":"https://api.github.com/users/jhawthorn/orgs","repos_url":"https://api.github.com/users/jhawthorn/repos","events_url":"https://api.github.com/users/jhawthorn/events{/privacy}","received_events_url":"https://api.github.com/users/jhawthorn/received_events","type":"User","site_admin":true}],"milestone":null,"comments":1,"created_at":"2022-08-12T14:06:55Z","updated_at":"2022-08-18T23:36:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"activerecord\", \"7.0.3.1\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :a_records, force: true\r\n\r\n  create_table :b_records, force: true do |t|\r\n    t.references :a_record\r\n    t.references :c_record\r\n  end\r\n\r\n  create_table :c_records, force: true\r\n\r\n  create_table :d_records, force: true do |t|\r\n    t.references :c_record\r\n  end\r\nend\r\n\r\nclass ARecord < ActiveRecord::Base\r\n  has_one :b_record\r\n  has_one :c_record, through: :b_record\r\n  has_many :d_records, through: :c_record\r\nend\r\n\r\nclass BRecord < ActiveRecord::Base\r\n  belongs_to :a_record\r\n  belongs_to :c_record\r\nend\r\n\r\nclass CRecord < ActiveRecord::Base\r\n  has_one :b_record\r\n  has_many :d_records\r\nend\r\n\r\nclass DRecord < ActiveRecord::Base\r\n  belongs_to :c_record\r\nend\r\n\r\na = ARecord.create!\r\nc = CRecord.create!\r\nBRecord.create!(a_record: a, c_record: c)\r\nDRecord.create!(c_record: c)\r\nDRecord.create!(c_record: c)\r\n\r\na.reload\r\na.c_record # NB: if removed this works\r\n\r\n::ActiveRecord::Associations::Preloader.new(records: [a], associations: :d_records).call\r\nputs({ record_ids: a.d_records.map(&:id), size: a.d_records.size })\r\n```\r\n\r\n### Expected behavior\r\nTwo records should be loaded:\r\n`{:record_ids=>[1, 2], :size=>2}`\r\n\r\n### Actual behavior\r\nNo records are loaded:\r\n`{:record_ids=>[], :size=>0}`\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 2.7.5\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45822/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45822/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45817","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45817/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45817/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45817/events","html_url":"https://github.com/rails/rails/issues/45817","id":1336797388,"node_id":"I_kwDNIULOT63ozA","number":45817,"title":"Value of attribute default proc is shared between instances after dup + dirty tracking","user":{"login":"quadule","id":15299,"node_id":"MDQ6VXNlcjE1Mjk5","avatar_url":"https://avatars.githubusercontent.com/u/15299?v=4","gravatar_id":"","url":"https://api.github.com/users/quadule","html_url":"https://github.com/quadule","followers_url":"https://api.github.com/users/quadule/followers","following_url":"https://api.github.com/users/quadule/following{/other_user}","gists_url":"https://api.github.com/users/quadule/gists{/gist_id}","starred_url":"https://api.github.com/users/quadule/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/quadule/subscriptions","organizations_url":"https://api.github.com/users/quadule/orgs","repos_url":"https://api.github.com/users/quadule/repos","events_url":"https://api.github.com/users/quadule/events{/privacy}","received_events_url":"https://api.github.com/users/quadule/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-12T06:16:00Z","updated_at":"2022-08-15T15:56:11Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWhen an attribute without a database column defines a default proc, `dup`ing a model in which the default wasn't accessed passes the unevaluated `UserProvidedDefault` attribute to the new instance as the attribute's original value. Checking the new attribute for changes will then memoize the value in the original attribute definition, making it the default value in every new model instance afterward.\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n  gem \"rails\", github: \"rails/rails\", ref: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Schema.define do\r\n  create_table :cats do |t|\r\n    t.string :name\r\n  end\r\nend\r\n\r\nclass Cat < ActiveRecord::Base\r\n  attribute :sounds, default: -> { [] }\r\nend\r\n\r\nclass VirtualAttributeTest < Minitest::Test\r\n  def test_virtual_attribute_defaults_are_independent\r\n    Cat.new.dup.save!\r\n    Cat.new.sounds << \"meow\"\r\n    refute_same Cat.new.sounds, Cat.new.sounds\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nEach new instance should get a new default value from the proc.\r\n\r\n### Actual behavior\r\nAfter using dirty tracking on a duplicated instance with an uncalled proc default, all new instances of a model receive the same default value and share any changes made to it.\r\n\r\n### Affected versions\r\nThis seems to date back quite a while; the test fails on the main branch back to 5-1-stable.\r\n\r\n### Credits\r\nThanks to @GBH for originally discovering this bug.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45817/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45817/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45794","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45794/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45794/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45794/events","html_url":"https://github.com/rails/rails/issues/45794","id":1332999733,"node_id":"I_kwDNIULOT3P2NQ","number":45794,"title":"Action Cable client goes in a connection loop if you subscribe multiple times to the same channel","user":{"login":"ProGM","id":5167659,"node_id":"MDQ6VXNlcjUxNjc2NTk=","avatar_url":"https://avatars.githubusercontent.com/u/5167659?v=4","gravatar_id":"","url":"https://api.github.com/users/ProGM","html_url":"https://github.com/ProGM","followers_url":"https://api.github.com/users/ProGM/followers","following_url":"https://api.github.com/users/ProGM/following{/other_user}","gists_url":"https://api.github.com/users/ProGM/gists{/gist_id}","starred_url":"https://api.github.com/users/ProGM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ProGM/subscriptions","organizations_url":"https://api.github.com/users/ProGM/orgs","repos_url":"https://api.github.com/users/ProGM/repos","events_url":"https://api.github.com/users/ProGM/events{/privacy}","received_events_url":"https://api.github.com/users/ProGM/received_events","type":"User","site_admin":false},"labels":[{"id":300028327,"node_id":"MDU6TGFiZWwzMDAwMjgzMjc=","url":"https://api.github.com/repos/rails/rails/labels/actioncable","name":"actioncable","color":"bfdadc","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-09T09:48:36Z","updated_at":"2022-08-17T17:57:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\nYou can just start from a fresh `rails new [project-name]` installation.\r\nChannel code:\r\n```ruby\r\nclass ArticleChannel < ApplicationCable::Channel\r\n  def subscribed\r\n    stream_from \"ArticleChannel\"\r\n  end\r\n\r\n  def unsubscribed\r\n    # Any cleanup needed when channel is unsubscribed\r\n  end\r\nend\r\n```\r\n\r\nJavascript code:\r\n```javascript\r\nimport consumer from \"channels/consumer\"\r\n\r\nfunction subscribe() {\r\n\treturn consumer.subscriptions.create('ArticleChannel', {\r\n\t\tconnected() {\r\n\t\t\tconsole.log('connected');\r\n\t\t\t// Called when the subscription is ready for use on the server\r\n\t\t},\r\n\r\n\t\tdisconnected() {\r\n\t\t\tconsole.log('disconnected');\r\n\t\t\t// Called when the subscription has been terminated by the server\r\n\t\t},\r\n\r\n\t\treceived(data) {\r\n\t\t\tconsole.log('received', data);\r\n\t\t\t// Called when there's incoming data on the websocket for this channel\r\n\t\t}\r\n\t});\r\n}\r\n\r\nsetTimeout(() => {\r\n\tsubscribe();\r\n}, 3000);\r\n\r\nsetTimeout(() => {\r\n\tsubscribe();\r\n}, 4000);\r\n```\r\n\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nAny of these options could be considered an expected behavior:\r\n* Everything just works™, both subscriptions receive notification from that channel and no error is raised\r\n* The second `subscription.create(...)` raises some kind of error, notifying that the channel is already connected\r\n* The second `subscription.create(...)` returns the same instance of Subscription and writes a `console.warning` in console\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nThe second subscriptions triggers a connection loop.\r\n\r\nExample logs with `ActionCable.logger.enabled = true`.\r\n\r\n```\r\n[ActionCable] Opening WebSocket, current state is null, subprotocols: actioncable-v1-json,actioncable-unsupported 1660037219747\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] ConnectionMonitor started. stale threshold = 6 s 1660037219748\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] WebSocket onopen event, using 'actioncable-v1-json' subprotocol 1660037219758\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] ConnectionMonitor recorded connect 1660037219759\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor guaranteeing {\"channel\":\"ArticleChannel\"} 1660037219760\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] Subscription confirmed {\"channel\":\"ArticleChannel\"} 1660037219762\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor forgetting {\"channel\":\"ArticleChannel\"} 1660037219762\r\narticle_channel-b29f3f7bf31169dfadd26c7747a46706d4992a1fd842de8268f206c5f0a0fe45.js:6 connected\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor guaranteeing {\"channel\":\"ArticleChannel\"} 1660037220744\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221248\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221248\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n... and so on, forever...\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 3.1\r\n\r\n### Possible solutions\r\nThis issue happens because the identifier of both subscriptions is the same. Since Rails (ActionCable) doesn't answer to any subsequential command \"subscribe\" from the same client (in this case: `{\"command\":\"subscribe\",\"identifier\":\"{\\\"channel\\\":\\\"ArticleChannel\\\"}\"}`), the `SubscriptionGuarantor` considers the connection failed and [retries to connect after 500ms](https://github.com/rails/rails/blob/8994f09dd2f6ae363e74d8ee3b24700d9db94a16/actioncable/app/assets/javascripts/actioncable.esm.js#L351).\r\n\r\nI see various options to fix this:\r\n* Raise an exception when trying to create a subscription with the same identifier\r\n* Add a random/uuid to the identifier when connecting, so two connection would not share the same identifier? (I've already tested it, and it seems to fix)\r\n\r\nWould you accept a PR from me regarding this?","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45794/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45794/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45791","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45791/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45791/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45791/events","html_url":"https://github.com/rails/rails/issues/45791","id":1332570977,"node_id":"I_kwDNIULOT21rYQ","number":45791,"title":"Google::Apis::ClientError raised when using ActiveStorage to generate signed URLs to access a file in a GCS bucket with GKE Workload Identity","user":{"login":"danielyazbek","id":18390164,"node_id":"MDQ6VXNlcjE4MzkwMTY0","avatar_url":"https://avatars.githubusercontent.com/u/18390164?v=4","gravatar_id":"","url":"https://api.github.com/users/danielyazbek","html_url":"https://github.com/danielyazbek","followers_url":"https://api.github.com/users/danielyazbek/followers","following_url":"https://api.github.com/users/danielyazbek/following{/other_user}","gists_url":"https://api.github.com/users/danielyazbek/gists{/gist_id}","starred_url":"https://api.github.com/users/danielyazbek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielyazbek/subscriptions","organizations_url":"https://api.github.com/users/danielyazbek/orgs","repos_url":"https://api.github.com/users/danielyazbek/repos","events_url":"https://api.github.com/users/danielyazbek/events{/privacy}","received_events_url":"https://api.github.com/users/danielyazbek/received_events","type":"User","site_admin":false},"labels":[{"id":664533972,"node_id":"MDU6TGFiZWw2NjQ1MzM5NzI=","url":"https://api.github.com/repos/rails/rails/labels/activestorage","name":"activestorage","color":"bfd4f2","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-09T01:05:08Z","updated_at":"2022-08-09T15:53:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nConfigure ActiveStorage with GKE Workload identity (as documented [here](https://edgeguides.rubyonrails.org/active_storage_overview.html#google-cloud-storage-service)):\r\n\r\n```ruby\r\ngoogle:\r\n  service: GCS\r\n  iam: true\r\n  project: <%= ENV['ACTIVE_STORAGE_PROJECT'] %>\r\n  bucket: <%= ENV['ACTIVE_STORAGE_BUCKET'] %>\r\n```\r\n\r\nDefine a class:\r\n```ruby\r\nclass Transaction < ApplicationRecord\r\n  has_one_attached :csv_report\r\nend\r\n```\r\n\r\nWrite something to ActiveStorage:\r\n```ruby\r\nt = Transaction.create\r\nt.csv_report.attach(io: StringIO.new(\"A,B,C\"), filename: 'test.csv')\r\n```\r\n\r\nGenerate a Signed URL\r\n```ruby\r\nRails.application.routes.url_helpers.rails_blob_url(Transaction.last.csv_report, disposition: 'attachment')\r\n```\r\n\r\nPaste the generated URL into a browser\r\n\r\n### Expected behavior\r\nActiveRecord provides the attachment\r\n\r\n### Actual behavior\r\nError is raised:\r\n\r\n```\r\nGoogle::Apis::ClientError (Invalid request):\r\ngems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:236:in `check_status': Invalid request (Google::Apis::ClientError)\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/api_command.rb:134:in `check_status'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:199:in `process_response'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:318:in `execute_once'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:118:in `block (2 levels) in execute'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:61:in `block in retriable'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `times'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `retriable'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:115:in `block in execute'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:61:in `block in retriable'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `times'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `retriable'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:105:in `execute'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/base_service.rb:397:in `execute_or_queue_command'\r\n    from gems/google-apis-iamcredentials_v1-0.13.0/lib/google/apis/iamcredentials_v1/service.rb:158:in `sign_service_account_blob'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service/gcs_service.rb:232:in `block in signer'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file/signer_v2.rb:135:in `generate_signature'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file/signer_v2.rb:128:in `signed_url'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file.rb:1801:in `signed_url'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service/gcs_service.rb:160:in `private_url'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:123:in `block in url'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications/instrumenter.rb:24:in `instrument'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications.rb:206:in `instrument'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:163:in `instrument'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:118:in `url'\r\n    from gems/activestorage-7.0.3.1models/active_storage/blob.rb:217:in `url'\r\n    from gems/activestorage-7.0.3.1controllers/active_storage/blobs/redirect_controller.rb:14:in `show'\r\n```\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 3.1.2\r\n\r\n**google-cloud-storage gem version:** 1.38.0\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45791/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45791/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45778","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45778/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45778/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45778/events","html_url":"https://github.com/rails/rails/issues/45778","id":1330360134,"node_id":"I_kwDNIULOT0uvRg","number":45778,"title":"ActiveStorage attachments are lost when casting using Becomes","user":{"login":"markedmondson","id":1653699,"node_id":"MDQ6VXNlcjE2NTM2OTk=","avatar_url":"https://avatars.githubusercontent.com/u/1653699?v=4","gravatar_id":"","url":"https://api.github.com/users/markedmondson","html_url":"https://github.com/markedmondson","followers_url":"https://api.github.com/users/markedmondson/followers","following_url":"https://api.github.com/users/markedmondson/following{/other_user}","gists_url":"https://api.github.com/users/markedmondson/gists{/gist_id}","starred_url":"https://api.github.com/users/markedmondson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markedmondson/subscriptions","organizations_url":"https://api.github.com/users/markedmondson/orgs","repos_url":"https://api.github.com/users/markedmondson/repos","events_url":"https://api.github.com/users/markedmondson/events{/privacy}","received_events_url":"https://api.github.com/users/markedmondson/received_events","type":"User","site_admin":false},"labels":[{"id":664533972,"node_id":"MDU6TGFiZWw2NjQ1MzM5NzI=","url":"https://api.github.com/repos/rails/rails/labels/activestorage","name":"activestorage","color":"bfd4f2","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-05T20:19:16Z","updated_at":"2022-08-09T18:05:34Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\nCreate an ActiveRecord model with an ActiveStorage relation. Initialize and add the associated attachment. Cast the object to another subclassed model, the associated attachment is lost.\r\n\r\n```ruby\r\nunless File.exist?('Gemfile')\r\n    File.write('Gemfile', <<-GEMFILE)\r\n    source 'https://rubygems.org'\r\n    gem 'rails', '~> 6.1'\r\n    gem 'sqlite3'\r\n    GEMFILE\r\n\r\n    system 'bundle'\r\nend\r\n\r\nrequire 'bundler'\r\nBundler.setup(:default)\r\n\r\nrequire 'active_record'\r\nrequire 'active_storage/engine'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  config.hosts << 'example.org'\r\n  config.eager_load = false\r\n  config.session_store :cookie_store, key: 'cookie_store_key'\r\n  secrets.secret_key_base = 'secret_key_base'\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  config.active_storage.service = :local\r\n  config.active_storage.service_configurations = {\r\n    local: {\r\n      root: Dir.tmpdir,\r\n      service: 'Disk'\r\n    }\r\n  }\r\nend\r\n\r\nENV['DATABASE_URL'] = 'sqlite3::memory:'\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\nRails.application.initialize!\r\n\r\nrequire ActiveStorage::Engine.root.join('db/migrate/20170806125915_create_active_storage_tables.rb').to_s\r\n\r\nActiveRecord::Schema.define do\r\n  CreateActiveStorageTables.new.change\r\n\r\n  create_table :posts do |t|\r\n    t.string :title\r\n    t.string :text\r\n  end\r\n\r\n  create_table :comments do |t|\r\n    t.belongs_to :post\r\n    t.string :text\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post\r\n  has_one_attached :image\r\nend\r\n\r\nclass ModeratedComment < Comment; end\r\n\r\nclass BugTest < Minitest::Test\r\n  def setup\r\n    @post = Post.create(title: 'Post', text: 'Welcome')\r\n  end\r\n\r\n  def test_association\r\n    comment = @post.comments.new(text: 'I do not like this')\r\n\r\n    moderated_comment = comment.becomes(ModeratedComment)\r\n\r\n    assert_equal @post, moderated_comment.post # Pass\r\n  end\r\n\r\n  def test_attachment\r\n    file = ActiveStorage::Blob.create_and_upload!(\r\n      content_type: \"image/png\",\r\n      filename: \"image.png\",\r\n      io: ::StringIO.new(\"png\"),\r\n    )\r\n    comment = @post.comments.new(text: 'I do not like this', image: file)\r\n\r\n    moderated_comment = comment.becomes(ModeratedComment)\r\n\r\n    assert moderated_comment.image.attached? # Fail\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nWhen casting an ActiveRecord to another model, I expect the associations to be copied thus I expect attached ActiveStorage association assets to be copied.\r\n\r\n### Actual behavior\r\nPreviously attached ActiveStorage associated objects are lost on the original object.\r\n\r\n### System configuration\r\n**Rails version**: 6.1.6.1\r\n\r\n**Ruby version**: 3.0.4\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45778/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45778/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45775","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45775/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45775/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45775/events","html_url":"https://github.com/rails/rails/issues/45775","id":1330225377,"node_id":"I_kwDNIULOT0mg4Q","number":45775,"title":"Uniqueness validation on association does not use the correct primary key","user":{"login":"mikeletscher","id":6666411,"node_id":"MDQ6VXNlcjY2NjY0MTE=","avatar_url":"https://avatars.githubusercontent.com/u/6666411?v=4","gravatar_id":"","url":"https://api.github.com/users/mikeletscher","html_url":"https://github.com/mikeletscher","followers_url":"https://api.github.com/users/mikeletscher/followers","following_url":"https://api.github.com/users/mikeletscher/following{/other_user}","gists_url":"https://api.github.com/users/mikeletscher/gists{/gist_id}","starred_url":"https://api.github.com/users/mikeletscher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikeletscher/subscriptions","organizations_url":"https://api.github.com/users/mikeletscher/orgs","repos_url":"https://api.github.com/users/mikeletscher/repos","events_url":"https://api.github.com/users/mikeletscher/events{/privacy}","received_events_url":"https://api.github.com/users/mikeletscher/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-05T18:10:22Z","updated_at":"2022-08-09T14:52:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nI'm not _entirely_ sure if this is considered a bug, or intended behavior that's not well-documented for `uniqueness` validations on associations.\r\n\r\nI'm happy to help improve the documentation on this if that would be the most helpful way forward, or if this _is_ considered a bug, I can take a stab at a PR. \r\n\r\nIt looks like the issue is that `build_relation` on the uniqueness validator calls [`bind_attribute` on `ActiveRecord::Relation`](https://github.com/rails/rails/blob/408d061a80a49878ad26b305616ed9ba88ee1411/activerecord/lib/active_record/relation.rb#L45), which properly takes into account the reflection's foreign_key, but not primary key if it's been overridden. \r\n\r\nHere's a test that reproduces the issue:\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire 'bundler/inline'\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem 'activerecord', '~> 7.0.3.1'\r\n  gem 'sqlite3'\r\nend\r\n\r\nrequire 'active_record'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(\r\n  adapter: 'sqlite3',\r\n  database: ':memory:'\r\n)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :prescriptions, force: true do |t|\r\n    t.string :rx_number\r\n  end\r\n\r\n  create_table :fills, force: true do |t|\r\n    t.string :rx_number\r\n  end\r\nend\r\n\r\nclass Prescription < ActiveRecord::Base\r\n  has_many :fills, foreign_key: :rx_number, primary_key: :rx_number\r\nend\r\n\r\nclass Fill < ActiveRecord::Base\r\n  belongs_to :prescription, foreign_key: :rx_number, primary_key: :rx_number\r\n\r\n  validates :prescription, uniqueness: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_fill_unique_by_rx_number\r\n    Fill.create!(rx_number: '1234')\r\n    prescription = Prescription.create!(rx_number: '1234')\r\n    new_fill = prescription.fills.new\r\n    refute new_fill.save\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe uniqueness validation query would use the `rx_number` value of the `Prescription` to query for an existing `Fill` since that is what is set as the associations `primary_key`. \r\n\r\n### Actual behavior\r\nThe uniqueness validation query uses the `id` value of the `Prescription` to query for existing fills, disregarding the association's overridden `primary_key`.\r\n\r\nThis test passes if I patch bind_attribute to read the primary key from the reflection instead of directly from the reflection's klass:\r\n\r\n```ruby\r\nmodule ActiveRecord\r\n  # = Active Record \\Relation\r\n  class Relation\r\n    def bind_attribute(name, value) # :nodoc:\r\n      if reflection = klass._reflect_on_association(name)\r\n        name = reflection.foreign_key\r\n        primary_key = reflection.association_primary_key || reflection.klass.primary_key\r\n        value = value.read_attribute(primary_key) unless value.nil?\r\n      end\r\n\r\n      attr = table[name]\r\n      bind = predicate_builder.build_bind_attribute(attr.name, value)\r\n      yield attr, bind\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nWe were able to work around this by adding the uniqueness validation to the `rx_number` attribute instead of the association. If this is the desired way to handle this, I can open a PR to add a note about this to the docs, as it took us by surprise that validation on the association wouldn't use the defined key to get the value to query.\r\n\r\n### System configuration\r\n**Rails version**: `7.0.3.1`\r\n\r\n**Ruby version**: `3.1.2`\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45775/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45775/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45766","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45766/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45766/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45766/events","html_url":"https://github.com/rails/rails/issues/45766","id":1329650798,"node_id":"I_kwDNIULOT0Dcbg","number":45766,"title":"Active Model Dirty: attribute_changed? options (from/to) do not accept symbol","user":{"login":"thomasvanholder","id":36309895,"node_id":"MDQ6VXNlcjM2MzA5ODk1","avatar_url":"https://avatars.githubusercontent.com/u/36309895?v=4","gravatar_id":"","url":"https://api.github.com/users/thomasvanholder","html_url":"https://github.com/thomasvanholder","followers_url":"https://api.github.com/users/thomasvanholder/followers","following_url":"https://api.github.com/users/thomasvanholder/following{/other_user}","gists_url":"https://api.github.com/users/thomasvanholder/gists{/gist_id}","starred_url":"https://api.github.com/users/thomasvanholder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomasvanholder/subscriptions","organizations_url":"https://api.github.com/users/thomasvanholder/orgs","repos_url":"https://api.github.com/users/thomasvanholder/repos","events_url":"https://api.github.com/users/thomasvanholder/events{/privacy}","received_events_url":"https://api.github.com/users/thomasvanholder/received_events","type":"User","site_admin":false},"labels":[{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-08-05T08:54:51Z","updated_at":"2022-08-07T20:25:55Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nThe `attribute_changed?` receives optional options, such as `from` and `to`. Each option key is passed a value. Only string values are accepted, and symbols are not recognized. This is inconsistent behavior as updating a column using the `update` method does accept both a string and a symbol.\r\n \r\n Source code: [attribute_changed?](https://github.com/rails/rails/blob/04972d9b9ef60796dc8f0917817b5392d61fcf09/activemodel/lib/active_model/dirty.rb#L178) \r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"debug\"\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.column :status, :integer, default: 0\r\n    t.date :review_date\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  enum :status, {draft: 0, published: 1}\r\n\r\n  before_update :set_review_date\r\n\r\n  def set_review_date\r\n    # when \"published\" is set as a string, the test correcty passes.\r\n    if status_changed?(to: :published)\r\n      self.review_date = Date.today\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_set_status\r\n    post = Post.create!\r\n    post.update(status: :published)\r\n\r\n    assert_equal \"published\", post.status\r\n  end\r\n\r\n  def test_sets_review_date\r\n    post = Post.create!\r\n    post.published!\r\n\r\n    assert_equal \"published\", post.status\r\n    assert_equal Date.today, post.review_date\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe value of the optional arguments `from` and `to` accepts both a string or symbol.\r\n\r\n### Actual behavior\r\nWhen options, such as `from` and `to` are passed to the [attribute_changed?](https://github.com/rails/rails/blob/04972d9b9ef60796dc8f0917817b5392d61fcf09/activemodel/lib/active_model/dirty.rb#L178) method the arguments are not recognized when passed as a symbol.\r\n\r\n### System configuration\r\n**Rails version**: `Rails 7.0.3`\r\n\r\n**Ruby version**: `ruby 3.1.2`\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45766/reactions","total_count":2,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45766/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45758","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45758/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45758/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45758/events","html_url":"https://github.com/rails/rails/issues/45758","id":1327892229,"node_id":"I_kwDNIULOTyYHBQ","number":45758,"title":"ActiveRecord 6.1 and JSONB: Incorrect results value/type when using both arrow operator and double arrow operator in the same SELECT statement","user":{"login":"shhavel","id":1169424,"node_id":"MDQ6VXNlcjExNjk0MjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1169424?v=4","gravatar_id":"","url":"https://api.github.com/users/shhavel","html_url":"https://github.com/shhavel","followers_url":"https://api.github.com/users/shhavel/followers","following_url":"https://api.github.com/users/shhavel/following{/other_user}","gists_url":"https://api.github.com/users/shhavel/gists{/gist_id}","starred_url":"https://api.github.com/users/shhavel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shhavel/subscriptions","organizations_url":"https://api.github.com/users/shhavel/orgs","repos_url":"https://api.github.com/users/shhavel/repos","events_url":"https://api.github.com/users/shhavel/events{/privacy}","received_events_url":"https://api.github.com/users/shhavel/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-08-03T23:42:39Z","updated_at":"2022-08-05T22:26:04Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Issue Description\r\n\r\nGenerally when using JSONB operators `->` (arrow operator) and `->>` (double arrow operator) in SELECT statement, \r\nActiveRecord returns correct result types: objects for `->` operator and string for `->>` operator.\r\nBut when using both operators in the same select statement, the returned results may have an unexpected type or be `nil`.\r\n\r\n### Steps to reproduce with Expected behaviour in tests and Actual behaviour in comments\r\n\r\n```ruby\r\n# file: activerecord_6_1_jsonb_test.rb\r\n# run: ruby activerecord_6_1_jsonb_test.rb\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"activerecord\", \"6.1.6.1\" # the same behaviour for version \"7.0.3.1\"\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\npg_opts = {adapter: \"postgresql\", database: \"jsonb_activerecord_issue\"}\r\nbegin\r\n  ActiveRecord::Base.establish_connection(pg_opts.except(:database))\r\n  ActiveRecord::Base.connection.create_database(pg_opts[:database])\r\n  puts \"Database #{pg_opts[:database]} was created.\"\r\nrescue => ActiveRecord::DatabaseAlreadyExists\r\n  puts \"Database #{pg_opts[:database]} alredy exists.\"\r\nend\r\nActiveRecord::Base.establish_connection(pg_opts)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :entries, force: true do |t|\r\n    t.jsonb :value\r\n  end\r\nend\r\n\r\nclass Entry < ActiveRecord::Base\r\nend\r\nEntry.create(value: {a: \"a\", b: \"b\", c: {}})\r\n\r\nclass BugTest < Minitest::Test\r\n  # passed\r\n  def test_jsonb_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->'a', value->'b'\"))\r\n    assert_equal [[{}, \"b\"]], Entry.pluck(Arel.sql(\"value->'c', value->'b'\"))\r\n  end\r\n\r\n  # passed\r\n  def test_jsonb_double_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'a', value->>'b'\"))\r\n    assert_equal [[\"{}\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'c', value->>'b'\"))\r\n  end\r\n\r\n  # failed (this test results are differ in activerecord 6.0)\r\n  def test_jsonb_arrow_operator_and_double_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->'a', value->>'b'\")) # Actual [[\"a\", nil]]\r\n    assert_equal [[{}, \"b\"]], Entry.pluck(Arel.sql(\"value->'c', value->>'b'\")) # Actual [[{}, nil]]\r\n  end\r\n\r\n  # failed\r\n  def test_jsonb_double_arrow_operator_and_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'a', value->'b'\")) # Actual [[nil, \"b\"]]\r\n    assert_equal [[\"{}\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'c', value->'b'\")) # Actual [[{}, \"b\"]]\r\n  end\r\nend\r\n```\r\n\r\n### PostgreSQL results \r\n\r\n```sql\r\nSELECT\r\n  pg_typeof(value->'a'), value->'a',\r\n  pg_typeof(value->'b'), value->'b',\r\n  pg_typeof(value->'c'), value->'c',\r\n  pg_typeof(value->>'a'), value->>'a',\r\n  pg_typeof(value->>'b'), value->>'b',\r\n  pg_typeof(value->>'c'), value->>'c'\r\nFROM \"entries\";\r\n\r\n pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column?\r\n-----------+----------+-----------+----------+-----------+----------+-----------+----------+-----------+----------+-----------+----------\r\n jsonb     | \"a\"      | jsonb     | \"b\"      | jsonb     | {}       | text      | a        | text      | b        | text      | {}\r\n(1 row)\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 6.1.6.1\r\n\r\n**Ruby version**: 3.1.0\r\n\r\n### Similar issue in different versions of ActiveRecord\r\n\r\nThere is a similar issue but with slightly different behaviour in AR 6.0. Created another issue: #45757\r\n\r\nPlease confirm or comment on the expected behaviour.\r\nThank you.\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45758/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45758/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45750","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45750/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45750/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45750/events","html_url":"https://github.com/rails/rails/issues/45750","id":1327484205,"node_id":"I_kwDNIULOTx_NLQ","number":45750,"title":"Running `rails test` doesn't automatically load any custom tasks under `lib/tasks`","user":{"login":"onlynone","id":833690,"node_id":"MDQ6VXNlcjgzMzY5MA==","avatar_url":"https://avatars.githubusercontent.com/u/833690?v=4","gravatar_id":"","url":"https://api.github.com/users/onlynone","html_url":"https://github.com/onlynone","followers_url":"https://api.github.com/users/onlynone/followers","following_url":"https://api.github.com/users/onlynone/following{/other_user}","gists_url":"https://api.github.com/users/onlynone/gists{/gist_id}","starred_url":"https://api.github.com/users/onlynone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/onlynone/subscriptions","organizations_url":"https://api.github.com/users/onlynone/orgs","repos_url":"https://api.github.com/users/onlynone/repos","events_url":"https://api.github.com/users/onlynone/events{/privacy}","received_events_url":"https://api.github.com/users/onlynone/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-03T16:16:38Z","updated_at":"2022-08-03T18:09:40Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n1. Create the file `lib/tasks/test.rake` with the content:\r\n```ruby\r\nENV[\"test.rake\"] = \"yes\"\r\ntask :custom_task do\r\n  ENV[\"custom_task\"] = \"yes\"\r\nend\r\n\r\ntask :test => [:custom_task]\r\n```\r\n2. Create a test file at `test/unit/rails_test_test.rb` with the content:\r\n```ruby\r\nclass RailsTestTest < ActiveSupport::TestCase\r\n  test \"test.rake is in the environment\" do\r\n    assert_equal('yes', ENV['test.rake'])\r\n  end\r\n\r\n  test \"custom_task is in the environment\" do\r\n    assert_equal('yes', ENV['custom_task'])\r\n  end\r\nend\r\n```\r\n3. Run `bin/rails test test/unit/rails_test_test.rb`\r\n4. Run `bin/rake test test/unit/rails_test_test.rb`\r\n\r\n### Expected behavior\r\nBoth `rails test` and `rake test` should succeed.\r\n\r\n### Actual behavior\r\nRunning the tests with `bin/rake` succeeds with the output:\r\n```\r\nbin/rake test test/unit/rails_test_test.rb\r\nRunning via Spring preloader in process 59092\r\nRun options: --seed 6948\r\n\r\n# Running:\r\n\r\n..\r\n\r\nFinished in 0.000943s, 2120.8907 runs/s, 2120.8907 assertions/s.\r\n2 runs, 2 assertions, 0 failures, 0 errors, 0 skips\r\n```\r\n\r\nWhile running with `bin/rails` fails with the output:\r\n\r\n```\r\nRunning via Spring preloader in process 58735\r\nRun options: --seed 33633\r\n\r\n# Running:\r\n\r\nF\r\n\r\nFailure:\r\nRailsTestTest#test_custom_task_is_in_the_environment [/Users/steven/projects/rails_test_tasks/test/unit/rails_test_test.rb:7]:\r\nExpected: \"yes\"\r\n  Actual: nil\r\n\r\n\r\nrails test test/unit/rails_test_test.rb:6\r\n\r\nF\r\n\r\nFailure:\r\nRailsTestTest#test_test.rake_is_in_the_environment [/Users/steven/projects/rails_test_tasks/test/unit/rails_test_test.rb:3]:\r\nExpected: \"yes\"\r\n  Actual: nil\r\n\r\n\r\nrails test test/unit/rails_test_test.rb:2\r\n\r\n\r\n\r\nFinished in 0.001378s, 1451.3788 runs/s, 1451.3788 assertions/s.\r\n2 runs, 2 assertions, 2 failures, 0 errors, 0 skips\r\n```\r\n\r\nBecause the file `lib/tasks/test.rake` is never loaded.\r\n\r\nIt seems like rails will only end up loading custom tasks if it can't find the command being run on the command line in its own list of built-in commands. When it can't find the command, it will load the local `Rakefile` via `find_by_namespace(\"rake\").perform(full_namespace, args, config)` in `Rails::Command.invoke`. And the local `Rakefile` usually has `Rails.application.load_tasks` and that loads any custom tasks under `lib/tasks`.\r\n\r\nFor example, this happens when the `ActiveRecord` migration exec's out to call: `bin/rails db:test:prepare`. That task is apparently not a built-in rails task, so the `Rakefile` and all custom tasks *do* end up getting loaded for that one.\r\n\r\n(As an aside here, I don't fully understand the difference between the built-in rails tasks and the ones that have to be searched for via rake. I also don't understand why the migration code needs to fork a separate process to do `db:test:prepare`. That task just ends up doing `db_namespace[\"test:load\"].invoke`. Why couldn't the `db:test:prepare` tasks simply be invoked the same way in the same process?)\r\n\r\n### System configuration\r\n**Rails version**: 6.0.5\r\n\r\n**Ruby version**: 2.6.5\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45750/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45750/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45736","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45736/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45736/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45736/events","html_url":"https://github.com/rails/rails/issues/45736","id":1326221102,"node_id":"I_kwDNIULOTwyHLg","number":45736,"title":"Virtual stored columns are always nil for newly created records","user":{"login":"camiloforero","id":6606686,"node_id":"MDQ6VXNlcjY2MDY2ODY=","avatar_url":"https://avatars.githubusercontent.com/u/6606686?v=4","gravatar_id":"","url":"https://api.github.com/users/camiloforero","html_url":"https://github.com/camiloforero","followers_url":"https://api.github.com/users/camiloforero/followers","following_url":"https://api.github.com/users/camiloforero/following{/other_user}","gists_url":"https://api.github.com/users/camiloforero/gists{/gist_id}","starred_url":"https://api.github.com/users/camiloforero/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/camiloforero/subscriptions","organizations_url":"https://api.github.com/users/camiloforero/orgs","repos_url":"https://api.github.com/users/camiloforero/repos","events_url":"https://api.github.com/users/camiloforero/events{/privacy}","received_events_url":"https://api.github.com/users/camiloforero/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-02T18:09:28Z","updated_at":"2022-08-02T19:28:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nUsing postgresql:\r\n\r\nGenerate a new model with one or more columns with default values, and a virtual stored column based on those other columns\r\nCreate a new record of that model\r\nAccess the value of the virtual stored column from the newly created ActiveRecord object\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem 'pg', '~> 1.4'\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection \"postgresql:///test\"\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.integer :counter1, null: false, default: 0\r\n    t.integer :counter2, null: false, default: 0\r\n    t.virtual :counter_sum, type: :integer, as: \"counter1 + counter2\", stored: true\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_virtual_column_value_populated\r\n    post = Post.create!\r\n\r\n    assert_equal 0, post.counter_sum\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe value of the virtual column should be *something*, in this particular case, 0\r\n\r\n### Actual behavior\r\nThe value of the virtual column is `nil`. The test fails with the following output\r\n```ruby\r\n# Running:\r\n\r\nD, [2022-08-02T13:05:17.402730 #13548] DEBUG -- :   TRANSACTION (0.1ms)  BEGIN\r\nD, [2022-08-02T13:05:17.403136 #13548] DEBUG -- :   Post Create (0.6ms)  INSERT INTO \"posts\" DEFAULT VALUES RETURNING \"id\"\r\nD, [2022-08-02T13:05:17.406144 #13548] DEBUG -- :   TRANSACTION (2.6ms)  COMMIT\r\nF\r\n\r\nFailure:\r\nBugTest#test_virtual_column_value_populated [stored_bug.rb:37]:\r\nExpected: 0\r\n  Actual: nil\r\n\r\n\r\nrails test stored_bug.rb:34\r\n\r\n\r\n\r\nFinished in 0.011047s, 90.5240 runs/s, 90.5240 assertions/s.\r\n1 runs, 1 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\n### System configuration\r\n**Rails version**: edge\r\n**Ruby version**: 3.1.2\r\n**PostgreSQL version**: 14.4\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45736/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45736/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45709","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45709/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45709/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45709/events","html_url":"https://github.com/rails/rails/issues/45709","id":1323303409,"node_id":"I_kwDNIULOTuAB8Q","number":45709,"title":"Rails & can't pin JS files from Unpkg","user":{"login":"septerr","id":1094216,"node_id":"MDQ6VXNlcjEwOTQyMTY=","avatar_url":"https://avatars.githubusercontent.com/u/1094216?v=4","gravatar_id":"","url":"https://api.github.com/users/septerr","html_url":"https://github.com/septerr","followers_url":"https://api.github.com/users/septerr/followers","following_url":"https://api.github.com/users/septerr/following{/other_user}","gists_url":"https://api.github.com/users/septerr/gists{/gist_id}","starred_url":"https://api.github.com/users/septerr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/septerr/subscriptions","organizations_url":"https://api.github.com/users/septerr/orgs","repos_url":"https://api.github.com/users/septerr/repos","events_url":"https://api.github.com/users/septerr/events{/privacy}","received_events_url":"https://api.github.com/users/septerr/received_events","type":"User","site_admin":false},"labels":[{"id":131864,"node_id":"MDU6TGFiZWwxMzE4NjQ=","url":"https://api.github.com/repos/rails/rails/labels/third%20party%20issue","name":"third party issue","color":"02d7e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-07-30T21:44:43Z","updated_at":"2022-08-02T18:08:34Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nIn a new Rails & app, try to pin a package from Unpkg CDN:\r\n\r\n```\r\n./bin/importmap pin @walletconnect/web3-provider@1.7.8 --from unpkg\r\n```\r\n\r\nYou get following response:\r\n\r\n```\r\nCouldn't find any packages in [\"@walletconnect/web3-provider@1.7.8\"] on unpkg\r\n```\r\nBut the file does exist on unpkg: https://unpkg.com/@walletconnect/web3-provider@1.7.8/dist/umd/index.min.js\r\n\r\nAfter adding some breakpoints in `.rbenv/versions/3.1.0/lib/ruby/gems/3.1.0/gems/importmap-rails-1.1.5/lib/importmap/packager.rb`, saw that the CDN post request and response are as follows:\r\n\r\nPost URL: \r\n```\r\n<URI::HTTPS https://api.jspm.io/generate>\r\n```\r\nPost Body:\r\n```\r\n \"{\\\"install\\\":[\\\"@walletconnect/web3-provider@1.7.8\\\"],\\\"flattenScope\\\":true,\\\"env\\\":[\\\"browser\\\",\\\"module\\\",\\\"production\\\"],\\\"provider\\\":\\\"unpkg\\\"}\"\r\n```\r\n\r\nPost Response:\r\n```\r\n<Net::HTTPUnauthorized 401 Unauthorized readbody=true>\r\n```\r\n\r\n### Expected behavior\r\nExpected the files from unpkg to be pinned.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nMisleading error that files don't exist on unpkg.\r\n\r\n### System configuration\r\n**Rails version**:\r\nRails 7.0.3.1\r\n\r\n**Ruby version**:\r\nruby 3.1.0p0 (2021-12-25 revision fb4df44d16) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45709/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45709/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45691","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45691/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45691/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45691/events","html_url":"https://github.com/rails/rails/issues/45691","id":1322122058,"node_id":"I_kwDNIULOTs37Sg","number":45691,"title":"ActionMailer fails to create correct multipart message with rfc822 attachment","user":{"login":"der-flo","id":35431,"node_id":"MDQ6VXNlcjM1NDMx","avatar_url":"https://avatars.githubusercontent.com/u/35431?v=4","gravatar_id":"","url":"https://api.github.com/users/der-flo","html_url":"https://github.com/der-flo","followers_url":"https://api.github.com/users/der-flo/followers","following_url":"https://api.github.com/users/der-flo/following{/other_user}","gists_url":"https://api.github.com/users/der-flo/gists{/gist_id}","starred_url":"https://api.github.com/users/der-flo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/der-flo/subscriptions","organizations_url":"https://api.github.com/users/der-flo/orgs","repos_url":"https://api.github.com/users/der-flo/repos","events_url":"https://api.github.com/users/der-flo/events{/privacy}","received_events_url":"https://api.github.com/users/der-flo/received_events","type":"User","site_admin":false},"labels":[{"id":107188,"node_id":"MDU6TGFiZWwxMDcxODg=","url":"https://api.github.com/repos/rails/rails/labels/actionmailer","name":"actionmailer","color":"8B00FC","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-29T11:19:00Z","updated_at":"2022-08-02T19:46:17Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I cannot re-open #42849 so I create a new issue…\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire 'bundler/inline'\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n  gem 'rails', github: 'rails/rails', branch: 'main'\r\nend\r\n\r\nrequire 'minitest/autorun'\r\nrequire 'action_mailer/railtie'\r\n\r\nclass TestMailer < ActionMailer::Base\r\n  def main\r\n    message_to_attach =  <<~MAIL.gsub(/\\n/, \"\\r\\n\")\r\n      Message-ID: <12345@foo.example>\r\n      Subject: Test\r\n      From: test1@foo.example\r\n      To: test2@foo.example\r\n      \r\n      hello world\r\n    MAIL\r\n    attachments['test.eml'] = {\r\n      mime_type: params[:mime_type],\r\n      content: message_to_attach\r\n    }\r\n\r\n    mail(from: 'test3@foo.example', to: 'test4@foo.example', subject: 'Test outer') do |format|\r\n      format.text { \"outer text - #{params[:mime_type]} attachment\" }\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_with_plain_mime_type\r\n    message = TestMailer.with(mime_type: 'text/plain').main\r\n    assert_equal message.mime_type, 'multipart/mixed'\r\n  end\r\n\r\n  def test_with_rfc822_mime_type\r\n    message = TestMailer.with(mime_type: 'message/rfc822').main\r\n    assert_equal message.mime_type, 'multipart/mixed'\r\n  end\r\nend\r\n```\r\n\r\nThe second test fails, the message object is rendered as follows:\r\n```\r\nDate: Fri, 23 Jul 2021 13:59:19 +0200\r\nFrom: test3@foo.example\r\nTo: test4@foo.example\r\nMessage-ID: <60faaf1738a02_14fbd98-3fb@flo.adigi.ai.mail>\r\nSubject: Test outer\r\nMime-Version: 1.0\r\nContent-Type: text/plain;\r\n boundary=\"--==_mimepart_60faaf1738008_14fbd98-484\";\r\n charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\n\r\n\r\n----==_mimepart_60faaf1738008_14fbd98-484\r\nContent-Type: text/plain;\r\n charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\n\r\nouter text - message/rfc822 attachment\r\n----==_mimepart_60faaf1738008_14fbd98-484\r\nContent-Type: message/rfc822\r\nContent-Transfer-Encoding: \r\nContent-Disposition: attachment;\r\n filename=test.eml\r\nContent-ID: <60faaf1739102_14fbd98-2b@flo.adigi.ai.mail>\r\n\r\nMessage-ID: <12345@foo.example>\r\nSubject: Test\r\nFrom: test1@foo.example\r\nTo: test2@foo.example\r\n\r\nhello world\r\n\r\n----==_mimepart_60faaf1738008_14fbd98-484--\r\n\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe `message.mime_type` is `multipart/mixed` in both test cases. ActionMailer handles attachments in the way it is described in https://guides.rubyonrails.org/action_mailer_basics.html#adding-attachments describes.\r\n\r\n### Actual behavior\r\n\r\nWhen attaching a `message/rfc822` - an email message - the generated mail parts are not nested correctly, the outer `multipart/mixed` is missing.\r\n\r\nPerhaps this behaviour is caused by the [special handling](https://github.com/mikel/mail/blob/master/lib/mail/attachments_list.rb#L9) of such attachments in the `mail` gem.\r\n\r\n\r\n### System configuration\r\n**Rails version**: main\r\n\r\n**Ruby version**: 3.0.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45691/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":1,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45691/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45640","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45640/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45640/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45640/events","html_url":"https://github.com/rails/rails/issues/45640","id":1315219867,"node_id":"I_kwDNIULOTmSpmw","number":45640,"title":"ActiveModel::Dirty changes not reset properly when using store_accessor (tested with postgres)","user":{"login":"vccoffey","id":59817868,"node_id":"MDQ6VXNlcjU5ODE3ODY4","avatar_url":"https://avatars.githubusercontent.com/u/59817868?v=4","gravatar_id":"","url":"https://api.github.com/users/vccoffey","html_url":"https://github.com/vccoffey","followers_url":"https://api.github.com/users/vccoffey/followers","following_url":"https://api.github.com/users/vccoffey/following{/other_user}","gists_url":"https://api.github.com/users/vccoffey/gists{/gist_id}","starred_url":"https://api.github.com/users/vccoffey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vccoffey/subscriptions","organizations_url":"https://api.github.com/users/vccoffey/orgs","repos_url":"https://api.github.com/users/vccoffey/repos","events_url":"https://api.github.com/users/vccoffey/events{/privacy}","received_events_url":"https://api.github.com/users/vccoffey/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-07-22T16:44:57Z","updated_at":"2022-07-23T17:51:49Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nUsing PostgreSQL (pg) database\r\nGiven a model with a jsonb column\r\n```\r\nclass CreateTestModels < ActiveRecord::Migration[6.1]\r\n  def change\r\n    create_table :test_models do |t|\r\n      t.jsonb :jsonb_hash_attr\r\n      t.timestamps\r\n    end\r\n  end\r\nend\r\n```\r\nusing store_accessor\r\n```\r\nclass TestModel < ApplicationRecord\r\n  store_accessor :jsonb_hash_attr, :key, prefix: true\r\nend\r\n```\r\n\r\n### Expected behavior\r\nBoth tests pass:\r\n```\r\nrequire \"test_helper\"\r\nclass TestModelTest < ActiveSupport::TestCase\r\n  test \"does not show changes for a jsonb attribute if changed back to original value\" do\r\n    tm = TestModel.create jsonb_hash_attr: { \"key\" => \"foo\" }\r\n    tm.jsonb_hash_attr = { \"key\" => \"bar\" }\r\n    assert_equal tm.jsonb_hash_attr_change, [{ \"key\" => \"foo\" }, { \"key\" => \"bar\" }]\r\n    tm.jsonb_hash_attr = { \"key\" => \"foo\" }\r\n    assert_equal tm.jsonb_hash_attr_change, nil\r\n  end\r\n\r\n  test \"does not show changes for a jsonb attribute if changed back to original value using store_accessor\" do\r\n    tm = TestModel.create jsonb_hash_attr: { \"key\" => \"foo\" }\r\n    tm.jsonb_hash_attr_key = \"bar\"\r\n    assert_equal tm.jsonb_hash_attr_change, [{ \"key\" => \"foo\" }, { \"key\" => \"bar\" }]\r\n    tm.jsonb_hash_attr_key = \"foo\"\r\n    assert_equal tm.jsonb_hash_attr_change, nil\r\n  end\r\nend\r\n```\r\n### Actual behavior\r\nThe second test fails\r\n```\r\n--- expected\r\n+++ actual\r\n-[{\"key\"=>\"foo\"}, {\"key\"=>\"foo\"}]\r\n+nil\r\n```\r\n### System configuration\r\n**Rails version**:\r\ntested with 6.1.6.1 and 7.0.3.1\r\n\r\n**Ruby version**: 3.1.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45640/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45640/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45639","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45639/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45639/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45639/events","html_url":"https://github.com/rails/rails/issues/45639","id":1314984267,"node_id":"I_kwDNIULOTmERSw","number":45639,"title":"Explicitly touch on save","user":{"login":"schmijos","id":245443,"node_id":"MDQ6VXNlcjI0NTQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/245443?v=4","gravatar_id":"","url":"https://api.github.com/users/schmijos","html_url":"https://github.com/schmijos","followers_url":"https://api.github.com/users/schmijos/followers","following_url":"https://api.github.com/users/schmijos/following{/other_user}","gists_url":"https://api.github.com/users/schmijos/gists{/gist_id}","starred_url":"https://api.github.com/users/schmijos/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/schmijos/subscriptions","organizations_url":"https://api.github.com/users/schmijos/orgs","repos_url":"https://api.github.com/users/schmijos/repos","events_url":"https://api.github.com/users/schmijos/events{/privacy}","received_events_url":"https://api.github.com/users/schmijos/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-22T13:05:14Z","updated_at":"2022-07-22T20:31:00Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  ruby \"3.1.0\"\r\n  gem \"rails\", \"7.0.3.1\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.timestamps\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_save_touch\r\n    Post.create!(updated_at: 3.days.ago)\r\n    Post.last.save!(touch: true)\r\n\r\n    assert_in_delta 0.seconds.ago.to_i, Post.last.updated_at.to_i, 5\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nIf I tell _ActiveRecord_ to explicitly \"touch\", then I would expect it to update the timestamps.\r\n\r\n### Actual behavior\r\n`save` never hits the database if no attribute changed.\r\n\r\n### System configuration\r\n**Rails version**: >= 3.0.0, < 8","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45639/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45639/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45638","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45638/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45638/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45638/events","html_url":"https://github.com/rails/rails/issues/45638","id":1314662755,"node_id":"I_kwDNIULOTlwpYw","number":45638,"title":"CSRF Token Expiry issue.","user":{"login":"MBM1607","id":47133639,"node_id":"MDQ6VXNlcjQ3MTMzNjM5","avatar_url":"https://avatars.githubusercontent.com/u/47133639?v=4","gravatar_id":"","url":"https://api.github.com/users/MBM1607","html_url":"https://github.com/MBM1607","followers_url":"https://api.github.com/users/MBM1607/followers","following_url":"https://api.github.com/users/MBM1607/following{/other_user}","gists_url":"https://api.github.com/users/MBM1607/gists{/gist_id}","starred_url":"https://api.github.com/users/MBM1607/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MBM1607/subscriptions","organizations_url":"https://api.github.com/users/MBM1607/orgs","repos_url":"https://api.github.com/users/MBM1607/repos","events_url":"https://api.github.com/users/MBM1607/events{/privacy}","received_events_url":"https://api.github.com/users/MBM1607/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-22T08:38:19Z","updated_at":"2022-07-22T08:40:22Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"We are encountering an issue with form submission in production environment.\r\nThe criteria seems to be exceptionally rare, I have been unable to replicate the issue. \r\n\r\nCSRF token is created and validated just fine.\r\n\r\n### Timing\r\n\r\nIssue seems to occur only when users wait more than 2 hours on a form before submitting, but doing this we have been unable to reproduce as well.\r\n\r\n### Logs\r\n```\r\nW, [2022-07-14T15:19:37.535241 #2433]  WARN -- : Can't verify CSRF token authenticity.\r\nI, [2022-07-14T15:19:37.535556 #2433]  INFO -- : Completed 422 Unprocessable Entity in 1ms (ActiveRecord: 0.0ms | Allocations: 291)\r\nF, [2022-07-14T15:19:37.536425 #2433] FATAL -- :   \r\nActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n```\r\n\r\n### System configuration\r\n**Rails version 6.1.6** \r\n**Ruby version 2.7.4**\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45638/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45638/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45636","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45636/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45636/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45636/events","html_url":"https://github.com/rails/rails/issues/45636","id":1314546104,"node_id":"I_kwDNIULOTlphuA","number":45636,"title":"Invalid template types should raise an exception","user":{"login":"axos88","id":1281218,"node_id":"MDQ6VXNlcjEyODEyMTg=","avatar_url":"https://avatars.githubusercontent.com/u/1281218?v=4","gravatar_id":"","url":"https://api.github.com/users/axos88","html_url":"https://github.com/axos88","followers_url":"https://api.github.com/users/axos88/followers","following_url":"https://api.github.com/users/axos88/following{/other_user}","gists_url":"https://api.github.com/users/axos88/gists{/gist_id}","starred_url":"https://api.github.com/users/axos88/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/axos88/subscriptions","organizations_url":"https://api.github.com/users/axos88/orgs","repos_url":"https://api.github.com/users/axos88/repos","events_url":"https://api.github.com/users/axos88/events{/privacy}","received_events_url":"https://api.github.com/users/axos88/received_events","type":"User","site_admin":false},"labels":[{"id":3666649,"node_id":"MDU6TGFiZWwzNjY2NjQ5","url":"https://api.github.com/repos/rails/rails/labels/actionview","name":"actionview","color":"d7e102","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-07-22T07:40:54Z","updated_at":"2022-08-17T18:02:14Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n  - Create a template in views/foo/bar.txt.erb # Note .txt, and not .text\r\n\r\n```ruby\r\ndetails = { locale: [:en], formats: [:txt], handlers: [:erb], variants: []}\r\nActionController::Base.view_paths.find(\"bar\", 'foo', false, details, nil, [])\r\n```\r\n\r\n### Expected behavior\r\n\r\nShould throw an exception that :txt is not a registered type in Template::Types\r\n\r\n### Actual behavior\r\n\r\nSilently fails to find the otherwise existing template, specifying the correct directory it the file resides in. \r\nConfustion intensifies.\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3\r\n**Ruby version**: 2.7.6","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45636/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45636/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45635","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45635/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45635/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45635/events","html_url":"https://github.com/rails/rails/issues/45635","id":1314015345,"node_id":"I_kwDNIULOTlJIcQ","number":45635,"title":"Recent security releases are missing from the Releases page","user":{"login":"georgeclaghorn","id":94129,"node_id":"MDQ6VXNlcjk0MTI5","avatar_url":"https://avatars.githubusercontent.com/u/94129?v=4","gravatar_id":"","url":"https://api.github.com/users/georgeclaghorn","html_url":"https://github.com/georgeclaghorn","followers_url":"https://api.github.com/users/georgeclaghorn/followers","following_url":"https://api.github.com/users/georgeclaghorn/following{/other_user}","gists_url":"https://api.github.com/users/georgeclaghorn/gists{/gist_id}","starred_url":"https://api.github.com/users/georgeclaghorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/georgeclaghorn/subscriptions","organizations_url":"https://api.github.com/users/georgeclaghorn/orgs","repos_url":"https://api.github.com/users/georgeclaghorn/repos","events_url":"https://api.github.com/users/georgeclaghorn/events{/privacy}","received_events_url":"https://api.github.com/users/georgeclaghorn/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false},"assignees":[{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2022-07-22T01:21:34Z","updated_at":"2022-08-19T18:08:06Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Rails versions 7.0.3.1, 6.1.6.1, 6.0.5.1, and 5.2.8.1 are not listed at this GitHub repository’s [Releases](https://github.com/rails/rails/releases) page. Past releases are listed there, including the most recent round of bugfix releases from May.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45635/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45635/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45632","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45632/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45632/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45632/events","html_url":"https://github.com/rails/rails/issues/45632","id":1312439669,"node_id":"I_kwDNIULOTjo9dQ","number":45632,"title":"`_read_attribute` method should also check whether an attribute is aliased or not","user":{"login":"khiav223577","id":4011729,"node_id":"MDQ6VXNlcjQwMTE3Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4011729?v=4","gravatar_id":"","url":"https://api.github.com/users/khiav223577","html_url":"https://github.com/khiav223577","followers_url":"https://api.github.com/users/khiav223577/followers","following_url":"https://api.github.com/users/khiav223577/following{/other_user}","gists_url":"https://api.github.com/users/khiav223577/gists{/gist_id}","starred_url":"https://api.github.com/users/khiav223577/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/khiav223577/subscriptions","organizations_url":"https://api.github.com/users/khiav223577/orgs","repos_url":"https://api.github.com/users/khiav223577/repos","events_url":"https://api.github.com/users/khiav223577/events{/privacy}","received_events_url":"https://api.github.com/users/khiav223577/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-07-21T03:14:22Z","updated_at":"2022-07-21T21:37:09Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n```rb\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  gem \"activerecord\", '7.0.3'\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table \"users\", force: :cascade do |t|\r\n    t.string :name\r\n  end\r\n\r\n  create_table \"posts\", force: :cascade do |t|\r\n    t.string :title\r\n    t.integer :userId\r\n  end\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\n  has_many :posts\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  belongs_to :user\r\n\r\n  alias_attribute :user_id, :userId\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def setup\r\n    user = User.create!(name: 'Tester')\r\n    post = Post.create!(user_id: user.id, title: 'Post A')\r\n  end\r\n\r\n  def test_has_many\r\n    assert_equal ['Post A'], User.first.posts.map(&:title)\r\n  end\r\n\r\n  def test_belongs_to\r\n    assert_equal 'Tester', Post.first.user&.name\r\n  end\r\nend\r\n```\r\n\r\nResult:\r\n```\r\nFinished in 0.059414s, 33.6619 runs/s, 33.6619 assertions/s.\r\n\r\n  1) Failure:\r\nBugTest#test_belongs_to [test.rb:53]:\r\nExpected: \"Tester\"\r\n  Actual: nil\r\n\r\n2 runs, 2 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\n### Expected behavior\r\n\r\nI run into this issue when I tried to add an association on an aliased attribute.\r\n\r\nThen I found `belongs_to_association` will use `_read_attribute` method to check if this `foreign_key` exists on this model or not.\r\nIt doesn't pass the condition, therefore `find_target` will not be triggered.\r\nhttps://github.com/rails/rails/blob/3272335f8f4739629283cdeff7c3db723f34a3f5/activerecord/lib/active_record/associations/association.rb#L172-L173\r\nhttps://github.com/rails/rails/blob/3272335f8f4739629283cdeff7c3db723f34a3f5/activerecord/lib/active_record/associations/association.rb#L274-L276\r\nhttps://github.com/rails/rails/blob/2ea5ff9e13b9c5d0d5d25b2441efa81a2de2a262/activerecord/lib/active_record/associations/belongs_to_association.rb#L133-L135\r\nhttps://github.com/rails/rails/blob/4ae0390c1051a39ec16a4a95451cd06172a1b260/activerecord/lib/active_record/attribute_methods/read.rb#L37-L39\r\n\r\nThe `read_attribute` method takes `attribute_alias` into consideration since https://github.com/rails/rails/pull/26529, while `_read_attribute` doesn't. I think it should, too.\r\n\r\n### Actual behavior\r\n\r\nSee the test script below.\r\n\r\n### System configuration\r\n**Rails version**: \r\n7.0.3.1\r\n\r\n**Ruby version**:\r\nruby 3.0.0p0 (2020-12-25 revision 95aff21468) [x86_64-linux]","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45632/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45632/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45609","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45609/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45609/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45609/events","html_url":"https://github.com/rails/rails/issues/45609","id":1306840730,"node_id":"I_kwDNIULOTeTOmg","number":45609,"title":"Cannot add ActiveModel::Attribute::FromDatabase to permitted YAML safe load classes","user":{"login":"stanhu","id":963826,"node_id":"MDQ6VXNlcjk2MzgyNg==","avatar_url":"https://avatars.githubusercontent.com/u/963826?v=4","gravatar_id":"","url":"https://api.github.com/users/stanhu","html_url":"https://github.com/stanhu","followers_url":"https://api.github.com/users/stanhu/followers","following_url":"https://api.github.com/users/stanhu/following{/other_user}","gists_url":"https://api.github.com/users/stanhu/gists{/gist_id}","starred_url":"https://api.github.com/users/stanhu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stanhu/subscriptions","organizations_url":"https://api.github.com/users/stanhu/orgs","repos_url":"https://api.github.com/users/stanhu/repos","events_url":"https://api.github.com/users/stanhu/events{/privacy}","received_events_url":"https://api.github.com/users/stanhu/received_events","type":"User","site_admin":false},"labels":[{"id":107186,"node_id":"MDU6TGFiZWwxMDcxODY=","url":"https://api.github.com/repos/rails/rails/labels/regression","name":"regression","color":"e10c02","default":false,"description":null},{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-07-16T15:51:30Z","updated_at":"2022-08-18T11:39:07Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWe have some database entries serialized to YAML. For example:\r\n\r\n```\r\n---\r\n:custom_message: Repository Download Started\r\n:author_name: !ruby/object:DeployToken\r\n  concise_attributes:\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: deploy_token_type\r\n    value_before_type_cast: 1\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: id\r\n    value_before_type_cast: 2\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: revoked\r\n    value_before_type_cast: false\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: read_repository\r\n    value_before_type_cast: true\r\n```\r\n\r\nHowever, since the security release announced in https://rubyonrails.org/2022/7/12/Rails-Versions-7-0-3-1-6-1-6-1-6-0-5-1-and-5-2-8-1-have-been-released to address CVE-2022-32224, we cannot simply add `ActiveModel::Attribute::FromDatabase` to the permitted class list:\r\n\r\n```ruby\r\n(byebug) YAML.safe_load(payload, permitted_classes: [ActiveModel::Attribute::FromDatabase, Symbol, DeployToken], aliases: true)\r\n*** NameError Exception: private constant ActiveModel::Attribute::FromDatabase referenced\r\n```\r\n\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\n### Expected behavior\r\n\r\nYAML loading should work. Should this constant no longer be private since it's been serialized to YAML?\r\n\r\n### Actual behavior\r\n\r\nYAML loading fails with:\r\n\r\n```\r\n*** NameError Exception: private constant ActiveModel::Attribute::FromDatabase referenced\r\n```\r\n\r\n### System configuration\r\n\r\n**Rails version**:\r\nv6.1.6.1\r\n\r\n**Ruby version**:\r\nv2.7.5","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45609/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45609/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45596","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45596/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45596/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45596/events","html_url":"https://github.com/rails/rails/issues/45596","id":1304247666,"node_id":"I_kwDNIULOTb09cg","number":45596,"title":"Setting `schema_dump` in database.yml does not change dump format","user":{"login":"leboshi","id":16550140,"node_id":"MDQ6VXNlcjE2NTUwMTQw","avatar_url":"https://avatars.githubusercontent.com/u/16550140?v=4","gravatar_id":"","url":"https://api.github.com/users/leboshi","html_url":"https://github.com/leboshi","followers_url":"https://api.github.com/users/leboshi/followers","following_url":"https://api.github.com/users/leboshi/following{/other_user}","gists_url":"https://api.github.com/users/leboshi/gists{/gist_id}","starred_url":"https://api.github.com/users/leboshi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leboshi/subscriptions","organizations_url":"https://api.github.com/users/leboshi/orgs","repos_url":"https://api.github.com/users/leboshi/repos","events_url":"https://api.github.com/users/leboshi/events{/privacy}","received_events_url":"https://api.github.com/users/leboshi/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-14T04:44:37Z","updated_at":"2022-07-14T14:34:25Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Originally brought up in #43173.  I opened PR #43240 to address it, but that was closed when it was decided #43530 did the same thing.  Unfortunately, I don't think any of us were really reading what the other was doing, because the two PRs actually each only addressed half the opened issue.\r\n\r\nPR incoming to fully address this and the second half of #43173!\r\n\r\n### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_schema_format_corresponds_with_schema_dump\r\n    Dir.mktmpdir do |dir|\r\n      ActiveRecord::Tasks::DatabaseTasks.stub(:db_dir, dir) do\r\n        old_configurations = ActiveRecord::Base.configurations\r\n        ActiveRecord::Base.configurations = {\r\n          \"development\" => {\r\n            \"primary\" => {\r\n              \"database\" => \"dev-db\",\r\n              \"schema_dump\" => \"primary_structure.sql\"\r\n            }\r\n          }\r\n        }\r\n\r\n        db_config = ActiveRecord::Base.configurations.configs_for(env_name: \"development\", name: \"primary\")\r\n        ActiveRecord::Tasks::DatabaseTasks.dump_schema(db_config)\r\n\r\n        dump_contents = File.read(File.join(dir, \"primary_structure.sql\"))\r\n        refute_match /ActiveRecord::Schema/, dump_contents\r\n        assert_match /CREATE TABLE/, dump_contents\r\n      ensure\r\n        ActiveRecord::Base.configurations = old_configurations\r\n        ActiveRecord::Base.clear_cache!\r\n      end\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nIf `schema_dump` is set to something like `primary_structure.sql`, I'd expect it to do a SQL structure dump rather than a Ruby schema dump.\r\n\r\n### Actual behavior\r\nThe filename in `schema_dump` has no bearing on the format of the dump Rails writes or expects to read.\r\n\r\n### System configuration\r\n**Rails version**: (main)\r\n\r\n**Ruby version**: 3.1.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45596/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45596/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45998","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45998/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45998/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45998/events","html_url":"https://github.com/rails/rails/issues/45998","id":1368868095,"node_id":"I_kwDNIULOUZdE_w","number":45998,"title":"CSRF getting different token","user":{"login":"Saleh-Salem","id":22606707,"node_id":"MDQ6VXNlcjIyNjA2NzA3","avatar_url":"https://avatars.githubusercontent.com/u/22606707?v=4","gravatar_id":"","url":"https://api.github.com/users/Saleh-Salem","html_url":"https://github.com/Saleh-Salem","followers_url":"https://api.github.com/users/Saleh-Salem/followers","following_url":"https://api.github.com/users/Saleh-Salem/following{/other_user}","gists_url":"https://api.github.com/users/Saleh-Salem/gists{/gist_id}","starred_url":"https://api.github.com/users/Saleh-Salem/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Saleh-Salem/subscriptions","organizations_url":"https://api.github.com/users/Saleh-Salem/orgs","repos_url":"https://api.github.com/users/Saleh-Salem/repos","events_url":"https://api.github.com/users/Saleh-Salem/events{/privacy}","received_events_url":"https://api.github.com/users/Saleh-Salem/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-11T08:08:17Z","updated_at":"2022-09-11T08:27:32Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When validating the CSRF token getting an exception in API\r\n \r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\nthe `session[:_csrf_token]` and  `request.x_csrf_token` is different and getting issue.\r\nwhen I need to skip the csrf, I add `verify_authenticity_token`, In this case, I don't need to skip it.\r\nI debug and found the issue in the method:\r\n\r\n```\r\n  def compare_with_global_token(token, session = nil) # :doc:\r\n    ActiveSupport::SecurityUtils.fixed_length_secure_compare(token, global_csrf_token(session))\r\n  end\r\n```\r\n\r\nwhat is `session[:_csrf_token]` and how can I implement it in API?\r\nIs there any missing from my side?\r\n### Steps to reproduce\r\n\r\n1. Add `protect_from_forgery with: :exception` .\r\n2. When logging in return token in response is generated by `form_authenticity_token`.\r\n3. When Trying to request any POST, PUT or DELETE API get an exception.\r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nReturn Response without exception.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\ngetting exception \r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\n### System configuration\r\n**Rails version**:\r\n6.0.3.5\r\n**Ruby version**:\r\n2.7.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45998/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45998/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45994","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45994/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45994/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45994/events","html_url":"https://github.com/rails/rails/issues/45994","id":1368555704,"node_id":"I_kwDNIULOUZKAuA","number":45994,"title":"LoadInterlockAwareMonitor deadlock when clearing cache (multiple databases, test)","user":{"login":"kuahyeow","id":16723,"node_id":"MDQ6VXNlcjE2NzIz","avatar_url":"https://avatars.githubusercontent.com/u/16723?v=4","gravatar_id":"","url":"https://api.github.com/users/kuahyeow","html_url":"https://github.com/kuahyeow","followers_url":"https://api.github.com/users/kuahyeow/followers","following_url":"https://api.github.com/users/kuahyeow/following{/other_user}","gists_url":"https://api.github.com/users/kuahyeow/gists{/gist_id}","starred_url":"https://api.github.com/users/kuahyeow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kuahyeow/subscriptions","organizations_url":"https://api.github.com/users/kuahyeow/orgs","repos_url":"https://api.github.com/users/kuahyeow/repos","events_url":"https://api.github.com/users/kuahyeow/events{/privacy}","received_events_url":"https://api.github.com/users/kuahyeow/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-10T08:52:46Z","updated_at":"2022-09-10T08:56:12Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"With multiple databases, we observe hangs within system tests.\r\n\r\nSee also https://gitlab.com/gitlab-org/gitlab/-/issues/371468 (GitLab is at Rails 6.1, Ruby 2.7.5)\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nHere's a minimal reproduction with Rails 7.0.3.1\r\n\r\n1. Checkout https://gitlab.com/tkuah/multi_database_system_test\r\n2. `bundle install`\r\n3. `bundle exec rails db:migrate`\r\n4. `bundle rails test test/system/home_pages_test.rb`\r\n\r\nThe conditions are:\r\n\r\n1. Multiple databases\r\n2. System test where there's an async request which overlaps with the main thread\r\n\r\n### Expected behavior\r\n\r\nIt does not hang, and the test completes\r\n\r\n### Actual behavior\r\n\r\nIt hangs. It looks like it's hanging when clearing query cache (see https://gitlab.com/gitlab-org/gitlab/-/issues/371468#note_1087203883, and https://gitlab.com/gitlab-org/gitlab/-/issues/371468#note_1088779499)\r\n\r\nA backtrace dump taken while the test is hanging [sigdump-68442.log](https://github.com/rails/rails/files/9539878/sigdump-68442.log)\r\n\r\nMy suspicion is that:\r\n\r\n1. `lock_thread` is true for system tests\r\n3. Therefore both the main thread, and the Puma thread attempt to clear query cache for the same set of connections\r\n\r\nSo we have two connections:\r\n\r\n1. Puma thread takes a `LoadInterlockAwareMonitor` lock for primary connection via `Post.transaction`\r\n2. Main thread takes a `LoadInterlockAwareMonitor` lock for animal connection via implicit transaction that `create` does\r\n3. Due to 2, main thread attempts to clear query cache for primary connection. **Waits for 1's lock**\r\n4. Due to 1, and because of `lock_thread`, puma thread clears query cache for primary connection. It takes a `LoadInterlockAwareMonitor` lock for primary connection which succeds\r\n5. Due to 1, puma thread now attempts clears query cache for animal connection. **Waits for 2's lock**\r\n\r\nSee [`clear_query_caches_for_current_thread` method](https://github.com/rails/rails/blob/e24fbf71fa0a10f63346b9b42604451958740844/activerecord/lib/active_record/connection_handling.rb#L244-L248)\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: ruby 2.7.5p203 (2021-11-24 revision f69aeb8314) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45994/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45994/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45984","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45984/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45984/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45984/events","html_url":"https://github.com/rails/rails/issues/45984","id":1368144421,"node_id":"I_kwDNIULOUYw6JQ","number":45984,"title":"Cannot Eager Load has_many :through Relationships with custom scope","user":{"login":"dcorrigan","id":2445528,"node_id":"MDQ6VXNlcjI0NDU1Mjg=","avatar_url":"https://avatars.githubusercontent.com/u/2445528?v=4","gravatar_id":"","url":"https://api.github.com/users/dcorrigan","html_url":"https://github.com/dcorrigan","followers_url":"https://api.github.com/users/dcorrigan/followers","following_url":"https://api.github.com/users/dcorrigan/following{/other_user}","gists_url":"https://api.github.com/users/dcorrigan/gists{/gist_id}","starred_url":"https://api.github.com/users/dcorrigan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dcorrigan/subscriptions","organizations_url":"https://api.github.com/users/dcorrigan/orgs","repos_url":"https://api.github.com/users/dcorrigan/repos","events_url":"https://api.github.com/users/dcorrigan/events{/privacy}","received_events_url":"https://api.github.com/users/dcorrigan/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-09T17:47:35Z","updated_at":"2022-09-09T17:47:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nThis seems like it's the same as #28324, but I'm still seeing the issue in Rails 7. \r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n  end\r\n\r\n  create_table :images, force: true do |t|\r\n    t.string :title\r\n    t.integer :post_id\r\n  end\r\n\r\n  create_table :captions, force: true do |t|\r\n    t.integer :image_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :images\r\n  has_many :captions, lambda { order('images.title DESC') }, through: :images\r\nend\r\n\r\nclass Image < ActiveRecord::Base\r\n  belongs_to :post\r\n  has_one :caption\r\nend\r\n\r\nclass Caption < ActiveRecord::Base\r\n  belongs_to :image\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_preload_has_many_through_association_with_scope\r\n    post = Post.create!\r\n    image = Image.create!\r\n    image.caption = Caption.create!\r\n    post.images << image\r\n    post.save!\r\n\r\n    # Access through the model works\r\n    assert_includes post.captions, Caption.first\r\n\r\n    # Query with association preloaded does not.\r\n    # When evaluated, it will apply the scope without the relevant JOIN table:\r\n    # SELECT \"captions\".* FROM \"captions\" WHERE \"captions\".\"image_id\" = ? ORDER BY images.title DESC\r\n    preloaded = Post.where(id: post.id).includes(:captions)\r\n\r\n    assert_includes preloaded.first.captions, Caption.first\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe test passes and we're able to eager load has_many :through associations with custom scopes in this way.\r\n\r\nI realize this can be fixed by adding a `references(:images)` to the query, but it seems reasonable to expect AR to infer that that the join is necessary here.\r\n\r\n### Actual behavior\r\n\r\nTest fails with an error: `ActiveRecord::StatementInvalid: SQLite3::SQLException: no such column: images.title`\r\n\r\n### System configuration\r\n**Rails version**: 7.0 \r\n\r\n**Ruby version**: 3.1.2p20\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45984/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45967","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45967/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45967/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45967/events","html_url":"https://github.com/rails/rails/issues/45967","id":1366038829,"node_id":"I_kwDNIULOUWwZLQ","number":45967,"title":"Inconsistent update of timestamps while updating associations with *_ids=","user":{"login":"matthee","id":547653,"node_id":"MDQ6VXNlcjU0NzY1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/547653?v=4","gravatar_id":"","url":"https://api.github.com/users/matthee","html_url":"https://github.com/matthee","followers_url":"https://api.github.com/users/matthee/followers","following_url":"https://api.github.com/users/matthee/following{/other_user}","gists_url":"https://api.github.com/users/matthee/gists{/gist_id}","starred_url":"https://api.github.com/users/matthee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matthee/subscriptions","organizations_url":"https://api.github.com/users/matthee/orgs","repos_url":"https://api.github.com/users/matthee/repos","events_url":"https://api.github.com/users/matthee/events{/privacy}","received_events_url":"https://api.github.com/users/matthee/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-08T10:51:09Z","updated_at":"2022-09-09T03:10:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"ActiveRecord inconsistently updates the `updated_at` column when changing `has_many through:` associations.\r\n\r\n### Steps to reproduce\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"activesupport\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"active_support/testing/time_helpers\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.timestamps\r\n  end\r\n  \r\n  create_table :tags, force: true do |t|\r\n  end\r\n\r\n  create_table :taggings, force: true do |t|\r\n    t.integer :post_id\r\n    t.integer :tag_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :taggings, dependent: :destroy\r\n  \r\n  has_many :tags, through: :taggings\r\nend\r\n\r\nclass Tagging < ActiveRecord::Base\r\n  belongs_to :post, touch: true\r\n  belongs_to :tag\r\nend\r\n\r\nclass Tag < ActiveRecord::Base\r\n  has_many :taggings\r\n  has_many :posts, through: :taggings\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  include ActiveSupport::Testing::TimeHelpers\r\n  \r\n  def test_updated_at_is_updated_when_setting_has_many_through_association\r\n    freeze_time\r\n        \r\n    tag_1 = Tag.create!\r\n    tag_2 = Tag.create!\r\n      \r\n    post = Post.create!\r\n    \r\n    travel_to(now = 1.hour.from_now)\r\n    \r\n    # Adding tags updates post.updated_at\r\n    post.update(tag_ids: [tag_1.id, tag_2.id])\r\n    assert_in_delta now, post.updated_at, 1.second, \"post#updated_at was not updated when adding tags\"\r\n    \r\n    # Removing tags does not update post.updated_at :(\r\n    travel_to(now = 2.hours.from_now)\r\n    post.update(tag_ids: [tag_1.id])\r\n    assert_in_delta now, post.updated_at, 1.second, \"post#updated_at was not updated when removing tags\"\r\n  end\r\n  \r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nIn the example above, both `.update` calls should update the `updated_at` column of the post record. (when adding and removing records)\r\n\r\n### Actual behavior\r\n\r\nWhen deleting a record, the `updated_at` timestamp is not updated.\r\n\r\n### System configuration\r\n**Rails version**:\r\n7.0.3.1\r\n**Ruby version**:\r\n3.0.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45967/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45967/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45959","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45959/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45959/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45959/events","html_url":"https://github.com/rails/rails/issues/45959","id":1364232810,"node_id":"I_kwDNIULOUVCKag","number":45959,"title":"JSON field not saving data with symbol : and it's saving with arrow =>","user":{"login":"sajjadmurtaza","id":8552702,"node_id":"MDQ6VXNlcjg1NTI3MDI=","avatar_url":"https://avatars.githubusercontent.com/u/8552702?v=4","gravatar_id":"","url":"https://api.github.com/users/sajjadmurtaza","html_url":"https://github.com/sajjadmurtaza","followers_url":"https://api.github.com/users/sajjadmurtaza/followers","following_url":"https://api.github.com/users/sajjadmurtaza/following{/other_user}","gists_url":"https://api.github.com/users/sajjadmurtaza/gists{/gist_id}","starred_url":"https://api.github.com/users/sajjadmurtaza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sajjadmurtaza/subscriptions","organizations_url":"https://api.github.com/users/sajjadmurtaza/orgs","repos_url":"https://api.github.com/users/sajjadmurtaza/repos","events_url":"https://api.github.com/users/sajjadmurtaza/events{/privacy}","received_events_url":"https://api.github.com/users/sajjadmurtaza/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":1071962662,"node_id":"MDU6TGFiZWwxMDcxOTYyNjYy","url":"https://api.github.com/repos/rails/rails/labels/more-information-needed","name":"more-information-needed","color":"bfdadc","default":false,"description":"When reporter needs to provide more information"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-09-07T07:40:12Z","updated_at":"2022-09-08T07:23:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nI have JSON field in my database `t.json \"theme\"`. When I try to save the field hash with : , it's overridden before save\r\ne.g.\r\n`object.theme = { color: 'red' }` it always change to `{ color => 'red' }`\r\n\r\ni also tried with jsonb and default value with empty hash {} but still having the same issue.\r\n\r\n\r\nI want to save the JSON data hash with symbol keys `{ color: 'red' }`\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.0\r\n\r\n**Ruby version**: 2.7.1\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45959/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45959/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45949","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45949/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45949/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45949/events","html_url":"https://github.com/rails/rails/issues/45949","id":1362899537,"node_id":"I_kwDNIULOUTwyUQ","number":45949,"title":"ActionText::Attachable#as_json override is breaking ActiveStorage::Blob#as_json when blob is not persisted","user":{"login":"balbesina","id":7312369,"node_id":"MDQ6VXNlcjczMTIzNjk=","avatar_url":"https://avatars.githubusercontent.com/u/7312369?v=4","gravatar_id":"","url":"https://api.github.com/users/balbesina","html_url":"https://github.com/balbesina","followers_url":"https://api.github.com/users/balbesina/followers","following_url":"https://api.github.com/users/balbesina/following{/other_user}","gists_url":"https://api.github.com/users/balbesina/gists{/gist_id}","starred_url":"https://api.github.com/users/balbesina/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/balbesina/subscriptions","organizations_url":"https://api.github.com/users/balbesina/orgs","repos_url":"https://api.github.com/users/balbesina/repos","events_url":"https://api.github.com/users/balbesina/events{/privacy}","received_events_url":"https://api.github.com/users/balbesina/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-06T08:26:39Z","updated_at":"2022-09-06T08:26:39Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nfrom rails console:\r\n```ruby\r\nActiveStorage::Blob.build_after_unfurling(io: StringIO.new('asd'), filename: 'asd.txt').as_json\r\n```\r\n\r\n[Reproduction script](https://gist.github.com/balbesina/30fbdafbfee4b71b06209d9e950f4128)\r\n\r\n### Expected behavior\r\nActiveStorage::Blob#as_json returns a Hash\r\n\r\n### Actual behavior\r\nActiveStorage::Blob#as_json raises exception\r\n```\r\n/Users/dhh/.rvm/gems/ruby-3.1.2/gems/globalid-1.0.0/lib/global_id/uri/gid.rb:167:in `validate_model_id': \r\nUnable to create a Global ID for ActiveStorage::Blob without a model id. (URI::GID::MissingModelIdError)\r\n```\r\n\r\n### System configuration\r\n**Rails version**: Rails 7.0.3.1\r\n**Ruby version**: ruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45949/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45949/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45939","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45939/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45939/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45939/events","html_url":"https://github.com/rails/rails/issues/45939","id":1360876688,"node_id":"I_kwDNIULOUR1UkA","number":45939,"title":"Validations aren't inherited from base model if child is called before validation declaration","user":{"login":"Exterm1nate","id":48535087,"node_id":"MDQ6VXNlcjQ4NTM1MDg3","avatar_url":"https://avatars.githubusercontent.com/u/48535087?v=4","gravatar_id":"","url":"https://api.github.com/users/Exterm1nate","html_url":"https://github.com/Exterm1nate","followers_url":"https://api.github.com/users/Exterm1nate/followers","following_url":"https://api.github.com/users/Exterm1nate/following{/other_user}","gists_url":"https://api.github.com/users/Exterm1nate/gists{/gist_id}","starred_url":"https://api.github.com/users/Exterm1nate/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Exterm1nate/subscriptions","organizations_url":"https://api.github.com/users/Exterm1nate/orgs","repos_url":"https://api.github.com/users/Exterm1nate/repos","events_url":"https://api.github.com/users/Exterm1nate/events{/privacy}","received_events_url":"https://api.github.com/users/Exterm1nate/received_events","type":"User","site_admin":false},"labels":[{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-09-03T14:46:42Z","updated_at":"2022-09-08T07:26:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nLet's create some STI models. Base `Vehicle` and two childs `Car` and `Motorcycle`.\r\n\r\n```ruby\r\n# models/vehicle.rb\r\nclass Vehicle < ApplicationRecord\r\n  TYPES = [Car, Motorcycle].freeze\r\n\r\n  validates :color, uniqueness: { scope: :model }\r\nend\r\n\r\n# models/car.rb\r\nclass Car < Vehicle\r\nend\r\n\r\n# models/motorcycle.rb\r\nclass Motorcycle < Vehicle\r\nend\r\n```\r\n\r\nAfter that we want to use `#validators_on` method to make sure the validation is present.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\nCar.validators_on(:color)\r\nMotorcycle.validators_on(:color)\r\n```\r\n\r\n### Expected behavior\r\n\r\nAll models must contain the validation.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nMotorcycle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\n```\r\n\r\n### Actual behavior\r\n\r\nBut for childs this method returns nothing.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> []\r\nMotorcycle.validators_on(:color)\r\n#=> []\r\n```\r\n\r\n### Notes\r\n\r\nIf we remove the `TYPES` constant (or just child classes calls from it) `validators_on` works as expected. Let's change original code a little bit:\r\n\r\n```ruby\r\n# models/vehicle.rb\r\nclass Vehicle < ApplicationRecord\r\n  TYPES = [Car].freeze # Motorcycle was removed from here!\r\n\r\n  validates :color, uniqueness: { scope: :model }\r\nend\r\n```\r\n\r\nAnd after that test again.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> []\r\nMotorcycle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\n```\r\n\r\n`Motorcycle` validation was returned correctly this time.\r\n\r\nIt seems to be a load error. `Car` was called before the `Vehicle`'s validation declaration, so it doesn't take this validation into account. It may also depend on loading order.\r\n\r\nNotice that validation itself is working well in all models.\r\n\r\n```ruby\r\nCar.create!(color: \"black\", model: \"Boomer\")\r\nCar.create!(color: \"black\", model: \"Boomer\") # raises ActiveRecord::RecordInvalid\r\n\r\nMotorcycle.create!(color: \"red\", model: \"Yamaha\")\r\nMotorcycle.create!(color: \"red\", model: \"Yamaha\") # raises ActiveRecord::RecordInvalid\r\n```\r\n\r\nExample project: https://github.com/Exterm1nate/rails-validation-issue\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3\r\n\r\n**Ruby version**: 3.1.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45939/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45939/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45937","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45937/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45937/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45937/events","html_url":"https://github.com/rails/rails/issues/45937","id":1360779604,"node_id":"I_kwDNIULOURvZVA","number":45937,"title":"Add strict table mode (by default) to sqlite adapter","user":{"login":"jrz","id":149668,"node_id":"MDQ6VXNlcjE0OTY2OA==","avatar_url":"https://avatars.githubusercontent.com/u/149668?v=4","gravatar_id":"","url":"https://api.github.com/users/jrz","html_url":"https://github.com/jrz","followers_url":"https://api.github.com/users/jrz/followers","following_url":"https://api.github.com/users/jrz/following{/other_user}","gists_url":"https://api.github.com/users/jrz/gists{/gist_id}","starred_url":"https://api.github.com/users/jrz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jrz/subscriptions","organizations_url":"https://api.github.com/users/jrz/orgs","repos_url":"https://api.github.com/users/jrz/repos","events_url":"https://api.github.com/users/jrz/events{/privacy}","received_events_url":"https://api.github.com/users/jrz/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-03T07:01:02Z","updated_at":"2022-09-08T07:30:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"SQLite supports 'strict tables' since 3.37.1 https://sqlite.org/stricttables.html\r\n\r\nThis forces a datatype to be specified when creating a table. This is the preferred method in any application created by developers. \r\n\r\nUnspecified/ANY datatypes are useful for quick tryouts as an enduser, similar to excel. But it's counterproductive when creating an application.\r\n\r\nIf this will become a configurable setting, the default should be set to strict.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45937/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45937/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45920","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45920/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45920/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45920/events","html_url":"https://github.com/rails/rails/issues/45920","id":1358179995,"node_id":"I_kwDNIULOUPQumw","number":45920,"title":"Replace has_one through create_association might create duplicated rows","user":{"login":"lazaronixon","id":2651240,"node_id":"MDQ6VXNlcjI2NTEyNDA=","avatar_url":"https://avatars.githubusercontent.com/u/2651240?v=4","gravatar_id":"","url":"https://api.github.com/users/lazaronixon","html_url":"https://github.com/lazaronixon","followers_url":"https://api.github.com/users/lazaronixon/followers","following_url":"https://api.github.com/users/lazaronixon/following{/other_user}","gists_url":"https://api.github.com/users/lazaronixon/gists{/gist_id}","starred_url":"https://api.github.com/users/lazaronixon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lazaronixon/subscriptions","organizations_url":"https://api.github.com/users/lazaronixon/orgs","repos_url":"https://api.github.com/users/lazaronixon/repos","events_url":"https://api.github.com/users/lazaronixon/events{/privacy}","received_events_url":"https://api.github.com/users/lazaronixon/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-09-01T03:05:07Z","updated_at":"2022-09-01T23:03:40Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# Ensure backward compatibility with minitest 4.\r\nMinitest::Test = MiniTest::Unit::TestCase unless defined?(Minitest::Test)\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts do |t|\r\n  end\r\n\r\n  create_table :comments do |t|\r\n    t.references :post\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_one :comment, dependent: :destroy\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  validates_presence_of :post_id\r\n  belongs_to :post\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    post = Post.create!\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    sleep 5.seconds\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n```\r\n# transaction begin\r\nselect previous_comment for update\r\n\r\ninsert new_comment\r\n\r\ndelete previous_comment\r\n# transaction commit\r\n```\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n```\r\n# transaction begin\r\ninsert new_comment\r\n# transaction commit\r\n\r\n# transaction begin\r\ndelete previous_comment\r\n# transaction commit\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45920/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45920/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45906","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45906/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45906/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45906/events","html_url":"https://github.com/rails/rails/issues/45906","id":1355732552,"node_id":"I_kwDNIULOUM7WSA","number":45906,"title":"High object allocation count from `ActiveRecord::ConnectionAdapters::PoolManager#pool_configs `","user":{"login":"amarchenkoshopify","id":101111422,"node_id":"U_kgDOBgbWfg","avatar_url":"https://avatars.githubusercontent.com/u/101111422?v=4","gravatar_id":"","url":"https://api.github.com/users/amarchenkoshopify","html_url":"https://github.com/amarchenkoshopify","followers_url":"https://api.github.com/users/amarchenkoshopify/followers","following_url":"https://api.github.com/users/amarchenkoshopify/following{/other_user}","gists_url":"https://api.github.com/users/amarchenkoshopify/gists{/gist_id}","starred_url":"https://api.github.com/users/amarchenkoshopify/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amarchenkoshopify/subscriptions","organizations_url":"https://api.github.com/users/amarchenkoshopify/orgs","repos_url":"https://api.github.com/users/amarchenkoshopify/repos","events_url":"https://api.github.com/users/amarchenkoshopify/events{/privacy}","received_events_url":"https://api.github.com/users/amarchenkoshopify/received_events","type":"User","site_admin":false},"labels":[{"id":107186,"node_id":"MDU6TGFiZWwxMDcxODY=","url":"https://api.github.com/repos/rails/rails/labels/regression","name":"regression","color":"e10c02","default":false,"description":null},{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"eileencodes","id":1080678,"node_id":"MDQ6VXNlcjEwODA2Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/1080678?v=4","gravatar_id":"","url":"https://api.github.com/users/eileencodes","html_url":"https://github.com/eileencodes","followers_url":"https://api.github.com/users/eileencodes/followers","following_url":"https://api.github.com/users/eileencodes/following{/other_user}","gists_url":"https://api.github.com/users/eileencodes/gists{/gist_id}","starred_url":"https://api.github.com/users/eileencodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eileencodes/subscriptions","organizations_url":"https://api.github.com/users/eileencodes/orgs","repos_url":"https://api.github.com/users/eileencodes/repos","events_url":"https://api.github.com/users/eileencodes/events{/privacy}","received_events_url":"https://api.github.com/users/eileencodes/received_events","type":"User","site_admin":false},"assignees":[{"login":"eileencodes","id":1080678,"node_id":"MDQ6VXNlcjEwODA2Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/1080678?v=4","gravatar_id":"","url":"https://api.github.com/users/eileencodes","html_url":"https://github.com/eileencodes","followers_url":"https://api.github.com/users/eileencodes/followers","following_url":"https://api.github.com/users/eileencodes/following{/other_user}","gists_url":"https://api.github.com/users/eileencodes/gists{/gist_id}","starred_url":"https://api.github.com/users/eileencodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eileencodes/subscriptions","organizations_url":"https://api.github.com/users/eileencodes/orgs","repos_url":"https://api.github.com/users/eileencodes/repos","events_url":"https://api.github.com/users/eileencodes/events{/privacy}","received_events_url":"https://api.github.com/users/eileencodes/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/rails/rails/milestones/81","html_url":"https://github.com/rails/rails/milestone/81","labels_url":"https://api.github.com/repos/rails/rails/milestones/81/labels","id":7591006,"node_id":"MI_kwDNIULOAHPUXg","number":81,"title":"7.0.4","description":"","creator":{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":3,"state":"open","created_at":"2022-01-20T01:51:07Z","updated_at":"2022-08-30T13:21:37Z","due_on":null,"closed_at":null},"comments":2,"created_at":"2022-08-30T12:58:42Z","updated_at":"2022-08-31T12:37:42Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWhile working on memory efficiency investigation I noticed that a very big bunch of object allocations comes from a single method `ActiveRecord::ConnectionAdapters::PoolManager#pool_configs`:\r\n\r\n```ruby\r\n      def pool_configs(role = nil)\r\n        if role\r\n          @role_to_shard_mapping[role].values\r\n        else\r\n          @role_to_shard_mapping.flat_map { |_, shard_map| shard_map.values }\r\n        end\r\n      end \r\n```\r\n\r\nThis method is called on every activerecord operation and does not cache its result: could we think about a way of caching its result?\r\n\r\ncc @eileencodes \r\n\r\n### Expected behavior\r\n\r\n`#pool_configs` allocates configs once\r\n\r\n### Actual behavior\r\n\r\n`#pool_configs` allocates configs every time it is executed\r\n\r\n### System configuration\r\n**Rails version**: main branch\r\n\r\n**Ruby version**: 3.1\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45906/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45901","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45901/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45901/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45901/events","html_url":"https://github.com/rails/rails/issues/45901","id":1354555667,"node_id":"I_kwDNIULOULzhEw","number":45901,"title":"bin/rails dbconsole should include_password by default","user":{"login":"wpeterson","id":178135,"node_id":"MDQ6VXNlcjE3ODEzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/178135?v=4","gravatar_id":"","url":"https://api.github.com/users/wpeterson","html_url":"https://github.com/wpeterson","followers_url":"https://api.github.com/users/wpeterson/followers","following_url":"https://api.github.com/users/wpeterson/following{/other_user}","gists_url":"https://api.github.com/users/wpeterson/gists{/gist_id}","starred_url":"https://api.github.com/users/wpeterson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wpeterson/subscriptions","organizations_url":"https://api.github.com/users/wpeterson/orgs","repos_url":"https://api.github.com/users/wpeterson/repos","events_url":"https://api.github.com/users/wpeterson/events{/privacy}","received_events_url":"https://api.github.com/users/wpeterson/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-29T16:19:45Z","updated_at":"2022-08-30T00:17:43Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n1. Configure a Rails `config/database.yml` with a `password` required to connect\r\n2. Run `rails dbconsole`\r\n3. See prompt for database password, despite password being configured/available\r\n4. Run `rails dbconsole -p`\r\n5. See dbconsole properly load and use credentials to connect to database for DB console session\r\n\r\n### Expected behavior\r\nWhenever a Rails app has credentials like a password configured for a database, the database console session should use those credentials vs. prompting the user to re-enter a password interactively.  When credentials are not configured and a password is required, we should prompt then.\r\n\r\nThis behavior is implemented since early Rails versions but is disabled by default.  I propose we enable the proper password behavior by default.\r\n\r\n### Actual behavior\r\n`bin/rails dbconsole` always prompts for a password, even when one is configured for the app.\r\n\r\n### System configuration\r\n**Rails version**: All (6.x, 7.x, head)\r\n\r\n**Ruby version**: All \r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45901/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45901/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45899","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45899/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45899/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45899/events","html_url":"https://github.com/rails/rails/issues/45899","id":1353676820,"node_id":"I_kwDNIULOUK94FA","number":45899,"title":"Active Job unit tests fail using que 2.2.0","user":{"login":"yahonda","id":73684,"node_id":"MDQ6VXNlcjczNjg0","avatar_url":"https://avatars.githubusercontent.com/u/73684?v=4","gravatar_id":"","url":"https://api.github.com/users/yahonda","html_url":"https://github.com/yahonda","followers_url":"https://api.github.com/users/yahonda/followers","following_url":"https://api.github.com/users/yahonda/following{/other_user}","gists_url":"https://api.github.com/users/yahonda/gists{/gist_id}","starred_url":"https://api.github.com/users/yahonda/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yahonda/subscriptions","organizations_url":"https://api.github.com/users/yahonda/orgs","repos_url":"https://api.github.com/users/yahonda/repos","events_url":"https://api.github.com/users/yahonda/events{/privacy}","received_events_url":"https://api.github.com/users/yahonda/received_events","type":"User","site_admin":false},"labels":[{"id":123812746,"node_id":"MDU6TGFiZWwxMjM4MTI3NDY=","url":"https://api.github.com/repos/rails/rails/labels/activejob","name":"activejob","color":"5319e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-29T04:24:06Z","updated_at":"2022-09-09T15:33:02Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"### Steps to reproduce\r\nActive Job CI has been failing since que 2.2.0 is installed. https://buildkite.com/rails/rails/builds/89068#0182e6b9-7c84-4b85-a651-8d640f5eb076\r\n\r\n```ruby\r\ngit clone https://github.com/rails/rails\r\ncd rails/activejob\r\nbundle update que\r\nAJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\n```\r\n\r\nAlthough there are 3 failures and 75 errors. This script just runs a single test because it looks the root cause is the same.\r\n\r\n\r\n### Expected behavior\r\nIt should pass.\r\n\r\n### Actual behavior\r\nIt raises `ArgumentError: wrong number of arguments (given 2, expected 1)`.\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 62302\r\n\r\n# Running:\r\n\r\nE\r\n\r\nError:\r\nQueuingTest#test_run_queued_job:\r\nArgumentError: wrong number of arguments (given 2, expected 1)\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:78:in `run'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job_methods.rb:51:in `_run'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:248:in `block (2 levels) in _run_attrs'\r\n    (eval):9:in `run_job_middleware'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:247:in `block in _run_attrs'\r\n    <internal:kernel>:90:in `tap'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:246:in `_run_attrs'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:223:in `run'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/support/que/inline.rb:15:in `enqueue'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:66:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:27:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:67:in `block in enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:118:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:28:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:27:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:9:in `block (2 levels) in <module:Instrumentation>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:27:in `tag_logger'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:14:in `block (2 levels) in <module:Logging>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:138:in `run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:63:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:30:in `perform_later'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/cases/queuing_test.rb:14:in `block in <class:QueuingTest>'\r\n\r\n\r\nbin/test test/cases/queuing_test.rb:13\r\n\r\n\r\n\r\nFinished in 0.008930s, 111.9768 runs/s, 0.0000 assertions/s.\r\n1 runs, 0 assertions, 0 failures, 1 errors, 0 skips\r\n$\r\n```\r\n\r\n### Additional information\r\n* `require_job_options_kwarg?` always returns `false` because `JobWrapper.method(:enqueue).parameters` does not have any `[:key, :job_options]` \r\nwhere it looks expected to return `true`.\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 32774\r\n\r\n# Running:\r\n\r\n[46, 55] in ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n    46|       end\r\n    47|\r\n    48|       private\r\n    49|         def require_job_options_kwarg?\r\n    50|           require 'debug'\r\n=>  51|           binding.break\r\n    52|           @require_job_options_kwarg ||=\r\n    53|             JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }\r\n    54|         end\r\n    55|\r\n=>#0\tActiveJob::QueueAdapters::QueAdapter#require_job_options_kwarg? at ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:51\r\n  #1\tActiveJob::QueueAdapters::QueAdapter#enqueue(job=#<HelloJob:0x00007fc861807740 @arguments...) at ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:24\r\n  # and 40 frames (use `bt' command for all frames)\r\n(rdbg) JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }    # ruby\r\nfalse\r\n(rdbg) JobWrapper.method(:enqueue).parameters    # ruby\r\n[[:req, :args], [:keyreq, :priority], [:keyreq, :queue], [:key, :run_at]]\r\n(rdbg) quit    # command\r\nReally quit? [Y/n] Y\r\n```\r\n\r\n* By changing `require_job_options_kwarg?` always returns `true`, it raises `ArgumentError: missing keywords: :priority, :queue`\r\n\r\n```ruby\r\n$ git diff\r\ndiff --git a/activejob/lib/active_job/queue_adapters/que_adapter.rb b/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\nindex 41b3633a07..54e8cbc39b 100644\r\n--- a/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n+++ b/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n@@ -47,6 +47,7 @@ def enqueue_at(job, timestamp) # :nodoc:\r\n\r\n       private\r\n         def require_job_options_kwarg?\r\n+          return true\r\n           @require_job_options_kwarg ||=\r\n             JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }\r\n         end\r\n$\r\n```\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 21508\r\n\r\n# Running:\r\n\r\nE\r\n\r\nError:\r\nQueuingTest#test_run_queued_job:\r\nArgumentError: missing keywords: :priority, :queue\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:65:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:25:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:67:in `block in enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:118:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:28:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:27:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:9:in `block (2 levels) in <module:Instrumentation>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:27:in `tag_logger'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:14:in `block (2 levels) in <module:Logging>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:138:in `run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:63:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:30:in `perform_later'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/cases/queuing_test.rb:14:in `block in <class:QueuingTest>'\r\n\r\n\r\nbin/test test/cases/queuing_test.rb:13\r\n\r\n\r\n\r\nFinished in 0.008724s, 114.6312 runs/s, 0.0000 assertions/s.\r\n1 runs, 0 assertions, 0 failures, 1 errors, 0 skips\r\n$\r\n```\r\n\r\n\r\n### System configuration\r\n**Rails version**: main branch\r\n\r\n**Ruby version**: $ ruby -v\r\nruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [x86_64-linux]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45899/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45893","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45893/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45893/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45893/events","html_url":"https://github.com/rails/rails/issues/45893","id":1352793907,"node_id":"I_kwDNIULOUKH_Mw","number":45893,"title":"ActiveRecord: HMT with conditions does not update the in-memory collection when pushing new objects","user":{"login":"joanniclaborde","id":411925,"node_id":"MDQ6VXNlcjQxMTkyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/411925?v=4","gravatar_id":"","url":"https://api.github.com/users/joanniclaborde","html_url":"https://github.com/joanniclaborde","followers_url":"https://api.github.com/users/joanniclaborde/followers","following_url":"https://api.github.com/users/joanniclaborde/following{/other_user}","gists_url":"https://api.github.com/users/joanniclaborde/gists{/gist_id}","starred_url":"https://api.github.com/users/joanniclaborde/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joanniclaborde/subscriptions","organizations_url":"https://api.github.com/users/joanniclaborde/orgs","repos_url":"https://api.github.com/users/joanniclaborde/repos","events_url":"https://api.github.com/users/joanniclaborde/events{/privacy}","received_events_url":"https://api.github.com/users/joanniclaborde/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-26T22:40:12Z","updated_at":"2022-08-30T15:33:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi! When using a `has_many :a, through: :b` relation, and the `:b` relation has a condition, adding new objects doesn't update the in-memory collection properly (stops after the first object).\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :packages, force: true do |t|\r\n  end\r\n\r\n  create_table :package_items, force: true do |t|\r\n    t.integer :package_id\r\n    t.integer :item_id\r\n  end\r\n\r\n  create_table :items, force: true do |t|\r\n    t.boolean \"deleted\", default: false\r\n  end\r\nend\r\n\r\nclass Package < ActiveRecord::Base\r\n  has_many :package_items, ->{ where(item_id: Item.active.pluck(:id)) }\r\n  has_many :items, through: :package_items\r\nend\r\n\r\nclass PackageItem < ActiveRecord::Base\r\n  belongs_to :package\r\n  belongs_to :item\r\nend\r\n\r\nclass Item < ActiveRecord::Base\r\n  has_many :package_items\r\n  has_many :packages, through: :package_items\r\n\r\n  scope :active, -> { where(deleted: false) }\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    package = Package.create!\r\n    package.items << Item.create!\r\n    package.items << Item.create!\r\n    package.items << Item.create!\r\n\r\n    # This should be [3, 3, 3] but we get [3, 1, 3]\r\n    assert_equal [3, 3, 3], [Item.count, package.items.count, package.reload.items.count]\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n`package.items.count` is equal to 3.\r\n\r\n### Actual behavior\r\n`package.items.count` is equal to 1, even though all the items and relations are created properly (see assertion).\r\n\r\n### System configuration\r\n**Rails version**: tested on `7.1.0.alpha` and `6.1.6.1`.\r\n\r\n**Ruby version**: tested on `2.7.5`.\r\n\r\n### Workaround\r\nI was able to fix this issue by changing the weird condition to a proper scope:\r\n\r\n```ruby\r\nclass Package < ActiveRecord::Base\r\n  has_many :package_items, ->{ includes(:item).merge(Item.active) }\r\n  has_many :items, through: :package_items\r\nend\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45893/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45893/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45880","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45880/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45880/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45880/events","html_url":"https://github.com/rails/rails/issues/45880","id":1349546108,"node_id":"I_kwDNIULOUHBwfA","number":45880,"title":"Google search links to old API docs","user":{"login":"abraham","id":3341,"node_id":"MDQ6VXNlcjMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/3341?v=4","gravatar_id":"","url":"https://api.github.com/users/abraham","html_url":"https://github.com/abraham","followers_url":"https://api.github.com/users/abraham/followers","following_url":"https://api.github.com/users/abraham/following{/other_user}","gists_url":"https://api.github.com/users/abraham/gists{/gist_id}","starred_url":"https://api.github.com/users/abraham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abraham/subscriptions","organizations_url":"https://api.github.com/users/abraham/orgs","repos_url":"https://api.github.com/users/abraham/repos","events_url":"https://api.github.com/users/abraham/events{/privacy}","received_events_url":"https://api.github.com/users/abraham/received_events","type":"User","site_admin":true},"labels":[{"id":150377,"node_id":"MDU6TGFiZWwxNTAzNzc=","url":"https://api.github.com/repos/rails/rails/labels/docs","name":"docs","color":"02d7e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-24T14:33:55Z","updated_at":"2022-08-25T23:48:01Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n1. Search Google for a Rails API https://www.google.com/search?q=rails+update_all\r\n2. Follow link for \"ActiveRecord::Relation - Rails API\"\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n\r\nFind documentation for the latest version of Rails. Currently `7.0.3.1`.\r\n\r\n`https://api.rubyonrails.org/classes/ActiveRecord/Relation.html`\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n\r\nFind documentation for the the very old version of `3.2.3`.\r\n\r\n`https://api.rubyonrails.org/v3.2.3/classes/ActiveRecord/Relation.html`\r\n\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45880/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45880/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45832","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45832/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45832/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45832/events","html_url":"https://github.com/rails/rails/issues/45832","id":1339487378,"node_id":"I_kwDNIULOT9b0kg","number":45832,"title":"MySQL 8.0 VARBINARY default value is hexadecimal","user":{"login":"HParker","id":4482399,"node_id":"MDQ6VXNlcjQ0ODIzOTk=","avatar_url":"https://avatars.githubusercontent.com/u/4482399?v=4","gravatar_id":"","url":"https://api.github.com/users/HParker","html_url":"https://github.com/HParker","followers_url":"https://api.github.com/users/HParker/followers","following_url":"https://api.github.com/users/HParker/following{/other_user}","gists_url":"https://api.github.com/users/HParker/gists{/gist_id}","starred_url":"https://api.github.com/users/HParker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HParker/subscriptions","organizations_url":"https://api.github.com/users/HParker/orgs","repos_url":"https://api.github.com/users/HParker/repos","events_url":"https://api.github.com/users/HParker/events{/privacy}","received_events_url":"https://api.github.com/users/HParker/received_events","type":"User","site_admin":true},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":309390193,"node_id":"MDU6TGFiZWwzMDkzOTAxOTM=","url":"https://api.github.com/repos/rails/rails/labels/MySQL","name":"MySQL","color":"fef2c0","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-08-15T20:42:09Z","updated_at":"2022-08-16T10:23:16Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Default values on VARBINARY columns changed behavior between MySQL 5.7 and 8.0\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"mysql2\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"mysql2\", database: \"adam_test\", prepared_statements: false, host: '127.0.0.1', port: 3307, user: \"root\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.binary :some_binary, null: false, limit: 1024, default: \"hello-world\"\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_mysql_defaults\r\n    post = Post.create!\r\n\r\n    mysql_vars = ActiveRecord::Base.connection.select_rows(\"SHOW VARIABLES LIKE '%version%'\")\r\n    puts mysql_vars.inspect\r\n    puts Post.column_defaults\r\n\r\n    # assert_equal \"0x68656C6C6F2D776F726C64\", post.some_binary # This passes\r\n    assert_equal \"hello-world\", post.some_binary # This fails\r\n\r\n    reloaded_post = Post.first\r\n    assert_equal \"hello-world\", reloaded_post.some_binary # this passes\r\n  end\r\nend\r\n```\r\n\r\nOn MySQL 5.7:\r\n\r\n```ruby\r\nPost.column_defaults # => {\"id\"=>nil, \"some_binary\"=>\"hello-world\"}\r\n```\r\n\r\nOn MySQL 8.0:\r\n\r\n```ruby\r\nPost.column_defaults # => {\"id\"=>nil, \"some_binary\"=>\"0x68656C6C6F2D776F726C64\"}\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe default value on binary columns should be Ruby strings, not ruby strings of hexadecimal.\r\n\r\n### Actual behavior\r\n\r\nThe column default in MySQL 8.0 is a hexadecimal string representing the binary data.\r\n\r\n### System configuration\r\n**Rails version**: main\r\n\r\n**Ruby version**: 3.1.0\r\n\r\nSome interesting MySQL forum posts about this behavior change:\r\n\r\n- https://forums.mysql.com/read.php?24,685577,685577\r\n- https://forums.mysql.com/read.php?20,698061,698061#msg-698061\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45832/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45832/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45830","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45830/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45830/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45830/events","html_url":"https://github.com/rails/rails/issues/45830","id":1338922250,"node_id":"I_kwDNIULOT85VCg","number":45830,"title":"ActiveRecord Rollbacks on errors which happen on commit","user":{"login":"Baxxx","id":17880055,"node_id":"MDQ6VXNlcjE3ODgwMDU1","avatar_url":"https://avatars.githubusercontent.com/u/17880055?v=4","gravatar_id":"","url":"https://api.github.com/users/Baxxx","html_url":"https://github.com/Baxxx","followers_url":"https://api.github.com/users/Baxxx/followers","following_url":"https://api.github.com/users/Baxxx/following{/other_user}","gists_url":"https://api.github.com/users/Baxxx/gists{/gist_id}","starred_url":"https://api.github.com/users/Baxxx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baxxx/subscriptions","organizations_url":"https://api.github.com/users/Baxxx/orgs","repos_url":"https://api.github.com/users/Baxxx/repos","events_url":"https://api.github.com/users/Baxxx/events{/privacy}","received_events_url":"https://api.github.com/users/Baxxx/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":126910270,"node_id":"MDU6TGFiZWwxMjY5MTAyNzA=","url":"https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps","name":"With reproduction steps","color":"009800","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2022-08-15T12:09:14Z","updated_at":"2022-08-25T13:32:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nIn some of our projects we use Postgres as database, and for some cases we deferred trigger constraints. These triggers fire up when `COMMIT` is called. Trigger can raise an error, which kills the transaction. ActiveRecord catches the error, and bubbles it up to developer, but it also sends `ROLLBACK` to Postgres, to which Postgres gives a warning that there is no transaction in progress.\r\n\r\nI didn't test this with sqlite3 or mysql.\r\n\r\nYou can see the reproduction script, and screenshot with the current behavior.\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", \"~> 7\"\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"logger\"\r\n\r\nlogger = Logger.new(STDOUT)\r\n\r\n# This connection will do for database-independent bug reports.\r\npg_opts = {adapter: \"postgresql\", database: \"ar_rollback_after_failed_commit_issue\"}\r\n\r\nActiveRecord::Base.establish_connection(pg_opts.except(:database))\r\nActiveRecord::Base.connection.drop_database(pg_opts[:database])\r\nActiveRecord::Base.connection.create_database(pg_opts[:database])\r\nlogger.info \"Database #{pg_opts[:database]} was (re)created.\"\r\n\r\nActiveRecord::Base.establish_connection(pg_opts)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  execute <<~SQL\r\n    CREATE FUNCTION perform_custom_validation()\r\n      RETURNS TRIGGER\r\n      LANGUAGE plpgsql\r\n      AS $$\r\n        DECLARE\r\n          total_invalid INTEGER;\r\n        BEGIN\r\n          SELECT COUNT(*) INTO total_invalid\r\n          FROM things\r\n          WHERE name = 'bad';\r\n\r\n          IF (total_invalid > 0) THEN\r\n            RAISE EXCEPTION 'There are bad things';\r\n          END IF;\r\n          RETURN NULL;\r\n        END;\r\n      $$;\r\n\r\n    CREATE TABLE \"things\" (\r\n      \"id\" bigserial primary key,\r\n      \"name\" character varying NOT NULL\r\n    );\r\n\r\n    CREATE CONSTRAINT\r\n      TRIGGER bank_transaction_rl_payment_date_validation\r\n      AFTER INSERT OR UPDATE ON things\r\n      DEFERRABLE INITIALLY DEFERRED\r\n      FOR EACH ROW EXECUTE FUNCTION perform_custom_validation();\r\n  SQL\r\nend\r\n\r\nclass Thing < ActiveRecord::Base\r\n  validates :name, presence: true\r\nend\r\n\r\n# All good\r\nlogger.info \"First transaction\"\r\nThing.create!(name: \"good\")\r\n\r\n# AR tries to commit, DB raises an error, AR tries to ROLLBACK, and PG gives a warning\r\nbegin\r\n  logger.info \"Second transaction\"\r\n  Thing.create!(name: \"bad\")\r\nrescue StandardError\r\n  # Doesn't matter\r\nend\r\n```\r\n\r\n### Expected behavior\r\nActiveRecord should not `ROLLBACK`, as there is no transaction in progress.\r\n\r\n### Actual behavior\r\nActiveRecord tries to `ROLLBACK`.\r\n\r\n![Screenshot from 2022-08-15 14-07-11](https://user-images.githubusercontent.com/17880055/184632335-0277cd27-4c7b-4b98-94a8-373be34a87ee.png)\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 2.7.5p203\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45830/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45830/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45823","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45823/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45823/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45823/events","html_url":"https://github.com/rails/rails/issues/45823","id":1337409694,"node_id":"I_kwDNIULOT7dAng","number":45823,"title":"Change Column with Raw Character Set Failure","user":{"login":"ahoglund","id":3407303,"node_id":"MDQ6VXNlcjM0MDczMDM=","avatar_url":"https://avatars.githubusercontent.com/u/3407303?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoglund","html_url":"https://github.com/ahoglund","followers_url":"https://api.github.com/users/ahoglund/followers","following_url":"https://api.github.com/users/ahoglund/following{/other_user}","gists_url":"https://api.github.com/users/ahoglund/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoglund/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoglund/subscriptions","organizations_url":"https://api.github.com/users/ahoglund/orgs","repos_url":"https://api.github.com/users/ahoglund/repos","events_url":"https://api.github.com/users/ahoglund/events{/privacy}","received_events_url":"https://api.github.com/users/ahoglund/received_events","type":"User","site_admin":true},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":126910270,"node_id":"MDU6TGFiZWwxMjY5MTAyNzA=","url":"https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps","name":"With reproduction steps","color":"009800","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-12T16:21:50Z","updated_at":"2022-08-12T20:47:38Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"With [this recent change to how collation is handled for column changes](https://github.com/rails/rails/pull/45744/files), there is now a potential for older migrations written in a specific manner to break if the `collation:` argument is not specific.\r\n\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\n# you need to install mysql locally for this to work.\r\n# on Mac:\r\n# brew install mysql\r\n# brew services start mysql\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"mysql2\"\r\n\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nclient = Mysql2::Client.new(host: 'localhost', username: \"root\")\r\nclient.query(\"DROP DATABASE test\")\r\nclient.query(\"CREATE DATABASE test\")\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"mysql2\", database: \"test\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :payments, force: true do |t|\r\n    t.string :description, \"varchar(64)\", null: false\r\n  end\r\nend\r\n\r\nclass Payment < ActiveRecord::Base\r\nend\r\n\r\nclass ChangeAmountToAddScale < ActiveRecord::Migration[7.1]\r\n  # This sets the default character set for the payments\r\n  # table to utf32 with a default COLLATION of utf32_general_ci.\r\n  # This can be verified by running the following query:\r\n  #\r\n  # SHOW CHARACTER SET;\r\n  #\r\n  connection.execute(<<~SQL)\r\n    ALTER TABLE payments CONVERT TO CHARACTER SET utf32\r\n  SQL\r\n\r\n  def change\r\n    reversible do |dir|\r\n      dir.up do\r\n        change_table(:payments, bulk: true) do |t|\r\n          # The default collation of utf32_general_ci\r\n          # will not be compatible with this ascii character set. \r\n          #\r\n          # when we build the column change now we automatically\r\n          # try to assign the previous collation to the column if no `collation:` is specified.\r\n          # \r\n          # https://github.com/rails/rails/pull/45744\r\n          #\r\n          # The workaround is to add `collation: 'ascii_bin'` or `collation: 'ascii_general_ci'` to the change.\r\n          #\r\n          # This isn't a huge deal and it has a workaround but it _will_ break\r\n          # anyone who has migrations that are written like this and upgrade to this version\r\n          # of Rails.\r\n          t.change :description, \"varchar(64) CHARACTER SET ascii\", null: false\r\n        end\r\n      end\r\n\r\n      dir.down do\r\n        change_table(:payments, bulk: true) do |t|\r\n          t.change :description, \"varchar(64)\", null: false\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_migration_up\r\n    ChangeAmountToAddScale.migrate(:up)\r\n    Payment.reset_column_information\r\n\r\n    assert_equal \"varchar\", Payment.columns.last.sql_type\r\n  end\r\n\r\n  def test_migration_down\r\n    ChangeAmountToAddScale.migrate(:down)\r\n    Payment.reset_column_information\r\n\r\n    assert_equal \"varchar\", Payment.columns.last.sql_type\r\n  end\r\nend\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nI would expect this to detect that the character set is being changed, and either \r\n\r\n1. change the collation to be compatible.\r\n2. At least give a clearer error that requires the `collation:` arg to be passed when the character set is being modified.\r\n\r\n### Actual behavior\r\n\r\nThis error:\r\n\r\n```\r\nError:\r\nBugTest#test_migration_up:\r\nActiveRecord::StatementInvalid: Mysql2::Error: COLLATION 'utf32_general_ci' is not valid for CHARACTER SET 'ascii'\r\n    test.rb:51:in `block (2 levels) in change'\r\n    test.rb:50:in `block in change'\r\n    test.rb:49:in `change'\r\n    test.rb:67:in `test_migration_up'\r\n```\r\n\r\n### System configuration\r\n**Rails version**: main\r\n**Ruby version**: ruby 3.1.1p18\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45823/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45823/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45822","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45822/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45822/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45822/events","html_url":"https://github.com/rails/rails/issues/45822","id":1337253221,"node_id":"I_kwDNIULOT7TdZQ","number":45822,"title":"ActiveRecord: Wrong results returned by ActiveRecord::Associations::Preloader when intermediate association is already preloaded.","user":{"login":"yopzer","id":6330271,"node_id":"MDQ6VXNlcjYzMzAyNzE=","avatar_url":"https://avatars.githubusercontent.com/u/6330271?v=4","gravatar_id":"","url":"https://api.github.com/users/yopzer","html_url":"https://github.com/yopzer","followers_url":"https://api.github.com/users/yopzer/followers","following_url":"https://api.github.com/users/yopzer/following{/other_user}","gists_url":"https://api.github.com/users/yopzer/gists{/gist_id}","starred_url":"https://api.github.com/users/yopzer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yopzer/subscriptions","organizations_url":"https://api.github.com/users/yopzer/orgs","repos_url":"https://api.github.com/users/yopzer/repos","events_url":"https://api.github.com/users/yopzer/events{/privacy}","received_events_url":"https://api.github.com/users/yopzer/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"jhawthorn","id":131752,"node_id":"MDQ6VXNlcjEzMTc1Mg==","avatar_url":"https://avatars.githubusercontent.com/u/131752?v=4","gravatar_id":"","url":"https://api.github.com/users/jhawthorn","html_url":"https://github.com/jhawthorn","followers_url":"https://api.github.com/users/jhawthorn/followers","following_url":"https://api.github.com/users/jhawthorn/following{/other_user}","gists_url":"https://api.github.com/users/jhawthorn/gists{/gist_id}","starred_url":"https://api.github.com/users/jhawthorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhawthorn/subscriptions","organizations_url":"https://api.github.com/users/jhawthorn/orgs","repos_url":"https://api.github.com/users/jhawthorn/repos","events_url":"https://api.github.com/users/jhawthorn/events{/privacy}","received_events_url":"https://api.github.com/users/jhawthorn/received_events","type":"User","site_admin":true},"assignees":[{"login":"jhawthorn","id":131752,"node_id":"MDQ6VXNlcjEzMTc1Mg==","avatar_url":"https://avatars.githubusercontent.com/u/131752?v=4","gravatar_id":"","url":"https://api.github.com/users/jhawthorn","html_url":"https://github.com/jhawthorn","followers_url":"https://api.github.com/users/jhawthorn/followers","following_url":"https://api.github.com/users/jhawthorn/following{/other_user}","gists_url":"https://api.github.com/users/jhawthorn/gists{/gist_id}","starred_url":"https://api.github.com/users/jhawthorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhawthorn/subscriptions","organizations_url":"https://api.github.com/users/jhawthorn/orgs","repos_url":"https://api.github.com/users/jhawthorn/repos","events_url":"https://api.github.com/users/jhawthorn/events{/privacy}","received_events_url":"https://api.github.com/users/jhawthorn/received_events","type":"User","site_admin":true}],"milestone":null,"comments":1,"created_at":"2022-08-12T14:06:55Z","updated_at":"2022-08-18T23:36:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"activerecord\", \"7.0.3.1\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :a_records, force: true\r\n\r\n  create_table :b_records, force: true do |t|\r\n    t.references :a_record\r\n    t.references :c_record\r\n  end\r\n\r\n  create_table :c_records, force: true\r\n\r\n  create_table :d_records, force: true do |t|\r\n    t.references :c_record\r\n  end\r\nend\r\n\r\nclass ARecord < ActiveRecord::Base\r\n  has_one :b_record\r\n  has_one :c_record, through: :b_record\r\n  has_many :d_records, through: :c_record\r\nend\r\n\r\nclass BRecord < ActiveRecord::Base\r\n  belongs_to :a_record\r\n  belongs_to :c_record\r\nend\r\n\r\nclass CRecord < ActiveRecord::Base\r\n  has_one :b_record\r\n  has_many :d_records\r\nend\r\n\r\nclass DRecord < ActiveRecord::Base\r\n  belongs_to :c_record\r\nend\r\n\r\na = ARecord.create!\r\nc = CRecord.create!\r\nBRecord.create!(a_record: a, c_record: c)\r\nDRecord.create!(c_record: c)\r\nDRecord.create!(c_record: c)\r\n\r\na.reload\r\na.c_record # NB: if removed this works\r\n\r\n::ActiveRecord::Associations::Preloader.new(records: [a], associations: :d_records).call\r\nputs({ record_ids: a.d_records.map(&:id), size: a.d_records.size })\r\n```\r\n\r\n### Expected behavior\r\nTwo records should be loaded:\r\n`{:record_ids=>[1, 2], :size=>2}`\r\n\r\n### Actual behavior\r\nNo records are loaded:\r\n`{:record_ids=>[], :size=>0}`\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 2.7.5\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45822/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45822/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45817","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45817/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45817/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45817/events","html_url":"https://github.com/rails/rails/issues/45817","id":1336797388,"node_id":"I_kwDNIULOT63ozA","number":45817,"title":"Value of attribute default proc is shared between instances after dup + dirty tracking","user":{"login":"quadule","id":15299,"node_id":"MDQ6VXNlcjE1Mjk5","avatar_url":"https://avatars.githubusercontent.com/u/15299?v=4","gravatar_id":"","url":"https://api.github.com/users/quadule","html_url":"https://github.com/quadule","followers_url":"https://api.github.com/users/quadule/followers","following_url":"https://api.github.com/users/quadule/following{/other_user}","gists_url":"https://api.github.com/users/quadule/gists{/gist_id}","starred_url":"https://api.github.com/users/quadule/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/quadule/subscriptions","organizations_url":"https://api.github.com/users/quadule/orgs","repos_url":"https://api.github.com/users/quadule/repos","events_url":"https://api.github.com/users/quadule/events{/privacy}","received_events_url":"https://api.github.com/users/quadule/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-12T06:16:00Z","updated_at":"2022-08-15T15:56:11Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWhen an attribute without a database column defines a default proc, `dup`ing a model in which the default wasn't accessed passes the unevaluated `UserProvidedDefault` attribute to the new instance as the attribute's original value. Checking the new attribute for changes will then memoize the value in the original attribute definition, making it the default value in every new model instance afterward.\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n  gem \"rails\", github: \"rails/rails\", ref: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Schema.define do\r\n  create_table :cats do |t|\r\n    t.string :name\r\n  end\r\nend\r\n\r\nclass Cat < ActiveRecord::Base\r\n  attribute :sounds, default: -> { [] }\r\nend\r\n\r\nclass VirtualAttributeTest < Minitest::Test\r\n  def test_virtual_attribute_defaults_are_independent\r\n    Cat.new.dup.save!\r\n    Cat.new.sounds << \"meow\"\r\n    refute_same Cat.new.sounds, Cat.new.sounds\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nEach new instance should get a new default value from the proc.\r\n\r\n### Actual behavior\r\nAfter using dirty tracking on a duplicated instance with an uncalled proc default, all new instances of a model receive the same default value and share any changes made to it.\r\n\r\n### Affected versions\r\nThis seems to date back quite a while; the test fails on the main branch back to 5-1-stable.\r\n\r\n### Credits\r\nThanks to @GBH for originally discovering this bug.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45817/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45817/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45794","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45794/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45794/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45794/events","html_url":"https://github.com/rails/rails/issues/45794","id":1332999733,"node_id":"I_kwDNIULOT3P2NQ","number":45794,"title":"Action Cable client goes in a connection loop if you subscribe multiple times to the same channel","user":{"login":"ProGM","id":5167659,"node_id":"MDQ6VXNlcjUxNjc2NTk=","avatar_url":"https://avatars.githubusercontent.com/u/5167659?v=4","gravatar_id":"","url":"https://api.github.com/users/ProGM","html_url":"https://github.com/ProGM","followers_url":"https://api.github.com/users/ProGM/followers","following_url":"https://api.github.com/users/ProGM/following{/other_user}","gists_url":"https://api.github.com/users/ProGM/gists{/gist_id}","starred_url":"https://api.github.com/users/ProGM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ProGM/subscriptions","organizations_url":"https://api.github.com/users/ProGM/orgs","repos_url":"https://api.github.com/users/ProGM/repos","events_url":"https://api.github.com/users/ProGM/events{/privacy}","received_events_url":"https://api.github.com/users/ProGM/received_events","type":"User","site_admin":false},"labels":[{"id":300028327,"node_id":"MDU6TGFiZWwzMDAwMjgzMjc=","url":"https://api.github.com/repos/rails/rails/labels/actioncable","name":"actioncable","color":"bfdadc","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-09T09:48:36Z","updated_at":"2022-08-17T17:57:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\nYou can just start from a fresh `rails new [project-name]` installation.\r\nChannel code:\r\n```ruby\r\nclass ArticleChannel < ApplicationCable::Channel\r\n  def subscribed\r\n    stream_from \"ArticleChannel\"\r\n  end\r\n\r\n  def unsubscribed\r\n    # Any cleanup needed when channel is unsubscribed\r\n  end\r\nend\r\n```\r\n\r\nJavascript code:\r\n```javascript\r\nimport consumer from \"channels/consumer\"\r\n\r\nfunction subscribe() {\r\n\treturn consumer.subscriptions.create('ArticleChannel', {\r\n\t\tconnected() {\r\n\t\t\tconsole.log('connected');\r\n\t\t\t// Called when the subscription is ready for use on the server\r\n\t\t},\r\n\r\n\t\tdisconnected() {\r\n\t\t\tconsole.log('disconnected');\r\n\t\t\t// Called when the subscription has been terminated by the server\r\n\t\t},\r\n\r\n\t\treceived(data) {\r\n\t\t\tconsole.log('received', data);\r\n\t\t\t// Called when there's incoming data on the websocket for this channel\r\n\t\t}\r\n\t});\r\n}\r\n\r\nsetTimeout(() => {\r\n\tsubscribe();\r\n}, 3000);\r\n\r\nsetTimeout(() => {\r\n\tsubscribe();\r\n}, 4000);\r\n```\r\n\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nAny of these options could be considered an expected behavior:\r\n* Everything just works™, both subscriptions receive notification from that channel and no error is raised\r\n* The second `subscription.create(...)` raises some kind of error, notifying that the channel is already connected\r\n* The second `subscription.create(...)` returns the same instance of Subscription and writes a `console.warning` in console\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nThe second subscriptions triggers a connection loop.\r\n\r\nExample logs with `ActionCable.logger.enabled = true`.\r\n\r\n```\r\n[ActionCable] Opening WebSocket, current state is null, subprotocols: actioncable-v1-json,actioncable-unsupported 1660037219747\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] ConnectionMonitor started. stale threshold = 6 s 1660037219748\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] WebSocket onopen event, using 'actioncable-v1-json' subprotocol 1660037219758\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] ConnectionMonitor recorded connect 1660037219759\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor guaranteeing {\"channel\":\"ArticleChannel\"} 1660037219760\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] Subscription confirmed {\"channel\":\"ArticleChannel\"} 1660037219762\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor forgetting {\"channel\":\"ArticleChannel\"} 1660037219762\r\narticle_channel-b29f3f7bf31169dfadd26c7747a46706d4992a1fd842de8268f206c5f0a0fe45.js:6 connected\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor guaranteeing {\"channel\":\"ArticleChannel\"} 1660037220744\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221248\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221248\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor resubscribing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n[ActionCable] SubscriptionGuarantor already guaranteeing {\"channel\":\"ArticleChannel\"} 1660037221753\r\nactioncable.esm-e01089c3ec4fe7817fa9abcad06cab6bdc387f95f0ca6aab4bf7ba7537f70690.js:10\r\n... and so on, forever...\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 3.1\r\n\r\n### Possible solutions\r\nThis issue happens because the identifier of both subscriptions is the same. Since Rails (ActionCable) doesn't answer to any subsequential command \"subscribe\" from the same client (in this case: `{\"command\":\"subscribe\",\"identifier\":\"{\\\"channel\\\":\\\"ArticleChannel\\\"}\"}`), the `SubscriptionGuarantor` considers the connection failed and [retries to connect after 500ms](https://github.com/rails/rails/blob/8994f09dd2f6ae363e74d8ee3b24700d9db94a16/actioncable/app/assets/javascripts/actioncable.esm.js#L351).\r\n\r\nI see various options to fix this:\r\n* Raise an exception when trying to create a subscription with the same identifier\r\n* Add a random/uuid to the identifier when connecting, so two connection would not share the same identifier? (I've already tested it, and it seems to fix)\r\n\r\nWould you accept a PR from me regarding this?","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45794/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45794/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45791","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45791/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45791/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45791/events","html_url":"https://github.com/rails/rails/issues/45791","id":1332570977,"node_id":"I_kwDNIULOT21rYQ","number":45791,"title":"Google::Apis::ClientError raised when using ActiveStorage to generate signed URLs to access a file in a GCS bucket with GKE Workload Identity","user":{"login":"danielyazbek","id":18390164,"node_id":"MDQ6VXNlcjE4MzkwMTY0","avatar_url":"https://avatars.githubusercontent.com/u/18390164?v=4","gravatar_id":"","url":"https://api.github.com/users/danielyazbek","html_url":"https://github.com/danielyazbek","followers_url":"https://api.github.com/users/danielyazbek/followers","following_url":"https://api.github.com/users/danielyazbek/following{/other_user}","gists_url":"https://api.github.com/users/danielyazbek/gists{/gist_id}","starred_url":"https://api.github.com/users/danielyazbek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielyazbek/subscriptions","organizations_url":"https://api.github.com/users/danielyazbek/orgs","repos_url":"https://api.github.com/users/danielyazbek/repos","events_url":"https://api.github.com/users/danielyazbek/events{/privacy}","received_events_url":"https://api.github.com/users/danielyazbek/received_events","type":"User","site_admin":false},"labels":[{"id":664533972,"node_id":"MDU6TGFiZWw2NjQ1MzM5NzI=","url":"https://api.github.com/repos/rails/rails/labels/activestorage","name":"activestorage","color":"bfd4f2","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-09T01:05:08Z","updated_at":"2022-08-09T15:53:58Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nConfigure ActiveStorage with GKE Workload identity (as documented [here](https://edgeguides.rubyonrails.org/active_storage_overview.html#google-cloud-storage-service)):\r\n\r\n```ruby\r\ngoogle:\r\n  service: GCS\r\n  iam: true\r\n  project: <%= ENV['ACTIVE_STORAGE_PROJECT'] %>\r\n  bucket: <%= ENV['ACTIVE_STORAGE_BUCKET'] %>\r\n```\r\n\r\nDefine a class:\r\n```ruby\r\nclass Transaction < ApplicationRecord\r\n  has_one_attached :csv_report\r\nend\r\n```\r\n\r\nWrite something to ActiveStorage:\r\n```ruby\r\nt = Transaction.create\r\nt.csv_report.attach(io: StringIO.new(\"A,B,C\"), filename: 'test.csv')\r\n```\r\n\r\nGenerate a Signed URL\r\n```ruby\r\nRails.application.routes.url_helpers.rails_blob_url(Transaction.last.csv_report, disposition: 'attachment')\r\n```\r\n\r\nPaste the generated URL into a browser\r\n\r\n### Expected behavior\r\nActiveRecord provides the attachment\r\n\r\n### Actual behavior\r\nError is raised:\r\n\r\n```\r\nGoogle::Apis::ClientError (Invalid request):\r\ngems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:236:in `check_status': Invalid request (Google::Apis::ClientError)\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/api_command.rb:134:in `check_status'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:199:in `process_response'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:318:in `execute_once'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:118:in `block (2 levels) in execute'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:61:in `block in retriable'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `times'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `retriable'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:115:in `block in execute'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:61:in `block in retriable'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `times'\r\n    from gems/retriable-3.1.2/lib/retriable.rb:56:in `retriable'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/http_command.rb:105:in `execute'\r\n    from gems/google-apis-core-0.7.0/lib/google/apis/core/base_service.rb:397:in `execute_or_queue_command'\r\n    from gems/google-apis-iamcredentials_v1-0.13.0/lib/google/apis/iamcredentials_v1/service.rb:158:in `sign_service_account_blob'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service/gcs_service.rb:232:in `block in signer'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file/signer_v2.rb:135:in `generate_signature'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file/signer_v2.rb:128:in `signed_url'\r\n    from gems/google-cloud-storage-1.38.0/lib/google/cloud/storage/file.rb:1801:in `signed_url'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service/gcs_service.rb:160:in `private_url'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:123:in `block in url'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications/instrumenter.rb:24:in `instrument'\r\n    from gems/activesupport-7.0.3.1/lib/active_support/notifications.rb:206:in `instrument'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:163:in `instrument'\r\n    from gems/activestorage-7.0.3.1/lib/active_storage/service.rb:118:in `url'\r\n    from gems/activestorage-7.0.3.1models/active_storage/blob.rb:217:in `url'\r\n    from gems/activestorage-7.0.3.1controllers/active_storage/blobs/redirect_controller.rb:14:in `show'\r\n```\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 3.1.2\r\n\r\n**google-cloud-storage gem version:** 1.38.0\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45791/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45791/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45778","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45778/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45778/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45778/events","html_url":"https://github.com/rails/rails/issues/45778","id":1330360134,"node_id":"I_kwDNIULOT0uvRg","number":45778,"title":"ActiveStorage attachments are lost when casting using Becomes","user":{"login":"markedmondson","id":1653699,"node_id":"MDQ6VXNlcjE2NTM2OTk=","avatar_url":"https://avatars.githubusercontent.com/u/1653699?v=4","gravatar_id":"","url":"https://api.github.com/users/markedmondson","html_url":"https://github.com/markedmondson","followers_url":"https://api.github.com/users/markedmondson/followers","following_url":"https://api.github.com/users/markedmondson/following{/other_user}","gists_url":"https://api.github.com/users/markedmondson/gists{/gist_id}","starred_url":"https://api.github.com/users/markedmondson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/markedmondson/subscriptions","organizations_url":"https://api.github.com/users/markedmondson/orgs","repos_url":"https://api.github.com/users/markedmondson/repos","events_url":"https://api.github.com/users/markedmondson/events{/privacy}","received_events_url":"https://api.github.com/users/markedmondson/received_events","type":"User","site_admin":false},"labels":[{"id":664533972,"node_id":"MDU6TGFiZWw2NjQ1MzM5NzI=","url":"https://api.github.com/repos/rails/rails/labels/activestorage","name":"activestorage","color":"bfd4f2","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-05T20:19:16Z","updated_at":"2022-08-09T18:05:34Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\nCreate an ActiveRecord model with an ActiveStorage relation. Initialize and add the associated attachment. Cast the object to another subclassed model, the associated attachment is lost.\r\n\r\n```ruby\r\nunless File.exist?('Gemfile')\r\n    File.write('Gemfile', <<-GEMFILE)\r\n    source 'https://rubygems.org'\r\n    gem 'rails', '~> 6.1'\r\n    gem 'sqlite3'\r\n    GEMFILE\r\n\r\n    system 'bundle'\r\nend\r\n\r\nrequire 'bundler'\r\nBundler.setup(:default)\r\n\r\nrequire 'active_record'\r\nrequire 'active_storage/engine'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  config.hosts << 'example.org'\r\n  config.eager_load = false\r\n  config.session_store :cookie_store, key: 'cookie_store_key'\r\n  secrets.secret_key_base = 'secret_key_base'\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  config.active_storage.service = :local\r\n  config.active_storage.service_configurations = {\r\n    local: {\r\n      root: Dir.tmpdir,\r\n      service: 'Disk'\r\n    }\r\n  }\r\nend\r\n\r\nENV['DATABASE_URL'] = 'sqlite3::memory:'\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\nRails.application.initialize!\r\n\r\nrequire ActiveStorage::Engine.root.join('db/migrate/20170806125915_create_active_storage_tables.rb').to_s\r\n\r\nActiveRecord::Schema.define do\r\n  CreateActiveStorageTables.new.change\r\n\r\n  create_table :posts do |t|\r\n    t.string :title\r\n    t.string :text\r\n  end\r\n\r\n  create_table :comments do |t|\r\n    t.belongs_to :post\r\n    t.string :text\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post\r\n  has_one_attached :image\r\nend\r\n\r\nclass ModeratedComment < Comment; end\r\n\r\nclass BugTest < Minitest::Test\r\n  def setup\r\n    @post = Post.create(title: 'Post', text: 'Welcome')\r\n  end\r\n\r\n  def test_association\r\n    comment = @post.comments.new(text: 'I do not like this')\r\n\r\n    moderated_comment = comment.becomes(ModeratedComment)\r\n\r\n    assert_equal @post, moderated_comment.post # Pass\r\n  end\r\n\r\n  def test_attachment\r\n    file = ActiveStorage::Blob.create_and_upload!(\r\n      content_type: \"image/png\",\r\n      filename: \"image.png\",\r\n      io: ::StringIO.new(\"png\"),\r\n    )\r\n    comment = @post.comments.new(text: 'I do not like this', image: file)\r\n\r\n    moderated_comment = comment.becomes(ModeratedComment)\r\n\r\n    assert moderated_comment.image.attached? # Fail\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nWhen casting an ActiveRecord to another model, I expect the associations to be copied thus I expect attached ActiveStorage association assets to be copied.\r\n\r\n### Actual behavior\r\nPreviously attached ActiveStorage associated objects are lost on the original object.\r\n\r\n### System configuration\r\n**Rails version**: 6.1.6.1\r\n\r\n**Ruby version**: 3.0.4\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45778/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45778/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45775","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45775/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45775/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45775/events","html_url":"https://github.com/rails/rails/issues/45775","id":1330225377,"node_id":"I_kwDNIULOT0mg4Q","number":45775,"title":"Uniqueness validation on association does not use the correct primary key","user":{"login":"mikeletscher","id":6666411,"node_id":"MDQ6VXNlcjY2NjY0MTE=","avatar_url":"https://avatars.githubusercontent.com/u/6666411?v=4","gravatar_id":"","url":"https://api.github.com/users/mikeletscher","html_url":"https://github.com/mikeletscher","followers_url":"https://api.github.com/users/mikeletscher/followers","following_url":"https://api.github.com/users/mikeletscher/following{/other_user}","gists_url":"https://api.github.com/users/mikeletscher/gists{/gist_id}","starred_url":"https://api.github.com/users/mikeletscher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikeletscher/subscriptions","organizations_url":"https://api.github.com/users/mikeletscher/orgs","repos_url":"https://api.github.com/users/mikeletscher/repos","events_url":"https://api.github.com/users/mikeletscher/events{/privacy}","received_events_url":"https://api.github.com/users/mikeletscher/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-05T18:10:22Z","updated_at":"2022-08-09T14:52:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nI'm not _entirely_ sure if this is considered a bug, or intended behavior that's not well-documented for `uniqueness` validations on associations.\r\n\r\nI'm happy to help improve the documentation on this if that would be the most helpful way forward, or if this _is_ considered a bug, I can take a stab at a PR. \r\n\r\nIt looks like the issue is that `build_relation` on the uniqueness validator calls [`bind_attribute` on `ActiveRecord::Relation`](https://github.com/rails/rails/blob/408d061a80a49878ad26b305616ed9ba88ee1411/activerecord/lib/active_record/relation.rb#L45), which properly takes into account the reflection's foreign_key, but not primary key if it's been overridden. \r\n\r\nHere's a test that reproduces the issue:\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire 'bundler/inline'\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem 'activerecord', '~> 7.0.3.1'\r\n  gem 'sqlite3'\r\nend\r\n\r\nrequire 'active_record'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(\r\n  adapter: 'sqlite3',\r\n  database: ':memory:'\r\n)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :prescriptions, force: true do |t|\r\n    t.string :rx_number\r\n  end\r\n\r\n  create_table :fills, force: true do |t|\r\n    t.string :rx_number\r\n  end\r\nend\r\n\r\nclass Prescription < ActiveRecord::Base\r\n  has_many :fills, foreign_key: :rx_number, primary_key: :rx_number\r\nend\r\n\r\nclass Fill < ActiveRecord::Base\r\n  belongs_to :prescription, foreign_key: :rx_number, primary_key: :rx_number\r\n\r\n  validates :prescription, uniqueness: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_fill_unique_by_rx_number\r\n    Fill.create!(rx_number: '1234')\r\n    prescription = Prescription.create!(rx_number: '1234')\r\n    new_fill = prescription.fills.new\r\n    refute new_fill.save\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe uniqueness validation query would use the `rx_number` value of the `Prescription` to query for an existing `Fill` since that is what is set as the associations `primary_key`. \r\n\r\n### Actual behavior\r\nThe uniqueness validation query uses the `id` value of the `Prescription` to query for existing fills, disregarding the association's overridden `primary_key`.\r\n\r\nThis test passes if I patch bind_attribute to read the primary key from the reflection instead of directly from the reflection's klass:\r\n\r\n```ruby\r\nmodule ActiveRecord\r\n  # = Active Record \\Relation\r\n  class Relation\r\n    def bind_attribute(name, value) # :nodoc:\r\n      if reflection = klass._reflect_on_association(name)\r\n        name = reflection.foreign_key\r\n        primary_key = reflection.association_primary_key || reflection.klass.primary_key\r\n        value = value.read_attribute(primary_key) unless value.nil?\r\n      end\r\n\r\n      attr = table[name]\r\n      bind = predicate_builder.build_bind_attribute(attr.name, value)\r\n      yield attr, bind\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nWe were able to work around this by adding the uniqueness validation to the `rx_number` attribute instead of the association. If this is the desired way to handle this, I can open a PR to add a note about this to the docs, as it took us by surprise that validation on the association wouldn't use the defined key to get the value to query.\r\n\r\n### System configuration\r\n**Rails version**: `7.0.3.1`\r\n\r\n**Ruby version**: `3.1.2`\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45775/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45775/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45766","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45766/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45766/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45766/events","html_url":"https://github.com/rails/rails/issues/45766","id":1329650798,"node_id":"I_kwDNIULOT0Dcbg","number":45766,"title":"Active Model Dirty: attribute_changed? options (from/to) do not accept symbol","user":{"login":"thomasvanholder","id":36309895,"node_id":"MDQ6VXNlcjM2MzA5ODk1","avatar_url":"https://avatars.githubusercontent.com/u/36309895?v=4","gravatar_id":"","url":"https://api.github.com/users/thomasvanholder","html_url":"https://github.com/thomasvanholder","followers_url":"https://api.github.com/users/thomasvanholder/followers","following_url":"https://api.github.com/users/thomasvanholder/following{/other_user}","gists_url":"https://api.github.com/users/thomasvanholder/gists{/gist_id}","starred_url":"https://api.github.com/users/thomasvanholder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thomasvanholder/subscriptions","organizations_url":"https://api.github.com/users/thomasvanholder/orgs","repos_url":"https://api.github.com/users/thomasvanholder/repos","events_url":"https://api.github.com/users/thomasvanholder/events{/privacy}","received_events_url":"https://api.github.com/users/thomasvanholder/received_events","type":"User","site_admin":false},"labels":[{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-08-05T08:54:51Z","updated_at":"2022-08-07T20:25:55Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nThe `attribute_changed?` receives optional options, such as `from` and `to`. Each option key is passed a value. Only string values are accepted, and symbols are not recognized. This is inconsistent behavior as updating a column using the `update` method does accept both a string and a symbol.\r\n \r\n Source code: [attribute_changed?](https://github.com/rails/rails/blob/04972d9b9ef60796dc8f0917817b5392d61fcf09/activemodel/lib/active_model/dirty.rb#L178) \r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"debug\"\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.column :status, :integer, default: 0\r\n    t.date :review_date\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  enum :status, {draft: 0, published: 1}\r\n\r\n  before_update :set_review_date\r\n\r\n  def set_review_date\r\n    # when \"published\" is set as a string, the test correcty passes.\r\n    if status_changed?(to: :published)\r\n      self.review_date = Date.today\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_set_status\r\n    post = Post.create!\r\n    post.update(status: :published)\r\n\r\n    assert_equal \"published\", post.status\r\n  end\r\n\r\n  def test_sets_review_date\r\n    post = Post.create!\r\n    post.published!\r\n\r\n    assert_equal \"published\", post.status\r\n    assert_equal Date.today, post.review_date\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe value of the optional arguments `from` and `to` accepts both a string or symbol.\r\n\r\n### Actual behavior\r\nWhen options, such as `from` and `to` are passed to the [attribute_changed?](https://github.com/rails/rails/blob/04972d9b9ef60796dc8f0917817b5392d61fcf09/activemodel/lib/active_model/dirty.rb#L178) method the arguments are not recognized when passed as a symbol.\r\n\r\n### System configuration\r\n**Rails version**: `Rails 7.0.3`\r\n\r\n**Ruby version**: `ruby 3.1.2`\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45766/reactions","total_count":2,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45766/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45758","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45758/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45758/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45758/events","html_url":"https://github.com/rails/rails/issues/45758","id":1327892229,"node_id":"I_kwDNIULOTyYHBQ","number":45758,"title":"ActiveRecord 6.1 and JSONB: Incorrect results value/type when using both arrow operator and double arrow operator in the same SELECT statement","user":{"login":"shhavel","id":1169424,"node_id":"MDQ6VXNlcjExNjk0MjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1169424?v=4","gravatar_id":"","url":"https://api.github.com/users/shhavel","html_url":"https://github.com/shhavel","followers_url":"https://api.github.com/users/shhavel/followers","following_url":"https://api.github.com/users/shhavel/following{/other_user}","gists_url":"https://api.github.com/users/shhavel/gists{/gist_id}","starred_url":"https://api.github.com/users/shhavel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shhavel/subscriptions","organizations_url":"https://api.github.com/users/shhavel/orgs","repos_url":"https://api.github.com/users/shhavel/repos","events_url":"https://api.github.com/users/shhavel/events{/privacy}","received_events_url":"https://api.github.com/users/shhavel/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2022-08-03T23:42:39Z","updated_at":"2022-08-05T22:26:04Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Issue Description\r\n\r\nGenerally when using JSONB operators `->` (arrow operator) and `->>` (double arrow operator) in SELECT statement, \r\nActiveRecord returns correct result types: objects for `->` operator and string for `->>` operator.\r\nBut when using both operators in the same select statement, the returned results may have an unexpected type or be `nil`.\r\n\r\n### Steps to reproduce with Expected behaviour in tests and Actual behaviour in comments\r\n\r\n```ruby\r\n# file: activerecord_6_1_jsonb_test.rb\r\n# run: ruby activerecord_6_1_jsonb_test.rb\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"activerecord\", \"6.1.6.1\" # the same behaviour for version \"7.0.3.1\"\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\npg_opts = {adapter: \"postgresql\", database: \"jsonb_activerecord_issue\"}\r\nbegin\r\n  ActiveRecord::Base.establish_connection(pg_opts.except(:database))\r\n  ActiveRecord::Base.connection.create_database(pg_opts[:database])\r\n  puts \"Database #{pg_opts[:database]} was created.\"\r\nrescue => ActiveRecord::DatabaseAlreadyExists\r\n  puts \"Database #{pg_opts[:database]} alredy exists.\"\r\nend\r\nActiveRecord::Base.establish_connection(pg_opts)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :entries, force: true do |t|\r\n    t.jsonb :value\r\n  end\r\nend\r\n\r\nclass Entry < ActiveRecord::Base\r\nend\r\nEntry.create(value: {a: \"a\", b: \"b\", c: {}})\r\n\r\nclass BugTest < Minitest::Test\r\n  # passed\r\n  def test_jsonb_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->'a', value->'b'\"))\r\n    assert_equal [[{}, \"b\"]], Entry.pluck(Arel.sql(\"value->'c', value->'b'\"))\r\n  end\r\n\r\n  # passed\r\n  def test_jsonb_double_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'a', value->>'b'\"))\r\n    assert_equal [[\"{}\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'c', value->>'b'\"))\r\n  end\r\n\r\n  # failed (this test results are differ in activerecord 6.0)\r\n  def test_jsonb_arrow_operator_and_double_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->'a', value->>'b'\")) # Actual [[\"a\", nil]]\r\n    assert_equal [[{}, \"b\"]], Entry.pluck(Arel.sql(\"value->'c', value->>'b'\")) # Actual [[{}, nil]]\r\n  end\r\n\r\n  # failed\r\n  def test_jsonb_double_arrow_operator_and_arrow_operator\r\n    assert_equal [[\"a\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'a', value->'b'\")) # Actual [[nil, \"b\"]]\r\n    assert_equal [[\"{}\", \"b\"]], Entry.pluck(Arel.sql(\"value->>'c', value->'b'\")) # Actual [[{}, \"b\"]]\r\n  end\r\nend\r\n```\r\n\r\n### PostgreSQL results \r\n\r\n```sql\r\nSELECT\r\n  pg_typeof(value->'a'), value->'a',\r\n  pg_typeof(value->'b'), value->'b',\r\n  pg_typeof(value->'c'), value->'c',\r\n  pg_typeof(value->>'a'), value->>'a',\r\n  pg_typeof(value->>'b'), value->>'b',\r\n  pg_typeof(value->>'c'), value->>'c'\r\nFROM \"entries\";\r\n\r\n pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column? | pg_typeof | ?column?\r\n-----------+----------+-----------+----------+-----------+----------+-----------+----------+-----------+----------+-----------+----------\r\n jsonb     | \"a\"      | jsonb     | \"b\"      | jsonb     | {}       | text      | a        | text      | b        | text      | {}\r\n(1 row)\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 6.1.6.1\r\n\r\n**Ruby version**: 3.1.0\r\n\r\n### Similar issue in different versions of ActiveRecord\r\n\r\nThere is a similar issue but with slightly different behaviour in AR 6.0. Created another issue: #45757\r\n\r\nPlease confirm or comment on the expected behaviour.\r\nThank you.\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45758/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45758/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45750","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45750/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45750/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45750/events","html_url":"https://github.com/rails/rails/issues/45750","id":1327484205,"node_id":"I_kwDNIULOTx_NLQ","number":45750,"title":"Running `rails test` doesn't automatically load any custom tasks under `lib/tasks`","user":{"login":"onlynone","id":833690,"node_id":"MDQ6VXNlcjgzMzY5MA==","avatar_url":"https://avatars.githubusercontent.com/u/833690?v=4","gravatar_id":"","url":"https://api.github.com/users/onlynone","html_url":"https://github.com/onlynone","followers_url":"https://api.github.com/users/onlynone/followers","following_url":"https://api.github.com/users/onlynone/following{/other_user}","gists_url":"https://api.github.com/users/onlynone/gists{/gist_id}","starred_url":"https://api.github.com/users/onlynone/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/onlynone/subscriptions","organizations_url":"https://api.github.com/users/onlynone/orgs","repos_url":"https://api.github.com/users/onlynone/repos","events_url":"https://api.github.com/users/onlynone/events{/privacy}","received_events_url":"https://api.github.com/users/onlynone/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-03T16:16:38Z","updated_at":"2022-08-03T18:09:40Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n1. Create the file `lib/tasks/test.rake` with the content:\r\n```ruby\r\nENV[\"test.rake\"] = \"yes\"\r\ntask :custom_task do\r\n  ENV[\"custom_task\"] = \"yes\"\r\nend\r\n\r\ntask :test => [:custom_task]\r\n```\r\n2. Create a test file at `test/unit/rails_test_test.rb` with the content:\r\n```ruby\r\nclass RailsTestTest < ActiveSupport::TestCase\r\n  test \"test.rake is in the environment\" do\r\n    assert_equal('yes', ENV['test.rake'])\r\n  end\r\n\r\n  test \"custom_task is in the environment\" do\r\n    assert_equal('yes', ENV['custom_task'])\r\n  end\r\nend\r\n```\r\n3. Run `bin/rails test test/unit/rails_test_test.rb`\r\n4. Run `bin/rake test test/unit/rails_test_test.rb`\r\n\r\n### Expected behavior\r\nBoth `rails test` and `rake test` should succeed.\r\n\r\n### Actual behavior\r\nRunning the tests with `bin/rake` succeeds with the output:\r\n```\r\nbin/rake test test/unit/rails_test_test.rb\r\nRunning via Spring preloader in process 59092\r\nRun options: --seed 6948\r\n\r\n# Running:\r\n\r\n..\r\n\r\nFinished in 0.000943s, 2120.8907 runs/s, 2120.8907 assertions/s.\r\n2 runs, 2 assertions, 0 failures, 0 errors, 0 skips\r\n```\r\n\r\nWhile running with `bin/rails` fails with the output:\r\n\r\n```\r\nRunning via Spring preloader in process 58735\r\nRun options: --seed 33633\r\n\r\n# Running:\r\n\r\nF\r\n\r\nFailure:\r\nRailsTestTest#test_custom_task_is_in_the_environment [/Users/steven/projects/rails_test_tasks/test/unit/rails_test_test.rb:7]:\r\nExpected: \"yes\"\r\n  Actual: nil\r\n\r\n\r\nrails test test/unit/rails_test_test.rb:6\r\n\r\nF\r\n\r\nFailure:\r\nRailsTestTest#test_test.rake_is_in_the_environment [/Users/steven/projects/rails_test_tasks/test/unit/rails_test_test.rb:3]:\r\nExpected: \"yes\"\r\n  Actual: nil\r\n\r\n\r\nrails test test/unit/rails_test_test.rb:2\r\n\r\n\r\n\r\nFinished in 0.001378s, 1451.3788 runs/s, 1451.3788 assertions/s.\r\n2 runs, 2 assertions, 2 failures, 0 errors, 0 skips\r\n```\r\n\r\nBecause the file `lib/tasks/test.rake` is never loaded.\r\n\r\nIt seems like rails will only end up loading custom tasks if it can't find the command being run on the command line in its own list of built-in commands. When it can't find the command, it will load the local `Rakefile` via `find_by_namespace(\"rake\").perform(full_namespace, args, config)` in `Rails::Command.invoke`. And the local `Rakefile` usually has `Rails.application.load_tasks` and that loads any custom tasks under `lib/tasks`.\r\n\r\nFor example, this happens when the `ActiveRecord` migration exec's out to call: `bin/rails db:test:prepare`. That task is apparently not a built-in rails task, so the `Rakefile` and all custom tasks *do* end up getting loaded for that one.\r\n\r\n(As an aside here, I don't fully understand the difference between the built-in rails tasks and the ones that have to be searched for via rake. I also don't understand why the migration code needs to fork a separate process to do `db:test:prepare`. That task just ends up doing `db_namespace[\"test:load\"].invoke`. Why couldn't the `db:test:prepare` tasks simply be invoked the same way in the same process?)\r\n\r\n### System configuration\r\n**Rails version**: 6.0.5\r\n\r\n**Ruby version**: 2.6.5\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45750/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45750/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45736","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45736/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45736/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45736/events","html_url":"https://github.com/rails/rails/issues/45736","id":1326221102,"node_id":"I_kwDNIULOTwyHLg","number":45736,"title":"Virtual stored columns are always nil for newly created records","user":{"login":"camiloforero","id":6606686,"node_id":"MDQ6VXNlcjY2MDY2ODY=","avatar_url":"https://avatars.githubusercontent.com/u/6606686?v=4","gravatar_id":"","url":"https://api.github.com/users/camiloforero","html_url":"https://github.com/camiloforero","followers_url":"https://api.github.com/users/camiloforero/followers","following_url":"https://api.github.com/users/camiloforero/following{/other_user}","gists_url":"https://api.github.com/users/camiloforero/gists{/gist_id}","starred_url":"https://api.github.com/users/camiloforero/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/camiloforero/subscriptions","organizations_url":"https://api.github.com/users/camiloforero/orgs","repos_url":"https://api.github.com/users/camiloforero/repos","events_url":"https://api.github.com/users/camiloforero/events{/privacy}","received_events_url":"https://api.github.com/users/camiloforero/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-02T18:09:28Z","updated_at":"2022-08-02T19:28:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nUsing postgresql:\r\n\r\nGenerate a new model with one or more columns with default values, and a virtual stored column based on those other columns\r\nCreate a new record of that model\r\nAccess the value of the virtual stored column from the newly created ActiveRecord object\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem 'pg', '~> 1.4'\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection \"postgresql:///test\"\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.integer :counter1, null: false, default: 0\r\n    t.integer :counter2, null: false, default: 0\r\n    t.virtual :counter_sum, type: :integer, as: \"counter1 + counter2\", stored: true\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_virtual_column_value_populated\r\n    post = Post.create!\r\n\r\n    assert_equal 0, post.counter_sum\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe value of the virtual column should be *something*, in this particular case, 0\r\n\r\n### Actual behavior\r\nThe value of the virtual column is `nil`. The test fails with the following output\r\n```ruby\r\n# Running:\r\n\r\nD, [2022-08-02T13:05:17.402730 #13548] DEBUG -- :   TRANSACTION (0.1ms)  BEGIN\r\nD, [2022-08-02T13:05:17.403136 #13548] DEBUG -- :   Post Create (0.6ms)  INSERT INTO \"posts\" DEFAULT VALUES RETURNING \"id\"\r\nD, [2022-08-02T13:05:17.406144 #13548] DEBUG -- :   TRANSACTION (2.6ms)  COMMIT\r\nF\r\n\r\nFailure:\r\nBugTest#test_virtual_column_value_populated [stored_bug.rb:37]:\r\nExpected: 0\r\n  Actual: nil\r\n\r\n\r\nrails test stored_bug.rb:34\r\n\r\n\r\n\r\nFinished in 0.011047s, 90.5240 runs/s, 90.5240 assertions/s.\r\n1 runs, 1 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\n### System configuration\r\n**Rails version**: edge\r\n**Ruby version**: 3.1.2\r\n**PostgreSQL version**: 14.4\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45736/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45736/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45709","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45709/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45709/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45709/events","html_url":"https://github.com/rails/rails/issues/45709","id":1323303409,"node_id":"I_kwDNIULOTuAB8Q","number":45709,"title":"Rails & can't pin JS files from Unpkg","user":{"login":"septerr","id":1094216,"node_id":"MDQ6VXNlcjEwOTQyMTY=","avatar_url":"https://avatars.githubusercontent.com/u/1094216?v=4","gravatar_id":"","url":"https://api.github.com/users/septerr","html_url":"https://github.com/septerr","followers_url":"https://api.github.com/users/septerr/followers","following_url":"https://api.github.com/users/septerr/following{/other_user}","gists_url":"https://api.github.com/users/septerr/gists{/gist_id}","starred_url":"https://api.github.com/users/septerr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/septerr/subscriptions","organizations_url":"https://api.github.com/users/septerr/orgs","repos_url":"https://api.github.com/users/septerr/repos","events_url":"https://api.github.com/users/septerr/events{/privacy}","received_events_url":"https://api.github.com/users/septerr/received_events","type":"User","site_admin":false},"labels":[{"id":131864,"node_id":"MDU6TGFiZWwxMzE4NjQ=","url":"https://api.github.com/repos/rails/rails/labels/third%20party%20issue","name":"third party issue","color":"02d7e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-07-30T21:44:43Z","updated_at":"2022-08-02T18:08:34Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nIn a new Rails & app, try to pin a package from Unpkg CDN:\r\n\r\n```\r\n./bin/importmap pin @walletconnect/web3-provider@1.7.8 --from unpkg\r\n```\r\n\r\nYou get following response:\r\n\r\n```\r\nCouldn't find any packages in [\"@walletconnect/web3-provider@1.7.8\"] on unpkg\r\n```\r\nBut the file does exist on unpkg: https://unpkg.com/@walletconnect/web3-provider@1.7.8/dist/umd/index.min.js\r\n\r\nAfter adding some breakpoints in `.rbenv/versions/3.1.0/lib/ruby/gems/3.1.0/gems/importmap-rails-1.1.5/lib/importmap/packager.rb`, saw that the CDN post request and response are as follows:\r\n\r\nPost URL: \r\n```\r\n<URI::HTTPS https://api.jspm.io/generate>\r\n```\r\nPost Body:\r\n```\r\n \"{\\\"install\\\":[\\\"@walletconnect/web3-provider@1.7.8\\\"],\\\"flattenScope\\\":true,\\\"env\\\":[\\\"browser\\\",\\\"module\\\",\\\"production\\\"],\\\"provider\\\":\\\"unpkg\\\"}\"\r\n```\r\n\r\nPost Response:\r\n```\r\n<Net::HTTPUnauthorized 401 Unauthorized readbody=true>\r\n```\r\n\r\n### Expected behavior\r\nExpected the files from unpkg to be pinned.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\nMisleading error that files don't exist on unpkg.\r\n\r\n### System configuration\r\n**Rails version**:\r\nRails 7.0.3.1\r\n\r\n**Ruby version**:\r\nruby 3.1.0p0 (2021-12-25 revision fb4df44d16) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45709/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45709/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45691","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45691/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45691/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45691/events","html_url":"https://github.com/rails/rails/issues/45691","id":1322122058,"node_id":"I_kwDNIULOTs37Sg","number":45691,"title":"ActionMailer fails to create correct multipart message with rfc822 attachment","user":{"login":"der-flo","id":35431,"node_id":"MDQ6VXNlcjM1NDMx","avatar_url":"https://avatars.githubusercontent.com/u/35431?v=4","gravatar_id":"","url":"https://api.github.com/users/der-flo","html_url":"https://github.com/der-flo","followers_url":"https://api.github.com/users/der-flo/followers","following_url":"https://api.github.com/users/der-flo/following{/other_user}","gists_url":"https://api.github.com/users/der-flo/gists{/gist_id}","starred_url":"https://api.github.com/users/der-flo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/der-flo/subscriptions","organizations_url":"https://api.github.com/users/der-flo/orgs","repos_url":"https://api.github.com/users/der-flo/repos","events_url":"https://api.github.com/users/der-flo/events{/privacy}","received_events_url":"https://api.github.com/users/der-flo/received_events","type":"User","site_admin":false},"labels":[{"id":107188,"node_id":"MDU6TGFiZWwxMDcxODg=","url":"https://api.github.com/repos/rails/rails/labels/actionmailer","name":"actionmailer","color":"8B00FC","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-29T11:19:00Z","updated_at":"2022-08-02T19:46:17Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"I cannot re-open #42849 so I create a new issue…\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire 'bundler/inline'\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n  gem 'rails', github: 'rails/rails', branch: 'main'\r\nend\r\n\r\nrequire 'minitest/autorun'\r\nrequire 'action_mailer/railtie'\r\n\r\nclass TestMailer < ActionMailer::Base\r\n  def main\r\n    message_to_attach =  <<~MAIL.gsub(/\\n/, \"\\r\\n\")\r\n      Message-ID: <12345@foo.example>\r\n      Subject: Test\r\n      From: test1@foo.example\r\n      To: test2@foo.example\r\n      \r\n      hello world\r\n    MAIL\r\n    attachments['test.eml'] = {\r\n      mime_type: params[:mime_type],\r\n      content: message_to_attach\r\n    }\r\n\r\n    mail(from: 'test3@foo.example', to: 'test4@foo.example', subject: 'Test outer') do |format|\r\n      format.text { \"outer text - #{params[:mime_type]} attachment\" }\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_with_plain_mime_type\r\n    message = TestMailer.with(mime_type: 'text/plain').main\r\n    assert_equal message.mime_type, 'multipart/mixed'\r\n  end\r\n\r\n  def test_with_rfc822_mime_type\r\n    message = TestMailer.with(mime_type: 'message/rfc822').main\r\n    assert_equal message.mime_type, 'multipart/mixed'\r\n  end\r\nend\r\n```\r\n\r\nThe second test fails, the message object is rendered as follows:\r\n```\r\nDate: Fri, 23 Jul 2021 13:59:19 +0200\r\nFrom: test3@foo.example\r\nTo: test4@foo.example\r\nMessage-ID: <60faaf1738a02_14fbd98-3fb@flo.adigi.ai.mail>\r\nSubject: Test outer\r\nMime-Version: 1.0\r\nContent-Type: text/plain;\r\n boundary=\"--==_mimepart_60faaf1738008_14fbd98-484\";\r\n charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\n\r\n\r\n----==_mimepart_60faaf1738008_14fbd98-484\r\nContent-Type: text/plain;\r\n charset=UTF-8\r\nContent-Transfer-Encoding: 7bit\r\n\r\nouter text - message/rfc822 attachment\r\n----==_mimepart_60faaf1738008_14fbd98-484\r\nContent-Type: message/rfc822\r\nContent-Transfer-Encoding: \r\nContent-Disposition: attachment;\r\n filename=test.eml\r\nContent-ID: <60faaf1739102_14fbd98-2b@flo.adigi.ai.mail>\r\n\r\nMessage-ID: <12345@foo.example>\r\nSubject: Test\r\nFrom: test1@foo.example\r\nTo: test2@foo.example\r\n\r\nhello world\r\n\r\n----==_mimepart_60faaf1738008_14fbd98-484--\r\n\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe `message.mime_type` is `multipart/mixed` in both test cases. ActionMailer handles attachments in the way it is described in https://guides.rubyonrails.org/action_mailer_basics.html#adding-attachments describes.\r\n\r\n### Actual behavior\r\n\r\nWhen attaching a `message/rfc822` - an email message - the generated mail parts are not nested correctly, the outer `multipart/mixed` is missing.\r\n\r\nPerhaps this behaviour is caused by the [special handling](https://github.com/mikel/mail/blob/master/lib/mail/attachments_list.rb#L9) of such attachments in the `mail` gem.\r\n\r\n\r\n### System configuration\r\n**Rails version**: main\r\n\r\n**Ruby version**: 3.0.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45691/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":1,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45691/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45640","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45640/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45640/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45640/events","html_url":"https://github.com/rails/rails/issues/45640","id":1315219867,"node_id":"I_kwDNIULOTmSpmw","number":45640,"title":"ActiveModel::Dirty changes not reset properly when using store_accessor (tested with postgres)","user":{"login":"vccoffey","id":59817868,"node_id":"MDQ6VXNlcjU5ODE3ODY4","avatar_url":"https://avatars.githubusercontent.com/u/59817868?v=4","gravatar_id":"","url":"https://api.github.com/users/vccoffey","html_url":"https://github.com/vccoffey","followers_url":"https://api.github.com/users/vccoffey/followers","following_url":"https://api.github.com/users/vccoffey/following{/other_user}","gists_url":"https://api.github.com/users/vccoffey/gists{/gist_id}","starred_url":"https://api.github.com/users/vccoffey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vccoffey/subscriptions","organizations_url":"https://api.github.com/users/vccoffey/orgs","repos_url":"https://api.github.com/users/vccoffey/repos","events_url":"https://api.github.com/users/vccoffey/events{/privacy}","received_events_url":"https://api.github.com/users/vccoffey/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-07-22T16:44:57Z","updated_at":"2022-07-23T17:51:49Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nUsing PostgreSQL (pg) database\r\nGiven a model with a jsonb column\r\n```\r\nclass CreateTestModels < ActiveRecord::Migration[6.1]\r\n  def change\r\n    create_table :test_models do |t|\r\n      t.jsonb :jsonb_hash_attr\r\n      t.timestamps\r\n    end\r\n  end\r\nend\r\n```\r\nusing store_accessor\r\n```\r\nclass TestModel < ApplicationRecord\r\n  store_accessor :jsonb_hash_attr, :key, prefix: true\r\nend\r\n```\r\n\r\n### Expected behavior\r\nBoth tests pass:\r\n```\r\nrequire \"test_helper\"\r\nclass TestModelTest < ActiveSupport::TestCase\r\n  test \"does not show changes for a jsonb attribute if changed back to original value\" do\r\n    tm = TestModel.create jsonb_hash_attr: { \"key\" => \"foo\" }\r\n    tm.jsonb_hash_attr = { \"key\" => \"bar\" }\r\n    assert_equal tm.jsonb_hash_attr_change, [{ \"key\" => \"foo\" }, { \"key\" => \"bar\" }]\r\n    tm.jsonb_hash_attr = { \"key\" => \"foo\" }\r\n    assert_equal tm.jsonb_hash_attr_change, nil\r\n  end\r\n\r\n  test \"does not show changes for a jsonb attribute if changed back to original value using store_accessor\" do\r\n    tm = TestModel.create jsonb_hash_attr: { \"key\" => \"foo\" }\r\n    tm.jsonb_hash_attr_key = \"bar\"\r\n    assert_equal tm.jsonb_hash_attr_change, [{ \"key\" => \"foo\" }, { \"key\" => \"bar\" }]\r\n    tm.jsonb_hash_attr_key = \"foo\"\r\n    assert_equal tm.jsonb_hash_attr_change, nil\r\n  end\r\nend\r\n```\r\n### Actual behavior\r\nThe second test fails\r\n```\r\n--- expected\r\n+++ actual\r\n-[{\"key\"=>\"foo\"}, {\"key\"=>\"foo\"}]\r\n+nil\r\n```\r\n### System configuration\r\n**Rails version**:\r\ntested with 6.1.6.1 and 7.0.3.1\r\n\r\n**Ruby version**: 3.1.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45640/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45640/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45639","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45639/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45639/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45639/events","html_url":"https://github.com/rails/rails/issues/45639","id":1314984267,"node_id":"I_kwDNIULOTmERSw","number":45639,"title":"Explicitly touch on save","user":{"login":"schmijos","id":245443,"node_id":"MDQ6VXNlcjI0NTQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/245443?v=4","gravatar_id":"","url":"https://api.github.com/users/schmijos","html_url":"https://github.com/schmijos","followers_url":"https://api.github.com/users/schmijos/followers","following_url":"https://api.github.com/users/schmijos/following{/other_user}","gists_url":"https://api.github.com/users/schmijos/gists{/gist_id}","starred_url":"https://api.github.com/users/schmijos/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/schmijos/subscriptions","organizations_url":"https://api.github.com/users/schmijos/orgs","repos_url":"https://api.github.com/users/schmijos/repos","events_url":"https://api.github.com/users/schmijos/events{/privacy}","received_events_url":"https://api.github.com/users/schmijos/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-22T13:05:14Z","updated_at":"2022-07-22T20:31:00Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  ruby \"3.1.0\"\r\n  gem \"rails\", \"7.0.3.1\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.timestamps\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_save_touch\r\n    Post.create!(updated_at: 3.days.ago)\r\n    Post.last.save!(touch: true)\r\n\r\n    assert_in_delta 0.seconds.ago.to_i, Post.last.updated_at.to_i, 5\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nIf I tell _ActiveRecord_ to explicitly \"touch\", then I would expect it to update the timestamps.\r\n\r\n### Actual behavior\r\n`save` never hits the database if no attribute changed.\r\n\r\n### System configuration\r\n**Rails version**: >= 3.0.0, < 8","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45639/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45639/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45638","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45638/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45638/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45638/events","html_url":"https://github.com/rails/rails/issues/45638","id":1314662755,"node_id":"I_kwDNIULOTlwpYw","number":45638,"title":"CSRF Token Expiry issue.","user":{"login":"MBM1607","id":47133639,"node_id":"MDQ6VXNlcjQ3MTMzNjM5","avatar_url":"https://avatars.githubusercontent.com/u/47133639?v=4","gravatar_id":"","url":"https://api.github.com/users/MBM1607","html_url":"https://github.com/MBM1607","followers_url":"https://api.github.com/users/MBM1607/followers","following_url":"https://api.github.com/users/MBM1607/following{/other_user}","gists_url":"https://api.github.com/users/MBM1607/gists{/gist_id}","starred_url":"https://api.github.com/users/MBM1607/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MBM1607/subscriptions","organizations_url":"https://api.github.com/users/MBM1607/orgs","repos_url":"https://api.github.com/users/MBM1607/repos","events_url":"https://api.github.com/users/MBM1607/events{/privacy}","received_events_url":"https://api.github.com/users/MBM1607/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-22T08:38:19Z","updated_at":"2022-07-22T08:40:22Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"We are encountering an issue with form submission in production environment.\r\nThe criteria seems to be exceptionally rare, I have been unable to replicate the issue. \r\n\r\nCSRF token is created and validated just fine.\r\n\r\n### Timing\r\n\r\nIssue seems to occur only when users wait more than 2 hours on a form before submitting, but doing this we have been unable to reproduce as well.\r\n\r\n### Logs\r\n```\r\nW, [2022-07-14T15:19:37.535241 #2433]  WARN -- : Can't verify CSRF token authenticity.\r\nI, [2022-07-14T15:19:37.535556 #2433]  INFO -- : Completed 422 Unprocessable Entity in 1ms (ActiveRecord: 0.0ms | Allocations: 291)\r\nF, [2022-07-14T15:19:37.536425 #2433] FATAL -- :   \r\nActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n```\r\n\r\n### System configuration\r\n**Rails version 6.1.6** \r\n**Ruby version 2.7.4**\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45638/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45638/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45636","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45636/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45636/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45636/events","html_url":"https://github.com/rails/rails/issues/45636","id":1314546104,"node_id":"I_kwDNIULOTlphuA","number":45636,"title":"Invalid template types should raise an exception","user":{"login":"axos88","id":1281218,"node_id":"MDQ6VXNlcjEyODEyMTg=","avatar_url":"https://avatars.githubusercontent.com/u/1281218?v=4","gravatar_id":"","url":"https://api.github.com/users/axos88","html_url":"https://github.com/axos88","followers_url":"https://api.github.com/users/axos88/followers","following_url":"https://api.github.com/users/axos88/following{/other_user}","gists_url":"https://api.github.com/users/axos88/gists{/gist_id}","starred_url":"https://api.github.com/users/axos88/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/axos88/subscriptions","organizations_url":"https://api.github.com/users/axos88/orgs","repos_url":"https://api.github.com/users/axos88/repos","events_url":"https://api.github.com/users/axos88/events{/privacy}","received_events_url":"https://api.github.com/users/axos88/received_events","type":"User","site_admin":false},"labels":[{"id":3666649,"node_id":"MDU6TGFiZWwzNjY2NjQ5","url":"https://api.github.com/repos/rails/rails/labels/actionview","name":"actionview","color":"d7e102","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-07-22T07:40:54Z","updated_at":"2022-08-17T18:02:14Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n  - Create a template in views/foo/bar.txt.erb # Note .txt, and not .text\r\n\r\n```ruby\r\ndetails = { locale: [:en], formats: [:txt], handlers: [:erb], variants: []}\r\nActionController::Base.view_paths.find(\"bar\", 'foo', false, details, nil, [])\r\n```\r\n\r\n### Expected behavior\r\n\r\nShould throw an exception that :txt is not a registered type in Template::Types\r\n\r\n### Actual behavior\r\n\r\nSilently fails to find the otherwise existing template, specifying the correct directory it the file resides in. \r\nConfustion intensifies.\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3\r\n**Ruby version**: 2.7.6","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45636/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45636/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45635","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45635/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45635/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45635/events","html_url":"https://github.com/rails/rails/issues/45635","id":1314015345,"node_id":"I_kwDNIULOTlJIcQ","number":45635,"title":"Recent security releases are missing from the Releases page","user":{"login":"georgeclaghorn","id":94129,"node_id":"MDQ6VXNlcjk0MTI5","avatar_url":"https://avatars.githubusercontent.com/u/94129?v=4","gravatar_id":"","url":"https://api.github.com/users/georgeclaghorn","html_url":"https://github.com/georgeclaghorn","followers_url":"https://api.github.com/users/georgeclaghorn/followers","following_url":"https://api.github.com/users/georgeclaghorn/following{/other_user}","gists_url":"https://api.github.com/users/georgeclaghorn/gists{/gist_id}","starred_url":"https://api.github.com/users/georgeclaghorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/georgeclaghorn/subscriptions","organizations_url":"https://api.github.com/users/georgeclaghorn/orgs","repos_url":"https://api.github.com/users/georgeclaghorn/repos","events_url":"https://api.github.com/users/georgeclaghorn/events{/privacy}","received_events_url":"https://api.github.com/users/georgeclaghorn/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false},"assignees":[{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2022-07-22T01:21:34Z","updated_at":"2022-08-19T18:08:06Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Rails versions 7.0.3.1, 6.1.6.1, 6.0.5.1, and 5.2.8.1 are not listed at this GitHub repository’s [Releases](https://github.com/rails/rails/releases) page. Past releases are listed there, including the most recent round of bugfix releases from May.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45635/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45635/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45632","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45632/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45632/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45632/events","html_url":"https://github.com/rails/rails/issues/45632","id":1312439669,"node_id":"I_kwDNIULOTjo9dQ","number":45632,"title":"`_read_attribute` method should also check whether an attribute is aliased or not","user":{"login":"khiav223577","id":4011729,"node_id":"MDQ6VXNlcjQwMTE3Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4011729?v=4","gravatar_id":"","url":"https://api.github.com/users/khiav223577","html_url":"https://github.com/khiav223577","followers_url":"https://api.github.com/users/khiav223577/followers","following_url":"https://api.github.com/users/khiav223577/following{/other_user}","gists_url":"https://api.github.com/users/khiav223577/gists{/gist_id}","starred_url":"https://api.github.com/users/khiav223577/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/khiav223577/subscriptions","organizations_url":"https://api.github.com/users/khiav223577/orgs","repos_url":"https://api.github.com/users/khiav223577/repos","events_url":"https://api.github.com/users/khiav223577/events{/privacy}","received_events_url":"https://api.github.com/users/khiav223577/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-07-21T03:14:22Z","updated_at":"2022-07-21T21:37:09Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n```rb\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  gem \"activerecord\", '7.0.3'\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table \"users\", force: :cascade do |t|\r\n    t.string :name\r\n  end\r\n\r\n  create_table \"posts\", force: :cascade do |t|\r\n    t.string :title\r\n    t.integer :userId\r\n  end\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\n  has_many :posts\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  belongs_to :user\r\n\r\n  alias_attribute :user_id, :userId\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def setup\r\n    user = User.create!(name: 'Tester')\r\n    post = Post.create!(user_id: user.id, title: 'Post A')\r\n  end\r\n\r\n  def test_has_many\r\n    assert_equal ['Post A'], User.first.posts.map(&:title)\r\n  end\r\n\r\n  def test_belongs_to\r\n    assert_equal 'Tester', Post.first.user&.name\r\n  end\r\nend\r\n```\r\n\r\nResult:\r\n```\r\nFinished in 0.059414s, 33.6619 runs/s, 33.6619 assertions/s.\r\n\r\n  1) Failure:\r\nBugTest#test_belongs_to [test.rb:53]:\r\nExpected: \"Tester\"\r\n  Actual: nil\r\n\r\n2 runs, 2 assertions, 1 failures, 0 errors, 0 skips\r\n```\r\n\r\n### Expected behavior\r\n\r\nI run into this issue when I tried to add an association on an aliased attribute.\r\n\r\nThen I found `belongs_to_association` will use `_read_attribute` method to check if this `foreign_key` exists on this model or not.\r\nIt doesn't pass the condition, therefore `find_target` will not be triggered.\r\nhttps://github.com/rails/rails/blob/3272335f8f4739629283cdeff7c3db723f34a3f5/activerecord/lib/active_record/associations/association.rb#L172-L173\r\nhttps://github.com/rails/rails/blob/3272335f8f4739629283cdeff7c3db723f34a3f5/activerecord/lib/active_record/associations/association.rb#L274-L276\r\nhttps://github.com/rails/rails/blob/2ea5ff9e13b9c5d0d5d25b2441efa81a2de2a262/activerecord/lib/active_record/associations/belongs_to_association.rb#L133-L135\r\nhttps://github.com/rails/rails/blob/4ae0390c1051a39ec16a4a95451cd06172a1b260/activerecord/lib/active_record/attribute_methods/read.rb#L37-L39\r\n\r\nThe `read_attribute` method takes `attribute_alias` into consideration since https://github.com/rails/rails/pull/26529, while `_read_attribute` doesn't. I think it should, too.\r\n\r\n### Actual behavior\r\n\r\nSee the test script below.\r\n\r\n### System configuration\r\n**Rails version**: \r\n7.0.3.1\r\n\r\n**Ruby version**:\r\nruby 3.0.0p0 (2020-12-25 revision 95aff21468) [x86_64-linux]","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45632/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45632/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45609","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45609/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45609/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45609/events","html_url":"https://github.com/rails/rails/issues/45609","id":1306840730,"node_id":"I_kwDNIULOTeTOmg","number":45609,"title":"Cannot add ActiveModel::Attribute::FromDatabase to permitted YAML safe load classes","user":{"login":"stanhu","id":963826,"node_id":"MDQ6VXNlcjk2MzgyNg==","avatar_url":"https://avatars.githubusercontent.com/u/963826?v=4","gravatar_id":"","url":"https://api.github.com/users/stanhu","html_url":"https://github.com/stanhu","followers_url":"https://api.github.com/users/stanhu/followers","following_url":"https://api.github.com/users/stanhu/following{/other_user}","gists_url":"https://api.github.com/users/stanhu/gists{/gist_id}","starred_url":"https://api.github.com/users/stanhu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stanhu/subscriptions","organizations_url":"https://api.github.com/users/stanhu/orgs","repos_url":"https://api.github.com/users/stanhu/repos","events_url":"https://api.github.com/users/stanhu/events{/privacy}","received_events_url":"https://api.github.com/users/stanhu/received_events","type":"User","site_admin":false},"labels":[{"id":107186,"node_id":"MDU6TGFiZWwxMDcxODY=","url":"https://api.github.com/repos/rails/rails/labels/regression","name":"regression","color":"e10c02","default":false,"description":null},{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-07-16T15:51:30Z","updated_at":"2022-08-18T11:39:07Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWe have some database entries serialized to YAML. For example:\r\n\r\n```\r\n---\r\n:custom_message: Repository Download Started\r\n:author_name: !ruby/object:DeployToken\r\n  concise_attributes:\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: deploy_token_type\r\n    value_before_type_cast: 1\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: id\r\n    value_before_type_cast: 2\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: revoked\r\n    value_before_type_cast: false\r\n  - !ruby/object:ActiveModel::Attribute::FromDatabase\r\n    name: read_repository\r\n    value_before_type_cast: true\r\n```\r\n\r\nHowever, since the security release announced in https://rubyonrails.org/2022/7/12/Rails-Versions-7-0-3-1-6-1-6-1-6-0-5-1-and-5-2-8-1-have-been-released to address CVE-2022-32224, we cannot simply add `ActiveModel::Attribute::FromDatabase` to the permitted class list:\r\n\r\n```ruby\r\n(byebug) YAML.safe_load(payload, permitted_classes: [ActiveModel::Attribute::FromDatabase, Symbol, DeployToken], aliases: true)\r\n*** NameError Exception: private constant ActiveModel::Attribute::FromDatabase referenced\r\n```\r\n\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\n### Expected behavior\r\n\r\nYAML loading should work. Should this constant no longer be private since it's been serialized to YAML?\r\n\r\n### Actual behavior\r\n\r\nYAML loading fails with:\r\n\r\n```\r\n*** NameError Exception: private constant ActiveModel::Attribute::FromDatabase referenced\r\n```\r\n\r\n### System configuration\r\n\r\n**Rails version**:\r\nv6.1.6.1\r\n\r\n**Ruby version**:\r\nv2.7.5","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45609/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45609/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45596","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45596/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45596/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45596/events","html_url":"https://github.com/rails/rails/issues/45596","id":1304247666,"node_id":"I_kwDNIULOTb09cg","number":45596,"title":"Setting `schema_dump` in database.yml does not change dump format","user":{"login":"leboshi","id":16550140,"node_id":"MDQ6VXNlcjE2NTUwMTQw","avatar_url":"https://avatars.githubusercontent.com/u/16550140?v=4","gravatar_id":"","url":"https://api.github.com/users/leboshi","html_url":"https://github.com/leboshi","followers_url":"https://api.github.com/users/leboshi/followers","following_url":"https://api.github.com/users/leboshi/following{/other_user}","gists_url":"https://api.github.com/users/leboshi/gists{/gist_id}","starred_url":"https://api.github.com/users/leboshi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leboshi/subscriptions","organizations_url":"https://api.github.com/users/leboshi/orgs","repos_url":"https://api.github.com/users/leboshi/repos","events_url":"https://api.github.com/users/leboshi/events{/privacy}","received_events_url":"https://api.github.com/users/leboshi/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-07-14T04:44:37Z","updated_at":"2022-07-14T14:34:25Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Originally brought up in #43173.  I opened PR #43240 to address it, but that was closed when it was decided #43530 did the same thing.  Unfortunately, I don't think any of us were really reading what the other was doing, because the two PRs actually each only addressed half the opened issue.\r\n\r\nPR incoming to fully address this and the second half of #43173!\r\n\r\n### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_schema_format_corresponds_with_schema_dump\r\n    Dir.mktmpdir do |dir|\r\n      ActiveRecord::Tasks::DatabaseTasks.stub(:db_dir, dir) do\r\n        old_configurations = ActiveRecord::Base.configurations\r\n        ActiveRecord::Base.configurations = {\r\n          \"development\" => {\r\n            \"primary\" => {\r\n              \"database\" => \"dev-db\",\r\n              \"schema_dump\" => \"primary_structure.sql\"\r\n            }\r\n          }\r\n        }\r\n\r\n        db_config = ActiveRecord::Base.configurations.configs_for(env_name: \"development\", name: \"primary\")\r\n        ActiveRecord::Tasks::DatabaseTasks.dump_schema(db_config)\r\n\r\n        dump_contents = File.read(File.join(dir, \"primary_structure.sql\"))\r\n        refute_match /ActiveRecord::Schema/, dump_contents\r\n        assert_match /CREATE TABLE/, dump_contents\r\n      ensure\r\n        ActiveRecord::Base.configurations = old_configurations\r\n        ActiveRecord::Base.clear_cache!\r\n      end\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nIf `schema_dump` is set to something like `primary_structure.sql`, I'd expect it to do a SQL structure dump rather than a Ruby schema dump.\r\n\r\n### Actual behavior\r\nThe filename in `schema_dump` has no bearing on the format of the dump Rails writes or expects to read.\r\n\r\n### System configuration\r\n**Rails version**: (main)\r\n\r\n**Ruby version**: 3.1.2\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45596/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45596/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45998","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45998/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45998/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45998/events","html_url":"https://github.com/rails/rails/issues/45998","id":1368868095,"node_id":"I_kwDNIULOUZdE_w","number":45998,"title":"CSRF getting different token","user":{"login":"Saleh-Salem","id":22606707,"node_id":"MDQ6VXNlcjIyNjA2NzA3","avatar_url":"https://avatars.githubusercontent.com/u/22606707?v=4","gravatar_id":"","url":"https://api.github.com/users/Saleh-Salem","html_url":"https://github.com/Saleh-Salem","followers_url":"https://api.github.com/users/Saleh-Salem/followers","following_url":"https://api.github.com/users/Saleh-Salem/following{/other_user}","gists_url":"https://api.github.com/users/Saleh-Salem/gists{/gist_id}","starred_url":"https://api.github.com/users/Saleh-Salem/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Saleh-Salem/subscriptions","organizations_url":"https://api.github.com/users/Saleh-Salem/orgs","repos_url":"https://api.github.com/users/Saleh-Salem/repos","events_url":"https://api.github.com/users/Saleh-Salem/events{/privacy}","received_events_url":"https://api.github.com/users/Saleh-Salem/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-11T08:08:17Z","updated_at":"2022-09-11T08:27:32Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"When validating the CSRF token getting an exception in API\r\n \r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\nthe `session[:_csrf_token]` and  `request.x_csrf_token` is different and getting issue.\r\nwhen I need to skip the csrf, I add `verify_authenticity_token`, In this case, I don't need to skip it.\r\nI debug and found the issue in the method:\r\n\r\n```\r\n  def compare_with_global_token(token, session = nil) # :doc:\r\n    ActiveSupport::SecurityUtils.fixed_length_secure_compare(token, global_csrf_token(session))\r\n  end\r\n```\r\n\r\nwhat is `session[:_csrf_token]` and how can I implement it in API?\r\nIs there any missing from my side?\r\n### Steps to reproduce\r\n\r\n1. Add `protect_from_forgery with: :exception` .\r\n2. When logging in return token in response is generated by `form_authenticity_token`.\r\n3. When Trying to request any POST, PUT or DELETE API get an exception.\r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\nReturn Response without exception.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\ngetting exception \r\n> Can't verify CSRF token authenticity.\r\n> ActionController::InvalidAuthenticityToken (ActionController::InvalidAuthenticityToken):\r\n\r\n### System configuration\r\n**Rails version**:\r\n6.0.3.5\r\n**Ruby version**:\r\n2.7.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45998/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45998/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45994","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45994/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45994/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45994/events","html_url":"https://github.com/rails/rails/issues/45994","id":1368555704,"node_id":"I_kwDNIULOUZKAuA","number":45994,"title":"LoadInterlockAwareMonitor deadlock when clearing cache (multiple databases, test)","user":{"login":"kuahyeow","id":16723,"node_id":"MDQ6VXNlcjE2NzIz","avatar_url":"https://avatars.githubusercontent.com/u/16723?v=4","gravatar_id":"","url":"https://api.github.com/users/kuahyeow","html_url":"https://github.com/kuahyeow","followers_url":"https://api.github.com/users/kuahyeow/followers","following_url":"https://api.github.com/users/kuahyeow/following{/other_user}","gists_url":"https://api.github.com/users/kuahyeow/gists{/gist_id}","starred_url":"https://api.github.com/users/kuahyeow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kuahyeow/subscriptions","organizations_url":"https://api.github.com/users/kuahyeow/orgs","repos_url":"https://api.github.com/users/kuahyeow/repos","events_url":"https://api.github.com/users/kuahyeow/events{/privacy}","received_events_url":"https://api.github.com/users/kuahyeow/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-10T08:52:46Z","updated_at":"2022-09-10T08:56:12Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"With multiple databases, we observe hangs within system tests.\r\n\r\nSee also https://gitlab.com/gitlab-org/gitlab/-/issues/371468 (GitLab is at Rails 6.1, Ruby 2.7.5)\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nHere's a minimal reproduction with Rails 7.0.3.1\r\n\r\n1. Checkout https://gitlab.com/tkuah/multi_database_system_test\r\n2. `bundle install`\r\n3. `bundle exec rails db:migrate`\r\n4. `bundle rails test test/system/home_pages_test.rb`\r\n\r\nThe conditions are:\r\n\r\n1. Multiple databases\r\n2. System test where there's an async request which overlaps with the main thread\r\n\r\n### Expected behavior\r\n\r\nIt does not hang, and the test completes\r\n\r\n### Actual behavior\r\n\r\nIt hangs. It looks like it's hanging when clearing query cache (see https://gitlab.com/gitlab-org/gitlab/-/issues/371468#note_1087203883, and https://gitlab.com/gitlab-org/gitlab/-/issues/371468#note_1088779499)\r\n\r\nA backtrace dump taken while the test is hanging [sigdump-68442.log](https://github.com/rails/rails/files/9539878/sigdump-68442.log)\r\n\r\nMy suspicion is that:\r\n\r\n1. `lock_thread` is true for system tests\r\n3. Therefore both the main thread, and the Puma thread attempt to clear query cache for the same set of connections\r\n\r\nSo we have two connections:\r\n\r\n1. Puma thread takes a `LoadInterlockAwareMonitor` lock for primary connection via `Post.transaction`\r\n2. Main thread takes a `LoadInterlockAwareMonitor` lock for animal connection via implicit transaction that `create` does\r\n3. Due to 2, main thread attempts to clear query cache for primary connection. **Waits for 1's lock**\r\n4. Due to 1, and because of `lock_thread`, puma thread clears query cache for primary connection. It takes a `LoadInterlockAwareMonitor` lock for primary connection which succeds\r\n5. Due to 1, puma thread now attempts clears query cache for animal connection. **Waits for 2's lock**\r\n\r\nSee [`clear_query_caches_for_current_thread` method](https://github.com/rails/rails/blob/e24fbf71fa0a10f63346b9b42604451958740844/activerecord/lib/active_record/connection_handling.rb#L244-L248)\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: ruby 2.7.5p203 (2021-11-24 revision f69aeb8314) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45994/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45994/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45984","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45984/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45984/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45984/events","html_url":"https://github.com/rails/rails/issues/45984","id":1368144421,"node_id":"I_kwDNIULOUYw6JQ","number":45984,"title":"Cannot Eager Load has_many :through Relationships with custom scope","user":{"login":"dcorrigan","id":2445528,"node_id":"MDQ6VXNlcjI0NDU1Mjg=","avatar_url":"https://avatars.githubusercontent.com/u/2445528?v=4","gravatar_id":"","url":"https://api.github.com/users/dcorrigan","html_url":"https://github.com/dcorrigan","followers_url":"https://api.github.com/users/dcorrigan/followers","following_url":"https://api.github.com/users/dcorrigan/following{/other_user}","gists_url":"https://api.github.com/users/dcorrigan/gists{/gist_id}","starred_url":"https://api.github.com/users/dcorrigan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dcorrigan/subscriptions","organizations_url":"https://api.github.com/users/dcorrigan/orgs","repos_url":"https://api.github.com/users/dcorrigan/repos","events_url":"https://api.github.com/users/dcorrigan/events{/privacy}","received_events_url":"https://api.github.com/users/dcorrigan/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-09T17:47:35Z","updated_at":"2022-09-09T17:47:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nThis seems like it's the same as #28324, but I'm still seeing the issue in Rails 7. \r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n  end\r\n\r\n  create_table :images, force: true do |t|\r\n    t.string :title\r\n    t.integer :post_id\r\n  end\r\n\r\n  create_table :captions, force: true do |t|\r\n    t.integer :image_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :images\r\n  has_many :captions, lambda { order('images.title DESC') }, through: :images\r\nend\r\n\r\nclass Image < ActiveRecord::Base\r\n  belongs_to :post\r\n  has_one :caption\r\nend\r\n\r\nclass Caption < ActiveRecord::Base\r\n  belongs_to :image\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_preload_has_many_through_association_with_scope\r\n    post = Post.create!\r\n    image = Image.create!\r\n    image.caption = Caption.create!\r\n    post.images << image\r\n    post.save!\r\n\r\n    # Access through the model works\r\n    assert_includes post.captions, Caption.first\r\n\r\n    # Query with association preloaded does not.\r\n    # When evaluated, it will apply the scope without the relevant JOIN table:\r\n    # SELECT \"captions\".* FROM \"captions\" WHERE \"captions\".\"image_id\" = ? ORDER BY images.title DESC\r\n    preloaded = Post.where(id: post.id).includes(:captions)\r\n\r\n    assert_includes preloaded.first.captions, Caption.first\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe test passes and we're able to eager load has_many :through associations with custom scopes in this way.\r\n\r\nI realize this can be fixed by adding a `references(:images)` to the query, but it seems reasonable to expect AR to infer that that the join is necessary here.\r\n\r\n### Actual behavior\r\n\r\nTest fails with an error: `ActiveRecord::StatementInvalid: SQLite3::SQLException: no such column: images.title`\r\n\r\n### System configuration\r\n**Rails version**: 7.0 \r\n\r\n**Ruby version**: 3.1.2p20\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45984/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45967","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45967/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45967/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45967/events","html_url":"https://github.com/rails/rails/issues/45967","id":1366038829,"node_id":"I_kwDNIULOUWwZLQ","number":45967,"title":"Inconsistent update of timestamps while updating associations with *_ids=","user":{"login":"matthee","id":547653,"node_id":"MDQ6VXNlcjU0NzY1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/547653?v=4","gravatar_id":"","url":"https://api.github.com/users/matthee","html_url":"https://github.com/matthee","followers_url":"https://api.github.com/users/matthee/followers","following_url":"https://api.github.com/users/matthee/following{/other_user}","gists_url":"https://api.github.com/users/matthee/gists{/gist_id}","starred_url":"https://api.github.com/users/matthee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matthee/subscriptions","organizations_url":"https://api.github.com/users/matthee/orgs","repos_url":"https://api.github.com/users/matthee/repos","events_url":"https://api.github.com/users/matthee/events{/privacy}","received_events_url":"https://api.github.com/users/matthee/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-08T10:51:09Z","updated_at":"2022-09-09T03:10:33Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"ActiveRecord inconsistently updates the `updated_at` column when changing `has_many through:` associations.\r\n\r\n### Steps to reproduce\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"~> 7.0.0\"\r\n  gem \"activesupport\", \"~> 7.0.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"active_support/testing/time_helpers\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.timestamps\r\n  end\r\n  \r\n  create_table :tags, force: true do |t|\r\n  end\r\n\r\n  create_table :taggings, force: true do |t|\r\n    t.integer :post_id\r\n    t.integer :tag_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :taggings, dependent: :destroy\r\n  \r\n  has_many :tags, through: :taggings\r\nend\r\n\r\nclass Tagging < ActiveRecord::Base\r\n  belongs_to :post, touch: true\r\n  belongs_to :tag\r\nend\r\n\r\nclass Tag < ActiveRecord::Base\r\n  has_many :taggings\r\n  has_many :posts, through: :taggings\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  include ActiveSupport::Testing::TimeHelpers\r\n  \r\n  def test_updated_at_is_updated_when_setting_has_many_through_association\r\n    freeze_time\r\n        \r\n    tag_1 = Tag.create!\r\n    tag_2 = Tag.create!\r\n      \r\n    post = Post.create!\r\n    \r\n    travel_to(now = 1.hour.from_now)\r\n    \r\n    # Adding tags updates post.updated_at\r\n    post.update(tag_ids: [tag_1.id, tag_2.id])\r\n    assert_in_delta now, post.updated_at, 1.second, \"post#updated_at was not updated when adding tags\"\r\n    \r\n    # Removing tags does not update post.updated_at :(\r\n    travel_to(now = 2.hours.from_now)\r\n    post.update(tag_ids: [tag_1.id])\r\n    assert_in_delta now, post.updated_at, 1.second, \"post#updated_at was not updated when removing tags\"\r\n  end\r\n  \r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nIn the example above, both `.update` calls should update the `updated_at` column of the post record. (when adding and removing records)\r\n\r\n### Actual behavior\r\n\r\nWhen deleting a record, the `updated_at` timestamp is not updated.\r\n\r\n### System configuration\r\n**Rails version**:\r\n7.0.3.1\r\n**Ruby version**:\r\n3.0.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45967/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45967/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45959","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45959/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45959/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45959/events","html_url":"https://github.com/rails/rails/issues/45959","id":1364232810,"node_id":"I_kwDNIULOUVCKag","number":45959,"title":"JSON field not saving data with symbol : and it's saving with arrow =>","user":{"login":"sajjadmurtaza","id":8552702,"node_id":"MDQ6VXNlcjg1NTI3MDI=","avatar_url":"https://avatars.githubusercontent.com/u/8552702?v=4","gravatar_id":"","url":"https://api.github.com/users/sajjadmurtaza","html_url":"https://github.com/sajjadmurtaza","followers_url":"https://api.github.com/users/sajjadmurtaza/followers","following_url":"https://api.github.com/users/sajjadmurtaza/following{/other_user}","gists_url":"https://api.github.com/users/sajjadmurtaza/gists{/gist_id}","starred_url":"https://api.github.com/users/sajjadmurtaza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sajjadmurtaza/subscriptions","organizations_url":"https://api.github.com/users/sajjadmurtaza/orgs","repos_url":"https://api.github.com/users/sajjadmurtaza/repos","events_url":"https://api.github.com/users/sajjadmurtaza/events{/privacy}","received_events_url":"https://api.github.com/users/sajjadmurtaza/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":1071962662,"node_id":"MDU6TGFiZWwxMDcxOTYyNjYy","url":"https://api.github.com/repos/rails/rails/labels/more-information-needed","name":"more-information-needed","color":"bfdadc","default":false,"description":"When reporter needs to provide more information"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-09-07T07:40:12Z","updated_at":"2022-09-08T07:23:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nI have JSON field in my database `t.json \"theme\"`. When I try to save the field hash with : , it's overridden before save\r\ne.g.\r\n`object.theme = { color: 'red' }` it always change to `{ color => 'red' }`\r\n\r\ni also tried with jsonb and default value with empty hash {} but still having the same issue.\r\n\r\n\r\nI want to save the JSON data hash with symbol keys `{ color: 'red' }`\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.0\r\n\r\n**Ruby version**: 2.7.1\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45959/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45959/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45949","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45949/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45949/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45949/events","html_url":"https://github.com/rails/rails/issues/45949","id":1362899537,"node_id":"I_kwDNIULOUTwyUQ","number":45949,"title":"ActionText::Attachable#as_json override is breaking ActiveStorage::Blob#as_json when blob is not persisted","user":{"login":"balbesina","id":7312369,"node_id":"MDQ6VXNlcjczMTIzNjk=","avatar_url":"https://avatars.githubusercontent.com/u/7312369?v=4","gravatar_id":"","url":"https://api.github.com/users/balbesina","html_url":"https://github.com/balbesina","followers_url":"https://api.github.com/users/balbesina/followers","following_url":"https://api.github.com/users/balbesina/following{/other_user}","gists_url":"https://api.github.com/users/balbesina/gists{/gist_id}","starred_url":"https://api.github.com/users/balbesina/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/balbesina/subscriptions","organizations_url":"https://api.github.com/users/balbesina/orgs","repos_url":"https://api.github.com/users/balbesina/repos","events_url":"https://api.github.com/users/balbesina/events{/privacy}","received_events_url":"https://api.github.com/users/balbesina/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-06T08:26:39Z","updated_at":"2022-09-06T08:26:39Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\nfrom rails console:\r\n```ruby\r\nActiveStorage::Blob.build_after_unfurling(io: StringIO.new('asd'), filename: 'asd.txt').as_json\r\n```\r\n\r\n[Reproduction script](https://gist.github.com/balbesina/30fbdafbfee4b71b06209d9e950f4128)\r\n\r\n### Expected behavior\r\nActiveStorage::Blob#as_json returns a Hash\r\n\r\n### Actual behavior\r\nActiveStorage::Blob#as_json raises exception\r\n```\r\n/Users/dhh/.rvm/gems/ruby-3.1.2/gems/globalid-1.0.0/lib/global_id/uri/gid.rb:167:in `validate_model_id': \r\nUnable to create a Global ID for ActiveStorage::Blob without a model id. (URI::GID::MissingModelIdError)\r\n```\r\n\r\n### System configuration\r\n**Rails version**: Rails 7.0.3.1\r\n**Ruby version**: ruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [arm64-darwin21]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45949/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45949/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45939","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45939/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45939/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45939/events","html_url":"https://github.com/rails/rails/issues/45939","id":1360876688,"node_id":"I_kwDNIULOUR1UkA","number":45939,"title":"Validations aren't inherited from base model if child is called before validation declaration","user":{"login":"Exterm1nate","id":48535087,"node_id":"MDQ6VXNlcjQ4NTM1MDg3","avatar_url":"https://avatars.githubusercontent.com/u/48535087?v=4","gravatar_id":"","url":"https://api.github.com/users/Exterm1nate","html_url":"https://github.com/Exterm1nate","followers_url":"https://api.github.com/users/Exterm1nate/followers","following_url":"https://api.github.com/users/Exterm1nate/following{/other_user}","gists_url":"https://api.github.com/users/Exterm1nate/gists{/gist_id}","starred_url":"https://api.github.com/users/Exterm1nate/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Exterm1nate/subscriptions","organizations_url":"https://api.github.com/users/Exterm1nate/orgs","repos_url":"https://api.github.com/users/Exterm1nate/repos","events_url":"https://api.github.com/users/Exterm1nate/events{/privacy}","received_events_url":"https://api.github.com/users/Exterm1nate/received_events","type":"User","site_admin":false},"labels":[{"id":107190,"node_id":"MDU6TGFiZWwxMDcxOTA=","url":"https://api.github.com/repos/rails/rails/labels/activemodel","name":"activemodel","color":"00E5FF","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-09-03T14:46:42Z","updated_at":"2022-09-08T07:26:36Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nLet's create some STI models. Base `Vehicle` and two childs `Car` and `Motorcycle`.\r\n\r\n```ruby\r\n# models/vehicle.rb\r\nclass Vehicle < ApplicationRecord\r\n  TYPES = [Car, Motorcycle].freeze\r\n\r\n  validates :color, uniqueness: { scope: :model }\r\nend\r\n\r\n# models/car.rb\r\nclass Car < Vehicle\r\nend\r\n\r\n# models/motorcycle.rb\r\nclass Motorcycle < Vehicle\r\nend\r\n```\r\n\r\nAfter that we want to use `#validators_on` method to make sure the validation is present.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\nCar.validators_on(:color)\r\nMotorcycle.validators_on(:color)\r\n```\r\n\r\n### Expected behavior\r\n\r\nAll models must contain the validation.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nMotorcycle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\n```\r\n\r\n### Actual behavior\r\n\r\nBut for childs this method returns nothing.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> []\r\nMotorcycle.validators_on(:color)\r\n#=> []\r\n```\r\n\r\n### Notes\r\n\r\nIf we remove the `TYPES` constant (or just child classes calls from it) `validators_on` works as expected. Let's change original code a little bit:\r\n\r\n```ruby\r\n# models/vehicle.rb\r\nclass Vehicle < ApplicationRecord\r\n  TYPES = [Car].freeze # Motorcycle was removed from here!\r\n\r\n  validates :color, uniqueness: { scope: :model }\r\nend\r\n```\r\n\r\nAnd after that test again.\r\n\r\n```ruby\r\nVehicle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\nCar.validators_on(:color)\r\n#=> []\r\nMotorcycle.validators_on(:color)\r\n#=> [#<ActiveRecord::Validations::UniquenessValidator @attributes=[:color], @options={:scope=>:model}, @klass=Vehicle>]\r\n```\r\n\r\n`Motorcycle` validation was returned correctly this time.\r\n\r\nIt seems to be a load error. `Car` was called before the `Vehicle`'s validation declaration, so it doesn't take this validation into account. It may also depend on loading order.\r\n\r\nNotice that validation itself is working well in all models.\r\n\r\n```ruby\r\nCar.create!(color: \"black\", model: \"Boomer\")\r\nCar.create!(color: \"black\", model: \"Boomer\") # raises ActiveRecord::RecordInvalid\r\n\r\nMotorcycle.create!(color: \"red\", model: \"Yamaha\")\r\nMotorcycle.create!(color: \"red\", model: \"Yamaha\") # raises ActiveRecord::RecordInvalid\r\n```\r\n\r\nExample project: https://github.com/Exterm1nate/rails-validation-issue\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3\r\n\r\n**Ruby version**: 3.1.2","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45939/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45939/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45937","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45937/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45937/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45937/events","html_url":"https://github.com/rails/rails/issues/45937","id":1360779604,"node_id":"I_kwDNIULOURvZVA","number":45937,"title":"Add strict table mode (by default) to sqlite adapter","user":{"login":"jrz","id":149668,"node_id":"MDQ6VXNlcjE0OTY2OA==","avatar_url":"https://avatars.githubusercontent.com/u/149668?v=4","gravatar_id":"","url":"https://api.github.com/users/jrz","html_url":"https://github.com/jrz","followers_url":"https://api.github.com/users/jrz/followers","following_url":"https://api.github.com/users/jrz/following{/other_user}","gists_url":"https://api.github.com/users/jrz/gists{/gist_id}","starred_url":"https://api.github.com/users/jrz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jrz/subscriptions","organizations_url":"https://api.github.com/users/jrz/orgs","repos_url":"https://api.github.com/users/jrz/repos","events_url":"https://api.github.com/users/jrz/events{/privacy}","received_events_url":"https://api.github.com/users/jrz/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-09-03T07:01:02Z","updated_at":"2022-09-08T07:30:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"SQLite supports 'strict tables' since 3.37.1 https://sqlite.org/stricttables.html\r\n\r\nThis forces a datatype to be specified when creating a table. This is the preferred method in any application created by developers. \r\n\r\nUnspecified/ANY datatypes are useful for quick tryouts as an enduser, similar to excel. But it's counterproductive when creating an application.\r\n\r\nIf this will become a configurable setting, the default should be set to strict.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45937/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45937/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45920","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45920/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45920/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45920/events","html_url":"https://github.com/rails/rails/issues/45920","id":1358179995,"node_id":"I_kwDNIULOUPQumw","number":45920,"title":"Replace has_one through create_association might create duplicated rows","user":{"login":"lazaronixon","id":2651240,"node_id":"MDQ6VXNlcjI2NTEyNDA=","avatar_url":"https://avatars.githubusercontent.com/u/2651240?v=4","gravatar_id":"","url":"https://api.github.com/users/lazaronixon","html_url":"https://github.com/lazaronixon","followers_url":"https://api.github.com/users/lazaronixon/followers","following_url":"https://api.github.com/users/lazaronixon/following{/other_user}","gists_url":"https://api.github.com/users/lazaronixon/gists{/gist_id}","starred_url":"https://api.github.com/users/lazaronixon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lazaronixon/subscriptions","organizations_url":"https://api.github.com/users/lazaronixon/orgs","repos_url":"https://api.github.com/users/lazaronixon/repos","events_url":"https://api.github.com/users/lazaronixon/events{/privacy}","received_events_url":"https://api.github.com/users/lazaronixon/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-09-01T03:05:07Z","updated_at":"2022-09-01T23:03:40Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# Ensure backward compatibility with minitest 4.\r\nMinitest::Test = MiniTest::Unit::TestCase unless defined?(Minitest::Test)\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts do |t|\r\n  end\r\n\r\n  create_table :comments do |t|\r\n    t.references :post\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_one :comment, dependent: :destroy\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  validates_presence_of :post_id\r\n  belongs_to :post\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    post = Post.create!\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    Thread.new { post.create_comment! }\r\n    sleep 5.seconds\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n```\r\n# transaction begin\r\nselect previous_comment for update\r\n\r\ninsert new_comment\r\n\r\ndelete previous_comment\r\n# transaction commit\r\n```\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n```\r\n# transaction begin\r\ninsert new_comment\r\n# transaction commit\r\n\r\n# transaction begin\r\ndelete previous_comment\r\n# transaction commit\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45920/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45920/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45906","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45906/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45906/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45906/events","html_url":"https://github.com/rails/rails/issues/45906","id":1355732552,"node_id":"I_kwDNIULOUM7WSA","number":45906,"title":"High object allocation count from `ActiveRecord::ConnectionAdapters::PoolManager#pool_configs `","user":{"login":"amarchenkoshopify","id":101111422,"node_id":"U_kgDOBgbWfg","avatar_url":"https://avatars.githubusercontent.com/u/101111422?v=4","gravatar_id":"","url":"https://api.github.com/users/amarchenkoshopify","html_url":"https://github.com/amarchenkoshopify","followers_url":"https://api.github.com/users/amarchenkoshopify/followers","following_url":"https://api.github.com/users/amarchenkoshopify/following{/other_user}","gists_url":"https://api.github.com/users/amarchenkoshopify/gists{/gist_id}","starred_url":"https://api.github.com/users/amarchenkoshopify/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amarchenkoshopify/subscriptions","organizations_url":"https://api.github.com/users/amarchenkoshopify/orgs","repos_url":"https://api.github.com/users/amarchenkoshopify/repos","events_url":"https://api.github.com/users/amarchenkoshopify/events{/privacy}","received_events_url":"https://api.github.com/users/amarchenkoshopify/received_events","type":"User","site_admin":false},"labels":[{"id":107186,"node_id":"MDU6TGFiZWwxMDcxODY=","url":"https://api.github.com/repos/rails/rails/labels/regression","name":"regression","color":"e10c02","default":false,"description":null},{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"eileencodes","id":1080678,"node_id":"MDQ6VXNlcjEwODA2Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/1080678?v=4","gravatar_id":"","url":"https://api.github.com/users/eileencodes","html_url":"https://github.com/eileencodes","followers_url":"https://api.github.com/users/eileencodes/followers","following_url":"https://api.github.com/users/eileencodes/following{/other_user}","gists_url":"https://api.github.com/users/eileencodes/gists{/gist_id}","starred_url":"https://api.github.com/users/eileencodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eileencodes/subscriptions","organizations_url":"https://api.github.com/users/eileencodes/orgs","repos_url":"https://api.github.com/users/eileencodes/repos","events_url":"https://api.github.com/users/eileencodes/events{/privacy}","received_events_url":"https://api.github.com/users/eileencodes/received_events","type":"User","site_admin":false},"assignees":[{"login":"eileencodes","id":1080678,"node_id":"MDQ6VXNlcjEwODA2Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/1080678?v=4","gravatar_id":"","url":"https://api.github.com/users/eileencodes","html_url":"https://github.com/eileencodes","followers_url":"https://api.github.com/users/eileencodes/followers","following_url":"https://api.github.com/users/eileencodes/following{/other_user}","gists_url":"https://api.github.com/users/eileencodes/gists{/gist_id}","starred_url":"https://api.github.com/users/eileencodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eileencodes/subscriptions","organizations_url":"https://api.github.com/users/eileencodes/orgs","repos_url":"https://api.github.com/users/eileencodes/repos","events_url":"https://api.github.com/users/eileencodes/events{/privacy}","received_events_url":"https://api.github.com/users/eileencodes/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/rails/rails/milestones/81","html_url":"https://github.com/rails/rails/milestone/81","labels_url":"https://api.github.com/repos/rails/rails/milestones/81/labels","id":7591006,"node_id":"MI_kwDNIULOAHPUXg","number":81,"title":"7.0.4","description":"","creator":{"login":"rafaelfranca","id":47848,"node_id":"MDQ6VXNlcjQ3ODQ4","avatar_url":"https://avatars.githubusercontent.com/u/47848?v=4","gravatar_id":"","url":"https://api.github.com/users/rafaelfranca","html_url":"https://github.com/rafaelfranca","followers_url":"https://api.github.com/users/rafaelfranca/followers","following_url":"https://api.github.com/users/rafaelfranca/following{/other_user}","gists_url":"https://api.github.com/users/rafaelfranca/gists{/gist_id}","starred_url":"https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rafaelfranca/subscriptions","organizations_url":"https://api.github.com/users/rafaelfranca/orgs","repos_url":"https://api.github.com/users/rafaelfranca/repos","events_url":"https://api.github.com/users/rafaelfranca/events{/privacy}","received_events_url":"https://api.github.com/users/rafaelfranca/received_events","type":"User","site_admin":false},"open_issues":2,"closed_issues":3,"state":"open","created_at":"2022-01-20T01:51:07Z","updated_at":"2022-08-30T13:21:37Z","due_on":null,"closed_at":null},"comments":2,"created_at":"2022-08-30T12:58:42Z","updated_at":"2022-08-31T12:37:42Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWhile working on memory efficiency investigation I noticed that a very big bunch of object allocations comes from a single method `ActiveRecord::ConnectionAdapters::PoolManager#pool_configs`:\r\n\r\n```ruby\r\n      def pool_configs(role = nil)\r\n        if role\r\n          @role_to_shard_mapping[role].values\r\n        else\r\n          @role_to_shard_mapping.flat_map { |_, shard_map| shard_map.values }\r\n        end\r\n      end \r\n```\r\n\r\nThis method is called on every activerecord operation and does not cache its result: could we think about a way of caching its result?\r\n\r\ncc @eileencodes \r\n\r\n### Expected behavior\r\n\r\n`#pool_configs` allocates configs once\r\n\r\n### Actual behavior\r\n\r\n`#pool_configs` allocates configs every time it is executed\r\n\r\n### System configuration\r\n**Rails version**: main branch\r\n\r\n**Ruby version**: 3.1\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45906/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45901","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45901/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45901/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45901/events","html_url":"https://github.com/rails/rails/issues/45901","id":1354555667,"node_id":"I_kwDNIULOULzhEw","number":45901,"title":"bin/rails dbconsole should include_password by default","user":{"login":"wpeterson","id":178135,"node_id":"MDQ6VXNlcjE3ODEzNQ==","avatar_url":"https://avatars.githubusercontent.com/u/178135?v=4","gravatar_id":"","url":"https://api.github.com/users/wpeterson","html_url":"https://github.com/wpeterson","followers_url":"https://api.github.com/users/wpeterson/followers","following_url":"https://api.github.com/users/wpeterson/following{/other_user}","gists_url":"https://api.github.com/users/wpeterson/gists{/gist_id}","starred_url":"https://api.github.com/users/wpeterson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wpeterson/subscriptions","organizations_url":"https://api.github.com/users/wpeterson/orgs","repos_url":"https://api.github.com/users/wpeterson/repos","events_url":"https://api.github.com/users/wpeterson/events{/privacy}","received_events_url":"https://api.github.com/users/wpeterson/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-29T16:19:45Z","updated_at":"2022-08-30T00:17:43Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n1. Configure a Rails `config/database.yml` with a `password` required to connect\r\n2. Run `rails dbconsole`\r\n3. See prompt for database password, despite password being configured/available\r\n4. Run `rails dbconsole -p`\r\n5. See dbconsole properly load and use credentials to connect to database for DB console session\r\n\r\n### Expected behavior\r\nWhenever a Rails app has credentials like a password configured for a database, the database console session should use those credentials vs. prompting the user to re-enter a password interactively.  When credentials are not configured and a password is required, we should prompt then.\r\n\r\nThis behavior is implemented since early Rails versions but is disabled by default.  I propose we enable the proper password behavior by default.\r\n\r\n### Actual behavior\r\n`bin/rails dbconsole` always prompts for a password, even when one is configured for the app.\r\n\r\n### System configuration\r\n**Rails version**: All (6.x, 7.x, head)\r\n\r\n**Ruby version**: All \r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45901/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45901/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45899","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45899/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45899/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45899/events","html_url":"https://github.com/rails/rails/issues/45899","id":1353676820,"node_id":"I_kwDNIULOUK94FA","number":45899,"title":"Active Job unit tests fail using que 2.2.0","user":{"login":"yahonda","id":73684,"node_id":"MDQ6VXNlcjczNjg0","avatar_url":"https://avatars.githubusercontent.com/u/73684?v=4","gravatar_id":"","url":"https://api.github.com/users/yahonda","html_url":"https://github.com/yahonda","followers_url":"https://api.github.com/users/yahonda/followers","following_url":"https://api.github.com/users/yahonda/following{/other_user}","gists_url":"https://api.github.com/users/yahonda/gists{/gist_id}","starred_url":"https://api.github.com/users/yahonda/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yahonda/subscriptions","organizations_url":"https://api.github.com/users/yahonda/orgs","repos_url":"https://api.github.com/users/yahonda/repos","events_url":"https://api.github.com/users/yahonda/events{/privacy}","received_events_url":"https://api.github.com/users/yahonda/received_events","type":"User","site_admin":false},"labels":[{"id":123812746,"node_id":"MDU6TGFiZWwxMjM4MTI3NDY=","url":"https://api.github.com/repos/rails/rails/labels/activejob","name":"activejob","color":"5319e7","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2022-08-29T04:24:06Z","updated_at":"2022-09-09T15:33:02Z","closed_at":null,"author_association":"MEMBER","active_lock_reason":null,"body":"### Steps to reproduce\r\nActive Job CI has been failing since que 2.2.0 is installed. https://buildkite.com/rails/rails/builds/89068#0182e6b9-7c84-4b85-a651-8d640f5eb076\r\n\r\n```ruby\r\ngit clone https://github.com/rails/rails\r\ncd rails/activejob\r\nbundle update que\r\nAJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\n```\r\n\r\nAlthough there are 3 failures and 75 errors. This script just runs a single test because it looks the root cause is the same.\r\n\r\n\r\n### Expected behavior\r\nIt should pass.\r\n\r\n### Actual behavior\r\nIt raises `ArgumentError: wrong number of arguments (given 2, expected 1)`.\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 62302\r\n\r\n# Running:\r\n\r\nE\r\n\r\nError:\r\nQueuingTest#test_run_queued_job:\r\nArgumentError: wrong number of arguments (given 2, expected 1)\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:78:in `run'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job_methods.rb:51:in `_run'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:248:in `block (2 levels) in _run_attrs'\r\n    (eval):9:in `run_job_middleware'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:247:in `block in _run_attrs'\r\n    <internal:kernel>:90:in `tap'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:246:in `_run_attrs'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/job.rb:223:in `run'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/support/que/inline.rb:15:in `enqueue'\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:66:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:27:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:67:in `block in enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:118:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:28:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:27:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:9:in `block (2 levels) in <module:Instrumentation>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:27:in `tag_logger'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:14:in `block (2 levels) in <module:Logging>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:138:in `run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:63:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:30:in `perform_later'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/cases/queuing_test.rb:14:in `block in <class:QueuingTest>'\r\n\r\n\r\nbin/test test/cases/queuing_test.rb:13\r\n\r\n\r\n\r\nFinished in 0.008930s, 111.9768 runs/s, 0.0000 assertions/s.\r\n1 runs, 0 assertions, 0 failures, 1 errors, 0 skips\r\n$\r\n```\r\n\r\n### Additional information\r\n* `require_job_options_kwarg?` always returns `false` because `JobWrapper.method(:enqueue).parameters` does not have any `[:key, :job_options]` \r\nwhere it looks expected to return `true`.\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 32774\r\n\r\n# Running:\r\n\r\n[46, 55] in ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n    46|       end\r\n    47|\r\n    48|       private\r\n    49|         def require_job_options_kwarg?\r\n    50|           require 'debug'\r\n=>  51|           binding.break\r\n    52|           @require_job_options_kwarg ||=\r\n    53|             JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }\r\n    54|         end\r\n    55|\r\n=>#0\tActiveJob::QueueAdapters::QueAdapter#require_job_options_kwarg? at ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:51\r\n  #1\tActiveJob::QueueAdapters::QueAdapter#enqueue(job=#<HelloJob:0x00007fc861807740 @arguments...) at ~/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:24\r\n  # and 40 frames (use `bt' command for all frames)\r\n(rdbg) JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }    # ruby\r\nfalse\r\n(rdbg) JobWrapper.method(:enqueue).parameters    # ruby\r\n[[:req, :args], [:keyreq, :priority], [:keyreq, :queue], [:key, :run_at]]\r\n(rdbg) quit    # command\r\nReally quit? [Y/n] Y\r\n```\r\n\r\n* By changing `require_job_options_kwarg?` always returns `true`, it raises `ArgumentError: missing keywords: :priority, :queue`\r\n\r\n```ruby\r\n$ git diff\r\ndiff --git a/activejob/lib/active_job/queue_adapters/que_adapter.rb b/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\nindex 41b3633a07..54e8cbc39b 100644\r\n--- a/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n+++ b/activejob/lib/active_job/queue_adapters/que_adapter.rb\r\n@@ -47,6 +47,7 @@ def enqueue_at(job, timestamp) # :nodoc:\r\n\r\n       private\r\n         def require_job_options_kwarg?\r\n+          return true\r\n           @require_job_options_kwarg ||=\r\n             JobWrapper.method(:enqueue).parameters.any? { |ptype, pname| ptype == :key && pname == :job_options }\r\n         end\r\n$\r\n```\r\n\r\n```ruby\r\n$ AJ_ADAPTER=que bin/test test/cases/queuing_test.rb:13\r\nUsing que\r\nRun options: --seed 21508\r\n\r\n# Running:\r\n\r\nE\r\n\r\nError:\r\nQueuingTest#test_run_queued_job:\r\nArgumentError: missing keywords: :priority, :queue\r\n    /home/yahonda/.rbenv/versions/3.1.2/lib/ruby/gems/3.1.0/gems/que-2.2.0/lib/que/active_job/extensions.rb:65:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/queue_adapters/que_adapter.rb:25:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:67:in `block in enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:118:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:28:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `block in instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications.rb:206:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:27:in `instrument'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/instrumentation.rb:9:in `block (2 levels) in <module:Instrumentation>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:27:in `tag_logger'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/logging.rb:14:in `block (2 levels) in <module:Logging>'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `instance_exec'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:127:in `block in run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/callbacks.rb:138:in `run_callbacks'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:63:in `enqueue'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/lib/active_job/enqueuing.rb:30:in `perform_later'\r\n    /home/yahonda/src/github.com/rails/rails/activejob/test/cases/queuing_test.rb:14:in `block in <class:QueuingTest>'\r\n\r\n\r\nbin/test test/cases/queuing_test.rb:13\r\n\r\n\r\n\r\nFinished in 0.008724s, 114.6312 runs/s, 0.0000 assertions/s.\r\n1 runs, 0 assertions, 0 failures, 1 errors, 0 skips\r\n$\r\n```\r\n\r\n\r\n### System configuration\r\n**Rails version**: main branch\r\n\r\n**Ruby version**: $ ruby -v\r\nruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [x86_64-linux]\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45899/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45893","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45893/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45893/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45893/events","html_url":"https://github.com/rails/rails/issues/45893","id":1352793907,"node_id":"I_kwDNIULOUKH_Mw","number":45893,"title":"ActiveRecord: HMT with conditions does not update the in-memory collection when pushing new objects","user":{"login":"joanniclaborde","id":411925,"node_id":"MDQ6VXNlcjQxMTkyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/411925?v=4","gravatar_id":"","url":"https://api.github.com/users/joanniclaborde","html_url":"https://github.com/joanniclaborde","followers_url":"https://api.github.com/users/joanniclaborde/followers","following_url":"https://api.github.com/users/joanniclaborde/following{/other_user}","gists_url":"https://api.github.com/users/joanniclaborde/gists{/gist_id}","starred_url":"https://api.github.com/users/joanniclaborde/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joanniclaborde/subscriptions","organizations_url":"https://api.github.com/users/joanniclaborde/orgs","repos_url":"https://api.github.com/users/joanniclaborde/repos","events_url":"https://api.github.com/users/joanniclaborde/events{/privacy}","received_events_url":"https://api.github.com/users/joanniclaborde/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-26T22:40:12Z","updated_at":"2022-08-30T15:33:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hi! When using a `has_many :a, through: :b` relation, and the `:b` relation has a condition, adding new objects doesn't update the in-memory collection properly (stops after the first object).\r\n\r\n### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :packages, force: true do |t|\r\n  end\r\n\r\n  create_table :package_items, force: true do |t|\r\n    t.integer :package_id\r\n    t.integer :item_id\r\n  end\r\n\r\n  create_table :items, force: true do |t|\r\n    t.boolean \"deleted\", default: false\r\n  end\r\nend\r\n\r\nclass Package < ActiveRecord::Base\r\n  has_many :package_items, ->{ where(item_id: Item.active.pluck(:id)) }\r\n  has_many :items, through: :package_items\r\nend\r\n\r\nclass PackageItem < ActiveRecord::Base\r\n  belongs_to :package\r\n  belongs_to :item\r\nend\r\n\r\nclass Item < ActiveRecord::Base\r\n  has_many :package_items\r\n  has_many :packages, through: :package_items\r\n\r\n  scope :active, -> { where(deleted: false) }\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    package = Package.create!\r\n    package.items << Item.create!\r\n    package.items << Item.create!\r\n    package.items << Item.create!\r\n\r\n    # This should be [3, 3, 3] but we get [3, 1, 3]\r\n    assert_equal [3, 3, 3], [Item.count, package.items.count, package.reload.items.count]\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n`package.items.count` is equal to 3.\r\n\r\n### Actual behavior\r\n`package.items.count` is equal to 1, even though all the items and relations are created properly (see assertion).\r\n\r\n### System configuration\r\n**Rails version**: tested on `7.1.0.alpha` and `6.1.6.1`.\r\n\r\n**Ruby version**: tested on `2.7.5`.\r\n\r\n### Workaround\r\nI was able to fix this issue by changing the weird condition to a proper scope:\r\n\r\n```ruby\r\nclass Package < ActiveRecord::Base\r\n  has_many :package_items, ->{ includes(:item).merge(Item.active) }\r\n  has_many :items, through: :package_items\r\nend\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45893/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45893/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45880","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45880/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45880/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45880/events","html_url":"https://github.com/rails/rails/issues/45880","id":1349546108,"node_id":"I_kwDNIULOUHBwfA","number":45880,"title":"Google search links to old API docs","user":{"login":"abraham","id":3341,"node_id":"MDQ6VXNlcjMzNDE=","avatar_url":"https://avatars.githubusercontent.com/u/3341?v=4","gravatar_id":"","url":"https://api.github.com/users/abraham","html_url":"https://github.com/abraham","followers_url":"https://api.github.com/users/abraham/followers","following_url":"https://api.github.com/users/abraham/following{/other_user}","gists_url":"https://api.github.com/users/abraham/gists{/gist_id}","starred_url":"https://api.github.com/users/abraham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abraham/subscriptions","organizations_url":"https://api.github.com/users/abraham/orgs","repos_url":"https://api.github.com/users/abraham/repos","events_url":"https://api.github.com/users/abraham/events{/privacy}","received_events_url":"https://api.github.com/users/abraham/received_events","type":"User","site_admin":true},"labels":[{"id":150377,"node_id":"MDU6TGFiZWwxNTAzNzc=","url":"https://api.github.com/repos/rails/rails/labels/docs","name":"docs","color":"02d7e1","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-08-24T14:33:55Z","updated_at":"2022-08-25T23:48:01Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\n1. Search Google for a Rails API https://www.google.com/search?q=rails+update_all\r\n2. Follow link for \"ActiveRecord::Relation - Rails API\"\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n\r\nFind documentation for the latest version of Rails. Currently `7.0.3.1`.\r\n\r\n`https://api.rubyonrails.org/classes/ActiveRecord/Relation.html`\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n\r\nFind documentation for the the very old version of `3.2.3`.\r\n\r\n`https://api.rubyonrails.org/v3.2.3/classes/ActiveRecord/Relation.html`\r\n\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45880/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45880/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45832","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45832/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45832/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45832/events","html_url":"https://github.com/rails/rails/issues/45832","id":1339487378,"node_id":"I_kwDNIULOT9b0kg","number":45832,"title":"MySQL 8.0 VARBINARY default value is hexadecimal","user":{"login":"HParker","id":4482399,"node_id":"MDQ6VXNlcjQ0ODIzOTk=","avatar_url":"https://avatars.githubusercontent.com/u/4482399?v=4","gravatar_id":"","url":"https://api.github.com/users/HParker","html_url":"https://github.com/HParker","followers_url":"https://api.github.com/users/HParker/followers","following_url":"https://api.github.com/users/HParker/following{/other_user}","gists_url":"https://api.github.com/users/HParker/gists{/gist_id}","starred_url":"https://api.github.com/users/HParker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HParker/subscriptions","organizations_url":"https://api.github.com/users/HParker/orgs","repos_url":"https://api.github.com/users/HParker/repos","events_url":"https://api.github.com/users/HParker/events{/privacy}","received_events_url":"https://api.github.com/users/HParker/received_events","type":"User","site_admin":true},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":309390193,"node_id":"MDU6TGFiZWwzMDkzOTAxOTM=","url":"https://api.github.com/repos/rails/rails/labels/MySQL","name":"MySQL","color":"fef2c0","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-08-15T20:42:09Z","updated_at":"2022-08-16T10:23:16Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Default values on VARBINARY columns changed behavior between MySQL 5.7 and 8.0\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"mysql2\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"mysql2\", database: \"adam_test\", prepared_statements: false, host: '127.0.0.1', port: 3307, user: \"root\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.binary :some_binary, null: false, limit: 1024, default: \"hello-world\"\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_mysql_defaults\r\n    post = Post.create!\r\n\r\n    mysql_vars = ActiveRecord::Base.connection.select_rows(\"SHOW VARIABLES LIKE '%version%'\")\r\n    puts mysql_vars.inspect\r\n    puts Post.column_defaults\r\n\r\n    # assert_equal \"0x68656C6C6F2D776F726C64\", post.some_binary # This passes\r\n    assert_equal \"hello-world\", post.some_binary # This fails\r\n\r\n    reloaded_post = Post.first\r\n    assert_equal \"hello-world\", reloaded_post.some_binary # this passes\r\n  end\r\nend\r\n```\r\n\r\nOn MySQL 5.7:\r\n\r\n```ruby\r\nPost.column_defaults # => {\"id\"=>nil, \"some_binary\"=>\"hello-world\"}\r\n```\r\n\r\nOn MySQL 8.0:\r\n\r\n```ruby\r\nPost.column_defaults # => {\"id\"=>nil, \"some_binary\"=>\"0x68656C6C6F2D776F726C64\"}\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe default value on binary columns should be Ruby strings, not ruby strings of hexadecimal.\r\n\r\n### Actual behavior\r\n\r\nThe column default in MySQL 8.0 is a hexadecimal string representing the binary data.\r\n\r\n### System configuration\r\n**Rails version**: main\r\n\r\n**Ruby version**: 3.1.0\r\n\r\nSome interesting MySQL forum posts about this behavior change:\r\n\r\n- https://forums.mysql.com/read.php?24,685577,685577\r\n- https://forums.mysql.com/read.php?20,698061,698061#msg-698061\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45832/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45832/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45830","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45830/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45830/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45830/events","html_url":"https://github.com/rails/rails/issues/45830","id":1338922250,"node_id":"I_kwDNIULOT85VCg","number":45830,"title":"ActiveRecord Rollbacks on errors which happen on commit","user":{"login":"Baxxx","id":17880055,"node_id":"MDQ6VXNlcjE3ODgwMDU1","avatar_url":"https://avatars.githubusercontent.com/u/17880055?v=4","gravatar_id":"","url":"https://api.github.com/users/Baxxx","html_url":"https://github.com/Baxxx","followers_url":"https://api.github.com/users/Baxxx/followers","following_url":"https://api.github.com/users/Baxxx/following{/other_user}","gists_url":"https://api.github.com/users/Baxxx/gists{/gist_id}","starred_url":"https://api.github.com/users/Baxxx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baxxx/subscriptions","organizations_url":"https://api.github.com/users/Baxxx/orgs","repos_url":"https://api.github.com/users/Baxxx/repos","events_url":"https://api.github.com/users/Baxxx/events{/privacy}","received_events_url":"https://api.github.com/users/Baxxx/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":126910270,"node_id":"MDU6TGFiZWwxMjY5MTAyNzA=","url":"https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps","name":"With reproduction steps","color":"009800","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2022-08-15T12:09:14Z","updated_at":"2022-08-25T13:32:26Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\n\r\nIn some of our projects we use Postgres as database, and for some cases we deferred trigger constraints. These triggers fire up when `COMMIT` is called. Trigger can raise an error, which kills the transaction. ActiveRecord catches the error, and bubbles it up to developer, but it also sends `ROLLBACK` to Postgres, to which Postgres gives a warning that there is no transaction in progress.\r\n\r\nI didn't test this with sqlite3 or mysql.\r\n\r\nYou can see the reproduction script, and screenshot with the current behavior.\r\n\r\n<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->\r\n\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", \"~> 7\"\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"logger\"\r\n\r\nlogger = Logger.new(STDOUT)\r\n\r\n# This connection will do for database-independent bug reports.\r\npg_opts = {adapter: \"postgresql\", database: \"ar_rollback_after_failed_commit_issue\"}\r\n\r\nActiveRecord::Base.establish_connection(pg_opts.except(:database))\r\nActiveRecord::Base.connection.drop_database(pg_opts[:database])\r\nActiveRecord::Base.connection.create_database(pg_opts[:database])\r\nlogger.info \"Database #{pg_opts[:database]} was (re)created.\"\r\n\r\nActiveRecord::Base.establish_connection(pg_opts)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  execute <<~SQL\r\n    CREATE FUNCTION perform_custom_validation()\r\n      RETURNS TRIGGER\r\n      LANGUAGE plpgsql\r\n      AS $$\r\n        DECLARE\r\n          total_invalid INTEGER;\r\n        BEGIN\r\n          SELECT COUNT(*) INTO total_invalid\r\n          FROM things\r\n          WHERE name = 'bad';\r\n\r\n          IF (total_invalid > 0) THEN\r\n            RAISE EXCEPTION 'There are bad things';\r\n          END IF;\r\n          RETURN NULL;\r\n        END;\r\n      $$;\r\n\r\n    CREATE TABLE \"things\" (\r\n      \"id\" bigserial primary key,\r\n      \"name\" character varying NOT NULL\r\n    );\r\n\r\n    CREATE CONSTRAINT\r\n      TRIGGER bank_transaction_rl_payment_date_validation\r\n      AFTER INSERT OR UPDATE ON things\r\n      DEFERRABLE INITIALLY DEFERRED\r\n      FOR EACH ROW EXECUTE FUNCTION perform_custom_validation();\r\n  SQL\r\nend\r\n\r\nclass Thing < ActiveRecord::Base\r\n  validates :name, presence: true\r\nend\r\n\r\n# All good\r\nlogger.info \"First transaction\"\r\nThing.create!(name: \"good\")\r\n\r\n# AR tries to commit, DB raises an error, AR tries to ROLLBACK, and PG gives a warning\r\nbegin\r\n  logger.info \"Second transaction\"\r\n  Thing.create!(name: \"bad\")\r\nrescue StandardError\r\n  # Doesn't matter\r\nend\r\n```\r\n\r\n### Expected behavior\r\nActiveRecord should not `ROLLBACK`, as there is no transaction in progress.\r\n\r\n### Actual behavior\r\nActiveRecord tries to `ROLLBACK`.\r\n\r\n![Screenshot from 2022-08-15 14-07-11](https://user-images.githubusercontent.com/17880055/184632335-0277cd27-4c7b-4b98-94a8-373be34a87ee.png)\r\n\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 2.7.5p203\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45830/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45830/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45823","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45823/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45823/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45823/events","html_url":"https://github.com/rails/rails/issues/45823","id":1337409694,"node_id":"I_kwDNIULOT7dAng","number":45823,"title":"Change Column with Raw Character Set Failure","user":{"login":"ahoglund","id":3407303,"node_id":"MDQ6VXNlcjM0MDczMDM=","avatar_url":"https://avatars.githubusercontent.com/u/3407303?v=4","gravatar_id":"","url":"https://api.github.com/users/ahoglund","html_url":"https://github.com/ahoglund","followers_url":"https://api.github.com/users/ahoglund/followers","following_url":"https://api.github.com/users/ahoglund/following{/other_user}","gists_url":"https://api.github.com/users/ahoglund/gists{/gist_id}","starred_url":"https://api.github.com/users/ahoglund/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahoglund/subscriptions","organizations_url":"https://api.github.com/users/ahoglund/orgs","repos_url":"https://api.github.com/users/ahoglund/repos","events_url":"https://api.github.com/users/ahoglund/events{/privacy}","received_events_url":"https://api.github.com/users/ahoglund/received_events","type":"User","site_admin":true},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":126910270,"node_id":"MDU6TGFiZWwxMjY5MTAyNzA=","url":"https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps","name":"With reproduction steps","color":"009800","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-12T16:21:50Z","updated_at":"2022-08-12T20:47:38Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"With [this recent change to how collation is handled for column changes](https://github.com/rails/rails/pull/45744/files), there is now a potential for older migrations written in a specific manner to break if the `collation:` argument is not specific.\r\n\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\n# you need to install mysql locally for this to work.\r\n# on Mac:\r\n# brew install mysql\r\n# brew services start mysql\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\", branch: \"main\"\r\n  gem \"mysql2\"\r\n\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nclient = Mysql2::Client.new(host: 'localhost', username: \"root\")\r\nclient.query(\"DROP DATABASE test\")\r\nclient.query(\"CREATE DATABASE test\")\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"mysql2\", database: \"test\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :payments, force: true do |t|\r\n    t.string :description, \"varchar(64)\", null: false\r\n  end\r\nend\r\n\r\nclass Payment < ActiveRecord::Base\r\nend\r\n\r\nclass ChangeAmountToAddScale < ActiveRecord::Migration[7.1]\r\n  # This sets the default character set for the payments\r\n  # table to utf32 with a default COLLATION of utf32_general_ci.\r\n  # This can be verified by running the following query:\r\n  #\r\n  # SHOW CHARACTER SET;\r\n  #\r\n  connection.execute(<<~SQL)\r\n    ALTER TABLE payments CONVERT TO CHARACTER SET utf32\r\n  SQL\r\n\r\n  def change\r\n    reversible do |dir|\r\n      dir.up do\r\n        change_table(:payments, bulk: true) do |t|\r\n          # The default collation of utf32_general_ci\r\n          # will not be compatible with this ascii character set. \r\n          #\r\n          # when we build the column change now we automatically\r\n          # try to assign the previous collation to the column if no `collation:` is specified.\r\n          # \r\n          # https://github.com/rails/rails/pull/45744\r\n          #\r\n          # The workaround is to add `collation: 'ascii_bin'` or `collation: 'ascii_general_ci'` to the change.\r\n          #\r\n          # This isn't a huge deal and it has a workaround but it _will_ break\r\n          # anyone who has migrations that are written like this and upgrade to this version\r\n          # of Rails.\r\n          t.change :description, \"varchar(64) CHARACTER SET ascii\", null: false\r\n        end\r\n      end\r\n\r\n      dir.down do\r\n        change_table(:payments, bulk: true) do |t|\r\n          t.change :description, \"varchar(64)\", null: false\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_migration_up\r\n    ChangeAmountToAddScale.migrate(:up)\r\n    Payment.reset_column_information\r\n\r\n    assert_equal \"varchar\", Payment.columns.last.sql_type\r\n  end\r\n\r\n  def test_migration_down\r\n    ChangeAmountToAddScale.migrate(:down)\r\n    Payment.reset_column_information\r\n\r\n    assert_equal \"varchar\", Payment.columns.last.sql_type\r\n  end\r\nend\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nI would expect this to detect that the character set is being changed, and either \r\n\r\n1. change the collation to be compatible.\r\n2. At least give a clearer error that requires the `collation:` arg to be passed when the character set is being modified.\r\n\r\n### Actual behavior\r\n\r\nThis error:\r\n\r\n```\r\nError:\r\nBugTest#test_migration_up:\r\nActiveRecord::StatementInvalid: Mysql2::Error: COLLATION 'utf32_general_ci' is not valid for CHARACTER SET 'ascii'\r\n    test.rb:51:in `block (2 levels) in change'\r\n    test.rb:50:in `block in change'\r\n    test.rb:49:in `change'\r\n    test.rb:67:in `test_migration_up'\r\n```\r\n\r\n### System configuration\r\n**Rails version**: main\r\n**Ruby version**: ruby 3.1.1p18\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45823/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45823/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45822","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45822/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45822/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45822/events","html_url":"https://github.com/rails/rails/issues/45822","id":1337253221,"node_id":"I_kwDNIULOT7TdZQ","number":45822,"title":"ActiveRecord: Wrong results returned by ActiveRecord::Associations::Preloader when intermediate association is already preloaded.","user":{"login":"yopzer","id":6330271,"node_id":"MDQ6VXNlcjYzMzAyNzE=","avatar_url":"https://avatars.githubusercontent.com/u/6330271?v=4","gravatar_id":"","url":"https://api.github.com/users/yopzer","html_url":"https://github.com/yopzer","followers_url":"https://api.github.com/users/yopzer/followers","following_url":"https://api.github.com/users/yopzer/following{/other_user}","gists_url":"https://api.github.com/users/yopzer/gists{/gist_id}","starred_url":"https://api.github.com/users/yopzer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yopzer/subscriptions","organizations_url":"https://api.github.com/users/yopzer/orgs","repos_url":"https://api.github.com/users/yopzer/repos","events_url":"https://api.github.com/users/yopzer/events{/privacy}","received_events_url":"https://api.github.com/users/yopzer/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null}],"state":"open","locked":false,"assignee":{"login":"jhawthorn","id":131752,"node_id":"MDQ6VXNlcjEzMTc1Mg==","avatar_url":"https://avatars.githubusercontent.com/u/131752?v=4","gravatar_id":"","url":"https://api.github.com/users/jhawthorn","html_url":"https://github.com/jhawthorn","followers_url":"https://api.github.com/users/jhawthorn/followers","following_url":"https://api.github.com/users/jhawthorn/following{/other_user}","gists_url":"https://api.github.com/users/jhawthorn/gists{/gist_id}","starred_url":"https://api.github.com/users/jhawthorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhawthorn/subscriptions","organizations_url":"https://api.github.com/users/jhawthorn/orgs","repos_url":"https://api.github.com/users/jhawthorn/repos","events_url":"https://api.github.com/users/jhawthorn/events{/privacy}","received_events_url":"https://api.github.com/users/jhawthorn/received_events","type":"User","site_admin":true},"assignees":[{"login":"jhawthorn","id":131752,"node_id":"MDQ6VXNlcjEzMTc1Mg==","avatar_url":"https://avatars.githubusercontent.com/u/131752?v=4","gravatar_id":"","url":"https://api.github.com/users/jhawthorn","html_url":"https://github.com/jhawthorn","followers_url":"https://api.github.com/users/jhawthorn/followers","following_url":"https://api.github.com/users/jhawthorn/following{/other_user}","gists_url":"https://api.github.com/users/jhawthorn/gists{/gist_id}","starred_url":"https://api.github.com/users/jhawthorn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jhawthorn/subscriptions","organizations_url":"https://api.github.com/users/jhawthorn/orgs","repos_url":"https://api.github.com/users/jhawthorn/repos","events_url":"https://api.github.com/users/jhawthorn/events{/privacy}","received_events_url":"https://api.github.com/users/jhawthorn/received_events","type":"User","site_admin":true}],"milestone":null,"comments":1,"created_at":"2022-08-12T14:06:55Z","updated_at":"2022-08-18T23:36:35Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"activerecord\", \"7.0.3.1\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :a_records, force: true\r\n\r\n  create_table :b_records, force: true do |t|\r\n    t.references :a_record\r\n    t.references :c_record\r\n  end\r\n\r\n  create_table :c_records, force: true\r\n\r\n  create_table :d_records, force: true do |t|\r\n    t.references :c_record\r\n  end\r\nend\r\n\r\nclass ARecord < ActiveRecord::Base\r\n  has_one :b_record\r\n  has_one :c_record, through: :b_record\r\n  has_many :d_records, through: :c_record\r\nend\r\n\r\nclass BRecord < ActiveRecord::Base\r\n  belongs_to :a_record\r\n  belongs_to :c_record\r\nend\r\n\r\nclass CRecord < ActiveRecord::Base\r\n  has_one :b_record\r\n  has_many :d_records\r\nend\r\n\r\nclass DRecord < ActiveRecord::Base\r\n  belongs_to :c_record\r\nend\r\n\r\na = ARecord.create!\r\nc = CRecord.create!\r\nBRecord.create!(a_record: a, c_record: c)\r\nDRecord.create!(c_record: c)\r\nDRecord.create!(c_record: c)\r\n\r\na.reload\r\na.c_record # NB: if removed this works\r\n\r\n::ActiveRecord::Associations::Preloader.new(records: [a], associations: :d_records).call\r\nputs({ record_ids: a.d_records.map(&:id), size: a.d_records.size })\r\n```\r\n\r\n### Expected behavior\r\nTwo records should be loaded:\r\n`{:record_ids=>[1, 2], :size=>2}`\r\n\r\n### Actual behavior\r\nNo records are loaded:\r\n`{:record_ids=>[], :size=>0}`\r\n\r\n### System configuration\r\n**Rails version**: 7.0.3.1\r\n\r\n**Ruby version**: 2.7.5\r\n","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45822/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45822/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/rails/rails/issues/45817","repository_url":"https://api.github.com/repos/rails/rails","labels_url":"https://api.github.com/repos/rails/rails/issues/45817/labels{/name}","comments_url":"https://api.github.com/repos/rails/rails/issues/45817/comments","events_url":"https://api.github.com/repos/rails/rails/issues/45817/events","html_url":"https://github.com/rails/rails/issues/45817","id":1336797388,"node_id":"I_kwDNIULOT63ozA","number":45817,"title":"Value of attribute default proc is shared between instances after dup + dirty tracking","user":{"login":"quadule","id":15299,"node_id":"MDQ6VXNlcjE1Mjk5","avatar_url":"https://avatars.githubusercontent.com/u/15299?v=4","gravatar_id":"","url":"https://api.github.com/users/quadule","html_url":"https://github.com/quadule","followers_url":"https://api.github.com/users/quadule/followers","following_url":"https://api.github.com/users/quadule/following{/other_user}","gists_url":"https://api.github.com/users/quadule/gists{/gist_id}","starred_url":"https://api.github.com/users/quadule/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/quadule/subscriptions","organizations_url":"https://api.github.com/users/quadule/orgs","repos_url":"https://api.github.com/users/quadule/repos","events_url":"https://api.github.com/users/quadule/events{/privacy}","received_events_url":"https://api.github.com/users/quadule/received_events","type":"User","site_admin":false},"labels":[{"id":107191,"node_id":"MDU6TGFiZWwxMDcxOTE=","url":"https://api.github.com/repos/rails/rails/labels/activerecord","name":"activerecord","color":"0b02e1","default":false,"description":null},{"id":41328116,"node_id":"MDU6TGFiZWw0MTMyODExNg==","url":"https://api.github.com/repos/rails/rails/labels/attached%20PR","name":"attached PR","color":"006b75","default":false,"description":null}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-08-12T06:16:00Z","updated_at":"2022-08-15T15:56:11Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"### Steps to reproduce\r\n\r\nWhen an attribute without a database column defines a default proc, `dup`ing a model in which the default wasn't accessed passes the unevaluated `UserProvidedDefault` attribute to the new instance as the attribute's original value. Checking the new attribute for changes will then memoize the value in the original attribute definition, making it the default value in every new model instance afterward.\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n  gem \"rails\", github: \"rails/rails\", ref: \"main\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Schema.define do\r\n  create_table :cats do |t|\r\n    t.string :name\r\n  end\r\nend\r\n\r\nclass Cat < ActiveRecord::Base\r\n  attribute :sounds, default: -> { [] }\r\nend\r\n\r\nclass VirtualAttributeTest < Minitest::Test\r\n  def test_virtual_attribute_defaults_are_independent\r\n    Cat.new.dup.save!\r\n    Cat.new.sounds << \"meow\"\r\n    refute_same Cat.new.sounds, Cat.new.sounds\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nEach new instance should get a new default value from the proc.\r\n\r\n### Actual behavior\r\nAfter using dirty tracking on a duplicated instance with an uncalled proc default, all new instances of a model receive the same default value and share any changes made to it.\r\n\r\n### Affected versions\r\nThis seems to date back quite a while; the test fails on the main branch back to 5-1-stable.\r\n\r\n### Credits\r\nThanks to @GBH for originally discovering this bug.","reactions":{"url":"https://api.github.com/repos/rails/rails/issues/45817/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/rails/rails/issues/45817/timeline","performed_via_github_app":null,"state_reason":null}]